diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/LocalFeedStubDownloader.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/LocalFeedStubDownloader.java
new file mode 100644
index 0000000000..feb5fc6bed
--- /dev/null
+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/LocalFeedStubDownloader.java
@@ -0,0 +1,17 @@
+package de.danoeh.antennapod.core.service.download;
+
+import androidx.annotation.NonNull;
+
+/**
+ * This does not actually download, but it keeps track of a local feed's refresh state.
+ */
+public class LocalFeedStubDownloader extends Downloader {
+
+    public LocalFeedStubDownloader(@NonNull DownloadRequest request) {
+        super(request);
+    }
+
+    @Override
+    protected void download() {
+    }
+}
\ No newline at end of file
diff --git a/core/src/test/java/de/danoeh/antennapod/core/service/download/DownloadRequestTest.java b/core/src/test/java/de/danoeh/antennapod/core/service/download/DownloadRequestTest.java
index a4c5b99aa6..d1bea221a3 100644
--- a/core/src/test/java/de/danoeh/antennapod/core/service/download/DownloadRequestTest.java
+++ b/core/src/test/java/de/danoeh/antennapod/core/service/download/DownloadRequestTest.java
@@ -3,14 +3,13 @@
 import android.os.Bundle;
 import android.os.Parcel;
 
+import de.danoeh.antennapod.model.feed.FeedMedia;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.RobolectricTestRunner;
 
 import java.util.ArrayList;
 
-import de.danoeh.antennapod.model.feed.FeedFile;
-
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotEquals;
 
@@ -40,7 +39,7 @@ public void downloadRequestTestEquals() {
         String destStr = "file://location/media.mp3";
         String username = "testUser";
         String password = "testPassword";
-        FeedFile item = createFeedItem(1);
+        FeedMedia item = createFeedItem(1);
         DownloadRequest request1 = new DownloadRequest.Builder(destStr, item)
                 .deleteOnFailure(true)
                 .withAuthentication(username, password)
@@ -68,12 +67,12 @@ private void doTestParcelInArrayList(String message,
         ArrayList<DownloadRequest> toParcel;
         { // test DownloadRequests to parcel
             String destStr = "file://location/media.mp3";
-            FeedFile item1 = createFeedItem(1);
+            FeedMedia item1 = createFeedItem(1);
             DownloadRequest request1 = new DownloadRequest.Builder(destStr, item1)
                     .withAuthentication(username1, password1)
                     .build();
 
-            FeedFile item2 = createFeedItem(2);
+            FeedMedia item2 = createFeedItem(2);
             DownloadRequest request2 = new DownloadRequest.Builder(destStr, item2)
                     .withAuthentication(username2, password2)
                     .build();
@@ -118,28 +117,8 @@ private static String toString(Bundle b) {
         return sb.toString();
     }
 
-    private FeedFile createFeedItem(final int id) {
+    private FeedMedia createFeedItem(final int id) {
         // Use mockito would be less verbose, but it'll take extra 1 second for this tiny test
-        return new FeedFile() {
-            @Override
-            public long getId() {
-                return id;
-            }
-
-            @Override
-            public String getDownload_url() {
-                return "http://example.com/episode" + id;
-            }
-
-            @Override
-            public int getTypeAsInt() {
-                return 0;
-            }
-
-            @Override
-            public String getHumanReadableIdentifier() {
-                return "human-id-" + id;
-            }
-        };
+        return new FeedMedia(id, null, 0, 0, 0, "", "", "http://example.com/episode" + id, false, null, 0, 0);
     }
 }
