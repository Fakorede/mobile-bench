--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadRequestCreator.java
+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadRequestCreator.java
@@ -56,7 +56,7 @@
                 ? media.getItem().getFeed().getPreferences().getPassword() : null;
 
         return new DownloadRequest.Builder(dest.toString(), media)
-                .deleteOnFailure(false)
+                .deleteOnFailure(true) // Delete partial downloads if they fail
                 .withAuthentication(username, password);
     }
 
--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/EpisodeDownloadWorker.java
+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/EpisodeDownloadWorker.java
@@ -165,6 +165,7 @@
         if (status.getReason() == DownloadError.ERROR_HTTP_DATA_ERROR
                 && Integer.parseInt(status.getReasonDetailed()) == 416) {
             Log.d(TAG, "Requested invalid range, restarting download from the beginning");
+            // Delete the partially downloaded file to restart from scratch
             FileUtils.deleteQuietly(new File(downloader.getDownloadRequest().getDestination()));
             sendMessage(request.getTitle(), true);
             return retry3times();
--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java
@@ -311,7 +311,7 @@
     private void onFail(DownloadError reason, String reasonDetailed) {
         Log.d(TAG, "onFail() called with: " + "reason = [" + reason + "], reasonDetailed = [" + reasonDetailed + "]");
         result.setFailed(reason, reasonDetailed);
-        if (request.isDeleteOnFailure()) {
+        if (request.isDeleteOnFailure() || request.getSoFar() == 0) { // Always delete if nothing was downloaded
             cleanup();
         }
     }