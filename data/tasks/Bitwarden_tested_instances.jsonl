{"instance_id": "bitwarden__android-4914", "repo": "bitwarden/android", "base_commit": "22376bfe4b589573f772cf59026851bfe3adb98c", "FAIL_TO_PASS": [], "PASS_TO_PASS": ["com.bitwarden.authenticator.data.authenticator.repository.AuthenticatorRepositoryTest::ciphersStateFlow initial state should be loading()", "com.bitwarden.authenticator.data.authenticator.repository.AuthenticatorRepositoryTest::ciphersStateFlow should emit sorted authenticator items when disk source changes()", "com.bitwarden.authenticator.data.authenticator.repository.AuthenticatorRepositoryTest::firstTimeAccountSyncFlow should emit the first time an account syncs and update SettingsRepository()", "com.bitwarden.authenticator.data.authenticator.repository.AuthenticatorRepositoryTest::firstTimeAccountSyncFlow should not emit if a synced account is already in previouslySyncedBitwardenAccountIds()", "com.bitwarden.authenticator.data.authenticator.repository.AuthenticatorRepositoryTest::sharedCodesStateFlow should emit AppNotInstalled when authenticatorBridgeManager emits AppNotInstalled()", "com.bitwarden.authenticator.data.authenticator.repository.AuthenticatorRepositoryTest::sharedCodesStateFlow should emit Error when authenticatorBridgeManager emits Error()", "com.bitwarden.authenticator.data.authenticator.repository.AuthenticatorRepositoryTest::sharedCodesStateFlow should emit FeatureNotEnabled when feature flag is off()", "com.bitwarden.authenticator.data.authenticator.repository.AuthenticatorRepositoryTest::sharedCodesStateFlow should emit Loading when authenticatorBridgeManager emits Loading()", "com.bitwarden.authenticator.data.authenticator.repository.AuthenticatorRepositoryTest::sharedCodesStateFlow should emit OsVersionNotSupported when authenticatorBridgeManager emits OsVersionNotSupported()", "com.bitwarden.authenticator.data.authenticator.repository.AuthenticatorRepositoryTest::sharedCodesStateFlow should emit Success when authenticatorBridgeManager emits Success()", "com.bitwarden.authenticator.data.authenticator.repository.AuthenticatorRepositoryTest::sharedCodesStateFlow should emit SyncNotEnabled when authenticatorBridgeManager emits SyncNotEnabled()", "com.bitwarden.authenticator.data.authenticator.repository.AuthenticatorRepositoryTest::sharedCodesStateFlow value should be FeatureNotEnabled when feature flag is off()", "com.bitwarden.authenticator.data.authenticator.repository.util.SharedVerificationCodesStateExtensionsTest::isSyncWithBitwardenEnabled should return true only when SharedVerificationCodesState is Success ()", "com.bitwarden.authenticator.data.authenticator.repository.util.SharedVerificationCodesStateExtensionsTest::itemsOrEmpty should return a non empty list only when state is Success ()", "com.bitwarden.authenticator.data.platform.datasource.disk.ConfigDiskSourceTest::serverConfig should pull from and update SharedPreferences()", "com.bitwarden.authenticator.data.platform.datasource.disk.ConfigDiskSourceTest::serverConfigFlow should react to changes in serverConfig()", "com.bitwarden.authenticator.data.platform.datasource.disk.FeatureFlagDiskSourceTest::featureFlagsConfigFlow should react to changes in featureFlagsConfig()", "com.bitwarden.authenticator.data.platform.datasource.disk.FeatureFlagDiskSourceTest::featureFlagsConfiguration should pull from and update SharedPreferences()", "com.bitwarden.authenticator.data.platform.datasource.disk.SettingDiskSourceTest::defaultSaveOption should read and write from shared preferences()", "com.bitwarden.authenticator.data.platform.datasource.disk.SettingDiskSourceTest::hasUserDismissedDownloadBitwardenCard should read and write from shared preferences()", "com.bitwarden.authenticator.data.platform.datasource.disk.SettingDiskSourceTest::hasUserDismissedSyncWithBitwardenCard should read and write from shared preferences()", "com.bitwarden.authenticator.data.platform.datasource.disk.SettingDiskSourceTest::previouslySyncedBitwardenAccountIds should read and write from shared preferences()", "com.bitwarden.authenticator.data.platform.datasource.network.core.ResultCallAdapterTest::when server returns error response code result should be failure()", "com.bitwarden.authenticator.data.platform.datasource.network.core.ResultCallAdapterTest::when server returns successful response result should be success()", "com.bitwarden.authenticator.data.platform.datasource.network.serializer.ZonedDateTimeSerializerTest::properly deserializes raw JSON to ZonedDateTime()", "com.bitwarden.authenticator.data.platform.datasource.network.serializer.ZonedDateTimeSerializerTest::properly deserializes raw JSON with nano seconds to ZonedDateTime()", "com.bitwarden.authenticator.data.platform.datasource.network.serializer.ZonedDateTimeSerializerTest::properly serializes external model back to raw JSON()", "com.bitwarden.authenticator.data.platform.datasource.network.service.ConfigServiceTest::getConfig should call ConfigApi()", "com.bitwarden.authenticator.data.platform.manager.DebugMenuFeatureFlagManagerTest::If value does not exist in repository return that value from the default manager()", "com.bitwarden.authenticator.data.platform.manager.DebugMenuFeatureFlagManagerTest::If value exists in repository return that value for requested FlagKey()", "com.bitwarden.authenticator.data.platform.manager.DebugMenuFeatureFlagManagerTest::get feature flag with force refresh will call the default manager to use as the fallback value()", "com.bitwarden.authenticator.data.platform.manager.DebugMenuFeatureFlagManagerTest::when repository update flow emits the flow will refresh to the value from default manager if repo returns null()", "com.bitwarden.authenticator.data.platform.manager.DebugMenuFeatureFlagManagerTest::when repository update flow emits, the feature flag flow will refresh to the value()", "com.bitwarden.authenticator.data.platform.manager.FlagKeyTest::All feature flags are correctly set to be remotely configured()", "com.bitwarden.authenticator.data.platform.manager.FlagKeyTest::All feature flags have the correct default value set()", "com.bitwarden.authenticator.data.platform.manager.FlagKeyTest::Feature flags have the correct key name set()", "com.bitwarden.authenticator.data.platform.repository.SettingsRepositoryTest::defaultSaveOption should pull from and update SettingsDiskSource()", "com.bitwarden.authenticator.data.platform.repository.SettingsRepositoryTest::defaultSaveOptionFlow should match SettingsDiskSource()", "com.bitwarden.authenticator.data.platform.repository.SettingsRepositoryTest::hasUserDismissedDownloadBitwardenCard should return false when disk source is false()", "com.bitwarden.authenticator.data.platform.repository.SettingsRepositoryTest::hasUserDismissedDownloadBitwardenCard should return false when disk source is null()", "com.bitwarden.authenticator.data.platform.repository.SettingsRepositoryTest::hasUserDismissedDownloadBitwardenCard should return true when disk source is true()", "com.bitwarden.authenticator.data.platform.repository.SettingsRepositoryTest::hasUserDismissedSyncWithBitwardenCard set should set disk source()", "com.bitwarden.authenticator.data.platform.repository.SettingsRepositoryTest::hasUserDismissedSyncWithBitwardenCard should return false when disk source is false()", "com.bitwarden.authenticator.data.platform.repository.SettingsRepositoryTest::hasUserDismissedSyncWithBitwardenCard should return false when disk source is null()", "com.bitwarden.authenticator.data.platform.repository.SettingsRepositoryTest::hasUserDismissedSyncWithBitwardenCard should return true when disk source is true()", "com.bitwarden.authenticator.data.platform.repository.SettingsRepositoryTest::previouslySyncedBitwardenAccountIds should pull from and update SettingsDiskSource()", "com.bitwarden.authenticator.data.platform.util.IntentExtensionsTest::isSuspicious should return false when data and extras are null()", "com.bitwarden.authenticator.data.platform.util.IntentExtensionsTest::isSuspicious should return false when data is null and extras are empty()", "com.bitwarden.authenticator.data.platform.util.IntentExtensionsTest::isSuspicious should return true when data is not null()", "com.bitwarden.authenticator.data.platform.util.IntentExtensionsTest::isSuspicious should return true when extras are not empty()", "com.bitwarden.authenticator.data.platform.util.IntentExtensionsTest::isSuspicious should return true when extras are null()", "com.bitwarden.authenticator.data.platform.util.JsonExtensionsTest::decodeFromStringOrNull for invalid JSON should return null()", "com.bitwarden.authenticator.data.platform.util.JsonExtensionsTest::decodeFromStringOrNull for valid JSON and a correct model should parse correctly()", "com.bitwarden.authenticator.data.platform.util.JsonExtensionsTest::decodeFromStringOrNull for valid JSON but an incorrect model should return null()", "com.bitwarden.authenticator.ui.authenticator.feature.itemlisting.ItemListingScreenTest::Move to Bitwarden long press action should not show when showMoveToBitwarden is false", "com.bitwarden.authenticator.ui.authenticator.feature.itemlisting.ItemListingScreenTest::clicking Move to Bitwarden should send MoveToBitwardenClick", "com.bitwarden.authenticator.ui.authenticator.feature.itemlisting.ItemListingScreenTest::clicking shared accounts verification code item should send ItemClick action", "com.bitwarden.authenticator.ui.authenticator.feature.itemlisting.ItemListingScreenTest::on NavigateToBitwardenSettings receive should launch bitwarden account security deep link", "com.bitwarden.authenticator.ui.authenticator.feature.itemlisting.ItemListingScreenTest::on ShowFirstTimeSyncSnackbar receive should show snackbar", "com.bitwarden.authenticator.ui.authenticator.feature.itemlisting.ItemListingScreenTest::on sync with bitwarden action card click in empty state should send SyncWithBitwardenClick", "com.bitwarden.authenticator.ui.authenticator.feature.itemlisting.ItemListingScreenTest::on sync with bitwarden action card click in full state should send SyncWithBitwardenClick", "com.bitwarden.authenticator.ui.authenticator.feature.itemlisting.ItemListingScreenTest::on sync with bitwarden action card dismiss in empty state should send SyncWithBitwardenDismiss", "com.bitwarden.authenticator.ui.authenticator.feature.itemlisting.ItemListingScreenTest::on sync with bitwarden action card dismiss in full state should send SyncWithBitwardenDismiss", "com.bitwarden.authenticator.ui.authenticator.feature.itemlisting.ItemListingScreenTest::shared accounts error message should show when view is Content with SharedCodesDisplayState Error", "com.bitwarden.authenticator.ui.authenticator.feature.itemlisting.ItemListingScreenTest::when allowing camera permissions and attempting to add a code we should be shown the scan QR code screen", "com.bitwarden.authenticator.ui.authenticator.feature.itemlisting.ItemListingScreenTest::when denying camera permissions and attempting to add a code we should be shown the manual entry screen", "com.bitwarden.authenticator.ui.authenticator.feature.manualcodeentry.ManualCodeEntryScreenTest::on Add code click should emit SaveLocallyClick", "com.bitwarden.authenticator.ui.authenticator.feature.manualcodeentry.ManualCodeEntryScreenTest::on Add code locally click should emit SaveLocallyClick", "com.bitwarden.authenticator.ui.authenticator.feature.manualcodeentry.ManualCodeEntryScreenTest::on Add code to Bitwarden click should emit SaveToBitwardenClick", "com.bitwarden.authenticator.ui.authenticator.feature.qrcodescan.QrCodeScanScreenTest::dismissing error dialog should send SaveToBitwardenErrorDismiss", "com.bitwarden.authenticator.ui.authenticator.feature.qrcodescan.QrCodeScanScreenTest::on NavigateBack event receive should call navigate back", "com.bitwarden.authenticator.ui.authenticator.feature.qrcodescan.QrCodeScanScreenTest::on Save here click should send SaveLocallyClick action", "com.bitwarden.authenticator.ui.authenticator.feature.qrcodescan.QrCodeScanScreenTest::on Save to Bitwarden click should send SaveToBitwardenClick action", "com.bitwarden.authenticator.ui.authenticator.feature.tutorial.TutorialViewModelTest::ContinueClick should emit NavigateToAuthenticator when at the end of pages()", "com.bitwarden.authenticator.ui.authenticator.feature.tutorial.TutorialViewModelTest::DotClick should update state and emit UpdatePager()", "com.bitwarden.authenticator.ui.authenticator.feature.tutorial.TutorialViewModelTest::PagerSwipe should update state()", "com.bitwarden.authenticator.ui.authenticator.feature.tutorial.TutorialViewModelTest::SkipClick should emit NavigateToAuthenticator()", "com.bitwarden.authenticator.ui.authenticator.feature.tutorial.TutorialViewModelTest::initial state should be correct()", "com.bitwarden.authenticator.ui.platform.feature.debugmenu.manager.DebugLaunchManagerTest::actionOnInputEvent should return false when debug menu is not enabled()", "com.bitwarden.authenticator.ui.platform.feature.debugmenu.manager.DebugLaunchManagerTest::actionOnInputEvent should return false when key event is not debug trigger()", "com.bitwarden.authenticator.ui.platform.feature.debugmenu.manager.DebugLaunchManagerTest::actionOnInputEvent should return false when touch event is not debug trigger()", "com.bitwarden.authenticator.ui.platform.feature.debugmenu.manager.DebugLaunchManagerTest::actionOnInputEvent should return true when KeyEvent is debug trigger()", "com.bitwarden.authenticator.ui.platform.feature.debugmenu.manager.DebugLaunchManagerTest::actionOnInputEvent should return true when TouchEvent is debug trigger done 3 times in a row()", "com.bitwarden.authenticator.ui.platform.feature.debugmenu.manager.DebugLaunchManagerTest::if touch action input takes place too slow should return false()", "com.bitwarden.authenticator.ui.platform.feature.settings.SettingsScreenTest::Default Save Option dialog should send DefaultSaveOptionUpdated when confirm is clicked", "com.bitwarden.authenticator.ui.platform.feature.settings.SettingsScreenTest::Default Save Option row should be hidden when showDefaultSaveOptionRow is false", "com.bitwarden.authenticator.ui.platform.feature.settings.SettingsScreenTest::Sync with Bitwarden row click should send SyncWithBitwardenClick action", "com.bitwarden.authenticator.ui.platform.feature.settings.SettingsScreenTest::Sync with Bitwarden row should be hidden when showSyncWithBitwarden is false", "com.bitwarden.authenticator.ui.platform.feature.settings.SettingsScreenTest::on NavigateToBitwardenApp receive should launch bitwarden account security deep link", "com.bitwarden.authenticator.ui.platform.feature.settings.SettingsScreenTest::on NavigateToBitwardenPlayStoreListing receive launch Bitwarden Play Store URI", "com.bitwarden.authenticator.ui.platform.util.DefaultSaveOptionExtensionsTest::displayLabel should map to correct labels()"], "base_total_tests": 91, "gold_total_tests": 91, "java_version": "17", "gradle_version": "8.14.2"}
{"instance_id": "bitwarden__android-4893", "repo": "bitwarden/android", "base_commit": "f22156389b28e4ba41513e664c4e0b3874a3ea7e", "FAIL_TO_PASS": [], "PASS_TO_PASS": ["com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::initial AccountSyncState should be AppNotInstalled when Bitwarden app is not present()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::initial AccountSyncState should be Loading when Bitwarden app is present()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::initial AccountSyncState should be OsVersionNotSupported when OS level is below S()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onAccountsSync should set AccountSyncState to decrypted response()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onAccountsSync when decryption fails state should be error()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onAccountsSync when symmetric key is missing should not set state to Success()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onServiceConnected when symmetric key does match should not query for symmetric key()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onServiceConnected when symmetric key does not match and query for key fails state should be error()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onServiceConnected when symmetric key does not match should set symmetric key from service()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onServiceConnected when symmetric key is not present and service returns null symmetric key state should be SyncNotEnabled and should unbind service()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onStart when Bitwarden app is not present should set state to AppNotInstalled()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onStart when Bitwarden app is present and bindService succeeds should set state to Loading before service calls back()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onStart when OS level is below S should set state to OsVersionNotSupported()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onStart when bindService fails should set state to error()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onStart when bindService throws security exception should set state to error()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onStop when service has been started should unbind service()", "com.bitwarden.authenticatorbridge.manager.util.AuthenticatorBridgeConnectionTypeExtensionsTest::toPackageName DEV should map to correct dev package()", "com.bitwarden.authenticatorbridge.manager.util.AuthenticatorBridgeConnectionTypeExtensionsTest::toPackageName RELEASE should map to correct release package()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::decrypt EncryptedAddTotpLoginItemData should return failure when generateCipher fails()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::decrypt EncryptedAddTotpLoginItemData should return success when there are no internal exceptions()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::decrypt EncryptedSharedAccountData should return failure when generateCipher fails()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::decrypt EncryptedSharedAccountData should return success when there are no internal exceptions()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::encrypt AddTotpLoginItemData should return failure when generateCipher fails()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::encrypt AddTotpLoginItemData should return success wwhen there are no internal exceptions()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::encrypt SharedAccountData should return failure when generateCipher fails()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::encrypt SharedAccountData should return success when there are no internal exceptions()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::encrypting and decrypting AddTotpLoginItemData should leave the data untransformed()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::encrypting and decrypting SharedAccountData should leave the data untransformed()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::generateSecretKey should return failure when KeyGenerator getInstance throws()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::generateSecretKey should return success when there are no internal exceptions()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::toFingerprint should return failure when MessageDigest getInstance fails()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::toFingerprint should return success when there are no internal exceptions()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::toSymmetricEncryptionKeyData should wrap the given ByteArray()"], "base_total_tests": 33, "gold_total_tests": 33, "java_version": "17", "gradle_version": "8.13"}
{"instance_id": "bitwarden__android-4891", "repo": "bitwarden/android", "base_commit": "ef3b7730d0b072eaf5d2bff9bd1d628e0842234b", "FAIL_TO_PASS": [], "PASS_TO_PASS": [], "base_total_tests": 91, "gold_total_tests": 33, "java_version": "17", "gradle_version": "8.13"}
{"instance_id": "bitwarden__android-4888", "repo": "bitwarden/android", "base_commit": "72c9149d27ef737f520e2f5592e39e949a855515", "FAIL_TO_PASS": [], "PASS_TO_PASS": ["com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::initial AccountSyncState should be AppNotInstalled when Bitwarden app is not present()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::initial AccountSyncState should be Loading when Bitwarden app is present()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::initial AccountSyncState should be OsVersionNotSupported when OS level is below S()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onAccountsSync should set AccountSyncState to decrypted response()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onAccountsSync when decryption fails state should be error()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onAccountsSync when symmetric key is missing should not set state to Success()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onServiceConnected when symmetric key does match should not query for symmetric key()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onServiceConnected when symmetric key does not match and query for key fails state should be error()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onServiceConnected when symmetric key does not match should set symmetric key from service()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onServiceConnected when symmetric key is not present and service returns null symmetric key state should be SyncNotEnabled and should unbind service()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onStart when Bitwarden app is not present should set state to AppNotInstalled()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onStart when Bitwarden app is present and bindService succeeds should set state to Loading before service calls back()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onStart when OS level is below S should set state to OsVersionNotSupported()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onStart when bindService fails should set state to error()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onStart when bindService throws security exception should set state to error()", "com.bitwarden.authenticatorbridge.manager.AuthenticatorBridgeManagerTest::onStop when service has been started should unbind service()", "com.bitwarden.authenticatorbridge.manager.util.AuthenticatorBridgeConnectionTypeExtensionsTest::toPackageName DEV should map to correct dev package()", "com.bitwarden.authenticatorbridge.manager.util.AuthenticatorBridgeConnectionTypeExtensionsTest::toPackageName RELEASE should map to correct release package()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::decrypt EncryptedAddTotpLoginItemData should return failure when generateCipher fails()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::decrypt EncryptedAddTotpLoginItemData should return success when there are no internal exceptions()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::decrypt EncryptedSharedAccountData should return failure when generateCipher fails()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::decrypt EncryptedSharedAccountData should return success when there are no internal exceptions()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::encrypt AddTotpLoginItemData should return failure when generateCipher fails()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::encrypt AddTotpLoginItemData should return success wwhen there are no internal exceptions()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::encrypt SharedAccountData should return failure when generateCipher fails()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::encrypt SharedAccountData should return success when there are no internal exceptions()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::encrypting and decrypting AddTotpLoginItemData should leave the data untransformed()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::encrypting and decrypting SharedAccountData should leave the data untransformed()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::generateSecretKey should return failure when KeyGenerator getInstance throws()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::generateSecretKey should return success when there are no internal exceptions()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::toFingerprint should return failure when MessageDigest getInstance fails()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::toFingerprint should return success when there are no internal exceptions()", "com.bitwarden.authenticatorbridge.util.EncryptionUtilTest::toSymmetricEncryptionKeyData should wrap the given ByteArray()"], "base_total_tests": 33, "gold_total_tests": 33, "java_version": "17", "gradle_version": "8.13"}
