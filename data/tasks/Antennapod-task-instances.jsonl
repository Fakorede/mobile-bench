{"repo": "AntennaPod/AntennaPod", "pull_number": 7815, "instance_id": "AntennaPod__AntennaPod-7815", "issue_numbers": ["7702"], "base_commit": "49e6da67271dead9d0a574c9ecbd70c35da18d36", "patch": "diff --git a/app/src/main/java/de/danoeh/antennapod/ui/swipeactions/RemoveFromHistorySwipeAction.java b/app/src/main/java/de/danoeh/antennapod/ui/swipeactions/RemoveFromHistorySwipeAction.java\nindex 4e89be62308..3d99a4cba84 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/swipeactions/RemoveFromHistorySwipeAction.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/swipeactions/RemoveFromHistorySwipeAction.java\n@@ -38,10 +38,10 @@ public String getTitle(Context context) {\n \n     @Override\n     public void performAction(FeedItem item, Fragment fragment, FeedItemFilter filter) {\n-        Date playbackCompletionDate = item.getMedia().getPlaybackCompletionDate();\n+        Date lastPlayedTimeHistory = item.getMedia().getLastPlayedTimeHistory();\n         DBWriter.deleteFromPlaybackHistory(item);\n         EventBus.getDefault().post(new MessageEvent(fragment.getString(R.string.removed_history_label),\n-                context -> DBWriter.addItemToPlaybackHistory(item.getMedia(), playbackCompletionDate),\n+                context -> DBWriter.addItemToPlaybackHistory(item.getMedia(), lastPlayedTimeHistory),\n                 fragment.getString(R.string.undo)));\n     }\n \ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItemFilter.java b/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItemFilter.java\nindex 1faeda01220..08755fb18bc 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItemFilter.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItemFilter.java\n@@ -117,7 +117,7 @@ public boolean matches(FeedItem item) {\n         } else if (showNotFavorite && item.isTagged(FeedItem.TAG_FAVORITE)) {\n             return false;\n         } else if (showInHistory && item.getMedia() != null\n-                && item.getMedia().getPlaybackCompletionDate().getTime() == 0) {\n+                && item.getMedia().getLastPlayedTimeHistory().getTime() == 0) {\n             return false;\n         } else if (!includeNotSubscribed && item.getFeed() != null\n                 && item.getFeed().getState() != Feed.STATE_SUBSCRIBED) {\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/FeedMedia.java b/model/src/main/java/de/danoeh/antennapod/model/feed/FeedMedia.java\nindex 88d6a77141c..91e41ce229f 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/feed/FeedMedia.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/FeedMedia.java\n@@ -38,12 +38,12 @@ public class FeedMedia implements Playable {\n     private long downloadDate;\n     private int duration;\n     private int position; // Current position in file\n-    private long lastPlayedTime; // Last time this media was played (in ms)\n+    private long lastPlayedTimeStatistics; // Last time this media was played (in ms)\n     private int playedDuration; // How many ms of this file have been played\n     private long size; // File size in Byte\n     private String mimeType;\n     @Nullable private volatile FeedItem item;\n-    private Date playbackCompletionDate;\n+    private Date lastPlayedTimeHistory;\n     private int startPosition = -1;\n     private int playedDurationWhenStarted;\n \n@@ -66,8 +66,8 @@ public FeedMedia(FeedItem i, String downloadUrl, long size,\n \n     public FeedMedia(long id, FeedItem item, int duration, int position,\n                      long size, String mimeType, String localFileUrl, String downloadUrl,\n-                     long downloadDate, Date playbackCompletionDate, int playedDuration,\n-                     long lastPlayedTime) {\n+                     long downloadDate, Date lastPlayedTimeHistory, int playedDuration,\n+                     long lastPlayedTimeStatistics) {\n         this.localFileUrl = localFileUrl;\n         this.downloadUrl = downloadUrl;\n         this.downloadDate = downloadDate;\n@@ -80,17 +80,17 @@ public FeedMedia(long id, FeedItem item, int duration, int position,\n         this.playedDurationWhenStarted = playedDuration;\n         this.size = size;\n         this.mimeType = mimeType;\n-        this.playbackCompletionDate = playbackCompletionDate == null\n-                ? null : (Date) playbackCompletionDate.clone();\n-        this.lastPlayedTime = lastPlayedTime;\n+        this.lastPlayedTimeHistory = lastPlayedTimeHistory == null\n+                ? null : (Date) lastPlayedTimeHistory.clone();\n+        this.lastPlayedTimeStatistics = lastPlayedTimeStatistics;\n     }\n \n     public FeedMedia(long id, FeedItem item, int duration, int position,\n                      long size, String mimeType, String localFileUrl, String downloadUrl,\n-                     long downloadDate, Date playbackCompletionDate, int playedDuration,\n-                     Boolean hasEmbeddedPicture, long lastPlayedTime) {\n+                     long downloadDate, Date lastPlayedTimeHistory, int playedDuration,\n+                     Boolean hasEmbeddedPicture, long lastPlayedTimeStatistics) {\n         this(id, item, duration, position, size, mimeType, localFileUrl, downloadUrl, downloadDate,\n-                playbackCompletionDate, playedDuration, lastPlayedTime);\n+                lastPlayedTimeHistory, playedDuration, lastPlayedTimeStatistics);\n         this.hasEmbeddedPicture = hasEmbeddedPicture;\n     }\n \n@@ -178,8 +178,8 @@ public void setDuration(int duration) {\n     }\n \n     @Override\n-    public void setLastPlayedTime(long lastPlayedTime) {\n-        this.lastPlayedTime = lastPlayedTime;\n+    public void setLastPlayedTimeStatistics(long lastPlayedTimeStatistics) {\n+        this.lastPlayedTimeStatistics = lastPlayedTimeStatistics;\n     }\n \n     public int getPlayedDuration() {\n@@ -199,8 +199,8 @@ public int getPosition() {\n     }\n \n     @Override\n-    public long getLastPlayedTime() {\n-        return lastPlayedTime;\n+    public long getLastPlayedTimeStatistics() {\n+        return lastPlayedTimeStatistics;\n     }\n \n     public void setPosition(int position) {\n@@ -260,14 +260,14 @@ public void setItem(FeedItem item) {\n         }\n     }\n \n-    public Date getPlaybackCompletionDate() {\n-        return playbackCompletionDate == null\n-                ? null : (Date) playbackCompletionDate.clone();\n+    public Date getLastPlayedTimeHistory() {\n+        return lastPlayedTimeHistory == null\n+                ? null : (Date) lastPlayedTimeHistory.clone();\n     }\n \n-    public void setPlaybackCompletionDate(Date playbackCompletionDate) {\n-        this.playbackCompletionDate = playbackCompletionDate == null\n-                ? null : (Date) playbackCompletionDate.clone();\n+    public void setLastPlayedTimeHistory(Date lastPlayedTimeHistory) {\n+        this.lastPlayedTimeHistory = lastPlayedTimeHistory == null\n+                ? null : (Date) lastPlayedTimeHistory.clone();\n     }\n \n     public boolean isInProgress() {\n@@ -298,9 +298,9 @@ public void writeToParcel(Parcel dest, int flags) {\n         dest.writeString(localFileUrl);\n         dest.writeString(downloadUrl);\n         dest.writeLong(downloadDate);\n-        dest.writeLong((playbackCompletionDate != null) ? playbackCompletionDate.getTime() : 0);\n+        dest.writeLong((lastPlayedTimeHistory != null) ? lastPlayedTimeHistory.getTime() : 0);\n         dest.writeInt(playedDuration);\n-        dest.writeLong(lastPlayedTime);\n+        dest.writeLong(lastPlayedTimeStatistics);\n     }\n \n     @Override\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/playback/Playable.java b/model/src/main/java/de/danoeh/antennapod/model/playback/Playable.java\nindex 8bf1c4e2065..c3fda817044 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/playback/Playable.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/playback/Playable.java\n@@ -61,7 +61,7 @@ public interface Playable extends Parcelable, Serializable {\n      * Returns last time (in ms) when this playable was played or 0\n      * if last played time is unknown.\n      */\n-    long getLastPlayedTime();\n+    long getLastPlayedTimeStatistics();\n \n     /**\n      * Returns the description of the item, if available.\n@@ -100,7 +100,7 @@ public interface Playable extends Parcelable, Serializable {\n     /**\n      * @param lastPlayedTimestamp  timestamp in ms\n      */\n-    void setLastPlayedTime(long lastPlayedTimestamp);\n+    void setLastPlayedTimeStatistics(long lastPlayedTimestamp);\n \n     /**\n      * This method should be called every time playback starts on this object.\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/playback/RemoteMedia.java b/model/src/main/java/de/danoeh/antennapod/model/playback/RemoteMedia.java\nindex c979488a6a7..4e98add2c79 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/playback/RemoteMedia.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/playback/RemoteMedia.java\n@@ -40,7 +40,7 @@ public class RemoteMedia implements Playable {\n     private List<Chapter> chapters;\n     private int duration;\n     private int position;\n-    private long lastPlayedTime;\n+    private long lastPlayedTimeStatistics;\n \n     public RemoteMedia(String downloadUrl, String itemId, String feedUrl, String feedTitle,\n                        String episodeTitle, String episodeLink, String feedAuthor,\n@@ -159,8 +159,8 @@ public int getPosition() {\n     }\n \n     @Override\n-    public long getLastPlayedTime() {\n-        return lastPlayedTime;\n+    public long getLastPlayedTimeStatistics() {\n+        return lastPlayedTimeStatistics;\n     }\n \n     @Override\n@@ -194,8 +194,8 @@ public void setDuration(int newDuration) {\n     }\n \n     @Override\n-    public void setLastPlayedTime(long lastPlayedTimestamp) {\n-        lastPlayedTime = lastPlayedTimestamp;\n+    public void setLastPlayedTimeStatistics(long lastPlayedTimestamp) {\n+        lastPlayedTimeStatistics = lastPlayedTimestamp;\n     }\n \n     @Override\n@@ -255,7 +255,7 @@ public void writeToParcel(Parcel dest, int flags) {\n         dest.writeString(notes);\n         dest.writeInt(duration);\n         dest.writeInt(position);\n-        dest.writeLong(lastPlayedTime);\n+        dest.writeLong(lastPlayedTimeStatistics);\n     }\n \n     public static final Parcelable.Creator<RemoteMedia> CREATOR = new Parcelable.Creator<RemoteMedia>() {\n@@ -266,7 +266,7 @@ public RemoteMedia createFromParcel(Parcel in) {\n                     in.readString(), in.readString(), new Date(in.readLong()), in.readString());\n             result.setDuration(in.readInt());\n             result.setPosition(in.readInt());\n-            result.setLastPlayedTime(in.readLong());\n+            result.setLastPlayedTimeStatistics(in.readLong());\n             return result;\n         }\n \ndiff --git a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/AutoDownloadManager.java b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/AutoDownloadManager.java\nindex 2eb1d1b56ea..82cfc522db0 100644\n--- a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/AutoDownloadManager.java\n+++ b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/AutoDownloadManager.java\n@@ -29,7 +29,7 @@ public static void setInstance(AutoDownloadManager instance) {\n \n     /**\n      * Removed downloaded episodes outside of the queue if the episode cache is full. Episodes with a smaller\n-     * 'playbackCompletionDate'-value will be deleted first.\n+     * 'lastPlayedTimeHistory'-value will be deleted first.\n      * <p/>\n      * This method should NOT be executed on the GUI thread.\n      *\ndiff --git a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/autodownload/APCleanupAlgorithm.java b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/autodownload/APCleanupAlgorithm.java\nindex c8db7e7fd11..011f0169544 100644\n--- a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/autodownload/APCleanupAlgorithm.java\n+++ b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/autodownload/APCleanupAlgorithm.java\n@@ -47,8 +47,8 @@ public int performCleanup(Context context, int numberOfEpisodesToDelete) {\n         List<FeedItem> delete;\n \n         Collections.sort(candidates, (lhs, rhs) -> {\n-            Date l = lhs.getMedia().getPlaybackCompletionDate();\n-            Date r = rhs.getMedia().getPlaybackCompletionDate();\n+            Date l = lhs.getMedia().getLastPlayedTimeHistory();\n+            Date r = rhs.getMedia().getLastPlayedTimeHistory();\n \n             if (l == null) {\n                 l = new Date();\n@@ -105,8 +105,8 @@ private List<FeedItem> getCandidates() {\n                 // make sure this candidate was played at least the proper amount of days prior\n                 // to now\n                 if (media != null\n-                        && media.getPlaybackCompletionDate() != null\n-                        && media.getPlaybackCompletionDate().before(mostRecentDateForDeletion)) {\n+                        && media.getLastPlayedTimeHistory() != null\n+                        && media.getLastPlayedTimeHistory().before(mostRecentDateForDeletion)) {\n                     candidates.add(item);\n                 }\n             }\ndiff --git a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/autodownload/AutoDownloadManagerImpl.java b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/autodownload/AutoDownloadManagerImpl.java\nindex 2b0eb4d6293..dfcfaae9a80 100644\n--- a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/autodownload/AutoDownloadManagerImpl.java\n+++ b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/autodownload/AutoDownloadManagerImpl.java\n@@ -43,7 +43,7 @@ public Future<?> autodownloadUndownloadedItems(final Context context) {\n \n     /**\n      * Removed downloaded episodes outside of the queue if the episode cache is full. Episodes with a smaller\n-     * 'playbackCompletionDate'-value will be deleted first.\n+     * 'lastPlayedTimeHistory'-value will be deleted first.\n      * <p/>\n      * This method should NOT be executed on the GUI thread.\n      *\ndiff --git a/playback/base/src/main/java/de/danoeh/antennapod/playback/base/RewindAfterPauseUtils.java b/playback/base/src/main/java/de/danoeh/antennapod/playback/base/RewindAfterPauseUtils.java\nindex 3ea8e59c560..f8af620d7f1 100644\n--- a/playback/base/src/main/java/de/danoeh/antennapod/playback/base/RewindAfterPauseUtils.java\n+++ b/playback/base/src/main/java/de/danoeh/antennapod/playback/base/RewindAfterPauseUtils.java\n@@ -19,12 +19,12 @@ public abstract class RewindAfterPauseUtils {\n \n     /**\n      * @param currentPosition  current position in a media file in ms\n-     * @param lastPlayedTime  timestamp when was media paused\n+     * @param lastPlayedTimeStatistics  timestamp when was media paused\n      * @return  new rewinded position for playback in milliseconds\n      */\n-    public static int calculatePositionWithRewind(int currentPosition, long lastPlayedTime) {\n-        if (currentPosition > 0 && lastPlayedTime > 0) {\n-            long elapsedTime = System.currentTimeMillis() - lastPlayedTime;\n+    public static int calculatePositionWithRewind(int currentPosition, long lastPlayedTimeStatistics) {\n+        if (currentPosition > 0 && lastPlayedTimeStatistics > 0) {\n+            long elapsedTime = System.currentTimeMillis() - lastPlayedTimeStatistics;\n             long rewindTime = 0;\n \n             if (elapsedTime > ELAPSED_TIME_FOR_LONG_REWIND) {\ndiff --git a/playback/cast/src/play/java/de/danoeh/antennapod/playback/cast/CastPsmp.java b/playback/cast/src/play/java/de/danoeh/antennapod/playback/cast/CastPsmp.java\nindex 07a3639d962..44abdabab28 100644\n--- a/playback/cast/src/play/java/de/danoeh/antennapod/playback/cast/CastPsmp.java\n+++ b/playback/cast/src/play/java/de/danoeh/antennapod/playback/cast/CastPsmp.java\n@@ -334,7 +334,7 @@ private void playMediaObject(@NonNull final Playable playable, final boolean for\n     public void resume() {\n         int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         media.getPosition(),\n-                        media.getLastPlayedTime());\n+                        media.getLastPlayedTimeStatistics());\n         seekTo(newPosition);\n         remoteMediaClient.play();\n     }\n@@ -353,7 +353,7 @@ public void prepare() {\n             if (position > 0) {\n                 position = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         position,\n-                        media.getLastPlayedTime());\n+                        media.getLastPlayedTimeStatistics());\n             }\n             remoteMediaClient.load(new MediaLoadRequestData.Builder()\n                     .setMediaInfo(remoteMedia)\ndiff --git a/playback/service/src/main/java/de/danoeh/antennapod/playback/service/internal/LocalPSMP.java b/playback/service/src/main/java/de/danoeh/antennapod/playback/service/internal/LocalPSMP.java\nindex 37cacd262f7..543e5908bee 100644\n--- a/playback/service/src/main/java/de/danoeh/antennapod/playback/service/internal/LocalPSMP.java\n+++ b/playback/service/src/main/java/de/danoeh/antennapod/playback/service/internal/LocalPSMP.java\n@@ -233,7 +233,7 @@ public void resume() {\n \n                 if (playerStatus == PlayerStatus.PREPARED && media.getPosition() > 0) {\n                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n-                            media.getPosition(), media.getLastPlayedTime());\n+                            media.getPosition(), media.getLastPlayedTimeStatistics());\n                     seekTo(newPosition);\n                 }\n                 mediaPlayer.start();\ndiff --git a/playback/service/src/main/java/de/danoeh/antennapod/playback/service/internal/PlayableUtils.java b/playback/service/src/main/java/de/danoeh/antennapod/playback/service/internal/PlayableUtils.java\nindex beef456f95a..7e71db953ed 100644\n--- a/playback/service/src/main/java/de/danoeh/antennapod/playback/service/internal/PlayableUtils.java\n+++ b/playback/service/src/main/java/de/danoeh/antennapod/playback/service/internal/PlayableUtils.java\n@@ -1,5 +1,7 @@\n package de.danoeh.antennapod.playback.service.internal;\n \n+import java.util.Date;\n+\n import de.danoeh.antennapod.storage.database.DBWriter;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n@@ -17,10 +19,11 @@ public abstract class PlayableUtils {\n      */\n     public static void saveCurrentPosition(Playable playable, int newPosition, long timestamp) {\n         playable.setPosition(newPosition);\n-        playable.setLastPlayedTime(timestamp);\n+        playable.setLastPlayedTimeStatistics(timestamp);\n \n         if (playable instanceof FeedMedia) {\n             FeedMedia media = (FeedMedia) playable;\n+            media.setLastPlayedTimeHistory(new Date(timestamp));\n             FeedItem item = media.getItem();\n             if (item != null && item.isNew()) {\n                 DBWriter.markItemPlayed(FeedItem.UNPLAYED, item.getId());\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBUpgrader.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBUpgrader.java\nindex 9daa1c137ca..b0b7009daa6 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBUpgrader.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBUpgrader.java\n@@ -45,7 +45,7 @@ static void upgrade(final SQLiteDatabase db, final int oldVersion, final int new\n         }\n         if (oldVersion <= 7) {\n             db.execSQL(\"ALTER TABLE \" + PodDBAdapter.TABLE_NAME_FEED_MEDIA\n-                    + \" ADD COLUMN \" + PodDBAdapter.KEY_PLAYBACK_COMPLETION_DATE\n+                    + \" ADD COLUMN \" + PodDBAdapter.KEY_LAST_PLAYED_TIME_HISTORY\n                     + \" INTEGER\");\n         }\n         if (oldVersion <= 8) {\n@@ -210,7 +210,7 @@ static void upgrade(final SQLiteDatabase db, final int oldVersion, final int new\n         }\n         if (oldVersion < 1040002) {\n             db.execSQL(\"ALTER TABLE \" + PodDBAdapter.TABLE_NAME_FEED_MEDIA\n-                    + \" ADD COLUMN \" + PodDBAdapter.KEY_LAST_PLAYED_TIME + \" INTEGER DEFAULT 0\");\n+                    + \" ADD COLUMN \" + PodDBAdapter.KEY_LAST_PLAYED_TIME_STATISTICS + \" INTEGER DEFAULT 0\");\n         }\n         if (oldVersion < 1040013) {\n             db.execSQL(PodDBAdapter.CREATE_INDEX_FEEDITEMS_PUBDATE);\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBWriter.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBWriter.java\nindex 93b961f9ae6..62e2d9504e9 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBWriter.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBWriter.java\n@@ -296,16 +296,16 @@ public static Future<?> addItemToPlaybackHistory(FeedMedia media) {\n      * current date regardless of the current value.\n      *\n      * @param media FeedMedia that should be added to the playback history.\n-     * @param date PlaybackCompletionDate for <code>media</code>\n+     * @param date LastPlayedTimeHistory for <code>media</code>\n      */\n     public static Future<?> addItemToPlaybackHistory(final FeedMedia media, Date date) {\n         return runOnDbThread(() -> {\n             Log.d(TAG, \"Adding item to playback history\");\n-            media.setPlaybackCompletionDate(date);\n+            media.setLastPlayedTimeHistory(date);\n \n             PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n-            adapter.setFeedMediaPlaybackCompletionDate(media);\n+            adapter.setFeedMediaLastPlayedTimeHistory(media);\n             adapter.close();\n             EventBus.getDefault().post(PlaybackHistoryEvent.listUpdated());\n \ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/FeedItemPermutors.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/FeedItemPermutors.java\nindex a9c59e2bb52..7955ebbbbc4 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/FeedItemPermutors.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/FeedItemPermutors.java\n@@ -79,8 +79,8 @@ public static Permutor<FeedItem> getPermutor(@NonNull SortOrder sortOrder) {\n                 comparator = (f1, f2) -> Long.compare(size(f2), size(f1));\n                 break;\n             case COMPLETION_DATE_NEW_OLD:\n-                comparator = (f1, f2) -> f2.getMedia().getPlaybackCompletionDate()\n-                        .compareTo(f1.getMedia().getPlaybackCompletionDate());\n+                comparator = (f1, f2) -> f2.getMedia().getLastPlayedTimeHistory()\n+                        .compareTo(f1.getMedia().getLastPlayedTimeHistory());\n                 break;\n             default:\n                 throw new IllegalArgumentException(\"Permutor not implemented\");\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\nindex e4b612b38bf..edc6934b462 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\n@@ -95,7 +95,6 @@ public class PodDBAdapter {\n     public static final String KEY_FEED_IDENTIFIER = \"feed_identifier\";\n     public static final String KEY_REASON_DETAILED = \"reason_detailed\";\n     public static final String KEY_DOWNLOADSTATUS_TITLE = \"title\";\n-    public static final String KEY_PLAYBACK_COMPLETION_DATE = \"playback_completion_date\";\n     public static final String KEY_AUTO_DOWNLOAD_ENABLED = \"auto_download\"; // Both tables use the same key\n     public static final String KEY_KEEP_UPDATED = \"keep_updated\";\n     public static final String KEY_AUTO_DELETE_ACTION = \"auto_delete_action\";\n@@ -109,7 +108,8 @@ public class PodDBAdapter {\n     public static final String KEY_SORT_ORDER = \"sort_order\";\n     public static final String KEY_LAST_UPDATE_FAILED = \"last_update_failed\";\n     public static final String KEY_HAS_EMBEDDED_PICTURE = \"has_embedded_picture\";\n-    public static final String KEY_LAST_PLAYED_TIME = \"last_played_time\";\n+    public static final String KEY_LAST_PLAYED_TIME_HISTORY = \"playback_completion_date\";\n+    public static final String KEY_LAST_PLAYED_TIME_STATISTICS = \"last_played_time\";\n     public static final String KEY_INCLUDE_FILTER = \"include_filter\";\n     public static final String KEY_EXCLUDE_FILTER = \"exclude_filter\";\n     public static final String KEY_MINIMAL_DURATION_FILTER = \"minimal_duration_filter\";\n@@ -197,11 +197,11 @@ public class PodDBAdapter {\n             + \" INTEGER,\" + KEY_FILE_URL + \" TEXT,\" + KEY_DOWNLOAD_URL\n             + \" TEXT,\" + KEY_DOWNLOAD_DATE + \" INTEGER,\" + KEY_POSITION\n             + \" INTEGER,\" + KEY_SIZE + \" INTEGER,\" + KEY_MIME_TYPE + \" TEXT,\"\n-            + KEY_PLAYBACK_COMPLETION_DATE + \" INTEGER,\"\n+            + KEY_LAST_PLAYED_TIME_HISTORY + \" INTEGER,\"\n             + KEY_FEEDITEM + \" INTEGER,\"\n             + KEY_PLAYED_DURATION + \" INTEGER,\"\n             + KEY_HAS_EMBEDDED_PICTURE + \" INTEGER,\"\n-            + KEY_LAST_PLAYED_TIME + \" INTEGER\" + \")\";\n+            + KEY_LAST_PLAYED_TIME_STATISTICS + \" INTEGER\" + \")\";\n \n     private static final String CREATE_TABLE_DOWNLOAD_LOG = \"CREATE TABLE \"\n             + TABLE_NAME_DOWNLOAD_LOG + \" (\" + TABLE_PRIMARY_KEY + KEY_FEEDFILE\n@@ -292,11 +292,11 @@ public class PodDBAdapter {\n             + TABLE_NAME_FEED_MEDIA + \".\" + KEY_POSITION + \", \"\n             + TABLE_NAME_FEED_MEDIA + \".\" + KEY_SIZE + \", \"\n             + TABLE_NAME_FEED_MEDIA + \".\" + KEY_MIME_TYPE + \", \"\n-            + TABLE_NAME_FEED_MEDIA + \".\" + KEY_PLAYBACK_COMPLETION_DATE + \", \"\n+            + TABLE_NAME_FEED_MEDIA + \".\" + KEY_LAST_PLAYED_TIME_HISTORY + \", \"\n             + TABLE_NAME_FEED_MEDIA + \".\" + KEY_FEEDITEM + \", \"\n             + TABLE_NAME_FEED_MEDIA + \".\" + KEY_PLAYED_DURATION + \", \"\n             + TABLE_NAME_FEED_MEDIA + \".\" + KEY_HAS_EMBEDDED_PICTURE + \", \"\n-            + TABLE_NAME_FEED_MEDIA + \".\" + KEY_LAST_PLAYED_TIME;\n+            + TABLE_NAME_FEED_MEDIA + \".\" + KEY_LAST_PLAYED_TIME_STATISTICS;\n \n     private static final String KEYS_FEED =\n             TABLE_NAME_FEEDS + \".\" + KEY_ID + \" AS \" + SELECT_KEY_FEED_ID + \", \"\n@@ -523,12 +523,12 @@ public long setMedia(FeedMedia media) {\n         values.put(KEY_DOWNLOAD_DATE, media.getDownloadDate());\n         values.put(KEY_FILE_URL, media.getLocalFileUrl());\n         values.put(KEY_HAS_EMBEDDED_PICTURE, media.hasEmbeddedPicture());\n-        values.put(KEY_LAST_PLAYED_TIME, media.getLastPlayedTime());\n+        values.put(KEY_LAST_PLAYED_TIME_STATISTICS, media.getLastPlayedTimeStatistics());\n \n-        if (media.getPlaybackCompletionDate() != null) {\n-            values.put(KEY_PLAYBACK_COMPLETION_DATE, media.getPlaybackCompletionDate().getTime());\n+        if (media.getLastPlayedTimeHistory() != null) {\n+            values.put(KEY_LAST_PLAYED_TIME_HISTORY, media.getLastPlayedTimeHistory().getTime());\n         } else {\n-            values.put(KEY_PLAYBACK_COMPLETION_DATE, 0);\n+            values.put(KEY_LAST_PLAYED_TIME_HISTORY, 0);\n         }\n         if (media.getItem() != null) {\n             values.put(KEY_FEEDITEM, media.getItem().getId());\n@@ -548,7 +548,8 @@ public void setFeedMediaPlaybackInformation(FeedMedia media) {\n             values.put(KEY_POSITION, media.getPosition());\n             values.put(KEY_DURATION, media.getDuration());\n             values.put(KEY_PLAYED_DURATION, media.getPlayedDuration());\n-            values.put(KEY_LAST_PLAYED_TIME, media.getLastPlayedTime());\n+            values.put(KEY_LAST_PLAYED_TIME_STATISTICS, media.getLastPlayedTimeStatistics());\n+            values.put(KEY_LAST_PLAYED_TIME_HISTORY, media.getLastPlayedTimeHistory().getTime());\n             db.update(TABLE_NAME_FEED_MEDIA, values, KEY_ID + \"=?\",\n                     new String[]{String.valueOf(media.getId())});\n         } else {\n@@ -556,15 +557,15 @@ public void setFeedMediaPlaybackInformation(FeedMedia media) {\n         }\n     }\n \n-    public void setFeedMediaPlaybackCompletionDate(FeedMedia media) {\n+    public void setFeedMediaLastPlayedTimeHistory(FeedMedia media) {\n         if (media.getId() != 0) {\n             ContentValues values = new ContentValues();\n-            values.put(KEY_PLAYBACK_COMPLETION_DATE, media.getPlaybackCompletionDate().getTime());\n+            values.put(KEY_LAST_PLAYED_TIME_HISTORY, media.getLastPlayedTimeHistory().getTime());\n             values.put(KEY_PLAYED_DURATION, media.getPlayedDuration());\n             db.update(TABLE_NAME_FEED_MEDIA, values, KEY_ID + \"=?\",\n                     new String[]{String.valueOf(media.getId())});\n         } else {\n-            Log.e(TAG, \"setFeedMediaPlaybackCompletionDate: ID of media was 0\");\n+            Log.e(TAG, \"setFeedMediaLastPlayedTimeHistory: ID of media was 0\");\n         }\n     }\n \n@@ -954,7 +955,7 @@ public void removeFeed(Feed feed) {\n \n     public void clearPlaybackHistory() {\n         ContentValues values = new ContentValues();\n-        values.put(KEY_PLAYBACK_COMPLETION_DATE, 0);\n+        values.put(KEY_LAST_PLAYED_TIME_HISTORY, 0);\n         db.update(TABLE_NAME_FEED_MEDIA, values, null, null);\n     }\n \n@@ -1061,7 +1062,7 @@ public Cursor getNextInQueue(final FeedItem item) {\n \n     public final Cursor getPausedQueueCursor(int limit) {\n         final String hasPositionOrRecentlyPlayed = TABLE_NAME_FEED_MEDIA + \".\"  + KEY_POSITION + \" >= 1000\"\n-                + \" OR \" + TABLE_NAME_FEED_MEDIA + \".\" + KEY_LAST_PLAYED_TIME\n+                + \" OR \" + TABLE_NAME_FEED_MEDIA + \".\" + KEY_LAST_PLAYED_TIME_STATISTICS\n                 + \" >= \" + (System.currentTimeMillis() - 30000);\n         final String query = \"SELECT \" + KEYS_FEED_ITEM_WITHOUT_DESCRIPTION + \", \" + KEYS_FEED_MEDIA\n                 + \" FROM \" + TABLE_NAME_QUEUE\n@@ -1069,7 +1070,7 @@ public final Cursor getPausedQueueCursor(int limit) {\n                 + \" ON \" + SELECT_KEY_ITEM_ID + \" = \" + TABLE_NAME_QUEUE + \".\" + KEY_FEEDITEM\n                 +  JOIN_FEED_ITEM_AND_MEDIA\n                 + \" ORDER BY (CASE WHEN \" + hasPositionOrRecentlyPlayed + \" THEN \"\n-                    + TABLE_NAME_FEED_MEDIA + \".\" + KEY_LAST_PLAYED_TIME + \" ELSE 0 END) DESC , \"\n+                    + TABLE_NAME_FEED_MEDIA + \".\" + KEY_LAST_PLAYED_TIME_STATISTICS + \" ELSE 0 END) DESC , \"\n                 + TABLE_NAME_QUEUE + \".\" + KEY_ID\n                 + \" LIMIT \" + limit;\n         return db.rawQuery(query, null);\n@@ -1124,13 +1125,14 @@ public final Cursor getFeedEpisodeCountCursor(long feedId, FeedItemFilter filter\n     }\n \n     public Cursor getRandomEpisodesCursor(int limit, int seed) {\n+        long oneHourAgo = System.currentTimeMillis() - 1000L * 3600L;\n         final String allItems = SELECT_FEED_ITEMS_AND_MEDIA\n                 + \" WHERE (\" + KEY_READ + \" = \" + FeedItem.NEW + \" OR \" + KEY_READ + \" = \" + FeedItem.UNPLAYED + \") \"\n                     // Only from the last two years. Older episodes often contain broken covers and stuff like that\n                     + \" AND \" + KEY_PUBDATE + \" > \" + (System.currentTimeMillis() - 1000L * 3600L * 24L * 356L * 2)\n                     // Hide episodes that have been played but not completed\n-                    + \" AND (\" + KEY_LAST_PLAYED_TIME + \" == 0\"\n-                        + \" OR \" + KEY_LAST_PLAYED_TIME + \" > \" + (System.currentTimeMillis() - 1000L * 3600L) + \")\"\n+                    + \" AND (\" + KEY_LAST_PLAYED_TIME_STATISTICS + \" == 0\"\n+                        + \" OR \" + KEY_LAST_PLAYED_TIME_STATISTICS + \" > \" + oneHourAgo + \")\"\n                     + \" AND \" + SELECT_WHERE_FEED_IS_SUBSCRIBED;\n         final String query = \"SELECT MAX(\" + randomEpisodeNumber(seed) + \"), * FROM (\" + allItems + \")\"\n                 + \" GROUP BY \" + KEY_FEED\n@@ -1184,7 +1186,7 @@ public final Cursor getFeedItemCursorByUrl(List<String> urls) {\n         }\n         final String query = SELECT_FEED_ITEMS_AND_MEDIA\n                 + \" WHERE \" + KEY_DOWNLOAD_URL + \" IN (\" + urlsString + \")\"\n-                + \" ORDER BY \" + KEY_PLAYBACK_COMPLETION_DATE + \" DESC\";\n+                + \" ORDER BY \" + KEY_LAST_PLAYED_TIME_HISTORY + \" DESC\";\n         return db.rawQuery(query, null);\n     }\n \n@@ -1206,10 +1208,10 @@ public final Cursor getFeedItemCursor(final String guid, final String episodeUrl\n \n     public final Cursor getMonthlyStatisticsCursor() {\n         final String query = \"SELECT SUM(\" + KEY_PLAYED_DURATION + \") AS total_duration\"\n-                + \", strftime('%m', datetime(\" + KEY_LAST_PLAYED_TIME + \"/1000, 'unixepoch')) AS month\"\n-                + \", strftime('%Y', datetime(\" + KEY_LAST_PLAYED_TIME + \"/1000, 'unixepoch')) AS year\"\n+                + \", strftime('%m', datetime(\" + KEY_LAST_PLAYED_TIME_STATISTICS + \"/1000, 'unixepoch')) AS month\"\n+                + \", strftime('%Y', datetime(\" + KEY_LAST_PLAYED_TIME_STATISTICS + \"/1000, 'unixepoch')) AS year\"\n                 + \" FROM \" + TABLE_NAME_FEED_MEDIA\n-                + \" WHERE \" + KEY_LAST_PLAYED_TIME + \" > 0 AND \" + KEY_PLAYED_DURATION + \" > 0\"\n+                + \" WHERE \" + KEY_LAST_PLAYED_TIME_STATISTICS + \" > 0 AND \" + KEY_PLAYED_DURATION + \" > 0\"\n                 + \" GROUP BY year, month\"\n                 + \" ORDER BY year, month\";\n         return db.rawQuery(query, null);\n@@ -1217,16 +1219,16 @@ public final Cursor getMonthlyStatisticsCursor() {\n \n     public final Cursor getFeedStatisticsCursor(boolean includeMarkedAsPlayed, long timeFilterFrom,\n                                                 long timeFilterTo, long sixMonthsAgo) {\n-        final String lastPlayedTime = TABLE_NAME_FEED_MEDIA + \".\" + KEY_LAST_PLAYED_TIME;\n-        String wasStarted = TABLE_NAME_FEED_MEDIA + \".\" + KEY_PLAYBACK_COMPLETION_DATE + \" > 0\"\n+        final String lastPlayedTimeStatistics = TABLE_NAME_FEED_MEDIA + \".\" + KEY_LAST_PLAYED_TIME_STATISTICS;\n+        String wasStarted = TABLE_NAME_FEED_MEDIA + \".\" + KEY_LAST_PLAYED_TIME_HISTORY + \" > 0\"\n                 + \" AND \" + TABLE_NAME_FEED_MEDIA + \".\" + KEY_PLAYED_DURATION + \" > 0\";\n         if (includeMarkedAsPlayed) {\n             wasStarted = \"(\" + wasStarted + \") OR \"\n                     + TABLE_NAME_FEED_ITEMS + \".\" + KEY_READ + \"=\" + FeedItem.PLAYED + \" OR \"\n                     + TABLE_NAME_FEED_MEDIA + \".\" + KEY_POSITION + \"> 0\";\n         }\n-        final String timeFilter = lastPlayedTime + \">=\" + timeFilterFrom\n-                + \" AND \" + lastPlayedTime + \"<\" + timeFilterTo;\n+        final String timeFilter = lastPlayedTimeStatistics + \">=\" + timeFilterFrom\n+                + \" AND \" + lastPlayedTimeStatistics + \"<\" + timeFilterTo;\n         String playedTime = TABLE_NAME_FEED_MEDIA + \".\" + KEY_PLAYED_DURATION;\n         if (includeMarkedAsPlayed) {\n             playedTime = \"(CASE WHEN \" + playedTime + \" != 0\"\n@@ -1238,8 +1240,9 @@ public final Cursor getFeedStatisticsCursor(boolean includeMarkedAsPlayed, long\n \n         final String query = \"SELECT \" + KEYS_FEED + \", \"\n                         + \"COUNT(*) AS num_episodes, \"\n-                        + \"MIN(CASE WHEN \" + lastPlayedTime + \" > 0\"\n-                                + \" THEN \" + lastPlayedTime + \" ELSE \" + Long.MAX_VALUE + \" END) AS oldest_date, \"\n+                        + \"MIN(CASE WHEN \" + lastPlayedTimeStatistics + \" > 0\"\n+                                + \" THEN \" + lastPlayedTimeStatistics\n+                                + \" ELSE \" + Long.MAX_VALUE + \" END) AS oldest_date, \"\n                         + \"SUM(CASE WHEN (\" + wasStarted + \") THEN 1 ELSE 0 END) AS episodes_started, \"\n                         + \"IFNULL(SUM(CASE WHEN (\" + timeFilter + \")\"\n                                 + \" THEN (\" + playedTime + \") ELSE 0 END), 0) AS played_time, \"\n@@ -1263,10 +1266,10 @@ public final Cursor getFeedStatisticsCursor(boolean includeMarkedAsPlayed, long\n     public final Cursor getTimeBetweenReleaseAndPlayback(long timeFilterFrom, long timeFilterTo) {\n         final String from = \" FROM \" + TABLE_NAME_FEED_ITEMS\n                 + JOIN_FEED_ITEM_AND_MEDIA\n-                + \" WHERE \" + TABLE_NAME_FEED_MEDIA + \".\" + KEY_LAST_PLAYED_TIME + \">=\" + timeFilterFrom\n+                + \" WHERE \" + TABLE_NAME_FEED_MEDIA + \".\" + KEY_LAST_PLAYED_TIME_STATISTICS + \">=\" + timeFilterFrom\n                         + \" AND \" + TABLE_NAME_FEED_ITEMS + \".\" + KEY_PUBDATE + \">=\" + timeFilterFrom\n-                        + \" AND \" + TABLE_NAME_FEED_MEDIA + \".\" + KEY_LAST_PLAYED_TIME + \"<\" + timeFilterTo;\n-        final String query = \"SELECT \" + TABLE_NAME_FEED_MEDIA + \".\" + KEY_LAST_PLAYED_TIME\n+                        + \" AND \" + TABLE_NAME_FEED_MEDIA + \".\" + KEY_LAST_PLAYED_TIME_STATISTICS + \"<\" + timeFilterTo;\n+        final String query = \"SELECT \" + TABLE_NAME_FEED_MEDIA + \".\" + KEY_LAST_PLAYED_TIME_STATISTICS\n                 + \" - \" + TABLE_NAME_FEED_ITEMS + \".\" + KEY_PUBDATE + \" AS diff\"\n                 + from\n                 + \" ORDER BY diff ASC\"\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemFilterQuery.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemFilterQuery.java\nindex 481107cfac2..f5f0a95c358 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemFilterQuery.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemFilterQuery.java\n@@ -22,7 +22,7 @@ public static String generateFrom(FeedItemFilter filter) {\n         // The keys used within this method, but explicitly combined with their table\n         String keyRead = PodDBAdapter.TABLE_NAME_FEED_ITEMS + \".\" + PodDBAdapter.KEY_READ;\n         String keyPosition = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_POSITION;\n-        String keyCompletionDate = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_PLAYBACK_COMPLETION_DATE;\n+        String keyCompletionDate = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_LAST_PLAYED_TIME_HISTORY;\n         String keyDownloaded = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_DOWNLOAD_DATE;\n         String keyMediaId = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_ID;\n         String keyItemId = PodDBAdapter.TABLE_NAME_FEED_ITEMS + \".\" + PodDBAdapter.KEY_ID;\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemSortQuery.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemSortQuery.java\nindex 236e9cbcf90..96a3a509fe3 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemSortQuery.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemSortQuery.java\n@@ -23,7 +23,7 @@ public static String generateFrom(SortOrder sortOrder) {\n                 return PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_SIZE + \" \" + \"DESC\";\n             case COMPLETION_DATE_NEW_OLD:\n                 return PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\"\n-                        + PodDBAdapter.KEY_PLAYBACK_COMPLETION_DATE + \" \" + \"DESC\";\n+                        + PodDBAdapter.KEY_LAST_PLAYED_TIME_HISTORY + \" \" + \"DESC\";\n             case DATE_OLD_NEW:\n                 return PodDBAdapter.TABLE_NAME_FEED_ITEMS + \".\" + PodDBAdapter.KEY_PUBDATE + \" \" + \"ASC\";\n             case EPISODE_FILENAME_A_Z:\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedMediaCursor.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedMediaCursor.java\nindex 51b25584fbb..ecd2c9c856f 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedMediaCursor.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedMediaCursor.java\n@@ -13,7 +13,7 @@\n  */\n public class FeedMediaCursor extends CursorWrapper {\n     private final int indexId;\n-    private final int indexPlaybackCompletionDate;\n+    private final int indexLastPlayedTimeHistory;\n     private final int indexDuration;\n     private final int indexPosition;\n     private final int indexSize;\n@@ -22,13 +22,13 @@ public class FeedMediaCursor extends CursorWrapper {\n     private final int indexDownloadUrl;\n     private final int indexDownloadDate;\n     private final int indexPlayedDuration;\n-    private final int indexLastPlayedTime;\n+    private final int indexLastPlayedTimeStatistics;\n     private final int indexHasEmbeddedPicture;\n \n     public FeedMediaCursor(Cursor cursor) {\n         super(cursor);\n         indexId = cursor.getColumnIndexOrThrow(PodDBAdapter.SELECT_KEY_MEDIA_ID);\n-        indexPlaybackCompletionDate = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_PLAYBACK_COMPLETION_DATE);\n+        indexLastPlayedTimeHistory = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_LAST_PLAYED_TIME_HISTORY);\n         indexDuration = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_DURATION);\n         indexPosition = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_POSITION);\n         indexSize = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_SIZE);\n@@ -37,7 +37,7 @@ public FeedMediaCursor(Cursor cursor) {\n         indexDownloadUrl = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_DOWNLOAD_URL);\n         indexDownloadDate = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_DOWNLOAD_DATE);\n         indexPlayedDuration = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_PLAYED_DURATION);\n-        indexLastPlayedTime = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_LAST_PLAYED_TIME);\n+        indexLastPlayedTimeStatistics = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_LAST_PLAYED_TIME_STATISTICS);\n         indexHasEmbeddedPicture = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_HAS_EMBEDDED_PICTURE);\n     }\n \n@@ -46,8 +46,8 @@ public FeedMediaCursor(Cursor cursor) {\n      */\n     @NonNull\n     public FeedMedia getFeedMedia() {\n-        long playbackCompletionTime = getLong(indexPlaybackCompletionDate);\n-        Date playbackCompletionDate = playbackCompletionTime > 0 ? new Date(playbackCompletionTime) : null;\n+        long lastPlayedTimeHistoryTime = getLong(indexLastPlayedTimeHistory);\n+        Date lastPlayedTimeHistory = lastPlayedTimeHistoryTime > 0 ? new Date(lastPlayedTimeHistoryTime) : null;\n \n         Boolean hasEmbeddedPicture;\n         switch (getInt(indexHasEmbeddedPicture)) {\n@@ -72,10 +72,10 @@ public FeedMedia getFeedMedia() {\n                 getString(indexFileUrl),\n                 getString(indexDownloadUrl),\n                 getLong(indexDownloadDate),\n-                playbackCompletionDate,\n+                lastPlayedTimeHistory,\n                 getInt(indexPlayedDuration),\n                 hasEmbeddedPicture,\n-                getLong(indexLastPlayedTime)\n+                getLong(indexLastPlayedTimeStatistics)\n         );\n     }\n }\n", "test_patch": "diff --git a/app/src/androidTest/java/de/test/antennapod/ui/UITestUtils.java b/app/src/androidTest/java/de/test/antennapod/ui/UITestUtils.java\nindex 4b93dcee9b9..8eef573d07a 100644\n--- a/app/src/androidTest/java/de/test/antennapod/ui/UITestUtils.java\n+++ b/app/src/androidTest/java/de/test/antennapod/ui/UITestUtils.java\n@@ -183,7 +183,7 @@ public void addLocalFeedData(boolean downloadEpisodes) throws Exception {\n \n             queue.add(feed.getItems().get(0));\n             if (feed.getItems().get(1).hasMedia()) {\n-                feed.getItems().get(1).getMedia().setPlaybackCompletionDate(new Date());\n+                feed.getItems().get(1).getMedia().setLastPlayedTimeHistory(new Date());\n             }\n         }\n         localFeedDataAdded = true;\ndiff --git a/net/download/service/src/test/java/de/danoeh/antennapod/net/download/service/episode/autodownload/DbCleanupTests.java b/net/download/service/src/test/java/de/danoeh/antennapod/net/download/service/episode/autodownload/DbCleanupTests.java\nindex c9a707327a0..737b4b93677 100644\n--- a/net/download/service/src/test/java/de/danoeh/antennapod/net/download/service/episode/autodownload/DbCleanupTests.java\n+++ b/net/download/service/src/test/java/de/danoeh/antennapod/net/download/service/episode/autodownload/DbCleanupTests.java\n@@ -130,9 +130,9 @@ void populateItems(final int numItems, Feed feed, List<FeedItem> items,\n                        boolean addToFavorites) throws IOException {\n         for (int i = 0; i < numItems; i++) {\n             Date itemDate = new Date(numItems - i);\n-            Date playbackCompletionDate = null;\n+            Date lastPlayedTimeHistory = null;\n             if (itemState == FeedItem.PLAYED) {\n-                playbackCompletionDate = itemDate;\n+                lastPlayedTimeHistory = itemDate;\n             }\n             FeedItem item = new FeedItem(0, \"title\", \"id\" + i, \"link\", itemDate, itemState, feed);\n \n@@ -140,7 +140,7 @@ void populateItems(final int numItems, Feed feed, List<FeedItem> items,\n             assertTrue(f.createNewFile());\n             files.add(f);\n             item.setMedia(new FeedMedia(0, item, 1, 0, 1L, \"m\",\n-                    f.getAbsolutePath(), \"url\", System.currentTimeMillis(), playbackCompletionDate, 0, 0));\n+                    f.getAbsolutePath(), \"url\", System.currentTimeMillis(), lastPlayedTimeHistory, 0, 0));\n             items.add(item);\n         }\n \ndiff --git a/net/download/service/src/test/java/de/danoeh/antennapod/net/download/service/episode/autodownload/DbReaderTest.java b/net/download/service/src/test/java/de/danoeh/antennapod/net/download/service/episode/autodownload/DbReaderTest.java\nindex a3dc9bd6fae..8f54609b013 100644\n--- a/net/download/service/src/test/java/de/danoeh/antennapod/net/download/service/episode/autodownload/DbReaderTest.java\n+++ b/net/download/service/src/test/java/de/danoeh/antennapod/net/download/service/episode/autodownload/DbReaderTest.java\n@@ -324,9 +324,9 @@ public void testGetPlaybackHistoryLength() {\n                 adapter.open();\n                 for (int i = 0; i < playedItems; ++i) {\n                     FeedMedia m = feed.getItems().get(i).getMedia();\n-                    m.setPlaybackCompletionDate(new Date(i + 1));\n+                    m.setLastPlayedTimeHistory(new Date(i + 1));\n \n-                    adapter.setFeedMediaPlaybackCompletionDate(m);\n+                    adapter.setFeedMediaLastPlayedTimeHistory(m);\n                 }\n                 adapter.close();\n \n@@ -506,8 +506,8 @@ public void testGetPlaybackHistory() {\n             adapter.open();\n             for (int i = 0; i < playedItems; i++) {\n                 FeedMedia m = feed.getItems().get(i).getMedia();\n-                m.setPlaybackCompletionDate(new Date(i + 1));\n-                adapter.setFeedMediaPlaybackCompletionDate(m);\n+                m.setLastPlayedTimeHistory(new Date(i + 1));\n+                adapter.setFeedMediaLastPlayedTimeHistory(m);\n                 ids[ids.length - 1 - i] = m.getItem().getId();\n             }\n             adapter.close();\n@@ -520,7 +520,7 @@ public void testGetPlaybackHistory() {\n                     numReturnedItems, saved.size());\n             for (int i = 0; i < numReturnedItems; i++) {\n                 FeedItem item = saved.get(i);\n-                assertNotNull(item.getMedia().getPlaybackCompletionDate());\n+                assertNotNull(item.getMedia().getLastPlayedTimeHistory());\n                 assertEquals(String.format(\"Wrong sort order with offset %d and limit %d: \",\n                                 paramOffset, paramLimit),\n                         item.getId(), ids[paramOffset + i]);\ndiff --git a/net/download/service/src/test/java/de/danoeh/antennapod/net/download/service/episode/autodownload/DbWriterTest.java b/net/download/service/src/test/java/de/danoeh/antennapod/net/download/service/episode/autodownload/DbWriterTest.java\nindex 4fc41a73b4c..d61e2076661 100644\n--- a/net/download/service/src/test/java/de/danoeh/antennapod/net/download/service/episode/autodownload/DbWriterTest.java\n+++ b/net/download/service/src/test/java/de/danoeh/antennapod/net/download/service/episode/autodownload/DbWriterTest.java\n@@ -94,7 +94,8 @@ public void tearDown() {\n     @Test\n     public void testSetFeedMediaPlaybackInformation() throws Exception {\n         final int position = 50;\n-        final long lastPlayedTime = 1000;\n+        final long lastPlayedTimeStatistics = 1000;\n+        final Date lastPlayedTimeHistory = new Date();\n         final int playedDuration = 60;\n         final int duration = 100;\n \n@@ -110,8 +111,9 @@ public void testSetFeedMediaPlaybackInformation() throws Exception {\n         DBWriter.setFeedItem(item).get(TIMEOUT, TimeUnit.SECONDS);\n \n         media.setPosition(position);\n-        media.setLastPlayedTime(lastPlayedTime);\n+        media.setLastPlayedTimeStatistics(lastPlayedTimeStatistics);\n         media.setPlayedDuration(playedDuration);\n+        media.setLastPlayedTimeHistory(lastPlayedTimeHistory);\n \n         DBWriter.setFeedMediaPlaybackInformation(item.getMedia()).get(TIMEOUT, TimeUnit.SECONDS);\n \n@@ -119,7 +121,8 @@ public void testSetFeedMediaPlaybackInformation() throws Exception {\n         FeedMedia mediaFromDb = itemFromDb.getMedia();\n \n         assertEquals(position, mediaFromDb.getPosition());\n-        assertEquals(lastPlayedTime, mediaFromDb.getLastPlayedTime());\n+        assertEquals(lastPlayedTimeStatistics, mediaFromDb.getLastPlayedTimeStatistics());\n+        assertEquals(lastPlayedTimeHistory, mediaFromDb.getLastPlayedTimeHistory());\n         assertEquals(playedDuration, mediaFromDb.getPlayedDuration());\n         assertEquals(duration, mediaFromDb.getDuration());\n     }\n@@ -467,12 +470,12 @@ public void testDeleteFeedItems() throws Exception {\n         adapter.close();\n     }\n \n-    private FeedMedia playbackHistorySetup(Date playbackCompletionDate) {\n+    private FeedMedia playbackHistorySetup(Date lastPlayedTimeHistory) {\n         Feed feed = new Feed(\"url\", null, \"title\");\n         feed.setItems(new ArrayList<>());\n         FeedItem item = new FeedItem(0, \"title\", \"id\", \"link\", new Date(), FeedItem.PLAYED, feed);\n         FeedMedia media = new FeedMedia(0, item, 10, 0, 1, \"mime\", null,\n-                \"url\", 0, playbackCompletionDate, 0, 0);\n+                \"url\", 0, lastPlayedTimeHistory, 0, 0);\n         feed.getItems().add(item);\n         item.setMedia(media);\n         PodDBAdapter adapter = PodDBAdapter.getInstance();\n@@ -493,7 +496,7 @@ public void testAddItemToPlaybackHistoryNotPlayedYet() throws Exception {\n         adapter.close();\n \n         assertNotNull(media);\n-        assertNotNull(media.getPlaybackCompletionDate());\n+        assertNotNull(media.getLastPlayedTimeHistory());\n     }\n \n     @Test\n@@ -508,8 +511,8 @@ public void testAddItemToPlaybackHistoryAlreadyPlayed() throws Exception {\n         adapter.close();\n \n         assertNotNull(media);\n-        assertNotNull(media.getPlaybackCompletionDate());\n-        assertNotEquals(media.getPlaybackCompletionDate().getTime(), oldDate);\n+        assertNotNull(media.getLastPlayedTimeHistory());\n+        assertNotEquals(media.getLastPlayedTimeHistory().getTime(), oldDate);\n     }\n \n     @SuppressWarnings(\"SameParameterValue\")\n", "problem_statement": "Add episodes to playback history even when not completing them\n### Checklist\n\n- [x] I have used the search function for [**OPEN**](https://github.com/AntennaPod/AntennaPod/issues) issues to see if someone else has already submitted the same feature request.\n- [x] I have **also** used the search function for [**CLOSED**](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue+is%3Aclosed) issues to see if the feature was already implemented and is just waiting to be released, or if the feature was rejected.\n- [x] I will describe the problem with as much detail as possible.\n- [x] This request contains only one single feature, **not** a list of multiple (related) features.\n\n### App version\n\n3.7.0\n\n### Feature or improvement you want\n\nSometimes I play an episode but do not complete it. I expect it to be displayed on the history screen nonetheless.\n\n### Why should this be added?\n\n_No response_\n\n### Screenshots / Drawings / Technical details\n\nCurrently we have a column `completed_date`. Re-purpose that column into storing `last_played_date_history`. Note that there is also `last_played_date` which is for statistics. These should stay separate fields. Because columns cannot be renamed, just rename the references to it in Java (PodDbAdaper, FeedItem, etc). Fill that column with the last played date, just like the other column.\n", "hints_text": "Hi, I would be interested to work on this. Just for clarification:\nyour idea is to repurpose `completion_date` to store the same value as `last_played_time`? \n\nAs of sqlite v. 3.28 its possible to rename columns, from what i could find:\nhttps://stackoverflow.com/questions/805363/how-do-i-rename-a-column-in-an-sqlite-database-table\n \n> Just for clarification: your idea is to repurpose completion_date to store the same value as last_played_time?\n\nExactly :) They wouldn't always be the same value, in case one of them is cleared (clear statistics vs clear playback history), but generally yes\n\n> As of sqlite v. 3.28 its possible to rename columns\n\nAh, interesting. I didn't know that. However, we support Android versions that don't have sqlite 3.28 yet, so I would just rename the references in Java but keep the old sqlite column names internally\nThanks for clearing that up :)", "created_at": "2025-05-15T14:52:26Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 7730, "instance_id": "AntennaPod__AntennaPod-7730", "issue_numbers": ["7707"], "base_commit": "5b2648393ab223f0c461c7d96016a8b7afcd6956", "patch": "diff --git a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterface.java b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterface.java\nindex a04c24ee45..ecb5f0573e 100644\n--- a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterface.java\n+++ b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterface.java\n@@ -56,4 +56,6 @@ public boolean isEpisodeQueued(String url) {\n     public int getProgress(String url) {\n         return isDownloadingEpisode(url) ? currentDownloads.get(url).getProgress() : -1;\n     }\n+\n+    public abstract int getNumberOfActiveDownloads(Context context);\n }\ndiff --git a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/autodownload/AutomaticDownloadAlgorithm.java b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/autodownload/AutomaticDownloadAlgorithm.java\nindex 1371d3a440..bd2360fa7e 100644\n--- a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/autodownload/AutomaticDownloadAlgorithm.java\n+++ b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/autodownload/AutomaticDownloadAlgorithm.java\n@@ -85,6 +85,7 @@ public Runnable autoDownloadUndownloadedItems(final Context context) {\n \n                 int autoDownloadableEpisodes = candidates.size();\n                 int downloadedEpisodes = DBReader.getTotalEpisodeCount(new FeedItemFilter(FeedItemFilter.DOWNLOADED));\n+                downloadedEpisodes += DownloadServiceInterface.get().getNumberOfActiveDownloads(context);\n                 int deletedEpisodes = EpisodeCleanupAlgorithmFactory.build()\n                         .makeRoomForEpisodes(context, autoDownloadableEpisodes);\n                 boolean cacheIsUnlimited =\n@@ -99,7 +100,7 @@ public Runnable autoDownloadUndownloadedItems(final Context context) {\n                 }\n \n                 List<FeedItem> itemsToDownload = candidates.subList(0, episodeSpaceLeft);\n-                if (itemsToDownload.size() > 0) {\n+                if (!itemsToDownload.isEmpty()) {\n                     Log.d(TAG, \"Enqueueing \" + itemsToDownload.size() + \" items for download\");\n \n                     for (FeedItem episode : itemsToDownload) {\ndiff --git a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/DownloadServiceInterfaceImpl.java b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/DownloadServiceInterfaceImpl.java\nindex 9348eaa8de..8581b72811 100644\n--- a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/DownloadServiceInterfaceImpl.java\n+++ b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/DownloadServiceInterfaceImpl.java\n@@ -19,6 +19,7 @@\n import io.reactivex.schedulers.Schedulers;\n \n import java.util.List;\n+import java.util.concurrent.ExecutionException;\n import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n \n@@ -97,4 +98,23 @@ public void cancel(Context context, FeedMedia media) {\n     public void cancelAll(Context context) {\n         WorkManager.getInstance(context).cancelAllWorkByTag(WORK_TAG);\n     }\n+\n+    @Override\n+    public int getNumberOfActiveDownloads(Context context) {\n+        try {\n+            List<WorkInfo> workInfos = WorkManager.getInstance(context)\n+                    .getWorkInfosByTag(DownloadServiceInterface.WORK_TAG).get();\n+            int count = 0;\n+            for (WorkInfo info : workInfos) {\n+                if (info.getState() == WorkInfo.State.RUNNING\n+                        || info.getState() == WorkInfo.State.ENQUEUED\n+                        || info.getState() == WorkInfo.State.BLOCKED) {\n+                    count++;\n+                }\n+            }\n+            return count;\n+        } catch (ExecutionException | InterruptedException e) {\n+            return 0;\n+        }\n+    }\n }\n", "test_patch": "diff --git a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterfaceStub.java b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterfaceStub.java\nindex 70f551a9c8..506d3b2c32 100644\n--- a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterfaceStub.java\n+++ b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterfaceStub.java\n@@ -21,4 +21,9 @@ public void cancel(Context context, FeedMedia media) {\n     @Override\n     public void cancelAll(Context context) {\n     }\n+\n+    @Override\n+    public int getNumberOfActiveDownloads(Context context) {\n+        return 0;\n+    }\n }\n", "problem_statement": "Automatic episode download: limit no longer observed\n### Checklist\n\n- [x] I have used the search function for [**OPEN**](https://github.com/AntennaPod/AntennaPod/issues) issues to see if someone else has already submitted the same bug report.\n- [x] I have **also** used the search function for [**CLOSED**](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue+is%3Aclosed) issues to see if the problem is already solved and just waiting to be released.\n- [x] I will describe the problem with as much detail as possible.\n- [x] If the bug only to occurs with a certain podcast, I will include the URL of that podcast.\n\n### App version\n\n3.7.0\n\n### Android version\n\n12\n\n### Device model\n\nPixel 3a\n\n### First occurred\n\nDays ago / since 3.7.0\n\n### Steps to reproduce\n\n1. Setup automatic download with 10 episode limit\n2. typically auto download happens after podcast feed refresh, (based on my setup of refreshing twice a day and auto deletion after 12 hours).\n\n### Expected behaviour\n\nDownload (and enqueue) up to 10 episodes.\n\n### Current behaviour\n\nIntermittently (twice since upgraded to 3.7.0 via Google Play less than a week ago), the auto download ended up downloading a lot more episodes (30+ and 20+). I can't tell if there is a pattern.\n\n### Logs\n\n_No response_\n", "hints_text": "My auto-download just queued the *entire* inbox. I now have a queue of over 200 episodes.\n![full-logs.txt](https://github.com/user-attachments/files/19413366/full-logs.txt)\n\n\nI just had to uninstall the app after it has already downloaded 35GB of podcasts. The download queue was still hundreds of podcasts back, with no way to cancel them all (only multi select delete of successfully downloaded episodes is possible). \nI was able to cancel downloads via the downloads menu, you should have been able to do the same.\nAt a guess, I would imagine the regression was caused by the ongoing autodownload rewrite, possibly in #7627. Also related: #7666, #7662\n\n(I see the bug also - inbox is added to the queue, newly added episodes are then downloaded, both without user interaction)", "created_at": "2025-03-31T19:12:31Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 7537, "instance_id": "AntennaPod__AntennaPod-7537", "issue_numbers": ["7431"], "base_commit": "310ce203cea26cf14dc8514ab72d028e545640ab", "patch": "diff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/TranscriptAdapter.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/TranscriptAdapter.java\nindex ffb3b7bdae5..7ce8b0964e3 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/TranscriptAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/TranscriptAdapter.java\n@@ -78,6 +78,8 @@ public void onBindViewHolder(@NonNull TranscriptViewholder holder, int position)\n             if (speakers.isEmpty() && (position % 5 == 0)) {\n                 holder.viewTimecode.setVisibility(View.VISIBLE);\n                 holder.viewTimecode.setText(timecode);\n+            } else {\n+                holder.viewTimecode.setVisibility(View.GONE);\n             }\n             holder.viewContent.setText(seg.getWords());\n         }\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java b/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java\nindex 603c6666774..f10871992a7 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java\n@@ -45,7 +45,6 @@ public class FeedItem implements Serializable {\n     private String socialInteractUrl;\n     private String podcastIndexTranscriptUrl;\n     private String podcastIndexTranscriptType;\n-    private String podcastIndexTranscriptText;\n     private Transcript transcript;\n \n     private int state;\n@@ -456,29 +455,15 @@ public String getTranscriptType() {\n         return podcastIndexTranscriptType;\n     }\n \n-    public void updateTranscriptPreferredFormat(String type, String url) {\n-        if (StringUtils.isEmpty(type) || StringUtils.isEmpty(url)) {\n+    public void updateTranscriptPreferredFormat(String typeStr, String url) {\n+        if (StringUtils.isEmpty(typeStr) || StringUtils.isEmpty(url)) {\n             return;\n         }\n-\n-        String canonicalSrr = \"application/srr\";\n-        String jsonType = \"application/json\";\n-\n-        switch (type) {\n-            case \"application/json\":\n-                podcastIndexTranscriptUrl = url;\n-                podcastIndexTranscriptType = type;\n-                break;\n-            case \"application/srr\":\n-            case \"application/srt\":\n-            case \"application/x-subrip\":\n-                if (podcastIndexTranscriptUrl == null || !podcastIndexTranscriptType.equals(jsonType)) {\n-                    podcastIndexTranscriptUrl = url;\n-                    podcastIndexTranscriptType = canonicalSrr;\n-                }\n-                break;\n-            default:\n-                break;\n+        TranscriptType type = TranscriptType.fromMime(typeStr);\n+        TranscriptType previousType = TranscriptType.fromMime(podcastIndexTranscriptType);\n+        if (type.priority > previousType.priority) {\n+            podcastIndexTranscriptUrl = url;\n+            podcastIndexTranscriptType = type.canonicalMime;\n         }\n     }\n \n@@ -490,14 +475,6 @@ public void setTranscript(Transcript t) {\n         transcript = t;\n     }\n \n-    public String getPodcastIndexTranscriptText() {\n-        return podcastIndexTranscriptText;\n-    }\n-\n-    public String setPodcastIndexTranscriptText(String str) {\n-        return podcastIndexTranscriptText = str;\n-    }\n-\n     public boolean hasTranscript() {\n         return (podcastIndexTranscriptUrl != null);\n     }\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/TranscriptSegment.java b/model/src/main/java/de/danoeh/antennapod/model/feed/TranscriptSegment.java\nindex 0101bb8ed51..6f3401c3bd4 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/feed/TranscriptSegment.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/TranscriptSegment.java\n@@ -2,8 +2,8 @@\n \n public class TranscriptSegment {\n     private final long startTime;\n-    private final long endTime;\n-    private final String words;\n+    private long endTime;\n+    private String words;\n     private final String speaker;\n \n     public TranscriptSegment(long start, long end, String w, String s) {\n@@ -13,6 +13,11 @@ public TranscriptSegment(long start, long end, String w, String s) {\n         speaker = s;\n     }\n \n+    public void append(long newEndTime, String wordsToAppend) {\n+        endTime = newEndTime;\n+        words += \" \" + wordsToAppend;\n+    }\n+\n     public long getStartTime() {\n         return startTime;\n     }\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/TranscriptType.java b/model/src/main/java/de/danoeh/antennapod/model/feed/TranscriptType.java\nnew file mode 100644\nindex 00000000000..4a9d1315326\n--- /dev/null\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/TranscriptType.java\n@@ -0,0 +1,28 @@\n+package de.danoeh.antennapod.model.feed;\n+\n+public enum TranscriptType {\n+    JSON(4, \"application/json\"),\n+    VTT(3, \"text/vtt\"),\n+    SRT(2, \"application/srt\"),\n+    NONE(0, \"\");\n+\n+    public final int priority;\n+    public final String canonicalMime;\n+\n+    TranscriptType(int priority, String canonicalMime) {\n+        this.priority = priority;\n+        this.canonicalMime = canonicalMime;\n+    }\n+\n+    public static TranscriptType fromMime(String type) {\n+        if (type == null) {\n+            return NONE;\n+        }\n+        return switch (type) {\n+            case \"application/json\" -> JSON;\n+            case \"text/vtt\" -> VTT;\n+            case \"application/srt\", \"application/srr\", \"application/x-subrip\" -> SRT;\n+            default -> NONE;\n+        };\n+    }\n+}\ndiff --git a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/MediaDownloadedHandler.java b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/MediaDownloadedHandler.java\nindex 4958ba529b7..293f3065219 100644\n--- a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/MediaDownloadedHandler.java\n+++ b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/MediaDownloadedHandler.java\n@@ -70,7 +70,6 @@ public void run() {\n             if (item != null && item.getTranscriptUrl() != null) {\n                 String transcript = TranscriptUtils.loadTranscriptFromUrl(item.getTranscriptUrl(), true);\n                 if (!StringUtils.isEmpty(transcript)) {\n-                    item.setPodcastIndexTranscriptText(transcript);\n                     TranscriptUtils.storeTranscript(media, transcript);\n                 }\n             }\ndiff --git a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/FeedUpdateWorker.java b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/FeedUpdateWorker.java\nindex cd6954ac822..1b7ffffec34 100644\n--- a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/FeedUpdateWorker.java\n+++ b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/FeedUpdateWorker.java\n@@ -167,6 +167,7 @@ private void refreshFeeds(List<Feed> toUpdate, boolean force) {\n                         newEpisodesNotification.showIfNeeded(getApplicationContext(), savedFeed);\n                     }\n                 } catch (Exception e) {\n+                    e.printStackTrace();\n                     DBWriter.setFeedLastUpdateFailed(feed.getId(), true);\n                     DownloadResult status = new DownloadResult(feed.getTitle(),\n                             feed.getId(), Feed.FEEDFILETYPE_FEED, false,\ndiff --git a/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/TranscriptParser.java b/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/TranscriptParser.java\nindex 4049b2c8f85..e428a3ce105 100644\n--- a/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/TranscriptParser.java\n+++ b/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/TranscriptParser.java\n@@ -1,5 +1,6 @@\n package de.danoeh.antennapod.parser.transcript;\n \n+import de.danoeh.antennapod.model.feed.TranscriptType;\n import org.apache.commons.lang3.StringUtils;\n \n import de.danoeh.antennapod.model.feed.Transcript;\n@@ -8,18 +9,16 @@ public class TranscriptParser {\n     static final long MIN_SPAN = 5000L; // Merge short segments together to form a span of 5 seconds\n     static final long MAX_SPAN = 8000L; // Don't go beyond 10 seconds when merging\n \n-    public static Transcript parse(String str, String type) {\n+    public static Transcript parse(String str, String typeStr) {\n         if (str == null || StringUtils.isBlank(str)) {\n             return null;\n         }\n-\n-        if (\"application/json\".equals(type)) {\n-            return JsonTranscriptParser.parse(str);\n-        }\n-\n-        if (\"application/srt\".equals(type) || \"application/srr\".equals(type) || \"application/x-subrip\".equals(type)) {\n-            return SrtTranscriptParser.parse(str);\n-        }\n-        return null;\n+        TranscriptType type = TranscriptType.fromMime(typeStr);\n+        return switch (type) {\n+            case JSON -> JsonTranscriptParser.parse(str);\n+            case VTT -> VttTranscriptParser.parse(str);\n+            case SRT -> SrtTranscriptParser.parse(str);\n+            default -> null;\n+        };\n     }\n }\ndiff --git a/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/VttTranscriptParser.java b/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/VttTranscriptParser.java\nnew file mode 100644\nindex 00000000000..33d7071a506\n--- /dev/null\n+++ b/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/VttTranscriptParser.java\n@@ -0,0 +1,144 @@\n+package de.danoeh.antennapod.parser.transcript;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.jsoup.Jsoup;\n+\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import de.danoeh.antennapod.model.feed.Transcript;\n+import de.danoeh.antennapod.model.feed.TranscriptSegment;\n+\n+public class VttTranscriptParser {\n+    private static final Pattern TIMESTAMP_PATTERN =\n+            Pattern.compile(\"^(?:([0-9]{2}):)?([0-9]{2}):([0-9]{2})\\\\.([0-9]{3})$\");\n+\n+    private static final Pattern VOICE_SPAN =\n+            Pattern.compile(\"<v(?:\\\\.[^\\\\t\\\\n\\\\r &<>.]+)*[ \\\\t]([^\\\\n\\\\r&>]+)>\");\n+\n+    private record Timings(long start, long end) {}\n+\n+    public static Transcript parse(String str) {\n+        // This is basically a very light WebVTT parser.\n+        // It uses WebVTT properties to be both exact and very light.\n+        // We will only be parsing the WebVTT cue blocks.\n+\n+        if (StringUtils.isBlank(str)) {\n+            return null;\n+        }\n+\n+        // WebVTT line terminator can be \\r\\n, \\n or \\n, let's use only one\n+        str = str.replaceAll(\"\\r\\n?\", \"\\n\");\n+        List<String> lines = Arrays.asList(str.split(\"\\n\"));\n+\n+        Transcript transcript = new Transcript();\n+        Iterator<String> iterator = lines.iterator();\n+        Set<String> speakers = new HashSet<>();\n+        String speaker = \"\";\n+        TranscriptSegment segment = null;\n+\n+        // Iterate through cue blocks\n+        while (iterator.hasNext()) {\n+            String line = iterator.next();\n+\n+            if (!line.contains(\"-->\")) {\n+                continue;\n+            }\n+\n+            Timings timings = parseCueTimings(line);\n+            if (timings == null) {\n+                return null; // Input is broken\n+            }\n+\n+            String payload = parseCuePayload(iterator);\n+\n+            Matcher matcher = VOICE_SPAN.matcher(payload);\n+            if (matcher.find()) {\n+                speaker = matcher.group(1);\n+                speakers.add(speaker);\n+            }\n+\n+            payload = Jsoup.parse(payload).text(); // remove all HTML tags\n+\n+            // should we merge this segment with the previous one?\n+            if (segment != null && segment.getSpeaker().equals(speaker)\n+                    && timings.end - segment.getStartTime() < TranscriptParser.MAX_SPAN) {\n+                segment.append(timings.end, payload);\n+            } else {\n+                if (segment != null) {\n+                    transcript.addSegment(segment);\n+                }\n+                segment = new TranscriptSegment(timings.start, timings.end, payload, speaker);\n+            }\n+\n+            // do we have a candidate segment long enough to add it without trying to add more\n+            if (segment.getEndTime() - segment.getStartTime() >= TranscriptParser.MIN_SPAN) {\n+                transcript.addSegment(segment);\n+                segment = null;\n+            }\n+        }\n+\n+        if (segment != null) {\n+            transcript.addSegment(segment);\n+        }\n+\n+        if (transcript.getSegmentCount() == 0) {\n+            return null;\n+        }\n+        transcript.setSpeakers(speakers);\n+        return transcript;\n+    }\n+\n+    private static long parseIntOrNull(@Nullable String s) {\n+        return StringUtils.isEmpty(s) ? 0 : Integer.parseInt(s);\n+    }\n+\n+    private static long parseTimestamp(@NonNull String timestamp) {\n+        Matcher matcher = TIMESTAMP_PATTERN.matcher(timestamp);\n+        if (!matcher.matches()) {\n+            return -1;\n+        }\n+        long hours = parseIntOrNull(matcher.group(1));\n+        long minutes = parseIntOrNull(matcher.group(2));\n+        long seconds = parseIntOrNull(matcher.group(3));\n+        long milliseconds = parseIntOrNull(matcher.group(4));\n+        return (hours * 60 * 60 * 1000) + (minutes * 60 * 1000) + (seconds * 1000) + milliseconds;\n+    }\n+\n+    @Nullable\n+    private static Timings parseCueTimings(@NonNull String line) {\n+        String[] timestamps = line.split(\"-->\");\n+        if (timestamps.length < 2) {\n+            return null;\n+        }\n+        long start = parseTimestamp(timestamps[0].trim());\n+        long end = parseTimestamp(timestamps[1].trim().split(\"[ \\\\t]\")[0]);\n+        if (start == -1 || end == -1) {\n+            return null;\n+        }\n+        return new Timings(start, end);\n+    }\n+\n+    @NonNull\n+    private static String parseCuePayload(@NonNull Iterator<String> iterator) {\n+        StringBuilder body = new StringBuilder();\n+        while (iterator.hasNext()) {\n+            String line = iterator.next();\n+            if (line.isEmpty()) {\n+                break;\n+            }\n+            body.append(line.strip());\n+            body.append(\" \");\n+        }\n+        return body.toString().strip();\n+    }\n+\n+}\n", "test_patch": "diff --git a/parser/transcript/src/test/java/de/danoeh/antennapod/parser/transcript/VttTranscriptParserTest.java b/parser/transcript/src/test/java/de/danoeh/antennapod/parser/transcript/VttTranscriptParserTest.java\nnew file mode 100644\nindex 00000000000..ed9a506e330\n--- /dev/null\n+++ b/parser/transcript/src/test/java/de/danoeh/antennapod/parser/transcript/VttTranscriptParserTest.java\n@@ -0,0 +1,172 @@\n+package de.danoeh.antennapod.parser.transcript;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.robolectric.RobolectricTestRunner;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n+import de.danoeh.antennapod.model.feed.Transcript;\n+\n+@RunWith(RobolectricTestRunner.class)\n+public class VttTranscriptParserTest {\n+\n+    private static String vttStrSimple = \"\"\"\n+        WEBVTT\n+\n+        00:00.000 --> 00:02.000\n+        Intro without speaker\n+\n+        00:00:02.000 --> 00:03.000\n+        Still no speaker\n+\n+        00:03.389 --> 00:00:09.000\n+        <v Speaker 1>This is the first speaker.\n+\n+        00:09.150 --> 00:12.123\n+        Let's assume it's still the first speaker.\n+\n+        00:13.000 --> 00:15.000\n+        <v Speaker 2>And this is the second.\n+\n+        00:15.000 --> 00:16.000\n+        <v Speaker 2>Still talking.\n+\n+        00:16.000 --> 00:18.000\n+        <v Speaker 2>Still same line.\n+\n+        00:18.000 --> 00:19.000\n+        <v Speaker 2>New line.\n+\n+        00:22.000 --> 00:26.500\n+        <v Speaker 2> Too long to collapse with previous.\n+\n+        00:36.000 --> 00:38.000\n+        <v Speaker 1>And again.\n+        Je suis speaker 1.\n+\n+        01:00:00.000 --> 01:00:01.000\n+        <v Speaker 1>Still talking after one hour.\"\"\";\n+\n+    // This is the same content as above, but with lots more WEBVTT features\n+    private static String vttStrComplex = \"\"\"\n+        WEBVTT\n+\n+        NOTE This is a note\n+\n+        00:00.000 --> 00:02.000\n+        Intro without speaker\n+\n+        00:00:02.000 --> 00:03.000\n+        Still no speaker\n+\n+        NOTE Here is an other note\n+\n+        First block with a speaker\n+        00:03.389 --> 00:00:09.000\n+        <v.first Speaker 1>This is the first speaker.\n+\n+        00:09.150 --> 00:12.123\n+        Let's assume it's still the first speaker.\n+\n+        00:13.000 --> 00:15.000\\tposition:90% align:right size:35%\n+        <v.second.loud Speaker 2>And this is the second.</v>\n+\n+        00:15.000 --> 00:16.000 position:10%,line-left align:left size:35%\n+        <v Speaker 2>Still talking.\n+\n+        00:16.000 --> 00:18.000\n+        <v Speaker 2>Still same line.\n+\n+        00:18.000 --> 00:19.000\n+        <v Speaker 2>New line.\n+\n+        00:22.000 --> 00:26.500\n+        <v Speaker 2> Too long to collapse with previous.\n+\n+        00:36.000 --> 00:38.000\n+        <v Speaker 1>And again.\n+        <i.foreignphrase><lang fr>Je suis</lang></i> speaker 1.\n+\n+        After one hour\n+        01:00:00.000 --> 01:00:01.000\n+        <v Speaker 1>Still talking after one hour.\"\"\";\n+\n+    private void checkResults(Transcript result) {\n+        assertEquals(\"Intro without speaker Still no speaker\", result.getSegmentAtTime(0L).getWords());\n+        assertEquals(\"\", result.getSegmentAtTime(0L).getSpeaker());\n+        assertEquals(3000L, result.getSegmentAtTime(0L).getEndTime());\n+\n+        assertEquals(\"This is the first speaker.\", result.getSegmentAtTime(3389L).getWords());\n+        assertEquals(\"Speaker 1\", result.getSegmentAtTime(3389L).getSpeaker());\n+        assertEquals(9000L, result.getSegmentAtTime(3389L).getEndTime());\n+\n+        assertEquals(\"Let's assume it's still the first speaker.\", result.getSegmentAtTime(9150L).getWords());\n+        assertEquals(\"Speaker 1\", result.getSegmentAtTime(9150L).getSpeaker());\n+        assertEquals(12123L, result.getSegmentAtTime(9150L).getEndTime());\n+\n+        assertEquals(\"And this is the second. Still talking. Still same line.\",\n+                result.getSegmentAtTime(13000L).getWords());\n+        assertEquals(\"Speaker 2\", result.getSegmentAtTime(13000L).getSpeaker());\n+        assertEquals(18000L, result.getSegmentAtTime(13000L).getEndTime());\n+\n+        assertEquals(\"New line.\", result.getSegmentAtTime(18000L).getWords());\n+        assertEquals(\"Speaker 2\", result.getSegmentAtTime(18000L).getSpeaker());\n+        assertEquals(19000L, result.getSegmentAtTime(18000L).getEndTime());\n+\n+        assertEquals(\"Too long to collapse with previous.\", result.getSegmentAtTime(22000L).getWords());\n+        assertEquals(\"Speaker 2\", result.getSegmentAtTime(22000L).getSpeaker());\n+        assertEquals(26500L, result.getSegmentAtTime(22000L).getEndTime());\n+\n+        assertEquals(\"And again. Je suis speaker 1.\", result.getSegmentAtTime(36000L).getWords());\n+        assertEquals(\"Speaker 1\", result.getSegmentAtTime(36000L).getSpeaker());\n+        assertEquals(38000L, result.getSegmentAtTime(36000L).getEndTime());\n+\n+        assertEquals(\"Still talking after one hour.\", result.getSegmentAtTime(10000000L).getWords());\n+        assertEquals(\"Speaker 1\", result.getSegmentAtTime(3600000L).getSpeaker());\n+        assertEquals(3601000L, result.getSegmentAtTime(3600000L).getEndTime());\n+    }\n+\n+    @Test\n+    public void testParseVttSimple() {\n+        Transcript result = VttTranscriptParser.parse(vttStrSimple);\n+        checkResults(result);\n+    }\n+\n+    @Test\n+    public void testParseVttComplex() {\n+        Transcript result = VttTranscriptParser.parse(vttStrComplex);\n+        checkResults(result);\n+    }\n+\n+    @Test\n+    public void testParse() {\n+        String type = \"text/vtt\";\n+        Transcript result;\n+\n+        result = TranscriptParser.parse(vttStrSimple, type);\n+        // There isn't a segment at 800L, so go backwards and get the segment at 0L\n+        assertEquals(\"Intro without speaker Still no speaker\", result.getSegmentAtTime(800L).getWords());\n+\n+        result = TranscriptParser.parse(null, type);\n+        assertNull(result);\n+\n+        // blank string\n+        result = TranscriptParser.parse(\"\", type);\n+        assertNull(result);\n+\n+        // All empty lines\n+        result = TranscriptParser.parse(\"\\r\\n\\r\\n\\r\\n\\r\\n\", type);\n+        assertNull(result);\n+\n+        // Just plain text\n+        result = TranscriptParser.parse(\"<v Speaker 1> Just text\", type);\n+        assertNull(result);\n+\n+        // passing the wrong type\n+        result = TranscriptParser.parse(vttStrSimple, \"application/srr\");\n+        assertNull(result);\n+        result = TranscriptParser.parse(vttStrSimple, \"unknown\");\n+        assertNull(result);\n+    }\n+}\n+\n", "problem_statement": "Support WebVTT transcript format\n### Checklist\n\n- [X] I have used the search function for [**OPEN**](https://github.com/AntennaPod/AntennaPod/issues) issues to see if someone else has already submitted the same feature request.\n- [X] I have **also** used the search function for [**CLOSED**](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue+is%3Aclosed) issues to see if the feature was already implemented and is just waiting to be released, or if the feature was rejected.\n- [X] I will describe the problem with as much detail as possible.\n- [X] This request contains only one single feature, **not** a list of multiple (related) features.\n\n### App version\n\n3.5.0\n\n### Where did you get the app from\n\nGoogle Play\n\n### Feature or improvement you want\n\nWe currently support SRT, JSON transcript.   We should add support for WebVTT as well.  Detailed reasons why certain podcast hosts are only supporting WebVTT here https://github.com/jamescridland/podnews/issues/2\n\n### Why should this be added?\n\nWider support of transcript\n\n### Screenshots / Drawings / Technical details\n\n```\r\ncurl https://podnews.net/rss > ~/Downloads/podnews.rss\r\n```\r\n\r\n```\r\n<podcast:transcript url=\"https://podnews.net/audio/podnews240927.mp3.vtt\" type=\"text/vtt\" rel=\"captions\"/>\r\n```\r\n\r\n```\r\ncurl https://podnews.net/audio/podnews240926.mp3.vtt | less\r\n\r\nWEBVTT\r\n\r\n00:00:00.000 --> 00:00:05.900\r\n<v James Cridland>Paid New York Times podcasts go to Apple and Spotify - from the Pacific Island of Niue,\r\n\r\n00:00:05.900 --> 00:00:13.100\r\nthe latest from Podnews.net with Podpage: making SEO-optimized podcast websites.\r\n\r\n00:00:13.100 --> 00:00:16.900\r\n<v Sabrina Tavernise>From the New York Times, I'm Sabrina Tavernise, and this is The Daily.\r\n\r\n00:00:16.900 --> 00:00:21.640\r\n<v James Cridland>The New York Times is to make its premium paid podcasts available for New York Times subscribers\r\n\r\n```\n", "hints_text": ":)\r\n\r\nThis is a good VTT to show, in that it has the speaker identification in it.\nHello,\r\nThanks a lot for the work already done on transcripts!\r\n\r\nI\u2019d very much like to see VTT support happening, and to that end I volunteer to try and add the feature.\r\n\r\nBut I see that @tonytamsf you already assigned yourself to that feature. Are you already working on this, or should I start an implementation on my end?\n@Shaac go ahead and start working on it. I will assign to you\nGreat!\r\n\r\nSo I started working on it and here is my progress so far [(you can look at the current work here)](https://github.com/AntennaPod/AntennaPod/compare/develop...Shaac:AntennaPod:vtt?expand=1).\r\n\r\nI added a third supported transcript format and used the following preference if several are present: JSON > VTT > SRT. Previously it was JSON > SRT, I inserted VTT in the middle, that is what made the most sense to me, but I guess it could be anything.\r\n\r\nFor the parser, I mostly copy-pasted the SRT one, since VTT is very similar. The issue with VTT is that there a many tags, that can add italics, bold, or other metadata. There a basically 3 options of what we can do with those tags. For instance, if the text is `<b>Hello</b> <i>you</i>`, we can either:\r\n\r\n- do nothing (and the text shown on screen will be ugly: \u201c`<b>Hello</b> <i>you</i>`\u201d)\r\n- properly ignore them (\u201cHello you\u201d)\r\n- show them in the final text (\u201c**Hello** _you_\u201d)\r\n\r\nOf course the third is the best, but it is the most work. I don\u2019t know if there are many podcast that use them. Maybe for now the first option will be enough. What do you think?\r\n\r\nThe only tag that is often used is the one identifying the speaker. I parsed it, but only if it is at the beginning of the text (if not it would be complex for us, because we would not have the timestamp for the change of speaker). I did not handle the fact that the tag could be closed (`</v>`), because I\u2019m not sure people use it.\nOne big issue I encountered though, and it seems to be more of architecture problem on the existing codebase, is that my feature only works for new episodes. If the podcast is already loaded with a version of AntennaPod on the branch `develop`, using my branch without uninstalling the app with not work for those episodes already present in the local DB.\r\n\r\nI did not manage to understand how the feed DB works just yet, but somehow, if a new `podcastIndexTranscriptType` is set, it will be overridden with the previous value (`null`) before it has time to write the new value into the database. The result is that if an episode has no transcript initially (or not supported transcript), AntennaPod will never be able to change that state in the future!\nMy vote for formatting is to store all the tags as is and strip it when we display (when you return the string/text)\n\nMaybe add a function to return the raw text for future use \n\n\n> So I started working on it and here is my progress so far\r\n\r\nNice! Could you please open a PR? That makes it easier to discuss the code by commenting on it.\r\n\r\n> For the parser, I mostly copy-pasted the SRT one\r\n\r\nAny chance for re-using parts of the code instead of copy-pasting? That ensures that in case we find a bug in one of them in the future, we cannot forget to apply the fix to the other one as well.\r\n\r\n> My vote for formatting is to store all the tags as is\r\n\r\nShowing the formatting should be quite easy: `textView.setText(Html.fromHtml(xy))`. What could be difficult is to make sure that the re-formatting step we do while displaying does not make the html invalid. Because of that, I think it might be easier to strip it already while parsing. Then one does not have to modify the re-formatting for now. I think we already have a function somewhere that strips the html of a feed's description.\r\n\r\n> my feature only works for new episodes\r\n\r\nDid you try force-refreshing? Swipe to refresh on the podcast screen performs a force-refresh even if the rss feed did not change (in contrast to refreshing on any other screen).\r\n\r\n> if a new podcastIndexTranscriptType is set, it will be overridden with the previous value\r\n\r\nHmm. If that's really the case, we should fix this :) But first please make sure to try force-refresh :)\nAll right, I wished I had time to work on this sooner, but I finally managed to find some. :smile: \r\n\r\n> Nice! Could you please open a PR? That makes it easier to discuss the code by commenting on it.\r\n\r\nDone\r\n\r\n> Any chance for re-using parts of the code instead of copy-pasting? That ensures that in case we find a bug in one of them in the future, we cannot forget to apply the fix to the other one as well.\r\n\r\nMy first reaction when reading this comment was \u201csure, of course, code duplication is awful; code should always be factorized\u201d. But then looking closely at the code I\u2019m not so sure. We\u2019re taking about parsing 2 different specs. Sure there are very close, but I\u2019ve seen in some other projects how factorizing parts of 2 slightly different, but still two independents things, can do more harm than wrong. Because then the code on both parts is complex, with lots of functions, and it becomes very hard to update one part without harming the other.\r\n\r\nThey are definitely some functions that should be factorize, like `parseTimecode`, which is the same for both. But apart from that, I\u2019m not so sure. Maybe it will be easier to make a decision when the feature is completed.\r\n\r\n> I think it might be easier to strip it already while parsing. Then one does not have to modify the re-formatting for now. I think we already have a function somewhere that strips the html of a feed's description.\r\n\r\nI found the `HtmlToPlainText` class in the codebase. But it\u2019s VTT spec here, it\u2019s not really HTML. I guess it should work because the tags look the same. I should probably write a test VTT file with all the features and either make a fake podcast with it or add some integration tests with it.\r\n\r\n> Did you try force-refreshing? Swipe to refresh on the podcast screen performs a force-refresh even if the rss feed did not change (in contrast to refreshing on any other screen).\r\n\r\nI think I tried it all. Going on the podcast view (with the list of episodes). Swiping down, or clicking on the 3 dots and hitting \u201crefresh\u201d. It will trigger a reprocessing of the data, but it fails with the following:\r\n- `FeedItem::setTranscriptUrl` is called, with the correct type (`text/vtt`) and URL\r\n- then for some reason `PodDBAdapter::updateOrInsertFeedItem` is called, but the type here is `null`\r\n- And then the `FeedItem` constructor used by DBReader will get called, with `transcriptType = null`\r\n\r\nI\u2019ve added some logs in my branch. It\u2019s easy to reproduce: without my branch, subscribe to podnews daily, launch an episode, there will be now transcript working (because it\u2019s VTT). Then checkout my branch, refresh and it still won\u2019t work. But clearing app data and starting over will.", "created_at": "2024-12-02T20:56:48Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 7215, "instance_id": "AntennaPod__AntennaPod-7215", "issue_numbers": ["7065"], "base_commit": "e2ff09bd344e4c53ef40381f533fe26914604492", "patch": "diff --git a/parser/media/src/main/java/de/danoeh/antennapod/parser/media/vorbis/VorbisCommentReader.java b/parser/media/src/main/java/de/danoeh/antennapod/parser/media/vorbis/VorbisCommentReader.java\nindex 7b907b969dc..607a6b1f174 100644\n--- a/parser/media/src/main/java/de/danoeh/antennapod/parser/media/vorbis/VorbisCommentReader.java\n+++ b/parser/media/src/main/java/de/danoeh/antennapod/parser/media/vorbis/VorbisCommentReader.java\n@@ -20,16 +20,14 @@ public abstract class VorbisCommentReader {\n     private static final int PACKET_TYPE_IDENTIFICATION = 1;\n     private static final int PACKET_TYPE_COMMENT = 3;\n \n-    private final InputStream input;\n+    private final VorbisInputStream input;\n \n     VorbisCommentReader(InputStream input) {\n-        this.input = input;\n+        this.input = new VorbisInputStream(input);\n     }\n \n     public void readInputStream() throws VorbisCommentReaderException {\n         try {\n-            findIdentificationHeader();\n-            findOggPage();\n             findCommentHeader();\n             VorbisCommentHeader commentHeader = readCommentHeader();\n             Log.d(TAG, commentHeader.toString());\n@@ -41,26 +39,6 @@ public void readInputStream() throws VorbisCommentReaderException {\n         }\n     }\n \n-    private void findOggPage() throws IOException {\n-        // find OggS\n-        byte[] buffer = new byte[4];\n-        final byte[] oggPageHeader = {'O', 'g', 'g', 'S'};\n-        for (int bytesRead = 0; bytesRead < SECOND_PAGE_MAX_LENGTH; bytesRead++) {\n-            int data = input.read();\n-            if (data == -1) {\n-                throw new IOException(\"EOF while trying to find vorbis page\");\n-            }\n-            buffer[bytesRead % buffer.length] = (byte) data;\n-            if (bufferMatches(buffer, oggPageHeader, bytesRead)) {\n-                break;\n-            }\n-        }\n-        // read segments\n-        IOUtils.skipFully(input, 22);\n-        int numSegments = input.read();\n-        IOUtils.skipFully(input, numSegments);\n-    }\n-\n     private void readUserComment() throws VorbisCommentReaderException {\n         try {\n             long vectorLength = EndianUtils.readSwappedUnsignedInteger(input);\n@@ -90,25 +68,6 @@ private String readUtf8String(long length) throws IOException {\n         return charset.newDecoder().decode(ByteBuffer.wrap(buffer)).toString();\n     }\n \n-    /**\n-     * Looks for an identification header in the first page of the file. If an\n-     * identification header is found, it will be skipped completely\n-     */\n-    private void findIdentificationHeader() throws IOException {\n-        byte[] buffer = new byte[FIRST_OPUS_PAGE_LENGTH];\n-        IOUtils.readFully(input, buffer);\n-        final byte[] oggIdentificationHeader = new byte[]{ PACKET_TYPE_IDENTIFICATION, 'v', 'o', 'r', 'b', 'i', 's' };\n-        for (int i = 6; i < buffer.length; i++) {\n-            if (bufferMatches(buffer, oggIdentificationHeader, i)) {\n-                IOUtils.skip(input, FIRST_OGG_PAGE_LENGTH - FIRST_OPUS_PAGE_LENGTH);\n-                return;\n-            } else if (bufferMatches(buffer, \"OpusHead\".getBytes(), i)) {\n-                return;\n-            }\n-        }\n-        throw new IOException(\"No vorbis identification header found\");\n-    }\n-\n     private void findCommentHeader() throws IOException {\n         byte[] buffer = new byte[64]; // Enough space for some bytes. Used circularly.\n         final byte[] oggCommentHeader = new byte[]{ PACKET_TYPE_COMMENT, 'v', 'o', 'r', 'b', 'i', 's' };\ndiff --git a/parser/media/src/main/java/de/danoeh/antennapod/parser/media/vorbis/VorbisInputStream.java b/parser/media/src/main/java/de/danoeh/antennapod/parser/media/vorbis/VorbisInputStream.java\nnew file mode 100644\nindex 00000000000..802813ab9a9\n--- /dev/null\n+++ b/parser/media/src/main/java/de/danoeh/antennapod/parser/media/vorbis/VorbisInputStream.java\n@@ -0,0 +1,69 @@\n+package de.danoeh.antennapod.parser.media.vorbis;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+import java.io.BufferedInputStream;\n+import java.io.FilterInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.Arrays;\n+\n+\n+public class VorbisInputStream extends FilterInputStream {\n+    private static final byte[] CAPTURE_PATTERN = {'O', 'g', 'g', 'S'};\n+    private static final int HEADER_SKIP_LENGTH = 1 + 1 + 8 + 4 + 4 + 4;\n+\n+    private final BufferedInputStream inputStream;\n+    private int pageRemainBytes = 0;\n+\n+    protected VorbisInputStream(InputStream in) {\n+        super(in);\n+        inputStream = new BufferedInputStream(in);\n+    }\n+\n+    private int parsePageHeader(InputStream in) throws IOException {\n+        byte[] capturePattern = new byte[4];\n+\n+        IOUtils.readFully(in, capturePattern, 0, 4);\n+        if (!Arrays.equals(CAPTURE_PATTERN, capturePattern)) {\n+            throw new IOException(\"Invalid page header\");\n+        }\n+\n+        IOUtils.skipFully(in, HEADER_SKIP_LENGTH);\n+\n+        int pageSegments = in.read();\n+        byte[] segmentTable = new byte[pageSegments];\n+        int pageLength = 0;\n+        IOUtils.readFully(in, segmentTable);\n+        for (byte segment:segmentTable) {\n+            pageLength += (segment & 0xff);\n+        }\n+\n+        return pageLength;\n+    }\n+\n+    /** check and update remaining bytes **/\n+    private void updateRemainBytes() throws IOException {\n+        if (pageRemainBytes == 0) {\n+            pageRemainBytes = parsePageHeader(inputStream);\n+        } else if (pageRemainBytes < 0) {\n+            throw new IOException(\"Page remain bytes less than 0\");\n+        }\n+    }\n+\n+    @Override\n+    public int read() throws IOException {\n+        updateRemainBytes();\n+        pageRemainBytes--;\n+        return inputStream.read();\n+    }\n+\n+    @Override\n+    public int read(byte[] b, int off, int len) throws IOException {\n+        updateRemainBytes();\n+        int bytesToRead = Math.min(len, pageRemainBytes);\n+        IOUtils.readFully(inputStream, b, off, bytesToRead);\n+        this.pageRemainBytes -= bytesToRead;\n+        return bytesToRead;\n+    }\n+}\n", "test_patch": "diff --git a/parser/media/src/test/java/de/danoeh/antennapod/parser/media/vorbis/VorbisCommentMetadataReaderTest.java b/parser/media/src/test/java/de/danoeh/antennapod/parser/media/vorbis/VorbisCommentMetadataReaderTest.java\nindex 7f71c8fa927..6dab507a3ef 100644\n--- a/parser/media/src/test/java/de/danoeh/antennapod/parser/media/vorbis/VorbisCommentMetadataReaderTest.java\n+++ b/parser/media/src/test/java/de/danoeh/antennapod/parser/media/vorbis/VorbisCommentMetadataReaderTest.java\n@@ -16,6 +16,7 @@ public class VorbisCommentMetadataReaderTest {\n     public void testRealFilesAuphonic() throws IOException, VorbisCommentReaderException {\n         testRealFileAuphonic(\"auphonic.ogg\");\n         testRealFileAuphonic(\"auphonic.opus\");\n+        testRealFileAuphonic(\"opus-comment.opus\");\n     }\n \n     public void testRealFileAuphonic(String filename) throws IOException, VorbisCommentReaderException {\ndiff --git a/parser/media/src/test/resources/opus-comment.opus b/parser/media/src/test/resources/opus-comment.opus\nnew file mode 100644\nindex 00000000000..d636f2be684\nBinary files /dev/null and b/parser/media/src/test/resources/opus-comment.opus differ\n", "problem_statement": "Failed to parse vorbis comment spanning pages\n### Checklist\n\n- [X] I have used the search function for [**OPEN**](https://github.com/AntennaPod/AntennaPod/issues) issues to see if someone else has already submitted the same bug report.\n- [X] I have **also** used the search function for [**CLOSED**](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue+is%3Aclosed) issues to see if the problem is already solved and just waiting to be released.\n- [X] I will describe the problem with as much detail as possible.\n- [X] If the bug only to occurs with a certain podcast, I will include the URL of that podcast.\n\n### App version\n\n3.3.2\n\n### Where did you get the app from\n\nGoogle Play\n\n### Android version\n\n14\n\n### Device model\n\n_No response_\n\n### First occurred\n\n_No response_\n\n### Steps to reproduce\n\n1. Prepare a mp3 file with embedded cover and `comment` ID3 tag\r\n2. Convert to opus: `ffmpeg -i file.mp3 -f flac - | opusenc - file.opus`\r\n3. Confirm `comment` tag exists in converted file\r\n```sh\r\n\u279c opusinfo file.opus\r\nProcessing file \"file.opus\"...\r\n\r\nNew logical stream (#1, serial: 4d363549): type opus\r\nEncoded with libopus 1.5.1, libopusenc 0.2.1\r\nUser comments section follows...\r\n\tENCODER=opusenc from opus-tools 0.2\r\n\tMETADATA_BLOCK_PICTURE=3|image/png||880x880x32|<346606 bytes of image data>\r\n\tcomment=Summary\r\n```\r\n4. Put file.opus into local folder\r\n5. Refresh\n\n### Expected behaviour\n\nComment \"Summary\" displayed in shownotes.\n\n### Current behaviour\n\nShownotes not showing up. And log reports `User comment unrealistically long. key=jKd2/zT71n, length=2004374095`.\r\n\r\nAfter digging into code and file content, I guess that's because  `VorbisCommentReader` expect that all comments fit within a single page. But the embedded cover `METADATA_BLOCK_PICTURE` was too big so it's divided into n pages. In result, `readUserComment()` failed to skip whole `METADATA_BLOCK_PICTURE` segment. Thus next time, `readUserComment()` will read from somewhere within `METADATA_BLOCK_PICTURE` rather than beginning of next field.\n\n### Logs\n\n```\r\n04-06 19:51:50.236 17733 21131 D LocalFeedUpdater: Unable to parse ID3 of content://com.android.externalstorage.documents/tree/primary%3AMusic%2F%E6%82%84%E6%82%84%E8%AF%9D/document/primary%3AMusic%2F%E6%82%84%E6%82%84%E8%AF%9D%2Ffile.opus: Expected I and got O\r\n04-06 19:51:50.240 17733 21131 D VorbisCommentReader: VorbisCommentHeader [vendorString=libopus 1.5.1, libopusenc 0.2.1, userCommentLength=3]\r\n04-06 19:51:50.240 17733 21131 D VorbisCommentReader: key=encoder, length=35, handles=false\r\n04-06 19:51:50.240 17733 21131 D VorbisCommentReader: key=metadata_block_picture, length=462219, handles=false\r\n04-06 19:51:50.240 17733 21131 D LocalFeedUpdater: Unable to parse vorbis comments of content://com.android.externalstorage.documents/tree/primary%3AMusic%2F%E6%82%84%E6%82%84%E8%AF%9D/document/primary%3AMusic%2F%E6%82%84%E6%82%84%E8%AF%9D%2Ffile.opus: User comment unrealistically long. key=jKd2/zT71n, length=2004374095\r\n```\n", "hints_text": "Could you please upload an example file (in the best case both the original mp3 and the converted opus file)?\nHere is is, both mp3 and opus file are included.\r\n[example.zip](https://github.com/AntennaPod/AntennaPod/files/14897123/example.zip)\nThanks for the files!\r\n\r\nI think we had that with other files as well, where AntennaPod thinks that the comment is over but it is actually in the middle of the image. I didn't know about ogg pages (or that the comments can span over multiple pages). As you say, it must be because the image overlaps a page border.\r\n\r\nGiven your comment, it looks like you have researched quite a bit before writing this issue. This means you likely know more about the file format than I do. Would you be interested in writing a PR that fixes this? If not, I'm not sure how soon I (or anyone else) would start working on this, given that there are so many other open issues.\r\n\r\nMaybe a solution would be to write a custom `Stream` subclass that basically \"unpacks\" the pages on the fly. So it would basically parse and skip the page headers and just leave the actual page content to the caller. Then we can feed that stream into our existing Vorbis comment reader.\r\n\r\nSome links (mainly for myself, so I can find them again):\r\nhttps://datatracker.ietf.org/doc/html/rfc7845#section-5.2\r\nhttps://github.com/xiph/opus-tools/blob/master/src/info_opus.c\nYes, I'm willing to write a PR. However, this may take some time, considering that I haven't written Android code for a while.\nFor development, it might help adding your test file as a unit test here: https://github.com/AntennaPod/AntennaPod/blob/develop/parser/media/src/test/java/de/danoeh/antennapod/parser/media/vorbis/VorbisCommentMetadataReaderTest.java Then the development can all be done using the test, no need to run the full app on an Android device or any manual testing.\r\n\r\nSecond advantage: Then we have a regression test :)\r\n\r\nLet me know if there is anything I can help you with when setting up the project\nThanks for the advice! \r\nEverything is going smoothly so far.  I will let you know if I need any further assistance.", "created_at": "2024-05-31T15:12:20Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 7192, "instance_id": "AntennaPod__AntennaPod-7192", "issue_numbers": ["7188"], "base_commit": "5f5d744e71a920585609f46024d2ce6642266852", "patch": "diff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\nindex 19660fb77d2..15debd02933 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\n@@ -693,7 +693,7 @@ public void setFeedItemRead(FeedItem item, int played, boolean resetMediaPositio\n             db.update(TABLE_NAME_FEED_ITEMS, values, KEY_ID + \"=?\", new String[]{String.valueOf(item.getId())});\n             item.setPlayed(played == FeedItem.PLAYED);\n \n-            if (resetMediaPosition) {\n+            if (resetMediaPosition && item.hasMedia()) {\n                 values.clear();\n                 values.put(KEY_POSITION, 0);\n                 db.update(TABLE_NAME_FEED_MEDIA, values, KEY_ID + \"=?\",\n", "test_patch": "diff --git a/app/src/androidTest/java/de/test/antennapod/EspressoTestUtils.java b/app/src/androidTest/java/de/test/antennapod/EspressoTestUtils.java\nindex c52df7f3e1d..a661eaffb92 100644\n--- a/app/src/androidTest/java/de/test/antennapod/EspressoTestUtils.java\n+++ b/app/src/androidTest/java/de/test/antennapod/EspressoTestUtils.java\n@@ -36,6 +36,7 @@\n \n import static androidx.test.espresso.Espresso.onView;\n import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.assertion.ViewAssertions.doesNotExist;\n import static androidx.test.espresso.assertion.ViewAssertions.matches;\n import static androidx.test.espresso.matcher.ViewMatchers.hasDescendant;\n import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;\n@@ -44,6 +45,7 @@\n import static androidx.test.espresso.matcher.ViewMatchers.withId;\n import static androidx.test.espresso.matcher.ViewMatchers.withText;\n import static org.hamcrest.Matchers.allOf;\n+import static org.hamcrest.Matchers.not;\n \n public class EspressoTestUtils {\n     /**\n@@ -143,6 +145,21 @@ public void perform(UiController uiController, View view) {\n         };\n     }\n \n+    public static void waitForViewToDisappear(Matcher<? super View> matcher, long maxWaitingTimeMs) {\n+        long endTime = System.currentTimeMillis() + maxWaitingTimeMs;\n+        while (System.currentTimeMillis() <= endTime) {\n+            try {\n+                onView(allOf(matcher, isDisplayed())).check(matches(not(doesNotExist())));\n+                Thread.sleep(100);\n+            } catch (NoMatchingViewException ex) {\n+                return; // view has disappeared\n+            } catch (InterruptedException e) {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+        throw new RuntimeException(\"timeout exceeded\"); // or whatever exception you want\n+    }\n+    \n     /**\n      * Clear all app databases.\n      */\ndiff --git a/app/src/androidTest/java/de/test/antennapod/ui/TextOnlyFeedsTest.java b/app/src/androidTest/java/de/test/antennapod/ui/TextOnlyFeedsTest.java\nindex 69a8f98ce55..5f7e8e95910 100644\n--- a/app/src/androidTest/java/de/test/antennapod/ui/TextOnlyFeedsTest.java\n+++ b/app/src/androidTest/java/de/test/antennapod/ui/TextOnlyFeedsTest.java\n@@ -27,7 +27,6 @@\n import static de.test.antennapod.EspressoTestUtils.openNavDrawer;\n import static de.test.antennapod.EspressoTestUtils.waitForView;\n import static org.hamcrest.CoreMatchers.allOf;\n-import static org.hamcrest.CoreMatchers.not;\n \n /**\n  * Test UI for feeds that do not have media files\n@@ -67,7 +66,7 @@ public void testMarkAsPlayedList() throws Exception {\n         onView(withText(feed.getItemAtIndex(0).getTitle())).perform(click());\n         onView(isRoot()).perform(waitForView(withText(R.string.mark_read_no_media_label), 3000));\n         onView(allOf(withText(R.string.mark_read_no_media_label), isDisplayed())).perform(click());\n-        onView(isRoot()).perform(waitForView(allOf(withText(R.string.mark_read_no_media_label), not(isDisplayed())), 3000));\n+        EspressoTestUtils.waitForViewToDisappear(withText(R.string.mark_read_no_media_label), 3000);\n     }\n \n }\n", "problem_statement": "Can't mark feed items as read if the feed item doesn't have audio file on it\n### Checklist\n\n- [X] I have used the search function for [**OPEN**](https://github.com/AntennaPod/AntennaPod/issues) issues to see if someone else has already submitted the same bug report.\n- [X] I have **also** used the search function for [**CLOSED**](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue+is%3Aclosed) issues to see if the problem is already solved and just waiting to be released.\n- [X] I will describe the problem with as much detail as possible.\n- [X] If the bug only to occurs with a certain podcast, I will include the URL of that podcast.\n\n### App version\n\n3.4.0\n\n### Where did you get the app from\n\nGoogle Play\n\n### Android version\n\n12\n\n### Device model\n\nDoogee V30T\n\n### First occurred\n\nFew minutes ago, it was working, then updated AntennaPod on PlayStore to latest version and that feature stopped working\n\n### Steps to reproduce\n\nhttps://remix.kwed.org/rss.xml\r\nFeed items don't have audio file associated to them\r\nTry mark feed item as Read\n\n### Expected behaviour\n\nFeed item should become read\n\n### Current behaviour\n\nNothing happens if you press Mark as Read\r\nIf you press and hold here, it is offering \"Mark as Unread\" even though the item is already in Unread state\r\n![Screenshot_20240519-163952](https://github.com/AntennaPod/AntennaPod/assets/170247323/2efe7d31-5f4a-4ad3-a31b-222a23e87dc7)\r\n\r\nFunnily feed items that were marked as Read in previous AntennaPod version can now be marked as Unread, but they cannot be marked as Read on the current version again.\r\n\r\nFeeds which have audio files associated with them don't seem to be affected by this bug.\n\n### Logs\n\n_No response_\n", "hints_text": "I'm experiencing the same issue, only noticed today. \r\n\r\n**App version**\r\n3.4.0\r\n\r\n**Where did you get the app from**\r\nGoogle Play\r\n\r\n**Android version**\r\n14\r\n\r\n**Device model**\r\nSamsung Galaxy S23 Ultra", "created_at": "2024-05-20T20:23:45Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 7176, "instance_id": "AntennaPod__AntennaPod-7176", "issue_numbers": ["4376"], "base_commit": "94c5b8aea5180dacfa81e2e7aa91a861255d148b", "patch": "diff --git a/app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java b/app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java\nindex 15fa614a493..79ee013bfbb 100644\n--- a/app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java\n+++ b/app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java\n@@ -10,14 +10,19 @@\n import android.os.Bundle;\n import android.util.DisplayMetrics;\n import android.util.Log;\n+import android.view.Gravity;\n import android.view.KeyEvent;\n+import android.view.Menu;\n import android.view.MenuItem;\n import android.view.View;\n import android.view.ViewGroup;\n import android.widget.EditText;\n+import android.widget.RelativeLayout;\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n import androidx.appcompat.app.ActionBarDrawerToggle;\n+import androidx.appcompat.view.menu.MenuBuilder;\n+import androidx.appcompat.widget.ListPopupWindow;\n import androidx.core.graphics.Insets;\n import androidx.core.view.ViewCompat;\n import androidx.core.view.WindowCompat;\n@@ -32,48 +37,62 @@\n import androidx.work.WorkManager;\n import com.bumptech.glide.Glide;\n import com.google.android.material.appbar.MaterialToolbar;\n+import com.google.android.material.bottomnavigation.BottomNavigationView;\n import com.google.android.material.bottomsheet.BottomSheetBehavior;\n+import com.google.android.material.navigation.NavigationBarView;\n import com.google.android.material.snackbar.Snackbar;\n import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.net.download.service.feed.FeedUpdateManagerImpl;\n-import de.danoeh.antennapod.net.download.serviceinterface.FeedUpdateManager;\n-import de.danoeh.antennapod.net.sync.serviceinterface.SynchronizationQueueSink;\n-import de.danoeh.antennapod.ui.appstartintent.MediaButtonStarter;\n-import de.danoeh.antennapod.ui.common.ThemeSwitcher;\n-import de.danoeh.antennapod.ui.screen.rating.RatingDialogManager;\n import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.event.FeedUpdateRunningEvent;\n import de.danoeh.antennapod.event.MessageEvent;\n-import de.danoeh.antennapod.ui.screen.AddFeedFragment;\n-import de.danoeh.antennapod.ui.screen.AllEpisodesFragment;\n-import de.danoeh.antennapod.ui.screen.playback.audio.AudioPlayerFragment;\n-import de.danoeh.antennapod.ui.screen.download.CompletedDownloadsFragment;\n-import de.danoeh.antennapod.ui.screen.download.DownloadLogFragment;\n-import de.danoeh.antennapod.ui.screen.feed.FeedItemlistFragment;\n-import de.danoeh.antennapod.ui.screen.InboxFragment;\n-import de.danoeh.antennapod.ui.screen.drawer.NavDrawerFragment;\n-import de.danoeh.antennapod.ui.screen.PlaybackHistoryFragment;\n-import de.danoeh.antennapod.ui.screen.queue.QueueFragment;\n-import de.danoeh.antennapod.ui.screen.SearchFragment;\n-import de.danoeh.antennapod.ui.screen.subscriptions.SubscriptionFragment;\n-import de.danoeh.antennapod.ui.TransitionEffect;\n import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.feed.FeedItemFilter;\n+import de.danoeh.antennapod.net.download.service.feed.FeedUpdateManagerImpl;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n+import de.danoeh.antennapod.net.download.serviceinterface.FeedUpdateManager;\n+import de.danoeh.antennapod.net.sync.serviceinterface.SynchronizationQueueSink;\n import de.danoeh.antennapod.playback.cast.CastEnabledActivity;\n+import de.danoeh.antennapod.storage.database.DBReader;\n import de.danoeh.antennapod.storage.importexport.AutomaticDatabaseExportWorker;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n+import de.danoeh.antennapod.ui.TransitionEffect;\n import de.danoeh.antennapod.ui.appstartintent.MainActivityStarter;\n+import de.danoeh.antennapod.ui.appstartintent.MediaButtonStarter;\n+import de.danoeh.antennapod.ui.common.ThemeSwitcher;\n import de.danoeh.antennapod.ui.common.ThemeUtils;\n import de.danoeh.antennapod.ui.discovery.DiscoveryFragment;\n+import de.danoeh.antennapod.ui.screen.AddFeedFragment;\n+import de.danoeh.antennapod.ui.screen.AllEpisodesFragment;\n+import de.danoeh.antennapod.ui.screen.InboxFragment;\n+import de.danoeh.antennapod.ui.screen.PlaybackHistoryFragment;\n+import de.danoeh.antennapod.ui.screen.SearchFragment;\n+import de.danoeh.antennapod.ui.screen.download.CompletedDownloadsFragment;\n+import de.danoeh.antennapod.ui.screen.download.DownloadLogFragment;\n+import de.danoeh.antennapod.ui.screen.drawer.BottomNavigationMoreAdapter;\n+import de.danoeh.antennapod.ui.screen.drawer.DrawerPreferencesDialog;\n+import de.danoeh.antennapod.ui.screen.drawer.NavDrawerFragment;\n+import de.danoeh.antennapod.ui.screen.drawer.NavListAdapter;\n+import de.danoeh.antennapod.ui.screen.drawer.NavigationNames;\n+import de.danoeh.antennapod.ui.screen.feed.FeedItemlistFragment;\n import de.danoeh.antennapod.ui.screen.home.HomeFragment;\n+import de.danoeh.antennapod.ui.screen.playback.audio.AudioPlayerFragment;\n+import de.danoeh.antennapod.ui.screen.preferences.PreferenceActivity;\n+import de.danoeh.antennapod.ui.screen.queue.QueueFragment;\n+import de.danoeh.antennapod.ui.screen.rating.RatingDialogManager;\n+import de.danoeh.antennapod.ui.screen.subscriptions.SubscriptionFragment;\n import de.danoeh.antennapod.ui.view.LockableBottomSheetBehavior;\n+import io.reactivex.Observable;\n+import io.reactivex.android.schedulers.AndroidSchedulers;\n+import io.reactivex.schedulers.Schedulers;\n import org.apache.commons.lang3.ArrayUtils;\n import org.apache.commons.lang3.Validate;\n import org.greenrobot.eventbus.EventBus;\n import org.greenrobot.eventbus.Subscribe;\n import org.greenrobot.eventbus.ThreadMode;\n \n+import java.util.ArrayList;\n import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n \n /**\n@@ -94,11 +113,12 @@ public class MainActivity extends CastEnabledActivity {\n \n     private @Nullable DrawerLayout drawerLayout;\n     private @Nullable ActionBarDrawerToggle drawerToggle;\n+    private BottomNavigationView bottomNavigationView;\n     private View navDrawer;\n     private LockableBottomSheetBehavior sheetBehavior;\n     private RecyclerView.RecycledViewPool recycledViewPool = new RecyclerView.RecycledViewPool();\n     private int lastTheme = 0;\n-    private Insets navigationBarInsets = Insets.NONE;\n+    private Insets systemBarInsets = Insets.NONE;\n \n     @NonNull\n     public static Intent getIntentToOpenFeed(@NonNull Context context, long feedId) {\n@@ -122,11 +142,24 @@ public void onCreate(Bundle savedInstanceState) {\n \n         drawerLayout = findViewById(R.id.drawer_layout);\n         navDrawer = findViewById(R.id.navDrawerFragment);\n-        setNavDrawerSize();\n+        bottomNavigationView = findViewById(R.id.bottomNavigationView);\n+        if (UserPreferences.isBottomNavigationEnabled()) {\n+            buildBottomNavigationMenu();\n+            if (drawerLayout == null) { // Tablet mode\n+                navDrawer.setVisibility(View.GONE);\n+            } else {\n+                drawerLayout.setDrawerLockMode(DrawerLayout.LOCK_MODE_LOCKED_CLOSED);\n+            }\n+            drawerLayout = null;\n+        } else {\n+            bottomNavigationView.setVisibility(View.GONE);\n+            bottomNavigationView = null;\n+            setNavDrawerSize();\n+        }\n \n         // Consume navigation bar insets - we apply them in setPlayerVisible()\n         ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main_view), (v, insets) -> {\n-            navigationBarInsets = insets.getInsets(WindowInsetsCompat.Type.navigationBars());\n+            systemBarInsets = insets.getInsets(WindowInsetsCompat.Type.systemBars());\n             updateInsets();\n             return new WindowInsetsCompat.Builder(insets)\n                     .setInsets(WindowInsetsCompat.Type.navigationBars(), Insets.NONE)\n@@ -320,28 +353,35 @@ public LockableBottomSheetBehavior getBottomSheet() {\n \n     private void updateInsets() {\n         setPlayerVisible(findViewById(R.id.audioplayerFragment).getVisibility() == View.VISIBLE);\n-        int playerHeight = (int) getResources().getDimension(R.dimen.external_player_height);\n-        sheetBehavior.setPeekHeight(playerHeight + navigationBarInsets.bottom);\n     }\n \n     public void setPlayerVisible(boolean visible) {\n         getBottomSheet().setLocked(!visible);\n+        findViewById(R.id.audioplayerFragment).setVisibility(visible ? View.VISIBLE : View.GONE);\n         if (visible) {\n             bottomSheetCallback.onStateChanged(null, getBottomSheet().getState()); // Update toolbar visibility\n         } else {\n             getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n         }\n-        FragmentContainerView mainView = findViewById(R.id.main_view);\n-        ViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) mainView.getLayoutParams();\n+        View bottomPaddingView = findViewById(R.id.bottom_padding);\n+        ViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) bottomPaddingView.getLayoutParams();\n+        params.height = systemBarInsets.bottom;\n+        bottomPaddingView.setLayoutParams(params);\n+\n         int externalPlayerHeight = (int) getResources().getDimension(R.dimen.external_player_height);\n-        params.setMargins(navigationBarInsets.left, 0, navigationBarInsets.right,\n-                navigationBarInsets.bottom + (visible ? externalPlayerHeight : 0));\n+        FragmentContainerView mainView = findViewById(R.id.main_content_view);\n+        params = (ViewGroup.MarginLayoutParams) mainView.getLayoutParams();\n+        params.setMargins(systemBarInsets.left, 0, systemBarInsets.right, (visible ? externalPlayerHeight : 0));\n         mainView.setLayoutParams(params);\n+        sheetBehavior.setPeekHeight(externalPlayerHeight);\n+        sheetBehavior.setGestureInsetBottomIgnored(true);\n+\n         FragmentContainerView playerView = findViewById(R.id.playerFragment);\n         ViewGroup.MarginLayoutParams playerParams = (ViewGroup.MarginLayoutParams) playerView.getLayoutParams();\n-        playerParams.setMargins(navigationBarInsets.left, 0, navigationBarInsets.right, 0);\n+        playerParams.setMargins(systemBarInsets.left, 0, systemBarInsets.right, 0);\n         playerView.setLayoutParams(playerParams);\n-        findViewById(R.id.audioplayerFragment).setVisibility(visible ? View.VISIBLE : View.GONE);\n+        RelativeLayout playerContent = findViewById(R.id.playerContent);\n+        playerContent.setPadding(systemBarInsets.left, systemBarInsets.top, systemBarInsets.right, 0);\n     }\n \n     public RecyclerView.RecycledViewPool getRecycledViewPool() {\n@@ -393,6 +433,15 @@ public Fragment createFragmentInstance(String tag, Bundle args) {\n \n     public void loadFragment(String tag, Bundle args) {\n         NavDrawerFragment.saveLastNavFragment(this, tag);\n+        if (bottomNavigationView != null) {\n+            int bottomSelectedItem = NavigationNames.getBottomNavigationItemId(tag);\n+            if (bottomNavigationView.getMenu().findItem(bottomSelectedItem) == null) {\n+                bottomSelectedItem = R.id.bottom_navigation_more;\n+            }\n+            bottomNavigationView.setOnItemSelectedListener(null);\n+            bottomNavigationView.setSelectedItemId(bottomSelectedItem);\n+            bottomNavigationView.setOnItemSelectedListener(bottomItemSelectedListener);\n+        }\n         loadFragment(createFragmentInstance(tag, args));\n     }\n \n@@ -412,7 +461,7 @@ public void loadFragment(Fragment fragment) {\n             fragmentManager.popBackStack();\n         }\n         FragmentTransaction t = fragmentManager.beginTransaction();\n-        t.replace(R.id.main_view, fragment, MAIN_FRAGMENT_TAG);\n+        t.replace(R.id.main_content_view, fragment, MAIN_FRAGMENT_TAG);\n         fragmentManager.popBackStack();\n         // TODO: we have to allow state loss here\n         // since this function can get called from an AsyncTask which\n@@ -443,7 +492,7 @@ public void loadChildFragment(Fragment fragment, TransitionEffect transition) {\n \n         transaction\n                 .hide(getSupportFragmentManager().findFragmentByTag(MAIN_FRAGMENT_TAG))\n-                .add(R.id.main_view, fragment, MAIN_FRAGMENT_TAG)\n+                .add(R.id.main_content_view, fragment, MAIN_FRAGMENT_TAG)\n                 .addToBackStack(null)\n                 .commit();\n     }\n@@ -452,6 +501,85 @@ public void loadChildFragment(Fragment fragment) {\n         loadChildFragment(fragment, TransitionEffect.NONE);\n     }\n \n+    private void buildBottomNavigationMenu() {\n+        List<String> drawerItems = UserPreferences.getVisibleDrawerItemOrder();\n+        drawerItems.remove(NavListAdapter.SUBSCRIPTION_LIST_TAG);\n+\n+        Menu menu = bottomNavigationView.getMenu();\n+        menu.clear();\n+        for (int i = 0; i < drawerItems.size() && i < bottomNavigationView.getMaxItemCount() - 1; i++) {\n+            String tag = drawerItems.get(i);\n+            MenuItem item = menu.add(0, NavigationNames.getBottomNavigationItemId(tag),\n+                    0, getString(NavigationNames.getLabel(tag)));\n+            item.setIcon(NavigationNames.getDrawable(tag));\n+        }\n+        MenuItem moreItem = menu.add(0, R.id.bottom_navigation_more, 0, getString(R.string.searchpreference_more));\n+        moreItem.setIcon(R.drawable.dots_vertical);\n+        bottomNavigationView.setOnItemSelectedListener(bottomItemSelectedListener);\n+\n+        if (bottomNavigationView.getMenu().findItem(R.id.bottom_navigation_inbox) != null) {\n+            Observable.fromCallable(() -> DBReader.getTotalEpisodeCount(new FeedItemFilter(FeedItemFilter.NEW)))\n+                    .subscribeOn(Schedulers.io())\n+                    .observeOn(AndroidSchedulers.mainThread())\n+                    .subscribe(result ->\n+                            bottomNavigationView.getOrCreateBadge(R.id.bottom_navigation_inbox).setNumber(result),\n+                        error -> Log.e(TAG, Log.getStackTraceString(error)));\n+        }\n+    }\n+\n+    private final NavigationBarView.OnItemSelectedListener bottomItemSelectedListener = item -> {\n+        sheetBehavior.setState(BottomSheetBehavior.STATE_COLLAPSED);\n+        if (item.getItemId() == R.id.bottom_navigation_more) {\n+            showBottomNavigationMorePopup();\n+            return false;\n+        } else {\n+            loadFragment(NavigationNames.getBottomNavigationFragmentTag(item.getItemId()), null);\n+            return true;\n+        }\n+    };\n+\n+    private void showBottomNavigationMorePopup() {\n+        List<String> drawerItems = UserPreferences.getVisibleDrawerItemOrder();\n+        drawerItems.remove(NavListAdapter.SUBSCRIPTION_LIST_TAG);\n+\n+        final List<MenuItem> popupMenuItems = new ArrayList<>();\n+        for (int i = bottomNavigationView.getMaxItemCount() - 1; i < drawerItems.size(); i++) {\n+            String tag = drawerItems.get(i);\n+            MenuItem item = new MenuBuilder(this).add(0, NavigationNames.getBottomNavigationItemId(tag),\n+                    0, getString(NavigationNames.getLabel(tag)));\n+            item.setIcon(NavigationNames.getDrawable(tag));\n+            popupMenuItems.add(item);\n+        }\n+        MenuItem customizeItem = new MenuBuilder(this).add(0, R.id.bottom_navigation_settings,\n+                0, getString(R.string.pref_nav_drawer_items_title));\n+        customizeItem.setIcon(R.drawable.ic_pencil);\n+        popupMenuItems.add(customizeItem);\n+\n+        MenuItem settingsItem = new MenuBuilder(this).add(0, R.id.bottom_navigation_settings,\n+                0, getString(R.string.settings_label));\n+        settingsItem.setIcon(R.drawable.ic_settings);\n+        popupMenuItems.add(settingsItem);\n+\n+        final ListPopupWindow listPopupWindow = new ListPopupWindow(this);\n+        listPopupWindow.setWidth((int) (250 * getResources().getDisplayMetrics().density));\n+        listPopupWindow.setAnchorView(bottomNavigationView);\n+        listPopupWindow.setAdapter(new BottomNavigationMoreAdapter(this, popupMenuItems));\n+        listPopupWindow.setOnItemClickListener((parent, view, position, id) -> {\n+            if (position == popupMenuItems.size() - 1) {\n+                startActivity(new Intent(this, PreferenceActivity.class));\n+            } else if (position == popupMenuItems.size() - 2) {\n+                new DrawerPreferencesDialog(this, this::buildBottomNavigationMenu).show();\n+            } else {\n+                loadFragment(NavigationNames.getBottomNavigationFragmentTag(\n+                        popupMenuItems.get(position).getItemId()), null);\n+            }\n+            listPopupWindow.dismiss();\n+        });\n+        listPopupWindow.setDropDownGravity(Gravity.END | Gravity.BOTTOM);\n+        listPopupWindow.setModal(true);\n+        listPopupWindow.show();\n+    }\n+\n     @Override\n     protected void onPostCreate(Bundle savedInstanceState) {\n         super.onPostCreate(savedInstanceState);\n@@ -507,7 +635,9 @@ protected void onResume() {\n         super.onResume();\n         handleNavIntent();\n \n-        if (lastTheme != ThemeSwitcher.getNoTitleTheme(this)) {\n+        boolean hasBottomNavigation = bottomNavigationView != null;\n+        if (lastTheme != ThemeSwitcher.getNoTitleTheme(this)\n+                || hasBottomNavigation != UserPreferences.isBottomNavigationEnabled()) {\n             finish();\n             startActivity(new Intent(this, MainActivity.class));\n         }\n@@ -566,7 +696,7 @@ public void onBackPressed() {\n             String toPage = UserPreferences.getDefaultPage();\n             if (NavDrawerFragment.getLastNavFragment(this).equals(toPage)\n                     || UserPreferences.DEFAULT_PAGE_REMEMBER.equals(toPage)) {\n-                if (UserPreferences.backButtonOpensDrawer() && drawerLayout != null) {\n+                if (UserPreferences.backButtonOpensDrawer() && drawerLayout != null && bottomNavigationView == null) {\n                     drawerLayout.openDrawer(navDrawer);\n                 } else {\n                     super.onBackPressed();\n@@ -644,7 +774,7 @@ protected void onNewIntent(Intent intent) {\n     public Snackbar showSnackbarAbovePlayer(CharSequence text, int duration) {\n         Snackbar s;\n         if (getBottomSheet().getState() == BottomSheetBehavior.STATE_COLLAPSED) {\n-            s = Snackbar.make(findViewById(R.id.main_view), text, duration);\n+            s = Snackbar.make(findViewById(R.id.main_content_view), text, duration);\n             if (findViewById(R.id.audioplayerFragment).getVisibility() == View.VISIBLE) {\n                 s.setAnchorView(findViewById(R.id.audioplayerFragment));\n             }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/HorizontalItemViewHolder.java b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/HorizontalItemViewHolder.java\nindex c297725b0b2..d6942fdbd89 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/HorizontalItemViewHolder.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/HorizontalItemViewHolder.java\n@@ -8,7 +8,6 @@\n import android.widget.TextView;\n import androidx.cardview.widget.CardView;\n import androidx.recyclerview.widget.RecyclerView;\n-import com.google.android.material.elevation.SurfaceColors;\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n import de.danoeh.antennapod.ui.CoverLoader;\n@@ -56,8 +55,7 @@ public void bind(FeedItem item) {\n         this.item = item;\n \n         card.setAlpha(1.0f);\n-        float density = activity.getResources().getDisplayMetrics().density;\n-        card.setCardBackgroundColor(SurfaceColors.getColorForElevation(activity, 1 * density));\n+        card.setCardBackgroundColor(ThemeUtils.getColorFromAttr(activity, R.attr.colorSurfaceContainer));\n         new CoverLoader()\n                 .withUri(ImageResourceUtils.getEpisodeListImageLocation(item))\n                 .withFallbackUri(item.getFeed().getImageUrl())\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/drawer/BottomNavigationMoreAdapter.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/drawer/BottomNavigationMoreAdapter.java\nnew file mode 100644\nindex 00000000000..f0553f0a981\n--- /dev/null\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/drawer/BottomNavigationMoreAdapter.java\n@@ -0,0 +1,35 @@\n+package de.danoeh.antennapod.ui.screen.drawer;\n+\n+import android.content.Context;\n+import android.view.MenuItem;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.ArrayAdapter;\n+import android.widget.ImageView;\n+import android.widget.TextView;\n+import de.danoeh.antennapod.R;\n+\n+import java.util.List;\n+\n+public class BottomNavigationMoreAdapter extends ArrayAdapter<MenuItem> {\n+    private final Context context;\n+    private final List<MenuItem> listItems;\n+\n+    public BottomNavigationMoreAdapter(Context context, List<MenuItem> listItems) {\n+        super(context, R.layout.bottom_navigation_more_listitem, listItems);\n+        this.context = context;\n+        this.listItems = listItems;\n+    }\n+\n+    @Override\n+    public View getView(int position, View view, ViewGroup parent) {\n+        if (view == null) {\n+            view = View.inflate(context, R.layout.bottom_navigation_more_listitem, null);\n+        }\n+\n+        MenuItem item = listItems.get(position);\n+        ((ImageView) view.findViewById(R.id.coverImage)).setImageDrawable(item.getIcon());\n+        ((TextView) view.findViewById(R.id.titleLabel)).setText(item.getTitle());\n+        return view;\n+    }\n+}\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/drawer/DrawerPreferencesDialog.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/drawer/DrawerPreferencesDialog.java\nindex 12bf673f63a..d738d8c8ccf 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/drawer/DrawerPreferencesDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/drawer/DrawerPreferencesDialog.java\n@@ -35,7 +35,7 @@ protected List<ReorderDialogItem> getInitialItems() {\n         final List<String> drawerItemOrder = UserPreferences.getVisibleDrawerItemOrder();\n         for (String tag : drawerItemOrder) {\n             settingsDialogItems.add(new ReorderDialogItem(ReorderDialogItem.ViewType.Section,\n-                    tag, context.getString(NavListAdapter.getLabel(tag))));\n+                    tag, context.getString(NavigationNames.getLabel(tag))));\n         }\n \n         settingsDialogItems.add(new ReorderDialogItem(ReorderDialogItem.ViewType.Header,\n@@ -44,7 +44,7 @@ protected List<ReorderDialogItem> getInitialItems() {\n         final List<String> hiddenDrawerItems = UserPreferences.getHiddenDrawerItems();\n         for (String sectionTag : hiddenDrawerItems) {\n             settingsDialogItems.add(new ReorderDialogItem(ReorderDialogItem.ViewType.Section,\n-                    sectionTag, context.getString(NavListAdapter.getLabel(sectionTag))));\n+                    sectionTag, context.getString(NavigationNames.getLabel(sectionTag))));\n         }\n         return settingsDialogItems;\n     }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/drawer/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/drawer/NavListAdapter.java\nindex a4ffb7566b2..7eaebcdc5a4 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/drawer/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/drawer/NavListAdapter.java\n@@ -14,7 +14,6 @@\n import android.widget.LinearLayout;\n import android.widget.RelativeLayout;\n import android.widget.TextView;\n-import androidx.annotation.DrawableRes;\n import androidx.annotation.NonNull;\n import androidx.annotation.StringRes;\n import androidx.preference.PreferenceManager;\n@@ -29,12 +28,8 @@\n import de.danoeh.antennapod.storage.database.NavDrawerData;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n import de.danoeh.antennapod.ui.common.ImagePlaceholder;\n-import de.danoeh.antennapod.ui.screen.AddFeedFragment;\n-import de.danoeh.antennapod.ui.screen.AllEpisodesFragment;\n import de.danoeh.antennapod.ui.screen.InboxFragment;\n-import de.danoeh.antennapod.ui.screen.PlaybackHistoryFragment;\n import de.danoeh.antennapod.ui.screen.download.CompletedDownloadsFragment;\n-import de.danoeh.antennapod.ui.screen.home.HomeFragment;\n import de.danoeh.antennapod.ui.screen.preferences.PreferenceActivity;\n import de.danoeh.antennapod.ui.screen.queue.QueueFragment;\n import de.danoeh.antennapod.ui.screen.subscriptions.SubscriptionFragment;\n@@ -100,54 +95,6 @@ private void loadItems() {\n         notifyDataSetChanged();\n     }\n \n-    public static @StringRes int getLabel(String tag) {\n-        switch (tag) {\n-            case HomeFragment.TAG:\n-                return R.string.home_label;\n-            case QueueFragment.TAG:\n-                return R.string.queue_label;\n-            case InboxFragment.TAG:\n-                return R.string.inbox_label;\n-            case AllEpisodesFragment.TAG:\n-                return R.string.episodes_label;\n-            case SubscriptionFragment.TAG:\n-                return R.string.subscriptions_label;\n-            case CompletedDownloadsFragment.TAG:\n-                return R.string.downloads_label;\n-            case PlaybackHistoryFragment.TAG:\n-                return R.string.playback_history_label;\n-            case AddFeedFragment.TAG:\n-                return R.string.add_feed_label;\n-            case NavListAdapter.SUBSCRIPTION_LIST_TAG:\n-                return R.string.subscriptions_list_label;\n-            default:\n-                return 0;\n-        }\n-    }\n-\n-    private static @DrawableRes int getDrawable(String tag) {\n-        switch (tag) {\n-            case HomeFragment.TAG:\n-                return R.drawable.ic_home;\n-            case QueueFragment.TAG:\n-                return R.drawable.ic_playlist_play;\n-            case InboxFragment.TAG:\n-                return R.drawable.ic_inbox;\n-            case AllEpisodesFragment.TAG:\n-                return R.drawable.ic_feed;\n-            case CompletedDownloadsFragment.TAG:\n-                return R.drawable.ic_download;\n-            case PlaybackHistoryFragment.TAG:\n-                return R.drawable.ic_history;\n-            case SubscriptionFragment.TAG:\n-                return R.drawable.ic_subscriptions;\n-            case AddFeedFragment.TAG:\n-                return R.drawable.ic_add;\n-            default:\n-                return 0;\n-        }\n-    }\n-\n     public List<String> getFragmentTags() {\n         return Collections.unmodifiableList(fragmentTags);\n     }\n@@ -207,7 +154,7 @@ public void onBindViewHolder(@NonNull Holder holder, int position) {\n \n         holder.itemView.setOnCreateContextMenuListener(null);\n         if (viewType == VIEW_TYPE_NAV) {\n-            bindNavView(getLabel(fragmentTags.get(position)), position, (NavHolder) holder);\n+            bindNavView(NavigationNames.getLabel(fragmentTags.get(position)), position, (NavHolder) holder);\n         } else if (viewType == VIEW_TYPE_SECTION_DIVIDER) {\n             bindSectionDivider((DividerHolder) holder);\n         } else {\n@@ -292,7 +239,7 @@ private void bindNavView(@StringRes int title, int position, NavHolder holder) {\n             }\n         }\n \n-        holder.image.setImageResource(getDrawable(fragmentTags.get(position)));\n+        holder.image.setImageResource(NavigationNames.getDrawable(fragmentTags.get(position)));\n     }\n \n     private void bindSectionDivider(DividerHolder holder) {\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/drawer/NavigationNames.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/drawer/NavigationNames.java\nnew file mode 100644\nindex 00000000000..18a2fbb6b42\n--- /dev/null\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/drawer/NavigationNames.java\n@@ -0,0 +1,106 @@\n+package de.danoeh.antennapod.ui.screen.drawer;\n+\n+import androidx.annotation.DrawableRes;\n+import androidx.annotation.StringRes;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.ui.screen.AddFeedFragment;\n+import de.danoeh.antennapod.ui.screen.AllEpisodesFragment;\n+import de.danoeh.antennapod.ui.screen.InboxFragment;\n+import de.danoeh.antennapod.ui.screen.PlaybackHistoryFragment;\n+import de.danoeh.antennapod.ui.screen.download.CompletedDownloadsFragment;\n+import de.danoeh.antennapod.ui.screen.home.HomeFragment;\n+import de.danoeh.antennapod.ui.screen.queue.QueueFragment;\n+import de.danoeh.antennapod.ui.screen.subscriptions.SubscriptionFragment;\n+\n+public abstract class NavigationNames {\n+    public static @DrawableRes int getDrawable(String tag) {\n+        switch (tag) {\n+            case HomeFragment.TAG:\n+                return R.drawable.ic_home;\n+            case QueueFragment.TAG:\n+                return R.drawable.ic_playlist_play;\n+            case InboxFragment.TAG:\n+                return R.drawable.ic_inbox;\n+            case AllEpisodesFragment.TAG:\n+                return R.drawable.ic_feed;\n+            case CompletedDownloadsFragment.TAG:\n+                return R.drawable.ic_download;\n+            case PlaybackHistoryFragment.TAG:\n+                return R.drawable.ic_history;\n+            case SubscriptionFragment.TAG:\n+                return R.drawable.ic_subscriptions;\n+            case AddFeedFragment.TAG:\n+                return R.drawable.ic_add;\n+            default:\n+                return 0;\n+        }\n+    }\n+\n+    public static @StringRes int getLabel(String tag) {\n+        switch (tag) {\n+            case HomeFragment.TAG:\n+                return R.string.home_label;\n+            case QueueFragment.TAG:\n+                return R.string.queue_label;\n+            case InboxFragment.TAG:\n+                return R.string.inbox_label;\n+            case AllEpisodesFragment.TAG:\n+                return R.string.episodes_label;\n+            case SubscriptionFragment.TAG:\n+                return R.string.subscriptions_label;\n+            case CompletedDownloadsFragment.TAG:\n+                return R.string.downloads_label;\n+            case PlaybackHistoryFragment.TAG:\n+                return R.string.playback_history_label;\n+            case AddFeedFragment.TAG:\n+                return R.string.add_feed_label;\n+            case NavListAdapter.SUBSCRIPTION_LIST_TAG:\n+                return R.string.subscriptions_list_label;\n+            default:\n+                return 0;\n+        }\n+    }\n+\n+    public static int getBottomNavigationItemId(String tag) {\n+        switch (tag) {\n+            case QueueFragment.TAG:\n+                return R.id.bottom_navigation_queue;\n+            case InboxFragment.TAG:\n+                return R.id.bottom_navigation_inbox;\n+            case AllEpisodesFragment.TAG:\n+                return R.id.bottom_navigation_episodes;\n+            case CompletedDownloadsFragment.TAG:\n+                return R.id.bottom_navigation_downloads;\n+            case PlaybackHistoryFragment.TAG:\n+                return R.id.bottom_navigation_history;\n+            case AddFeedFragment.TAG:\n+                return R.id.bottom_navigation_addfeed;\n+            case SubscriptionFragment.TAG:\n+                return R.id.bottom_navigation_subscriptions;\n+            case HomeFragment.TAG: // fall-through\n+            default:\n+                return R.id.bottom_navigation_home;\n+        }\n+    }\n+\n+    public static String getBottomNavigationFragmentTag(int id) {\n+        if (id == R.id.bottom_navigation_queue) {\n+            return QueueFragment.TAG;\n+        } else if (id == R.id.bottom_navigation_inbox) {\n+            return InboxFragment.TAG;\n+        } else if (id == R.id.bottom_navigation_episodes) {\n+            return AllEpisodesFragment.TAG;\n+        } else if (id == R.id.bottom_navigation_downloads) {\n+            return CompletedDownloadsFragment.TAG;\n+        } else if (id == R.id.bottom_navigation_history) {\n+            return PlaybackHistoryFragment.TAG;\n+        } else if (id == R.id.bottom_navigation_addfeed) {\n+            return AddFeedFragment.TAG;\n+        } else if (id == R.id.bottom_navigation_subscriptions) {\n+            return SubscriptionFragment.TAG;\n+        } else if (id == R.id.bottom_navigation_home) {\n+            return HomeFragment.TAG;\n+        }\n+        return null;\n+    }\n+}\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/AudioPlayerFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/AudioPlayerFragment.java\nindex 634f1ecfe3d..5b561bd305c 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/AudioPlayerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/AudioPlayerFragment.java\n@@ -23,7 +23,6 @@\n \n import com.google.android.material.appbar.MaterialToolbar;\n import com.google.android.material.bottomsheet.BottomSheetBehavior;\n-import com.google.android.material.elevation.SurfaceColors;\n \n import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.playback.service.PlaybackController;\n@@ -121,8 +120,6 @@ public View onCreateView(@NonNull LayoutInflater inflater,\n         getChildFragmentManager().beginTransaction()\n                 .replace(R.id.playerFragment, externalPlayerFragment, ExternalPlayerFragment.TAG)\n                 .commit();\n-        root.findViewById(R.id.playerFragment).setBackgroundColor(\n-                SurfaceColors.getColorForElevation(getContext(), 8 * getResources().getDisplayMetrics().density));\n \n         butPlaybackSpeed = root.findViewById(R.id.butPlaybackSpeed);\n         txtvPlaybackSpeed = root.findViewById(R.id.txtvPlaybackSpeed);\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/view/LiftOnScrollListener.java b/app/src/main/java/de/danoeh/antennapod/ui/view/LiftOnScrollListener.java\nindex e046dd43ec9..d328f77ed13 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/view/LiftOnScrollListener.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/view/LiftOnScrollListener.java\n@@ -6,6 +6,8 @@\n import androidx.core.widget.NestedScrollView;\n import androidx.recyclerview.widget.LinearLayoutManager;\n import androidx.recyclerview.widget.RecyclerView;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.ui.common.ThemeUtils;\n \n /**\n  * Workaround for app:liftOnScroll flickering when in SwipeRefreshLayout\n@@ -16,8 +18,9 @@ public class LiftOnScrollListener extends RecyclerView.OnScrollListener\n     private boolean animatingToScrolled = false;\n \n     public LiftOnScrollListener(View appBar) {\n-        animator = ValueAnimator.ofFloat(0, appBar.getContext().getResources().getDisplayMetrics().density * 8);\n-        animator.addUpdateListener(animation -> appBar.setElevation((float) animation.getAnimatedValue()));\n+        int colorLifted = ThemeUtils.getColorFromAttr(appBar.getContext(), R.attr.colorSurfaceContainer);\n+        animator = ValueAnimator.ofArgb(colorLifted & 0x00ffffff, colorLifted);\n+        animator.addUpdateListener(animation -> appBar.setBackgroundColor((int) animation.getAnimatedValue()));\n     }\n \n     @Override\ndiff --git a/app/src/main/res/layout-sw720dp/main.xml b/app/src/main/res/layout-sw720dp/main.xml\nindex e8edc260f57..a9984916ed7 100644\n--- a/app/src/main/res/layout-sw720dp/main.xml\n+++ b/app/src/main/res/layout-sw720dp/main.xml\n@@ -3,45 +3,66 @@\n     xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n     xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:id=\"@+id/main_view\"\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n-    android:orientation=\"horizontal\"\n+    android:orientation=\"vertical\"\n     tools:viewBindingIgnore=\"true\">\n \n-    <androidx.fragment.app.FragmentContainerView\n-        android:id=\"@+id/navDrawerFragment\"\n-        android:layout_width=\"300dp\"\n-        android:layout_height=\"match_parent\"\n-        android:layout_gravity=\"start\"\n-        android:orientation=\"vertical\" />\n-\n-    <View\n-        android:layout_width=\"1dp\"\n-        android:layout_height=\"match_parent\"\n-        android:background=\"?android:attr/listDivider\" />\n-\n-    <androidx.coordinatorlayout.widget.CoordinatorLayout\n-        android:id=\"@+id/overview_coordinator_layout\"\n+    <LinearLayout\n         android:layout_width=\"match_parent\"\n-        android:layout_height=\"match_parent\">\n+        android:layout_height=\"0dp\"\n+        android:orientation=\"horizontal\"\n+        android:layout_weight=\"1\">\n \n         <androidx.fragment.app.FragmentContainerView\n-            android:id=\"@+id/main_view\"\n-            android:layout_width=\"match_parent\"\n+            android:id=\"@+id/navDrawerFragment\"\n+            android:layout_width=\"300dp\"\n             android:layout_height=\"match_parent\"\n-            android:layout_alignParentTop=\"true\"\n-            android:foreground=\"?android:windowContentOverlay\"\n-            tools:background=\"@android:color/holo_red_dark\" />\n+            android:layout_gravity=\"start\"\n+            android:orientation=\"vertical\" />\n \n-        <androidx.fragment.app.FragmentContainerView\n-            android:id=\"@+id/audioplayerFragment\"\n-            android:layout_width=\"match_parent\"\n+        <View\n+            android:layout_width=\"1dp\"\n             android:layout_height=\"match_parent\"\n-            android:background=\"?android:attr/colorBackground\"\n-            android:elevation=\"8dp\"\n-            android:visibility=\"gone\"\n-            app:layout_behavior=\"de.danoeh.antennapod.ui.view.LockableBottomSheetBehavior\" />\n+            android:background=\"?android:attr/listDivider\" />\n+\n+        <androidx.coordinatorlayout.widget.CoordinatorLayout\n+            android:id=\"@+id/overview_coordinator_layout\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"match_parent\">\n \n-    </androidx.coordinatorlayout.widget.CoordinatorLayout>\n+            <androidx.fragment.app.FragmentContainerView\n+                android:id=\"@+id/main_content_view\"\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"match_parent\"\n+                android:layout_alignParentTop=\"true\"\n+                android:foreground=\"?android:windowContentOverlay\"\n+                tools:background=\"@android:color/holo_red_dark\" />\n+\n+            <androidx.fragment.app.FragmentContainerView\n+                android:id=\"@+id/audioplayerFragment\"\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"match_parent\"\n+                android:background=\"?android:attr/colorBackground\"\n+                android:elevation=\"8dp\"\n+                android:visibility=\"gone\"\n+                app:layout_behavior=\"de.danoeh.antennapod.ui.view.LockableBottomSheetBehavior\" />\n+\n+        </androidx.coordinatorlayout.widget.CoordinatorLayout>\n+\n+    </LinearLayout>\n+\n+    <com.google.android.material.bottomnavigation.BottomNavigationView\n+        android:id=\"@+id/bottomNavigationView\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        app:labelVisibilityMode=\"labeled\" />\n+\n+    <View\n+        android:id=\"@+id/bottom_padding\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"0dp\"\n+        android:background=\"?attr/colorSurfaceContainer\" />\n \n </LinearLayout>\ndiff --git a/app/src/main/res/layout/addfeed.xml b/app/src/main/res/layout/addfeed.xml\nindex bc42aba0534..15e44f2f9cf 100644\n--- a/app/src/main/res/layout/addfeed.xml\n+++ b/app/src/main/res/layout/addfeed.xml\n@@ -41,6 +41,7 @@\n                 android:layout_width=\"match_parent\"\n                 android:layout_height=\"56dp\"\n                 android:layout_marginTop=\"8dp\"\n+                android:layout_marginBottom=\"8dp\"\n                 app:cardCornerRadius=\"28dp\"\n                 app:cardElevation=\"0dp\">\n \n@@ -49,7 +50,7 @@\n                     android:layout_width=\"match_parent\"\n                     android:layout_height=\"wrap_content\"\n                     android:orientation=\"horizontal\"\n-                    android:background=\"?attr/colorPrimaryContainer\">\n+                    android:background=\"?attr/colorSurfaceContainer\">\n \n                     <ImageView\n                         android:id=\"@+id/searchButton\"\ndiff --git a/app/src/main/res/layout/audioplayer_fragment.xml b/app/src/main/res/layout/audioplayer_fragment.xml\nindex db109bbd38e..3c52daa944b 100644\n--- a/app/src/main/res/layout/audioplayer_fragment.xml\n+++ b/app/src/main/res/layout/audioplayer_fragment.xml\n@@ -13,12 +13,13 @@\n         android:layout_gravity=\"top\"\n         android:elevation=\"8dp\"\n         android:outlineProvider=\"none\"\n+        android:background=\"?attr/colorSurfaceContainer\"\n         tools:layout_height=\"@dimen/external_player_height\" />\n \n     <RelativeLayout\n+        android:id=\"@+id/playerContent\"\n         android:layout_width=\"match_parent\"\n-        android:layout_height=\"match_parent\"\n-        android:fitsSystemWindows=\"true\">\n+        android:layout_height=\"match_parent\">\n \n         <com.google.android.material.appbar.MaterialToolbar\n             android:id=\"@+id/toolbar\"\ndiff --git a/app/src/main/res/layout/bottom_navigation_more_listitem.xml b/app/src/main/res/layout/bottom_navigation_more_listitem.xml\nnew file mode 100644\nindex 00000000000..e85ecfce131\n--- /dev/null\n+++ b/app/src/main/res/layout/bottom_navigation_more_listitem.xml\n@@ -0,0 +1,33 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:orientation=\"horizontal\"\n+    android:paddingHorizontal=\"16dp\"\n+    android:paddingVertical=\"4dp\">\n+\n+    <ImageView\n+        android:id=\"@+id/coverImage\"\n+        android:layout_width=\"@dimen/thumbnail_length_navlist\"\n+        android:layout_height=\"@dimen/thumbnail_length_navlist\"\n+        android:importantForAccessibility=\"no\"\n+        android:layout_marginEnd=\"16dp\"\n+        android:layout_marginRight=\"16dp\"\n+        android:scaleType=\"centerInside\"\n+        tools:src=\"@drawable/ic_download_black\" />\n+\n+    <TextView\n+        android:id=\"@+id/titleLabel\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_gravity=\"center_vertical\"\n+        android:ellipsize=\"end\"\n+        android:lines=\"1\"\n+        android:singleLine=\"true\"\n+        android:textColor=\"?android:attr/textColorPrimary\"\n+        android:textSize=\"@dimen/text_size_navdrawer\"\n+        tools:text=\"Navigation item title\" />\n+\n+</LinearLayout>\ndiff --git a/app/src/main/res/layout/horizontal_itemlist_item.xml b/app/src/main/res/layout/horizontal_itemlist_item.xml\nindex 33840964763..edbf7b7246c 100644\n--- a/app/src/main/res/layout/horizontal_itemlist_item.xml\n+++ b/app/src/main/res/layout/horizontal_itemlist_item.xml\n@@ -6,8 +6,7 @@\n     xmlns:tools=\"http://schemas.android.com/tools\"\n     android:layout_width=\"wrap_content\"\n     android:layout_height=\"wrap_content\"\n-    android:clipToPadding=\"false\"\n-    android:padding=\"4dp\">\n+    android:clipToPadding=\"false\">\n \n     <androidx.cardview.widget.CardView\n         android:id=\"@+id/card\"\n@@ -15,8 +14,10 @@\n         android:layout_height=\"wrap_content\"\n         android:clickable=\"true\"\n         android:foreground=\"?android:attr/selectableItemBackground\"\n+        android:layout_margin=\"4dp\"\n+        app:cardBackgroundColor=\"?attr/colorSurfaceContainer\"\n         app:cardCornerRadius=\"12dp\"\n-        app:cardElevation=\"0dp\">\n+        app:cardElevation=\"1dp\">\n \n         <LinearLayout\n             android:layout_width=\"match_parent\"\ndiff --git a/app/src/main/res/layout/main.xml b/app/src/main/res/layout/main.xml\nindex e205707d542..1249eeaca33 100644\n--- a/app/src/main/res/layout/main.xml\n+++ b/app/src/main/res/layout/main.xml\n@@ -1,46 +1,68 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<androidx.drawerlayout.widget.DrawerLayout\n+<LinearLayout\n     xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n     xmlns:tools=\"http://schemas.android.com/tools\"\n-    android:id=\"@+id/drawer_layout\"\n+    android:id=\"@+id/main_view\"\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n+    android:orientation=\"vertical\"\n     tools:ignore=\"InconsistentLayout\"\n     tools:viewBindingIgnore=\"true\">\n \n     <!-- InconsistentLayout: Tablet layout does not have a drawer -->\n     <!-- viewBindingIgnore: Configurations for main.xml must\n             agree on the root element's ID -->\n-    <androidx.coordinatorlayout.widget.CoordinatorLayout\n-        android:id=\"@+id/overview_coordinator_layout\"\n+    <androidx.drawerlayout.widget.DrawerLayout\n+        android:id=\"@+id/drawer_layout\"\n         android:layout_width=\"match_parent\"\n-        android:layout_height=\"match_parent\">\n+        android:layout_height=\"0dp\"\n+        android:layout_weight=\"1\">\n \n-        <androidx.fragment.app.FragmentContainerView\n-            android:id=\"@+id/main_view\"\n+        <androidx.coordinatorlayout.widget.CoordinatorLayout\n+            android:id=\"@+id/overview_coordinator_layout\"\n             android:layout_width=\"match_parent\"\n-            android:layout_height=\"match_parent\"\n-            android:layout_alignParentTop=\"true\"\n-            android:foreground=\"?android:windowContentOverlay\"\n-            tools:background=\"@android:color/holo_red_dark\" />\n+            android:layout_height=\"match_parent\">\n+\n+            <androidx.fragment.app.FragmentContainerView\n+                android:id=\"@+id/main_content_view\"\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"match_parent\"\n+                android:layout_alignParentTop=\"true\"\n+                android:foreground=\"?android:windowContentOverlay\"\n+                tools:background=\"@android:color/holo_red_dark\" />\n+\n+            <androidx.fragment.app.FragmentContainerView\n+                android:id=\"@+id/audioplayerFragment\"\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"match_parent\"\n+                android:background=\"?android:attr/colorBackground\"\n+                android:elevation=\"8dp\"\n+                android:visibility=\"gone\"\n+                android:fitsSystemWindows=\"false\"\n+                app:layout_behavior=\"de.danoeh.antennapod.ui.view.LockableBottomSheetBehavior\" />\n+\n+        </androidx.coordinatorlayout.widget.CoordinatorLayout>\n \n         <androidx.fragment.app.FragmentContainerView\n-            android:id=\"@+id/audioplayerFragment\"\n+            android:id=\"@+id/navDrawerFragment\"\n             android:layout_width=\"match_parent\"\n             android:layout_height=\"match_parent\"\n-            android:background=\"?android:attr/colorBackground\"\n-            android:elevation=\"8dp\"\n-            android:visibility=\"gone\"\n-            app:layout_behavior=\"de.danoeh.antennapod.ui.view.LockableBottomSheetBehavior\" />\n+            android:layout_gravity=\"start\"\n+            android:orientation=\"vertical\" />\n+\n+    </androidx.drawerlayout.widget.DrawerLayout>\n \n-    </androidx.coordinatorlayout.widget.CoordinatorLayout>\n+    <com.google.android.material.bottomnavigation.BottomNavigationView\n+        android:id=\"@+id/bottomNavigationView\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        app:labelVisibilityMode=\"labeled\" />\n \n-    <androidx.fragment.app.FragmentContainerView\n-        android:id=\"@+id/navDrawerFragment\"\n+    <View\n+        android:id=\"@+id/bottom_padding\"\n         android:layout_width=\"match_parent\"\n-        android:layout_height=\"match_parent\"\n-        android:layout_gravity=\"start\"\n-        android:orientation=\"vertical\" />\n+        android:layout_height=\"0dp\"\n+        android:background=\"?attr/colorSurfaceContainer\" />\n \n-</androidx.drawerlayout.widget.DrawerLayout>\n+</LinearLayout>\ndiff --git a/app/src/main/res/values/ids.xml b/app/src/main/res/values/ids.xml\nindex 545e79da760..bdcbd6c0b2f 100644\n--- a/app/src/main/res/values/ids.xml\n+++ b/app/src/main/res/values/ids.xml\n@@ -17,4 +17,16 @@\n     <item name=\"view_type_subscription_grid_with_title\" type=\"id\"/>\n     <item name=\"view_type_subscription_grid_without_title\" type=\"id\"/>\n     <item name=\"view_type_subscription_list\" type=\"id\"/>\n+\n+    <!-- Bottom navigation -->\n+    <item name=\"bottom_navigation_home\" type=\"id\"/>\n+    <item name=\"bottom_navigation_queue\" type=\"id\"/>\n+    <item name=\"bottom_navigation_inbox\" type=\"id\"/>\n+    <item name=\"bottom_navigation_episodes\" type=\"id\"/>\n+    <item name=\"bottom_navigation_downloads\" type=\"id\"/>\n+    <item name=\"bottom_navigation_history\" type=\"id\"/>\n+    <item name=\"bottom_navigation_addfeed\" type=\"id\"/>\n+    <item name=\"bottom_navigation_subscriptions\" type=\"id\"/>\n+    <item name=\"bottom_navigation_more\" type=\"id\"/>\n+    <item name=\"bottom_navigation_settings\" type=\"id\"/>\n </resources>\ndiff --git a/build.gradle b/build.gradle\nindex 1e9c6e94612..69b9f85644f 100644\n--- a/build.gradle\n+++ b/build.gradle\n@@ -21,7 +21,7 @@ project.ext {\n     recyclerViewVersion = \"1.2.1\"\n     viewPager2Version = \"1.1.0-beta01\"\n     workManagerVersion = \"2.7.1\"\n-    googleMaterialVersion = \"1.7.0\"\n+    googleMaterialVersion = \"1.12.0\"\n \n     // Third-party\n     commonslangVersion = \"3.6\"\ndiff --git a/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java b/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\nindex 771ad56328a..608998c0071 100644\n--- a/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\n+++ b/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\n@@ -62,6 +62,7 @@ public abstract class UserPreferences {\n     public static final String PREF_FILTER_FEED = \"prefSubscriptionsFilter\";\n     public static final String PREF_SUBSCRIPTION_TITLE = \"prefSubscriptionTitle\";\n     public static final String PREF_BACK_OPENS_DRAWER = \"prefBackButtonOpensDrawer\";\n+    public static final String PREF_BOTTOM_NAVIGATION = \"prefBottomNavigation\";\n \n     public static final String PREF_QUEUE_KEEP_SORTED = \"prefQueueKeepSorted\";\n     public static final String PREF_QUEUE_KEEP_SORTED_ORDER = \"prefQueueKeepSortedOrder\";\n@@ -758,6 +759,14 @@ public static boolean backButtonOpensDrawer() {\n         return prefs.getBoolean(PREF_BACK_OPENS_DRAWER, false);\n     }\n \n+    public static boolean isBottomNavigationEnabled() {\n+        return prefs.getBoolean(PREF_BOTTOM_NAVIGATION, false);\n+    }\n+\n+    public static void setBottomNavigationEnabled(boolean enabled) {\n+        prefs.edit().putBoolean(PREF_BOTTOM_NAVIGATION, enabled).apply();\n+    }\n+\n     public static boolean timeRespectsSpeed() {\n         return prefs.getBoolean(PREF_TIME_RESPECTS_SPEED, false);\n     }\ndiff --git a/ui/common/src/main/res/drawable/dots_vertical.xml b/ui/common/src/main/res/drawable/dots_vertical.xml\nnew file mode 100644\nindex 00000000000..4848dde4ef9\n--- /dev/null\n+++ b/ui/common/src/main/res/drawable/dots_vertical.xml\n@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<vector\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:height=\"24dp\"\n+    android:width=\"24dp\"\n+    android:viewportWidth=\"24\"\n+    android:viewportHeight=\"24\">\n+\n+    <path\n+        android:fillColor=\"#000000\"\n+        android:pathData=\"M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z\" />\n+\n+</vector>\ndiff --git a/ui/common/src/main/res/drawable/ic_pencil.xml b/ui/common/src/main/res/drawable/ic_pencil.xml\nnew file mode 100644\nindex 00000000000..5a4838da747\n--- /dev/null\n+++ b/ui/common/src/main/res/drawable/ic_pencil.xml\n@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<vector\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:height=\"24dp\"\n+    android:width=\"24dp\"\n+    android:viewportWidth=\"24\"\n+    android:viewportHeight=\"24\">\n+\n+    <path\n+        android:fillColor=\"?attr/action_icon_color\"\n+        android:pathData=\"M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z\" />\n+\n+</vector>\ndiff --git a/ui/common/src/main/res/values-v23/styles.xml b/ui/common/src/main/res/values-v23/styles.xml\nindex 95740f648e9..9475596dc06 100644\n--- a/ui/common/src/main/res/values-v23/styles.xml\n+++ b/ui/common/src/main/res/values-v23/styles.xml\n@@ -3,7 +3,5 @@\n     <style name=\"Theme.AntennaPod.Dynamic.Light\" parent=\"Theme.Base.AntennaPod.Dynamic.Light\">\n         <item name=\"android:statusBarColor\">@android:color/transparent</item>\n         <item name=\"android:windowLightStatusBar\">true</item>\n-        <!-- To make icons visible -->\n-        <item name=\"android:navigationBarColor\">@color/grey600</item>\n     </style>\n </resources>\ndiff --git a/ui/common/src/main/res/values-v27/styles.xml b/ui/common/src/main/res/values-v27/styles.xml\nindex df4d786be19..1266e901fa0 100644\n--- a/ui/common/src/main/res/values-v27/styles.xml\n+++ b/ui/common/src/main/res/values-v27/styles.xml\n@@ -3,8 +3,6 @@\n     <style name=\"Theme.AntennaPod.Dynamic.Light\" parent=\"Theme.Base.AntennaPod.Dynamic.Light\">\n         <item name=\"android:statusBarColor\">@android:color/transparent</item>\n         <item name=\"android:windowLightStatusBar\">true</item>\n-        <item name=\"android:navigationBarColor\">@color/background_light</item>\n-        <item name=\"android:navigationBarDividerColor\">@color/navigation_bar_divider_light</item>\n         <item name=\"android:windowLightNavigationBar\">true</item>\n     </style>\n </resources>\ndiff --git a/ui/common/src/main/res/values/colors.xml b/ui/common/src/main/res/values/colors.xml\nindex 55ba650e781..e3a3e1451c2 100644\n--- a/ui/common/src/main/res/values/colors.xml\n+++ b/ui/common/src/main/res/values/colors.xml\n@@ -11,14 +11,13 @@\n     <color name=\"feed_text_bg\">#55333333</color>\n \n     <!-- Theme colors -->\n-    <color name=\"background_light\">#FFFFFF</color>\n+    <color name=\"background_light\">#f9fcff</color>\n     <color name=\"background_elevated_light\">#EFEEEE</color>\n     <color name=\"background_darktheme\">#21272b</color>\n     <color name=\"background_elevated_darktheme\">#2D3337</color>\n     <color name=\"non_square_icon_background\">#22777777</color>\n     <color name=\"seek_background_light\">#90000000</color>\n     <color name=\"seek_background_dark\">#905B5B5B</color>\n-    <color name=\"navigation_bar_divider_light\">#1F000000</color>\n \n     <color name=\"accent_light\">#0078C2</color>\n     <color name=\"accent_dark\">#3D8BFF</color>\ndiff --git a/ui/common/src/main/res/values/styles.xml b/ui/common/src/main/res/values/styles.xml\nindex 2cf3b39972b..f2c9a1e2709 100644\n--- a/ui/common/src/main/res/values/styles.xml\n+++ b/ui/common/src/main/res/values/styles.xml\n@@ -27,6 +27,7 @@\n         <item name=\"android:splitMotionEvents\">false</item>\n         <item name=\"android:fitsSystemWindows\">false</item>\n         <item name=\"android:windowContentTransitions\">true</item>\n+        <item name=\"android:navigationBarColor\">@android:color/transparent</item>\n         <item name=\"toolbarStyle\">@style/Style.AntennaPod.Toolbar</item>\n         <item name=\"preferenceTheme\">@style/AppPreferenceThemeOverlay</item>\n     </style>\n@@ -44,6 +45,8 @@\n         <item name=\"android:colorBackground\">@color/background_light</item>\n         <item name=\"colorSurface\">@color/background_light</item>\n         <item name=\"colorSurfaceVariant\">#D3DCE0</item>\n+        <item name=\"colorSurfaceContainer\">#EBEEF3</item>\n+        <item name=\"colorSecondaryContainer\">#D3DCE0</item>\n     </style>\n \n     <style name=\"Theme.AntennaPod.Dynamic.Dark\" parent=\"Theme.Base.AntennaPod.Dynamic.Dark\">\n@@ -70,7 +73,7 @@\n         <item name=\"android:statusBarColor\">@android:color/transparent</item>\n         <item name=\"android:windowLightStatusBar\" tools:targetApi=\"m\">false</item>\n         <item name=\"android:windowContentTransitions\">true</item>\n-        <item name=\"android:navigationBarColor\">@color/background_darktheme</item>\n+        <item name=\"android:navigationBarColor\">@android:color/transparent</item>\n         <item name=\"toolbarStyle\">@style/Style.AntennaPod.Toolbar</item>\n         <item name=\"preferenceTheme\">@style/AppPreferenceThemeOverlay</item>\n     </style>\n@@ -88,6 +91,8 @@\n         <item name=\"android:colorBackground\">@color/background_darktheme</item>\n         <item name=\"colorSurface\">@color/background_darktheme</item>\n         <item name=\"colorSurfaceVariant\">#2F3B4F</item>\n+        <item name=\"colorSurfaceContainer\">#1C2024</item>\n+        <item name=\"colorSecondaryContainer\">#2F3B4F</item>\n     </style>\n \n     <style name=\"Theme.AntennaPod.Dynamic.TrueBlack\" parent=\"Theme.AntennaPod.Dynamic.Dark\">\ndiff --git a/ui/i18n/src/main/res/values/strings.xml b/ui/i18n/src/main/res/values/strings.xml\nindex 0f394c792bb..89f6269d39c 100644\n--- a/ui/i18n/src/main/res/values/strings.xml\n+++ b/ui/i18n/src/main/res/values/strings.xml\n@@ -450,8 +450,10 @@\n     <string name=\"pref_black_theme_message\">Use full black for the dark theme</string>\n     <string name=\"pref_tinted_theme_title\">Dynamic colors</string>\n     <string name=\"pref_tinted_theme_message\">Adapt app colors based on the wallpaper</string>\n-    <string name=\"pref_nav_drawer_items_title\">Set navigation drawer items</string>\n-    <string name=\"pref_nav_drawer_items_sum\">Change which items appear in the navigation drawer</string>\n+    <string name=\"bottom_navigation\">Bottom navigation</string>\n+    <string name=\"bottom_navigation_summary\">Beta feature: Access the most important screens from everywhere, in a single tap</string>\n+    <string name=\"pref_nav_drawer_items_title\">Customize navigation</string>\n+    <string name=\"pref_nav_drawer_items_sum\">Change which items appear in the navigation drawer or bottom navigation</string>\n     <string name=\"pref_nav_drawer_feed_order_title\">Set subscription order</string>\n     <string name=\"pref_nav_drawer_feed_order_sum\">Change the order of your subscriptions</string>\n     <string name=\"pref_nav_drawer_feed_counter_title\">Set subscription counter</string>\ndiff --git a/ui/preferences/src/main/res/xml/preferences_user_interface.xml b/ui/preferences/src/main/res/xml/preferences_user_interface.xml\nindex f61447b7776..1b3aad4765d 100644\n--- a/ui/preferences/src/main/res/xml/preferences_user_interface.xml\n+++ b/ui/preferences/src/main/res/xml/preferences_user_interface.xml\n@@ -80,10 +80,14 @@\n                 android:title=\"@string/pref_default_page\"\n                 android:summary=\"@string/pref_default_page_sum\"\n                 android:defaultValue=\"HomeFragment\"/>\n+        <SwitchPreferenceCompat\n+                android:title=\"@string/bottom_navigation\"\n+                android:summary=\"@string/bottom_navigation_summary\"\n+                android:key=\"prefBottomNavigation\" />\n         <Preference\n-            android:key=\"prefHiddenDrawerItems\"\n-            android:summary=\"@string/pref_nav_drawer_items_sum\"\n-            android:title=\"@string/pref_nav_drawer_items_title\"/>\n+                android:key=\"prefHiddenDrawerItems\"\n+                android:summary=\"@string/pref_nav_drawer_items_sum\"\n+                android:title=\"@string/pref_nav_drawer_items_title\"/>\n         <SwitchPreferenceCompat\n                 android:key=\"prefBackButtonOpensDrawer\"\n                 android:title=\"@string/pref_back_button_opens_drawer\"\n", "test_patch": "diff --git a/app/src/androidTest/java/de/test/antennapod/ui/NavigationDrawerTest.java b/app/src/androidTest/java/de/test/antennapod/ui/NavigationDrawerTest.java\nindex 57385f62a16..d9e1db18d61 100644\n--- a/app/src/androidTest/java/de/test/antennapod/ui/NavigationDrawerTest.java\n+++ b/app/src/androidTest/java/de/test/antennapod/ui/NavigationDrawerTest.java\n@@ -52,6 +52,7 @@ public void setUp() throws IOException {\n \n         EspressoTestUtils.clearPreferences();\n         EspressoTestUtils.clearDatabase();\n+        UserPreferences.setBottomNavigationEnabled(false);\n     }\n \n     @After\n", "problem_statement": "Bottom navigation\n# Checklist\r\n<!-- Place an x in the boxes to tick them: [x] -->\r\n\r\n- [x] I have used the search function to see if someone else has already submitted the same feature request.\r\n- [x] I will only create one feature request per issue.\r\n- [x] I will describe the problem with as much detail as possible.\r\n\r\n# System info\r\n\r\n**App version**: 2.0.0 RC7\r\n\r\n# Feature description\r\n\r\nWith the new interface standards on iOS and Android, bottom navigation bars are becoming common. It would be a good idea to place the common functions - Subscriptions, Episodes, Downloads, Playback History and Queue in the bottom navigation bar for faster access and less swipes/taps. \r\n\r\n---\r\n\r\n**[EDIT BY PROJECT MEMBER]**\r\nTo anyone interested in working on this: for implementation notes agreed upon by the team (through various calls) please [see this comment](https://github.com/AntennaPod/AntennaPod/issues/4376#issuecomment-1215145107).\n", "hints_text": "I am willing to give this a shot, if you would assign it to me.\nThis change needs some more discussion because it completely changes the way users interact with th app.\r\n\r\n@BeSanidhya If you want to help, I suggest to start with something labelled \"good first issue\". Those are self-contained and do not need discussion. Just leave a comment when you have started working on an issue - no need for assigning.\nThank you @icubyx for bringing this up. I just start using a Fairphone 3,which has a screen so big I can't easily reach the top(left). Moving things around could be a nice improvement for such devices. Firefox already implemented this.\n\nHowever, it wouldn't be enough to simply move the main menu items in a bottom bar - items like 'back' and 'filter' would still be hard to reach in the top bar. So to do it properly, I think we would need to revisit the whole navigation. This would indeed require quite some discussions, and probably also the involvement of a UI expert (we could ask folks of OpenSourceDesign again). (And, perhaps needless to say, this would be an 'experimental' feature, requiring an extra setting.)\n\nFor a start, we might create a thread on the forum to discuss ideas and collect other apps that have such bottom navigation. @icubyx, would you be interested in starting that thread?\n@keunes yes it will need just more than the icons at the bottom. As a UX designer, I can work on this unless @BeSanidhya has already started.\nUsers really do not like change. Especially if it changes their muscle memory. When developing version 2.0.0, I paid attention on the fact that everything still feels the same even if it looks a bit different. This proposal sounds like a pretty massive UI change. I fear that a big change like this could easily upset users. While 2.0.0 is not yet released, something like this change would then be version 3.0.0\n@ByteHamster I agree with you that we cannot make an abrupt change - it will need to be gradual. Having said that, most popular podcast readers that I checked have icons at the bottom. So if we are considering adoption, these adopters will be comfortable with this change. we can start with icons at the bottom and introduce more changes gradually. \n@icubyx Ah, a UX designer - that's great :) If I interpreted correctly, @BeSanidhya proposed to work on the code, so feel free to start a discussion on the forum.\r\n\r\n> Users really do not like change. Especially if it changes their muscle memory. When developing version 2.0.0, I paid attention on the fact that everything still feels the same even if it looks a bit different. This proposal sounds like a pretty massive UI change. I fear that a big change like this could easily upset users. While 2.0.0 is not yet released, something like this change would then be version 3.0.0\r\n\r\nWhich is why I proposed to introduce this first as an 'experimental' feature. Mozilla [also introduced a setting](https://support.mozilla.org/en-US/kb/move-navigation-bar) for this change. I enabled it directly because of my screen size. Other people comfortable/familiar with this approach could do the same.\r\n\r\nTo be honest 'gradual implementation' I think will be tricky. It does not allow testers to experience the new approach as a whole. I would rather have this thought out properly as a whole, get it implemented as an experimental feature, get thorough feedback from users. Then either we could still slowly introduce changes for everybody (moving them out of the 'experimental' phase).\nHave a design for the bottom navbar without changing anything else much. New to all this so can someone guide me how to share it? \nWhat do you have? Mock-ups? Code?\n> What do you have? Mock-ups? Code?\r\n\r\nMockup and the icon PNG files in various sizes.\nFeel free to post them here, so they can be discussed :)\nFirst design for the bottom nav bar. A few notes:\r\n1. I have used the lighter blue color from the AntennaPod logo for the backgrounds. \r\n2. The icons are for Subscriptions, Episodes, History, Downloads, Queue in that order. \r\n3. Experimented with the top bar colors too.\r\n4. Rearranged the tab order to \"New | Favorites | All\" to visually balance the screen. \r\nComments welcome :)\r\n\r\n[EDIT - uploaded more complete image]\r\n\r\n![Episodes](https://user-images.githubusercontent.com/36615794/92408189-61e57600-f15a-11ea-8912-bf55456df46c.png)\r\n\nUploading assets for miniplayer and bottom navigation bar...\r\n[antennapod_navbar_assets.zip](https://github.com/AntennaPod/AntennaPod/files/5249957/antennapod_navbar_assets.zip)\r\n\nThanks @icubyx for sharing that. I don't think we should implement a bottom navigation bar without reviewing also the drawer menu. What would be your view on this? We should avoid having two duplicate navigation systems. That would complicate code and interface.\n> Thanks @icubyx for sharing that. I don't think we should implement a bottom navigation bar without reviewing also the drawer menu. What would be your view on this? We should avoid having two duplicate navigation systems. That would complicate code and interface.\r\nI think to start with, we should have the frequently accessed sections on the bottom navigation bar - like downloads, queue and history. The others - like settings, subscriptions and episodes can go in the drawer menu. As @ByteHamster pointed out, users of this app are used to a certain interface and we should not shift abruptly - open to other suggestions...\r\n\nI don't see this often in apps, BUT instead of creating few versions of AP (normal and experimental) which will divide user-base keep both navigation. I don't see any problem with that if we are not adding any new menu items - since menu is just a reference to different AP pages, bottom and side navigation will direct to same pages (it will not cause additional mess in code). I do believe that bottom menu is immensely better than side menu, even on small phones its just more convenient to not have to move fingers and that's where smartphones direction heading - letting users do everything they want without moving fingers around whole screen (that's basically what for ex. Samsung OneUI 2.0 aims to do). So a solution could be adding a short message on top of side navigation saying \"this menu will be removed in version 2.5.0 please use bottom navigation menu.\" (version is random). THE only problem i see is that you cant fit all side nav menu items on bottom - where could other items go?\r\nOther solution would be simply to keep both nav bars.  Bottom one would contain items that are most used by users, and side nav bar would be ultimate menu where people go to only once in a while (when subscribing to new feed etc.). Does AP collect stats on which app parts are most clicked or used? That would be extremely useful for keeping most relevant things under user fingertips.\nThis issue has been mentioned on **AntennaPod Forum**. There might be relevant details there:\n\nhttps://forum.antennapod.org/t/add-spacer-on-top-of-the-hamburger-menu-for-easier-access/127/9\n\n**A [discussion on bottom screen navigation](https://forum.antennapod.org/t/brainstorming-bottom-navigation-for-bigger-screens/774) is going on our forum. I'll lock this issue until a conclusion has been reached. Please feel free to add your comments there!**\nProposal in lign with Material design 3:\r\n[Interactive mock-up in PenPot](https://design.penpot.app/#/view/e357a320-7535-11eb-8a88-eb0147e048f5?page-id=339e1400-1a7f-11ed-ab8d-290a231b2267&section=interactions&index=0&share-id=e4d9dfe0-1b9e-11ed-817f-f940e3befd53)\r\n<details><summary>Non-interactive mock-ups</summary>\r\n\r\n![AP-BN_Home](https://user-images.githubusercontent.com/11229646/184663139-3c2ab8f9-d844-498b-82d0-fc16b6c5b970.png) ![AP-BN_More menu](https://user-images.githubusercontent.com/11229646/184663144-7506018b-39e7-4778-8e44-f8ee25889375.png)\r\nMore menu displayed in the bottom-right corner with small margin.\r\n![AP-BN_Navigation items](https://user-images.githubusercontent.com/11229646/184663146-f5dd95f3-6cf1-4a39-9363-0903aaa5fbf8.png)\r\n\r\n</details>\r\n\r\nDescription of UX and changed elements:\r\n\r\n* 4 items, and 'more' - as per the 'Navigation items' setting\r\n* Standard Material Design 3\r\n  * [Layout](https://m3.material.io/m3/pages/navigation-bar/specs/#6f329e0c-c278-4ac8-9b02-1afcb2790ac3)\r\n  * [Colours](https://m3.material.io/m3/pages/navigation-bar/specs/#1d62ff86-f860-4400-a681-5a856cdbca54)\r\n* Icons:\r\n  * [\"Material Symbols\", style: rounded](https://fonts.google.com/icons?icon.set=Material+Symbols&icon.style=Rounded)\r\n  * active: weight 400, not filled\r\n  * inactive: weight 300, not filled\r\n* Labels always visible (not only when active), as our icons alone aren't always as clear\r\n* 'Small Badge' for Inbox (colour: `primary`)\r\n* When tapping 'More' a customised [menu](https://m3.material.io/components/menus/specs) is displayed:\r\n  * Colour: `background` (not: `surface`)\r\n  * Icon & text colour: `on background` (not: `on surface`)\r\n  * List contains all items that are are set visible in the menu settings, including the mandatory Settings.\r\n\r\nA new setting is introduced: Settings > User Interface > Navigation location, with 2 options: \"Side\" and \"Bottom\". Existing users have the value 'Side', new installs will get the value 'Bottom'.\r\n\r\nSettings > User Interface > Navigation items is updated:\r\n* Full screen, listing all available navigation items\r\n* When bottom navigation is set:\r\n  * Displayed\r\n    * First four items visible in the navigation bar\r\n    * Visual separator of 6 dp with colour `background`\r\n    * Subsequent items (above the heading) displayed in the overflow ('More') menu\r\n    * The two blocks in this section are considered 1 list:\r\n      * It is not possible to have 2 items visible in the navigation bar, and 3 in the overflow menu (it would be: 4 in navigation bar, 1 in overflow menu)\r\n      * When there are 4 items in the navigation bar list, and another item is dragged into the list, the last item on the list gets pushed to the overflow menu\r\n  * Not displayed\r\n    * 'Not displayed' heading in style `body small` in a container with background colour `Surface-Variant`\r\n    * Items below the 'Not displayed' heading are not displayed in the (overflow) menu\r\n    * The 'Settings' item is fixed to be the last item in the overflow menu (is mandatory)\r\n* When sidebar navigation is set:\r\n  * All of the Displayed block are displayed, in the order as indicated\r\n  * The visual separator is still visible in the setting screen, but ignored\r\n* Existing users: the default navigation is used, and unticked navigation items are listed under 'not displayed'\r\n* New installs: the following order is applied: Home, Inbox, Queue, Subscriptions, Discover, Episodes, History, Statistics, Downloads", "created_at": "2024-05-09T13:22:41Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 7159, "instance_id": "AntennaPod__AntennaPod-7159", "issue_numbers": ["4311"], "base_commit": "292a21f8f8a9aa1b389f27942730782ef451b6fa", "patch": "diff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/Chapter.java b/model/src/main/java/de/danoeh/antennapod/model/feed/Chapter.java\nindex 3683a2a4448..6c664788081 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/feed/Chapter.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/Chapter.java\n@@ -4,7 +4,7 @@\n \n public class Chapter {\n     private long id;\n-    /** Defines starting point in milliseconds. */\n+    /** The start time of the chapter in milliseconds */\n     private long start;\n     private String title;\n     private String link;\n@@ -66,7 +66,7 @@ public void setChapterId(String chapterId) {\n \n     @Override\n     public String toString() {\n-        return \"ID3Chapter [title=\" + getTitle() + \", start=\" + getStart() + \", url=\" + getLink() + \"]\";\n+        return \"Chapter [title=\" + getTitle() + \", start=\" + getStart() + \", url=\" + getLink() + \"]\";\n     }\n \n     public long getId() {\ndiff --git a/parser/media/src/main/java/de/danoeh/antennapod/parser/media/m4a/M4AChapterReader.java b/parser/media/src/main/java/de/danoeh/antennapod/parser/media/m4a/M4AChapterReader.java\nnew file mode 100644\nindex 00000000000..85a163fa78a\n--- /dev/null\n+++ b/parser/media/src/main/java/de/danoeh/antennapod/parser/media/m4a/M4AChapterReader.java\n@@ -0,0 +1,161 @@\n+package de.danoeh.antennapod.parser.media.m4a;\n+\n+import android.util.Log;\n+\n+import org.apache.commons.io.IOUtils;\n+\n+import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import de.danoeh.antennapod.model.feed.Chapter;\n+\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.ByteOrder;\n+\n+public class M4AChapterReader {\n+    private static final String TAG = \"M4AChapterReader\";\n+    private final List<Chapter> chapters = new ArrayList<>();\n+    private final InputStream inputStream;\n+    private static final int FTYP_CODE = 0x66747970; // \"ftyp\"\n+\n+    public M4AChapterReader(InputStream input) {\n+        inputStream = input;\n+    }\n+\n+    /**\n+     * Read the input stream populating the chapters list\n+     */\n+    public void readInputStream() {\n+        try {\n+            isM4A(inputStream);\n+            int dataSize = this.findAtom(\"moov.udta.chpl\");\n+            if (dataSize == -1) {\n+                Log.d(TAG, \"Nero Chapter Atom not found\");\n+            } else {\n+                Log.d(TAG, \"Nero Chapter Atom found. Data Size: \" + dataSize);\n+                this.parseNeroChapterAtom(dataSize);\n+            }\n+        } catch (Exception e) {\n+            Log.d(TAG, \"ERROR: \" + e.getMessage());\n+        }\n+    }\n+\n+    /**\n+     * Find the atom with the given name in the M4A file\n+     *\n+     * @param name the name of the atom to find, separated by dots\n+     * @return the size of the atom (minus the 8-byte header) if found\n+     * @throws IOException if an I/O error occurs or the atom is not found\n+     */\n+    public int findAtom(String name) throws IOException {\n+        // Split the name into parts encoded as UTF-8\n+        String[] parts = name.split(\"\\\\.\");\n+        int partIndex = 0;\n+        // Initialize remaining size to track the current part's size and check if it is exceeded\n+        int remainingSize = -1;\n+\n+        // Read the M4A file atom by atom\n+        ByteBuffer buffer = ByteBuffer.allocate(8).order(ByteOrder.BIG_ENDIAN);\n+        while (true) {\n+            // Read the atom header\n+            IOUtils.readFully(inputStream, buffer.array());\n+            // Get the size of the current atom\n+            int chunkSize = buffer.getInt();\n+            int dataSize = chunkSize - 8;\n+\n+            // Get the atom type\n+            String atomType = StandardCharsets.UTF_8.decode(buffer).toString();\n+\n+            // Reset the buffer for reading the atom data\n+            buffer.clear();\n+\n+            // Check if the current atom matches the current part of the name\n+            if (atomType.equals(parts[partIndex])) {\n+                if (partIndex == parts.length - 1) {\n+                    // If the current atom is the last part of the name return its size\n+                    return dataSize;\n+                } else {\n+                    // Else move to the next part of the name\n+                    partIndex++;\n+                    // Update the remaining size\n+                    remainingSize = dataSize;\n+                }\n+            } else {\n+                // Do not check the remaining size of top-level atoms\n+                if (partIndex > 0) {\n+                    // Update the remaining size\n+                    remainingSize -= dataSize;\n+                    // If the remaining size is exhausted, throw an exception\n+                    if (remainingSize <= 0) {\n+                        throw new IOException(\"Part size exceeded for part \\\"\" + parts[partIndex - 1]\n+                                + \"\\\" while searching atom. Remaining Size: \" + remainingSize);\n+                    }\n+                }\n+                // Skip the rest of the atom\n+                IOUtils.skipFully(inputStream, dataSize);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Parse the Nero Chapter Atom in the M4A file\n+     * Assumes that the current position is at the start of the Nero Chapter Atom\n+     *\n+     * @param chunkSize the size of the Nero Chapter Atom\n+     * @throws IOException if an I/O error occurs\n+     * @see <a href=\"https://github.com/Zeugma440/atldotnet/wiki/Focus-on-Chapter-metadata#nero-chapters\">Nero Chapter</a>\n+     */\n+    private void parseNeroChapterAtom(long chunkSize) throws IOException {\n+        // Read the Nero Chapter Atom data into a buffer\n+        ByteBuffer byteBuffer = ByteBuffer.allocate((int) chunkSize).order(ByteOrder.BIG_ENDIAN);\n+        IOUtils.readFully(inputStream, byteBuffer.array());\n+        // Skip the 5-byte header\n+        // Nero Chapter Atom consists of a 5-byte header followed by chapter data\n+        // The first 4 bytes are the version and flags, the 5th byte is reserved\n+        byteBuffer.position(5);\n+        // Get the chapter count\n+        int chapterCount = byteBuffer.getInt();\n+        Log.d(TAG, \"Nero Chapter Count: \" + chapterCount);\n+\n+        // Parse each chapter\n+        for (int i = 0; i < chapterCount; i++) {\n+            long startTime = byteBuffer.getLong();\n+            int chapterNameSize = byteBuffer.get();\n+            byte[] chapterNameBytes = new byte[chapterNameSize];\n+            byteBuffer.get(chapterNameBytes, 0, chapterNameSize);\n+            String chapterName = new String(chapterNameBytes, StandardCharsets.UTF_8);\n+\n+            Chapter chapter = new Chapter();\n+            chapter.setStart(startTime / 10000);\n+            chapter.setTitle(chapterName);\n+            chapter.setChapterId(String.valueOf(i + 1));\n+            chapters.add(chapter);\n+\n+            Log.d(TAG, \"Nero Chapter \" + (i + 1) + \": \" + chapter);\n+        }\n+    }\n+\n+    public List<Chapter> getChapters() {\n+        return chapters;\n+    }\n+\n+    /**\n+     * Assert that the input stream is an M4A file by checking the signature\n+     *\n+     * @param inputStream the input stream to check\n+     * @throws IOException if an I/O error occurs\n+     */\n+    public static void isM4A(InputStream inputStream) throws IOException {\n+        ByteBuffer byteBuffer = ByteBuffer.allocate(8).order(ByteOrder.BIG_ENDIAN);\n+        IOUtils.readFully(inputStream, byteBuffer.array());\n+\n+        int ftypSize = byteBuffer.getInt();\n+        if (byteBuffer.getInt() != FTYP_CODE) {\n+            throw new IOException(\"Not an M4A file\");\n+        }\n+        IOUtils.skipFully(inputStream, ftypSize - 8);\n+    }\n+}\ndiff --git a/ui/chapters/src/main/java/de/danoeh/antennapod/ui/chapters/ChapterUtils.java b/ui/chapters/src/main/java/de/danoeh/antennapod/ui/chapters/ChapterUtils.java\nindex 5554890ed06..59317473a29 100644\n--- a/ui/chapters/src/main/java/de/danoeh/antennapod/ui/chapters/ChapterUtils.java\n+++ b/ui/chapters/src/main/java/de/danoeh/antennapod/ui/chapters/ChapterUtils.java\n@@ -16,6 +16,7 @@\n import de.danoeh.antennapod.model.playback.Playable;\n import de.danoeh.antennapod.parser.media.vorbis.VorbisCommentChapterReader;\n import de.danoeh.antennapod.parser.media.vorbis.VorbisCommentReaderException;\n+import de.danoeh.antennapod.parser.media.m4a.M4AChapterReader;\n import okhttp3.CacheControl;\n import okhttp3.Request;\n import okhttp3.Response;\n@@ -106,6 +107,19 @@ public static List<Chapter> loadChaptersFromMediaFile(Playable playable, Context\n         } catch (IOException | VorbisCommentReaderException e) {\n             Log.e(TAG, \"Unable to load vorbis chapters: \" + e.getMessage());\n         }\n+\n+        try (CountingInputStream in = openStream(playable, context)) {\n+            List<Chapter> chapters = readM4AChaptersFromInputStream(in);\n+            if (!chapters.isEmpty()) {\n+                Log.i(TAG, \"Chapters loaded\");\n+                return chapters;\n+            }\n+        } catch (InterruptedIOException e) {\n+            throw e;\n+        } catch (IOException e) {\n+            Log.e(TAG, \"Unable to open stream \" + e.getMessage());\n+        }\n+\n         return null;\n     }\n \n@@ -195,6 +209,22 @@ private static List<Chapter> readOggChaptersFromInputStream(InputStream input) t\n         return Collections.emptyList();\n     }\n \n+    @NonNull\n+    private static List<Chapter> readM4AChaptersFromInputStream(InputStream input) {\n+        M4AChapterReader reader = new M4AChapterReader(new BufferedInputStream(input));\n+        reader.readInputStream();\n+        List<Chapter> chapters = reader.getChapters();\n+        if (chapters == null) {\n+            return Collections.emptyList();\n+        }\n+        Collections.sort(chapters, new ChapterStartTimeComparator());\n+        enumerateEmptyChapterTitles(chapters);\n+        if (chaptersValid(chapters)) {\n+            return chapters;\n+        }\n+        return Collections.emptyList();\n+    }\n+\n     /**\n      * Makes sure that chapter does a title and an item attribute.\n      */\n", "test_patch": "diff --git a/parser/media/src/test/java/de/danoeh/antennapod/parser/media/m4a/M4AChapterReaderTest.java b/parser/media/src/test/java/de/danoeh/antennapod/parser/media/m4a/M4AChapterReaderTest.java\nnew file mode 100644\nindex 00000000000..9111f972721\n--- /dev/null\n+++ b/parser/media/src/test/java/de/danoeh/antennapod/parser/media/m4a/M4AChapterReaderTest.java\n@@ -0,0 +1,41 @@\n+package de.danoeh.antennapod.parser.media.m4a;\n+\n+import de.danoeh.antennapod.model.feed.Chapter;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.robolectric.RobolectricTestRunner;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(RobolectricTestRunner.class)\n+public class M4AChapterReaderTest {\n+\n+    @Test\n+    public void testFiles() throws IOException {\n+        testFile();\n+    }\n+\n+    public void testFile() throws IOException {\n+        InputStream inputStream = getClass().getClassLoader()\n+                .getResource(\"nero-chapters.m4a\").openStream();\n+        M4AChapterReader reader = new M4AChapterReader(inputStream);\n+        reader.readInputStream();\n+        List<Chapter> chapters = reader.getChapters();\n+\n+        assertEquals(4, chapters.size());\n+\n+        assertEquals(0, chapters.get(0).getStart());\n+        assertEquals(3000, chapters.get(1).getStart());\n+        assertEquals(6000, chapters.get(2).getStart());\n+        assertEquals(9000, chapters.get(3).getStart());\n+\n+        assertEquals(\"Chapter 1 - \u2764\ufe0f\ud83d\ude0a\", chapters.get(0).getTitle());\n+        assertEquals(\"Chapter 2 - \u00df\u00f6\u00c4\", chapters.get(1).getTitle());\n+        assertEquals(\"Chapter 3 - \u7231\", chapters.get(2).getTitle());\n+        assertEquals(\"Chapter 4\", chapters.get(3).getTitle());\n+    }\n+}\ndiff --git a/parser/media/src/test/resources/nero-chapters.m4a b/parser/media/src/test/resources/nero-chapters.m4a\nnew file mode 100644\nindex 00000000000..99de2b66154\nBinary files /dev/null and b/parser/media/src/test/resources/nero-chapters.m4a differ\n", "problem_statement": "Support for parsing m4a chapters\n# Checklist\r\n<!-- Place an x in the boxes to tick them: [x] -->\r\n\r\n- [x ] I have used the search function to see if someone else has already submitted the same bug report.\r\n- [x ] I will describe the problem with as much detail as possible.\r\n- [x ] If the bug only to occurs with a certain podcast, I will include the URL of that podcast.\r\n\r\n# System info\r\n<!-- The following information is very important to fill out because some bugs may only occur on certain devices or versions of Android. -->\r\n[ Environment ]\r\nAndroid version: 9\r\nOS version: 3.10.61-TeamNexus-flx-00210-g4cebbfb8cc42-dirty\r\nAntennaPod version: 1.8.1\r\nModel: SM-G920F\r\nDevice: zeroflte\r\nProduct: zerofltexx\r\nNo crash report recorded\r\n\r\n**App version**\r\n<!-- The latest version may be different depending on your device. You can find the version in AntennaPod's settings. -->\r\nAntennaPod 1.8.1 (6e6a64f50) ( tried versions from F-Droid and GooglePlayStore )\r\n\r\n**Android version**:\r\n9 ( Lineage OS 16.0 )\r\n\r\n**Device model**:\r\nSM-G920F\r\n\r\n# Bug description\r\nApp is unable to detect chapters/bookmarks in some podcast files (M4A) when chapter data is encoded at the end of audio file. \r\nThe app looks for chapter data in the beginning of the file, therefore is unable to detect chapters if \"chapter data\" is encoded at the end of the M4A. I have noted this issue with a few \"Apple Podcast M4A\" files, new apple non standard file shenanigans?\r\n\r\n**Steps to reproduce**:\r\nReplicate using this file http://audiocdn.economist.com/sites/default/files/AudioArchive/2020/20200725/Issue_9204_20200725_The_Economist_03_Leaders.m4a\r\nrun ffprobe to confirm that the file does contain chapter markers ffprobe -i Issue_9204_20200725_The_Economist_03_Leaders.m4a -show_chapters -loglevel error\r\n\r\nThis is how the Podcastaddict dev described the issue and fixed it, (devs feedback follows).**[...]** _The issue is that this specific podcast decided to move the chapter information at the end of the file instead of having them at the beginning which doesn't make any sense as it means that the app needs to get the whole file in order to just extract the metadata information. This podcast being especially long this would take a very long time and use a lot of data when streaming. I updated the app to be able to get those informations after the file gets downloaded as a workaround._ **[...]**\r\n\r\n**Expected behaviour**:\r\n<!-- After following the steps, what did you think AntennaPod would do? -->\r\nChapters/bookmarks in audio file should be detected and should be displayed\r\n\r\n**Current behaviour**:\r\n<!-- What did AntennaPod do instead? Screenshots might help. Usually, you can take a screenshot of your smartphone by pressing *Power* + *Volume down* for a few seconds. -->\r\nIs unable to detect chapters/bookmarks in some podcast files when \r\n**First occurred**: \r\nNew Install. Since install ( user migrated over from PodcastAddict ). \r\n**Environment**: \r\nNew install, default settings used.\r\n**Stacktrace/Logcat**:\r\n<!-- If you are experiencing a crash, including the stacktrace will likely get it fixed sooner. AntennaPod has an `export logs` feature for this. --> Not applicable, app did not crash\r\n```\r\n\r\n```\r\n\n", "hints_text": "Relevant lines from the log:\r\n\r\n```\r\n07-25 08:42:50.434 11014 11068 D ChapterUtils: Reading id3 chapters from item ...\r\n07-25 08:42:50.437 11014 11068 D ID3ChapterReader: No tag header found\r\n07-25 08:42:50.437 11014 11068 I ChapterUtils: ChapterReader could not find any ID3 chapters\r\n07-25 08:42:50.437 11014 11068 I ChapterUtils: Chapters loaded\r\n07-25 08:42:50.438 11014 11068 D ChapterUtils: Trying to read chapters from item with title ...\r\n07-25 08:42:50.440 11014 11068 I System.out: No vorbis comment found\r\n07-25 08:42:50.440 11014 11068 I ChapterUtils: ChapterReader could not find any Ogg vorbis chapters\r\n```\nThe file has chapters, but ID3ChapterReader does not see any. Not sure why :(\r\n\r\n`ffprobe -show_chapters http://audiocdn.economist.com/sites/default/files/AudioArchive/2020/20200725/Issue_9204_20200725_The_Economist_03_Leaders.m4a\r\n\r\n[mov,mp4,m4a,3gp,3g2,mj2 @ 0x555be7552ec0] Unknown cover type: 0x0.\r\n\r\nInput #0, mov,mp4,m4a,3gp,3g2,mj2, from 'http://audiocdn.economist.com/sites/default/files/AudioArchive/2020/20200725/Issue_9204_20200725_The_Economist_03_Leaders.m4a':\r\n\r\n  Metadata:\r\n    major_brand     : mp42\r\n    minor_version   : 0\r\n    compatible_brands: mp42isom\r\n    creation_time   : 2020-07-23T17:27:49.000000Z\r\n    title           : 03 Leaders\r\n    artist          : The Economist\r\n    album           : July 25th-31st 2020\r\n    genre           : Speech\r\n    track           : 3/21\r\n  Duration: 00:32:30.16, start: 0.000000, bitrate: 64 kb/s\r\n    Chapter #0:0: start 0.000000, end 30.537000\r\n    Metadata:\r\n      title           : 004 Leaders\r\n    Chapter #0:1: start 30.537000, end 530.612000\r\n    Metadata:\r\n      title           : 005 Leaders - Macroeconomics\r\n    Chapter #0:2: start 530.612000, end 848.703000\r\n    Metadata:\r\n      title           : 006 Leaders - Collective debt\r\n    Chapter #0:3: start 848.703000, end 1265.657000\r\n    Metadata:\r\n      title           : 007 Leaders - Regional development\r\n    Chapter #0:4: start 1265.657000, end 1598.170000\r\n    Metadata:\r\n      title           : 008 Leaders - Tanzania\r\n    Chapter #0:5: start 1598.170000, end 1950.162000\r\n    Metadata:\r\n      title           : 009 Leaders - Space exploration\r\n    Stream #0:0(eng): Audio: aac (LC) (mp4a / 0x6134706D), 44100 Hz, mono, fltp, 48 kb/s (default)\r\n    Metadata:\r\n      creation_time   : 2020-07-23T17:27:49.000000Z\r\n    Stream #0:1(und): Data: bin_data (text / 0x74786574)\r\n    Metadata:\r\n      creation_time   : 2020-07-23T17:27:49.000000Z\r\nUnsupported codec with id 100359 for input stream 1\r\n[CHAPTER]\r\nid=0\r\ntime_base=1/1000\r\nstart=0\r\nstart_time=0.000000\r\nend=30537\r\nend_time=30.537000\r\nTAG:title=004 Leaders\r\n[/CHAPTER]\r\n[CHAPTER]\r\nid=1\r\ntime_base=1/1000\r\nstart=30537\r\nstart_time=30.537000\r\nend=530612\r\nend_time=530.612000\r\nTAG:title=005 Leaders - Macroeconomics\r\n[/CHAPTER]\r\n[CHAPTER]\r\nid=2\r\ntime_base=1/1000\r\nstart=530612\r\nstart_time=530.612000\r\nend=848703\r\nend_time=848.703000\r\nTAG:title=006 Leaders - Collective debt\r\n[/CHAPTER]\r\n[CHAPTER]\r\nid=3\r\ntime_base=1/1000\r\nstart=848703\r\nstart_time=848.703000\r\nend=1265657\r\nend_time=1265.657000\r\nTAG:title=007 Leaders - Regional development\r\n[/CHAPTER]\r\n[CHAPTER]\r\nid=4\r\ntime_base=1/1000\r\nstart=1265657\r\nstart_time=1265.657000\r\nend=1598170\r\nend_time=1598.170000\r\nTAG:title=008 Leaders - Tanzania\r\n[/CHAPTER]\r\n[CHAPTER]\r\nid=5\r\ntime_base=1/1000\r\nstart=1598170\r\nstart_time=1598.170000\r\nend=1950162\r\nend_time=1950.162000\r\nTAG:title=009 Leaders - Space exploration\r\n[/CHAPTER]\r\n`\r\n\nAntennaPod currently does not support m4a chapters at all. If a podcast specifies the chapters in the RSS feed, they are shown independently from the media file, though. We already have [m4a test files](https://github.com/AntennaPod/AntennaPod/tree/develop/core/src/test/resources/media-parser), so the only thing missing is writing the parser (see this [m4a specification](http://atomicparsley.sourceforge.net/mpeg-4files.html))\nThis issue has been mentioned on **AntennaPod Forum**. There might be relevant details there:\n\nhttps://forum.antennapod.org/t/ldn-no-pictures-for-chaptermarks-in-the-m4a-feed-ldn311/2489/3\n\nThis issue has been mentioned on **AntennaPod Forum**. There might be relevant details there:\n\nhttps://forum.antennapod.org/t/show-notes-for-local-folder-podcasts/2589/5\n\nI'm so down for that. I listen to circa 20 podcasts and **none of them** provides chapters supported by AnthennaPod. Actually I found out about AnthennaPod supporting chapters from this issue tracker because my podcasts only have m4a chapters if any and only some of them provide timestamps via RSS.\r\n\r\nI want to add to this issue that chapter information can also be embedded into MP3 files. Maybe it's a good idea to extend this proposal by adding support for MP3 chapters alongside M4A.\nChapters in MP3, MP4, Ogg and Opus are already supported.\n@ByteHamster Well hard luck because they're not for me apparently. I can confirm that the whole episode is treated as one big chapter despite that ffprobe reads chapters with no problem.\nOf course I have the latest version of AnthennaPod (2.7.1)\nThis usually means that the podcast creator messed something up with the chapters (AntennaPod uses fewer workarounds than ffprobe), but feel free to create a new issue describing the problem in more detail.\nCan someone please clarify what the state of embedded M4A chapters is? This issue has two different positions: \r\n\r\n28 Feb 21: \"AntennaPod currently does not support m4a chapters at all.\"\r\nToday: \"Chapters in MP3, MP4, Ogg and Opus are already supported.\"\r\n\r\nWas support added in the meantime (just asking because the issue is still open). I have the same problem that for some of my podcasts, chapters are not visible, although I can see them in Pocket Casts, Apple Podcasts and also with ffprobe when checking the m4a file. Would be awesome to get that working.\r\n\r\nIf I can provide any information to help figure this out, please let me know.\n\r\n> 28 Feb 21: \"AntennaPod currently does not support m4a chapters at all.\" Today: \"Chapters in MP3, MP4, Ogg and Opus are already supported.\"\r\n\r\nCredit to @ByteHamster , AntenanPod does support m4a chapters now. Have seen chapters in multiple podcasts now. Here is an example 'https://www.bloomberg.com/news/audio/2023-04-06/imf-western-alliance-etfs-and-kurodanomics-podcast' , the chapters are recognized, they show up as a list and in the little blue timeline bar.\r\n\r\n![](https://i.imgur.com/XKRB6xg.jpg)\r\n\r\n>  I have the same problem that for some of my podcasts, chapters are not visible, although I can see them in Pocket Casts, Apple Podcasts and also with ffprobe when checking the m4a file.\r\n\r\nAs the hamster said above if the podcast creator / distributor uses software that creates [non-standard chapters](https://archive.ph/slQXM) AntennaPod cannot see them. \r\n\r\n## Lets use the Bloomberg podcast above as an example. \r\n( Tested with ffprobe & AntennaPod v2.7.1 )\r\n\r\nChapters show up when you grab the file from \r\n\r\n[Apple Podcasts](https://podcasts.apple.com/us/podcast/imf-western-alliance-etfs-and-kurodanomics/id326301337?i=1000607748771)\r\n[omny.fm](https://omny.fm/shows/the-tape/imf-western-alliance-etfs-and-kurodanomics)\r\nGoogle Podcasts\r\n\r\nBut not from \r\n\r\n[bloomberg.com](https://www.bloomberg.com/news/audio/2023-04-06/imfffprobe -v-western-alliance-etfs-and-kurodanomics-podcast)\r\nor [Sticher](https://www.stitcher.com/show/pl-with-pimm-fox-and-lisa-abramowicz/episode/imf-western-alliance-etfs-and-kurodanomics-301654938)\r\n\r\n**My hot take** : The advertising networks that insert custom adverts on the fly are mangling the file en-route to the listener. Sticher is a good example, when tested from my IP, got chapters, when tested from a vpn chapters disappeared, over tor chapters came back, tested from a second VPN provider chapters disappeared. \r\n\r\n@ByteHamster please feel free to close this issue as you have done your part, and the chapter mess is happening somewhere else\nWe support a bunch of chapter specifications, but not yet the one most commonly used in m4a files. If you can see chapters in m4a files, that's probably because the author encoded them with ID3 tags (which is apparently not recommended with m4a). So this issue is still open\nI did some digging and found sannies/mp4parser to fetch metadata from the container, as shown here. I assume this would also be usable for chapters (not exactly sure how they are encoded in the container though): https://github.com/sannies/mp4parser/blob/master/examples/src/main/java/org/mp4parser/examples/metadata/MetaDataRead.java.\r\n\r\nUnfortunately I'm not an Android dev so I didn't test that, but if if helps, once I find some more spare time, I can see if I can provide a PoC that works with the referenced files. \r\n\r\nThere's also an old issue for Voice, the guys there apparently implemented that by parsing the ffprobe output: https://github.com/PaulWoitaschek/Voice/issues/205 (see followup / PR at the end of the thread).\r\n\r\nMaybe the inclusion could be a feasible option if acceptable license/size wise?\nThat library feels a bit like an overkill, doing way more than we ever need. I think a small class that does the parsing should be enough.\n> This usually means that the podcast creator messed something up with the chapters (AntennaPod uses fewer workarounds than ffprobe), but feel free to create a new issue describing the problem in more detail.\r\n\r\n@ByteHamster I don't think it's a good attitude. Nobody actually does chapters by hand so some popular programs must create them like that since **none** of podcasts with chapters I listen is supported by AntennaPod (that's why I created a feature request). And they are supported by other players or by ffprobe itself. I don't negate that AntennaPod supports some kind of kosher chapter style but the thing is it doesn't support many other types of chapters that are out there in the wild. I think AntennaPod as a tool should support as much chapter styles as possible or use some kind of library specialized in this task. Please don't be so orthodox that AntennaPod supports few true chapter formats and whoever uses software that produces others is **wrong**. I know that lack of standardization can be frustrating but that's how the world works. You have to adopt. Even if you are a hobby project (which is awesome but mainly for checking updates and downloading episodes because I actually have to use separate player supporting chapters and rewinding tracks using headset button).   \r\n\n> We support a bunch of chapter specifications, but not yet the one most commonly used in m4a files. If you can see chapters in m4a files, that's probably because the author encoded them with ID3 tags (which is apparently not recommended with m4a). So this issue is still open\r\n\r\n@ByteHamster I hope it will be implemented soon because it looks like that's the most popular chapter format out there (which is odd that it's implemented as last)\nI'd like to second the support for this feature.  The podcasts I listen to are m4a with chapters, so lack of this feature prevents me from using AntennaPod as my podcast app.  I'd be happy to be a tester for this, if that's helpful to the developers.", "created_at": "2024-05-02T14:33:47Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 7103, "instance_id": "AntennaPod__AntennaPod-7103", "issue_numbers": ["4935"], "base_commit": "1edceb1b977d9dbffe916ecc187edd67870e55ab", "patch": "diff --git a/.github/workflows/checks.yml b/.github/workflows/checks.yml\nindex 6431f31252..0d8ef46c13 100644\n--- a/.github/workflows/checks.yml\n+++ b/.github/workflows/checks.yml\n@@ -102,7 +102,7 @@ jobs:\n   emulator-test:\n     name: \"Emulator Test\"\n     needs: static-analysis\n-    runs-on: macOS-latest\n+    runs-on: ubuntu-latest\n     timeout-minutes: 45\n     env:\n       api-level: 30\n@@ -124,6 +124,11 @@ jobs:\n         run: echo \"org.gradle.parallel=true\" >> local.properties\n       - name: Build with Gradle\n         run: ./gradlew assemblePlayDebugAndroidTest\n+      - name: Enable KVM group perms\n+        run: |\n+          echo 'KERNEL==\"kvm\", GROUP=\"kvm\", MODE=\"0666\", OPTIONS+=\"static_node=kvm\"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules\n+          sudo udevadm control --reload-rules\n+          sudo udevadm trigger --name-match=kvm\n       - name: Android Emulator test\n         uses: reactivecircus/android-emulator-runner@v2\n         with:\n@@ -133,7 +138,7 @@ jobs:\n           force-avd-creation: false\n           emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none\n           disable-animations: true\n-          script: zsh .github/workflows/runEmulatorTests.sh\n+          script: bash .github/workflows/runEmulatorTests.sh\n       - uses: actions/upload-artifact@v4\n         if: failure()\n         with:\ndiff --git a/app/build.gradle b/app/build.gradle\nindex 2abb66ccfd..bdfe9043bf 100644\n--- a/app/build.gradle\n+++ b/app/build.gradle\n@@ -69,6 +69,7 @@ dependencies {\n     implementation project(':net:ssl')\n     implementation project(':net:sync:service')\n     implementation project(':parser:feed')\n+    implementation project(':parser:transcript')\n     implementation project(':playback:base')\n     implementation project(':playback:cast')\n     implementation project(':storage:database')\n@@ -88,6 +89,7 @@ dependencies {\n     implementation project(':net:sync:service-interface')\n     implementation project(':playback:service')\n     implementation project(':ui:chapters')\n+    implementation project(':ui:transcript')\n \n     annotationProcessor \"androidx.annotation:annotation:$annotationVersion\"\n     implementation \"androidx.appcompat:appcompat:$appcompatVersion\"\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/FeedItemMenuHandler.java b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/FeedItemMenuHandler.java\nindex e1974940c1..527b36b7b6 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/FeedItemMenuHandler.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/FeedItemMenuHandler.java\n@@ -60,6 +60,7 @@ public static boolean onPrepareMenu(Menu menu, FeedItem selectedItem) {\n         final boolean fileDownloaded = hasMedia && selectedItem.getMedia().fileExists();\n         final boolean isLocalFile = hasMedia && selectedItem.getFeed().isLocalFeed();\n         final boolean isFavorite = selectedItem.isTagged(FeedItem.TAG_FAVORITE);\n+        final boolean hasTranscript = selectedItem.hasTranscript();\n \n         setItemVisibility(menu, R.id.skip_episode_item, isPlaying);\n         setItemVisibility(menu, R.id.remove_from_queue_item, isInQueue);\n@@ -84,6 +85,7 @@ public static boolean onPrepareMenu(Menu menu, FeedItem selectedItem) {\n         setItemVisibility(menu, R.id.add_to_favorites_item, !isFavorite);\n         setItemVisibility(menu, R.id.remove_from_favorites_item, isFavorite);\n         setItemVisibility(menu, R.id.remove_item, fileDownloaded || isLocalFile);\n+        setItemVisibility(menu, R.id.transcript_item, hasTranscript);\n         return true;\n     }\n \ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/TranscriptAdapter.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/TranscriptAdapter.java\nnew file mode 100644\nindex 0000000000..ffb3b7bdae\n--- /dev/null\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/TranscriptAdapter.java\n@@ -0,0 +1,145 @@\n+package de.danoeh.antennapod.ui.screen.playback;\n+\n+import android.content.Context;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import androidx.annotation.NonNull;\n+import androidx.core.content.ContextCompat;\n+import androidx.recyclerview.widget.RecyclerView;\n+import com.google.android.material.elevation.SurfaceColors;\n+import de.danoeh.antennapod.databinding.TranscriptItemBinding;\n+import de.danoeh.antennapod.event.playback.PlaybackPositionEvent;\n+import de.danoeh.antennapod.model.feed.FeedMedia;\n+import de.danoeh.antennapod.model.feed.TranscriptSegment;\n+import de.danoeh.antennapod.model.playback.Playable;\n+import de.danoeh.antennapod.ui.common.Converter;\n+import de.danoeh.antennapod.ui.transcript.TranscriptViewholder;\n+import java.util.Set;\n+import org.greenrobot.eventbus.EventBus;\n+import org.greenrobot.eventbus.Subscribe;\n+import org.greenrobot.eventbus.ThreadMode;\n+import org.jsoup.internal.StringUtil;\n+\n+public class TranscriptAdapter extends RecyclerView.Adapter<TranscriptViewholder> {\n+\n+    public String tag = \"TranscriptAdapter\";\n+    private final SegmentClickListener segmentClickListener;\n+    private final Context context;\n+    private FeedMedia media;\n+    private int prevHighlightPosition = -1;\n+    private int highlightPosition = -1;\n+\n+    public TranscriptAdapter(Context context, SegmentClickListener segmentClickListener) {\n+        this.context = context;\n+        this.segmentClickListener = segmentClickListener;\n+    }\n+\n+    @NonNull\n+    @Override\n+    public TranscriptViewholder onCreateViewHolder(@NonNull ViewGroup viewGroup, int viewType) {\n+        return new TranscriptViewholder(TranscriptItemBinding.inflate(LayoutInflater.from(context), viewGroup, false));\n+    }\n+\n+    public void setMedia(Playable media) {\n+        if (!(media instanceof FeedMedia)) {\n+            return;\n+        }\n+        this.media = (FeedMedia) media;\n+        notifyDataSetChanged();\n+    }\n+\n+    @Override\n+    public void onBindViewHolder(@NonNull TranscriptViewholder holder, int position) {\n+        if (media == null || media.getTranscript() == null) {\n+            return;\n+        }\n+\n+        TranscriptSegment seg = media.getTranscript().getSegmentAt(position);\n+        holder.viewContent.setOnClickListener(v -> {\n+            if (segmentClickListener != null)  {\n+                segmentClickListener.onTranscriptClicked(position, seg);\n+            }\n+        });\n+\n+        String timecode = Converter.getDurationStringLong((int) seg.getStartTime());\n+        if (!StringUtil.isBlank(seg.getSpeaker())) {\n+            if (position > 0 && media.getTranscript()\n+                    .getSegmentAt(position - 1).getSpeaker().equals(seg.getSpeaker())) {\n+                holder.viewTimecode.setVisibility(View.GONE);\n+                holder.viewContent.setText(seg.getWords());\n+            } else {\n+                holder.viewTimecode.setVisibility(View.VISIBLE);\n+                holder.viewTimecode.setText(timecode + \" \u2022 \" + seg.getSpeaker());\n+                holder.viewContent.setText(seg.getWords());\n+            }\n+        } else {\n+            Set<String> speakers = media.getTranscript().getSpeakers();\n+            if (speakers.isEmpty() && (position % 5 == 0)) {\n+                holder.viewTimecode.setVisibility(View.VISIBLE);\n+                holder.viewTimecode.setText(timecode);\n+            }\n+            holder.viewContent.setText(seg.getWords());\n+        }\n+\n+        if (position == highlightPosition) {\n+            float density = context.getResources().getDisplayMetrics().density;\n+            holder.viewContent.setBackgroundColor(SurfaceColors.getColorForElevation(context, 32 * density));\n+            holder.viewContent.setAlpha(1.0f);\n+            holder.viewTimecode.setAlpha(1.0f);\n+            holder.viewContent.setAlpha(1.0f);\n+        } else {\n+            holder.viewContent.setBackgroundColor(ContextCompat.getColor(context, android.R.color.transparent));\n+            holder.viewContent.setAlpha(0.5f);\n+            holder.viewTimecode.setAlpha(0.5f);\n+        }\n+    }\n+\n+    @Subscribe(threadMode = ThreadMode.MAIN)\n+    public void onEventMainThread(PlaybackPositionEvent event) {\n+        if (media == null || media.getTranscript() == null) {\n+            return;\n+        }\n+        int index = media.getTranscript().findSegmentIndexBefore(event.getPosition());\n+        if (index < 0 || index > media.getTranscript().getSegmentCount()) {\n+            return;\n+        }\n+        if (prevHighlightPosition != highlightPosition) {\n+            prevHighlightPosition = highlightPosition;\n+        }\n+        if (index != highlightPosition) {\n+            highlightPosition = index;\n+            notifyItemChanged(prevHighlightPosition);\n+            notifyItemChanged(highlightPosition);\n+        }\n+    }\n+\n+    @Override\n+    public int getItemCount() {\n+        if (media == null) {\n+            return 0;\n+        }\n+\n+        if (media.getTranscript() == null) {\n+            return 0;\n+        }\n+        return media.getTranscript().getSegmentCount();\n+    }\n+\n+    @Override\n+    public void onAttachedToRecyclerView(@NonNull RecyclerView recyclerView) {\n+        super.onAttachedToRecyclerView(recyclerView);\n+        EventBus.getDefault().register(this);\n+    }\n+\n+    @Override\n+    public void onDetachedFromRecyclerView(@NonNull RecyclerView recyclerView) {\n+        super.onDetachedFromRecyclerView(recyclerView);\n+        EventBus.getDefault().unregister(this);\n+    }\n+\n+\n+    public interface SegmentClickListener {\n+        void onTranscriptClicked(int position, TranscriptSegment seg);\n+    }\n+}\n\\ No newline at end of file\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/TranscriptDialogFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/TranscriptDialogFragment.java\nnew file mode 100644\nindex 0000000000..c0c492d10d\n--- /dev/null\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/TranscriptDialogFragment.java\n@@ -0,0 +1,220 @@\n+package de.danoeh.antennapod.ui.screen.playback;\n+\n+import android.app.Dialog;\n+import android.content.DialogInterface;\n+import android.os.Bundle;\n+import android.text.TextUtils;\n+import android.util.DisplayMetrics;\n+import android.util.Log;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.view.WindowManager;\n+import android.widget.Toast;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.DialogFragment;\n+import androidx.recyclerview.widget.LinearLayoutManager;\n+import androidx.recyclerview.widget.LinearSmoothScroller;\n+import androidx.recyclerview.widget.RecyclerView;\n+import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.databinding.TranscriptDialogBinding;\n+import de.danoeh.antennapod.event.playback.PlaybackPositionEvent;\n+import de.danoeh.antennapod.model.feed.FeedMedia;\n+import de.danoeh.antennapod.model.feed.Transcript;\n+import de.danoeh.antennapod.model.feed.TranscriptSegment;\n+import de.danoeh.antennapod.model.playback.Playable;\n+import de.danoeh.antennapod.playback.service.PlaybackController;\n+import de.danoeh.antennapod.ui.transcript.TranscriptUtils;\n+import io.reactivex.Maybe;\n+import io.reactivex.android.schedulers.AndroidSchedulers;\n+import io.reactivex.disposables.Disposable;\n+import io.reactivex.schedulers.Schedulers;\n+import org.greenrobot.eventbus.EventBus;\n+import org.greenrobot.eventbus.Subscribe;\n+import org.greenrobot.eventbus.ThreadMode;\n+\n+public class TranscriptDialogFragment extends DialogFragment {\n+    public static final String TAG = \"TranscriptFragment\";\n+    private TranscriptDialogBinding viewBinding;\n+    private PlaybackController controller;\n+    private Disposable disposable;\n+    private Playable media;\n+    private Transcript transcript;\n+    private TranscriptAdapter adapter = null;\n+    private boolean doInitialScroll = true;\n+    private LinearLayoutManager layoutManager;\n+\n+    @Override\n+    public void onResume() {\n+        ViewGroup.LayoutParams params;\n+        params = getDialog().getWindow().getAttributes();\n+        params.width = WindowManager.LayoutParams.MATCH_PARENT;\n+        getDialog().getWindow().setAttributes((WindowManager.LayoutParams) params);\n+        super.onResume();\n+    }\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+        viewBinding = TranscriptDialogBinding.inflate(getLayoutInflater());\n+        layoutManager = new LinearLayoutManager(getContext());\n+        viewBinding.transcriptList.setLayoutManager(layoutManager);\n+\n+        adapter = new TranscriptAdapter(getContext(), this::transcriptClicked);\n+        viewBinding.transcriptList.setAdapter(adapter);\n+        viewBinding.transcriptList.addOnScrollListener(new RecyclerView.OnScrollListener() {\n+            @Override\n+            public void onScrollStateChanged(@NonNull RecyclerView recyclerView, int newState) {\n+                super.onScrollStateChanged(recyclerView, newState);\n+                if (newState == RecyclerView.SCROLL_STATE_DRAGGING) {\n+                    viewBinding.followAudioCheckbox.setChecked(false);\n+                }\n+            }\n+        });\n+\n+        AlertDialog dialog = new MaterialAlertDialogBuilder(requireContext())\n+                .setView(viewBinding.getRoot())\n+                .setPositiveButton(getString(R.string.close_label), null)\n+                .setNegativeButton(getString(R.string.refresh_label), null)\n+                .setTitle(R.string.transcript)\n+                .create();\n+        viewBinding.followAudioCheckbox.setChecked(true);\n+        dialog.setOnShowListener(dialog1 -> {\n+            dialog.getButton(DialogInterface.BUTTON_NEGATIVE).setOnClickListener(v -> {\n+                viewBinding.progLoading.setVisibility(View.VISIBLE);\n+                v.setClickable(false);\n+                v.setEnabled(false);\n+                loadMediaInfo(true);\n+            });\n+        });\n+        viewBinding.progLoading.setVisibility(View.VISIBLE);\n+        doInitialScroll = true;\n+\n+\n+        return dialog;\n+    }\n+\n+    private void transcriptClicked(int pos, TranscriptSegment segment) {\n+        long startTime = segment.getStartTime();\n+        long endTime = segment.getEndTime();\n+\n+        scrollToPosition(pos);\n+        if (!(controller.getPosition() >= startTime && controller.getPosition() <= endTime)) {\n+            controller.seekTo((int) startTime);\n+        } else {\n+            controller.playPause();\n+        }\n+        adapter.notifyItemChanged(pos);\n+        viewBinding.followAudioCheckbox.setChecked(true);\n+    }\n+\n+    @Override\n+    public void onStart() {\n+        super.onStart();\n+        controller = new PlaybackController(getActivity()) {\n+            @Override\n+            public void loadMediaInfo() {\n+                TranscriptDialogFragment.this.loadMediaInfo(false);\n+            }\n+        };\n+        controller.init();\n+        EventBus.getDefault().register(this);\n+        loadMediaInfo(false);\n+    }\n+\n+    @Subscribe(threadMode = ThreadMode.MAIN)\n+    public void onEventMainThread(PlaybackPositionEvent event) {\n+        if (transcript == null) {\n+            return;\n+        }\n+        int pos = transcript.findSegmentIndexBefore(event.getPosition());\n+        scrollToPosition(pos);\n+    }\n+\n+    private void loadMediaInfo(boolean forceRefresh) {\n+        if (disposable != null) {\n+            disposable.dispose();\n+        }\n+        disposable = Maybe.create(emitter -> {\n+            Playable media = controller.getMedia();\n+            if (media instanceof FeedMedia) {\n+                this.media = media;\n+\n+                transcript = TranscriptUtils.loadTranscript((FeedMedia) this.media, forceRefresh);\n+                doInitialScroll = true;\n+                ((FeedMedia) this.media).setTranscript(transcript);\n+                emitter.onSuccess(this.media);\n+            } else {\n+                emitter.onComplete();\n+            }\n+        })\n+        .subscribeOn(Schedulers.io())\n+        .observeOn(AndroidSchedulers.mainThread())\n+        .subscribe(media -> onMediaChanged((Playable) media),\n+                error -> Log.e(TAG, Log.getStackTraceString(error)));\n+    }\n+\n+    private void onMediaChanged(Playable media) {\n+        if (!(media instanceof FeedMedia)) {\n+            return;\n+        }\n+        this.media = media;\n+\n+        if (!((FeedMedia) media).hasTranscript()) {\n+            dismiss();\n+            Toast.makeText(getContext(), R.string.no_transcript_label, Toast.LENGTH_LONG).show();\n+            return;\n+        }\n+\n+        viewBinding.progLoading.setVisibility(View.GONE);\n+        adapter.setMedia(media);\n+        ((AlertDialog) getDialog()).getButton(DialogInterface.BUTTON_NEGATIVE).setVisibility(View.INVISIBLE);\n+        if (!TextUtils.isEmpty(((FeedMedia) media).getItem().getTranscriptUrl())) {\n+            ((AlertDialog) getDialog()).getButton(DialogInterface.BUTTON_NEGATIVE).setVisibility(View.VISIBLE);\n+            ((AlertDialog) getDialog()).getButton(DialogInterface.BUTTON_NEGATIVE).setEnabled(true);\n+            ((AlertDialog) getDialog()).getButton(DialogInterface.BUTTON_NEGATIVE).setClickable(true);\n+        }\n+    }\n+\n+    public void scrollToPosition(int pos) {\n+        if (pos <= 0) {\n+            return;\n+        }\n+        if (!viewBinding.followAudioCheckbox.isChecked() && !doInitialScroll) {\n+            return;\n+        }\n+        doInitialScroll = false;\n+\n+        boolean quickScroll = Math.abs(layoutManager.findFirstVisibleItemPosition() - pos) > 5;\n+        if (quickScroll) {\n+            viewBinding.transcriptList.scrollToPosition(pos - 1);\n+            // Additionally, smooth scroll, so that currently active segment is on top of screen\n+        }\n+        LinearSmoothScroller smoothScroller = new LinearSmoothScroller(getContext()) {\n+            @Override\n+            protected int getVerticalSnapPreference() {\n+                return LinearSmoothScroller.SNAP_TO_START;\n+            }\n+\n+            protected float calculateSpeedPerPixel(DisplayMetrics displayMetrics) {\n+                return (quickScroll ? 200 : 1000) / (float) displayMetrics.densityDpi;\n+            }\n+        };\n+        smoothScroller.setTargetPosition(pos - 1);\n+        layoutManager.startSmoothScroll(smoothScroller);\n+    }\n+\n+    @Override\n+    public void onStop() {\n+        super.onStop();\n+        if (disposable != null) {\n+            disposable.dispose();\n+        }\n+        controller.release();\n+        controller = null;\n+        EventBus.getDefault().unregister(this);\n+    }\n+\n+}\n\\ No newline at end of file\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/AudioPlayerFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/AudioPlayerFragment.java\nindex e66ed6d3ea..42010dd53c 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/AudioPlayerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/AudioPlayerFragment.java\n@@ -33,6 +33,7 @@\n import de.danoeh.antennapod.ui.screen.playback.MediaPlayerErrorDialog;\n import de.danoeh.antennapod.ui.screen.playback.PlayButton;\n import de.danoeh.antennapod.ui.screen.playback.SleepTimerDialog;\n+import de.danoeh.antennapod.ui.screen.playback.TranscriptDialogFragment;\n import de.danoeh.antennapod.ui.screen.playback.VariableSpeedDialog;\n import org.greenrobot.eventbus.EventBus;\n import org.greenrobot.eventbus.Subscribe;\n@@ -161,7 +162,6 @@ public void onPageSelected(int position) {\n     }\n \n     private void setChapterDividers(Playable media) {\n-\n         if (media == null) {\n             return;\n         }\n@@ -495,6 +495,10 @@ public boolean onMenuItemClick(MenuItem item) {\n         if (itemId == R.id.disable_sleeptimer_item || itemId == R.id.set_sleeptimer_item) {\n             new SleepTimerDialog().show(getChildFragmentManager(), \"SleepTimerDialog\");\n             return true;\n+        } else if (itemId == R.id.transcript_item) {\n+            new TranscriptDialogFragment().show(\n+                    getActivity().getSupportFragmentManager(), TranscriptDialogFragment.TAG);\n+            return true;\n         } else if (itemId == R.id.open_feed_item) {\n             if (feedItem != null) {\n                 Intent intent = MainActivity.getIntentToOpenFeed(getContext(), feedItem.getFeedId());\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/transcript/TranscriptViewholder.java b/app/src/main/java/de/danoeh/antennapod/ui/transcript/TranscriptViewholder.java\nnew file mode 100644\nindex 0000000000..4e5e5f8653\n--- /dev/null\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/transcript/TranscriptViewholder.java\n@@ -0,0 +1,23 @@\n+package de.danoeh.antennapod.ui.transcript;\n+\n+import android.widget.TextView;\n+\n+import androidx.recyclerview.widget.RecyclerView;\n+\n+import de.danoeh.antennapod.databinding.TranscriptItemBinding;\n+\n+public class TranscriptViewholder extends RecyclerView.ViewHolder {\n+    public final TextView viewTimecode;\n+    public final TextView viewContent;\n+\n+    public TranscriptViewholder(TranscriptItemBinding binding) {\n+        super(binding.getRoot());\n+        viewTimecode = binding.speaker;\n+        viewContent = binding.content;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return super.toString() + \" '\" + viewContent.getText() + \"'\";\n+    }\n+}\n\\ No newline at end of file\ndiff --git a/app/src/main/res/layout/transcript_dialog.xml b/app/src/main/res/layout/transcript_dialog.xml\nnew file mode 100644\nindex 0000000000..22ac9aa4f4\n--- /dev/null\n+++ b/app/src/main/res/layout/transcript_dialog.xml\n@@ -0,0 +1,35 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:tools=\"http://schemas.android.com/tools\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:orientation=\"vertical\">\n+\n+    <ProgressBar\n+        android:id=\"@+id/progLoading\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_gravity=\"center\"\n+        android:indeterminateOnly=\"true\"\n+        android:visibility=\"gone\" />\n+\n+    <androidx.recyclerview.widget.RecyclerView\n+        android:id=\"@+id/transcript_list\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"0dp\"\n+        android:scrollIndicators=\"right\"\n+        android:scrollbarStyle=\"outsideInset\"\n+        android:layout_marginTop=\"16dp\"\n+        android:scrollbars=\"vertical\"\n+        android:layout_weight=\"1\"\n+        tools:listitem=\"@layout/transcript_item\" />\n+\n+    <CheckBox\n+        android:id=\"@+id/followAudioCheckbox\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginHorizontal=\"16dp\"\n+        android:text=\"@string/transcript_follow\" />\n+\n+</LinearLayout>\ndiff --git a/app/src/main/res/layout/transcript_item.xml b/app/src/main/res/layout/transcript_item.xml\nnew file mode 100644\nindex 0000000000..548ae7574e\n--- /dev/null\n+++ b/app/src/main/res/layout/transcript_item.xml\n@@ -0,0 +1,33 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:orientation=\"vertical\">\n+\n+    <TextView\n+        android:id=\"@+id/speaker\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_marginVertical=\"8dp\"\n+        android:paddingHorizontal=\"24dp\"\n+        android:clickable=\"false\"\n+        android:defaultFocusHighlightEnabled=\"false\"\n+        android:longClickable=\"false\"\n+        android:textStyle=\"bold\"\n+        android:textColor=\"?android:attr/textColorPrimary\" />\n+\n+    <TextView\n+        android:id=\"@+id/content\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:minLines=\"1\"\n+        android:maxLines=\"100\"\n+        android:nestedScrollingEnabled=\"false\"\n+        android:paddingHorizontal=\"24dp\"\n+        android:selectAllOnFocus=\"false\"\n+        android:singleLine=\"false\"\n+        android:textColor=\"?android:attr/textColorPrimary\"\n+        android:textIsSelectable=\"false\" />\n+\n+</LinearLayout>\ndiff --git a/app/src/main/res/menu/mediaplayer.xml b/app/src/main/res/menu/mediaplayer.xml\nindex a99151ac88..85eef565b6 100644\n--- a/app/src/main/res/menu/mediaplayer.xml\n+++ b/app/src/main/res/menu/mediaplayer.xml\n@@ -2,6 +2,12 @@\n <menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\n       xmlns:custom=\"http://schemas.android.com/apk/res-auto\">\n \n+    <item\n+        android:id=\"@+id/transcript_item\"\n+        android:icon=\"@drawable/transcript\"\n+        android:title=\"@string/show_transcript\"\n+        custom:showAsAction=\"ifRoom\">\n+    </item>\n     <item\n         android:id=\"@+id/add_to_favorites_item\"\n         android:icon=\"@drawable/ic_star_border\"\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java b/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java\nindex 1e623fd8e1..62dcf0f97b 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java\n@@ -171,7 +171,7 @@ public void updateFromOther(FeedItem other) {\n         if (other.podcastIndexChapterUrl != null) {\n             podcastIndexChapterUrl = other.podcastIndexChapterUrl;\n         }\n-        if (other.getPodcastIndexTranscriptUrl() != null) {\n+        if (other.getTranscriptUrl() != null) {\n             podcastIndexTranscriptUrl = other.podcastIndexTranscriptUrl;\n         }\n     }\n@@ -425,15 +425,15 @@ public void setPodcastIndexChapterUrl(String url) {\n         podcastIndexChapterUrl = url;\n     }\n \n-    public void setPodcastIndexTranscriptUrl(String type, String url) {\n+    public void setTranscriptUrl(String type, String url) {\n         updateTranscriptPreferredFormat(type, url);\n     }\n \n-    public String getPodcastIndexTranscriptUrl() {\n+    public String getTranscriptUrl() {\n         return podcastIndexTranscriptUrl;\n     }\n \n-    public String getPodcastIndexTranscriptType() {\n+    public String getTranscriptType() {\n         return podcastIndexTranscriptType;\n     }\n \n@@ -459,7 +459,6 @@ public void updateTranscriptPreferredFormat(String type, String url) {\n                 }\n                 break;\n             default:\n-                System.out.println(\"Invalid format for transcript \" + type);\n                 break;\n         }\n     }\n@@ -480,6 +479,10 @@ public String setPodcastIndexTranscriptText(String str) {\n         return podcastIndexTranscriptText = str;\n     }\n \n+    public boolean hasTranscript() {\n+        return (podcastIndexTranscriptUrl != null);\n+    }\n+\n     @NonNull\n     @Override\n     public String toString() {\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/FeedMedia.java b/model/src/main/java/de/danoeh/antennapod/model/feed/FeedMedia.java\nindex 76a891c15d..03710a6abf 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/feed/FeedMedia.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/FeedMedia.java\n@@ -5,6 +5,7 @@\n import android.os.Parcel;\n import android.os.Parcelable;\n import androidx.annotation.Nullable;\n+\n import android.support.v4.media.MediaBrowserCompat;\n import android.support.v4.media.MediaDescriptionCompat;\n import de.danoeh.antennapod.model.MediaMetadataRetrieverCompat;\n@@ -520,4 +521,25 @@ public String getTranscriptFileUrl() {\n         }\n         return getLocalFileUrl() + \".transcript\";\n     }\n+\n+    public void setTranscript(Transcript t) {\n+        if (item == null)  {\n+            return;\n+        }\n+        item.setTranscript(t);\n+    }\n+\n+    public Transcript getTranscript() {\n+        if (item == null)  {\n+            return null;\n+        }\n+        return item.getTranscript();\n+    }\n+\n+    public Boolean hasTranscript() {\n+        if (item == null)  {\n+            return false;\n+        }\n+        return item.hasTranscript();\n+    }\n }\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/Transcript.java b/model/src/main/java/de/danoeh/antennapod/model/feed/Transcript.java\nindex da01c0e58c..00c432dfec 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/feed/Transcript.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/Transcript.java\n@@ -1,28 +1,50 @@\n package de.danoeh.antennapod.model.feed;\n \n-import java.util.Map;\n-import java.util.TreeMap;\n+import java.util.ArrayList;\n+import java.util.Set;\n \n public class Transcript {\n-\n-    private final TreeMap<Long, TranscriptSegment> segmentsMap = new TreeMap<>();\n+    private Set<String> speakers;\n+    private final ArrayList<TranscriptSegment> segments = new ArrayList<>();\n \n     public void addSegment(TranscriptSegment segment) {\n-        segmentsMap.put(segment.getStartTime(), segment);\n+        if ((!segments.isEmpty() && segments.get(segments.size() - 1).getStartTime() >= segment.getStartTime())) {\n+            throw new IllegalArgumentException(\"Segments must be added in sorted order\");\n+        }\n+        segments.add(segment);\n     }\n \n-    public TranscriptSegment getSegmentAtTime(long time) {\n-        if (segmentsMap.floorEntry(time) == null) {\n-            return null;\n+    public int findSegmentIndexBefore(long time) {\n+        int a = 0;\n+        int b = segments.size() - 1;\n+        while (a < b) {\n+            int pivot = (a + b + 1) / 2;\n+            if (segments.get(pivot).getStartTime() > time) {\n+                b = pivot - 1;\n+            } else {\n+                a = pivot;\n+            }\n         }\n-        return segmentsMap.floorEntry(time).getValue();\n+        return a;\n     }\n \n-    public int getSegmentCount() {\n-        return segmentsMap.size();\n+    public TranscriptSegment getSegmentAt(int index) {\n+        return segments.get(index);\n+    }\n+\n+    public TranscriptSegment getSegmentAtTime(long time) {\n+        return getSegmentAt(findSegmentIndexBefore(time));\n+    }\n+\n+    public Set<String> getSpeakers() {\n+        return speakers;\n     }\n \n-    public Map.Entry<Long, TranscriptSegment> getEntryAfterTime(long time) {\n-        return segmentsMap.ceilingEntry(time);\n+    public void setSpeakers(Set<String> speakers) {\n+        this.speakers = speakers;\n+    }\n+\n+    public int getSegmentCount() {\n+        return segments.size();\n     }\n }\ndiff --git a/net/download/service/build.gradle b/net/download/service/build.gradle\nindex cebffc75c3..4aee1acd30 100644\n--- a/net/download/service/build.gradle\n+++ b/net/download/service/build.gradle\n@@ -22,6 +22,7 @@ dependencies {\n     implementation project(':storage:preferences')\n     implementation project(':ui:app-start-intent')\n     implementation project(':ui:chapters')\n+    implementation project(':ui:transcript')\n \n     annotationProcessor \"androidx.annotation:annotation:$annotationVersion\"\n     implementation \"androidx.core:core:$coreVersion\"\ndiff --git a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/MediaDownloadedHandler.java b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/MediaDownloadedHandler.java\nindex 3d39911e38..5f123961c4 100644\n--- a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/MediaDownloadedHandler.java\n+++ b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/MediaDownloadedHandler.java\n@@ -9,7 +9,6 @@\n import de.danoeh.antennapod.model.MediaMetadataRetrieverCompat;\n import de.danoeh.antennapod.net.sync.serviceinterface.SynchronizationQueueSink;\n import de.danoeh.antennapod.ui.chapters.ChapterUtils;\n-import de.danoeh.antennapod.ui.chapters.PodcastIndexTranscriptUtils;\n import org.apache.commons.lang3.StringUtils;\n import org.greenrobot.eventbus.EventBus;\n \n@@ -26,6 +25,7 @@\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n import de.danoeh.antennapod.net.sync.serviceinterface.EpisodeAction;\n+import de.danoeh.antennapod.ui.transcript.TranscriptUtils;\n \n /**\n  * Handles a completed media download.\n@@ -66,12 +66,11 @@ public void run() {\n                 ChapterUtils.loadChaptersFromUrl(media.getItem().getPodcastIndexChapterUrl(), false);\n             }\n             FeedItem item = media.getItem();\n-            if (item != null && item.getPodcastIndexTranscriptUrl() != null) {\n-                String transcript = PodcastIndexTranscriptUtils.loadTranscriptFromUrl(\n-                        item.getPodcastIndexTranscriptType(), item.getPodcastIndexTranscriptUrl(), false);\n+            if (item != null && item.getTranscriptUrl() != null) {\n+                String transcript = TranscriptUtils.loadTranscriptFromUrl(item.getTranscriptUrl(), true);\n                 if (!StringUtils.isEmpty(transcript)) {\n                     item.setPodcastIndexTranscriptText(transcript);\n-                    PodcastIndexTranscriptUtils.storeTranscript(media, transcript);\n+                    TranscriptUtils.storeTranscript(media, transcript);\n                 }\n             }\n         } catch (InterruptedIOException ignore) {\ndiff --git a/parser/feed/src/main/java/de/danoeh/antennapod/parser/feed/namespace/PodcastIndex.java b/parser/feed/src/main/java/de/danoeh/antennapod/parser/feed/namespace/PodcastIndex.java\nindex dd11fb4e7b..8b49831fe5 100644\n--- a/parser/feed/src/main/java/de/danoeh/antennapod/parser/feed/namespace/PodcastIndex.java\n+++ b/parser/feed/src/main/java/de/danoeh/antennapod/parser/feed/namespace/PodcastIndex.java\n@@ -34,7 +34,7 @@ public SyndElement handleElementStart(String localName, HandlerState state,\n             String href = attributes.getValue(URL);\n             String type = attributes.getValue(TYPE);\n             if (!TextUtils.isEmpty(href) && !TextUtils.isEmpty(type)) {\n-                state.getCurrentItem().setPodcastIndexTranscriptUrl(type, href);\n+                state.getCurrentItem().setTranscriptUrl(type, href);\n             }\n         }\n         return new SyndElement(localName, this);\ndiff --git a/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/JsonTranscriptParser.java b/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/JsonTranscriptParser.java\nindex 78f3bf9c85..38c24f09b2 100644\n--- a/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/JsonTranscriptParser.java\n+++ b/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/JsonTranscriptParser.java\n@@ -2,9 +2,13 @@\n \n import org.apache.commons.lang3.StringUtils;\n import org.json.JSONArray;\n+import org.json.JSONException;\n import org.json.JSONObject;\n import org.jsoup.internal.StringUtil;\n \n+import java.util.HashSet;\n+import java.util.Set;\n+\n import de.danoeh.antennapod.model.feed.Transcript;\n import de.danoeh.antennapod.model.feed.TranscriptSegment;\n \n@@ -15,14 +19,25 @@ public static Transcript parse(String jsonStr) {\n             long startTime = -1L;\n             long endTime = -1L;\n             long segmentStartTime = -1L;\n+            long segmentEndTime = -1L;\n             long duration = 0L;\n             String speaker = \"\";\n+            String prevSpeaker = \"\";\n             String segmentBody = \"\";\n-            JSONObject obj = new JSONObject(jsonStr);\n-            JSONArray objSegments = obj.getJSONArray(\"segments\");\n+            JSONArray objSegments;\n+            Set<String> speakers = new HashSet<>();\n+\n+            try {\n+                JSONObject obj = new JSONObject(jsonStr);\n+                objSegments = obj.getJSONArray(\"segments\");\n+            } catch (JSONException e) {\n+                e.printStackTrace();\n+                return null;\n+            }\n \n             for (int i = 0; i < objSegments.length(); i++) {\n                 JSONObject jsonObject = objSegments.getJSONObject(i);\n+                segmentEndTime = endTime;\n                 startTime = Double.valueOf(jsonObject.optDouble(\"startTime\", -1) * 1000L).longValue();\n                 endTime = Double.valueOf(jsonObject.optDouble(\"endTime\", -1) * 1000L).longValue();\n                 if (startTime < 0 || endTime < 0) {\n@@ -33,11 +48,40 @@ public static Transcript parse(String jsonStr) {\n                 }\n                 duration += endTime - startTime;\n \n+                prevSpeaker = speaker;\n                 speaker = jsonObject.optString(\"speaker\");\n+                speakers.add(speaker);\n+                if (StringUtils.isEmpty(speaker) && StringUtils.isNotEmpty(prevSpeaker)) {\n+                    speaker = prevSpeaker;\n+                }\n                 String body = jsonObject.optString(\"body\");\n-                segmentBody += body + \" \";\n+                if (!prevSpeaker.equals(speaker)) {\n+                    if (StringUtils.isNotEmpty(segmentBody)) {\n+                        segmentBody = StringUtils.trim(segmentBody);\n+                        transcript.addSegment(new TranscriptSegment(segmentStartTime,\n+                                segmentEndTime,\n+                                segmentBody,\n+                                prevSpeaker));\n+                        segmentStartTime = startTime;\n+                        segmentBody = body.toString();\n+                        duration = 0L;\n+                        continue;\n+                    }\n+                }\n+\n+                segmentBody += \" \" + body;\n \n                 if (duration >= TranscriptParser.MIN_SPAN) {\n+                    // Look ahead and make sure the next segment does not start with an alphanumeric character\n+                    if ((i + 1) < objSegments.length()) {\n+                        String nextSegmentFirstChar = objSegments.getJSONObject(i + 1)\n+                                .optString(\"body\")\n+                                .substring(0, 1);\n+                        if (!StringUtils.isAlphanumeric(nextSegmentFirstChar)\n+                                && (duration < TranscriptParser.MAX_SPAN)) {\n+                            continue;\n+                        }\n+                    }\n                     segmentBody = StringUtils.trim(segmentBody);\n                     transcript.addSegment(new TranscriptSegment(segmentStartTime, endTime, segmentBody, speaker));\n                     duration = 0L;\n@@ -52,12 +96,13 @@ public static Transcript parse(String jsonStr) {\n             }\n \n             if (transcript.getSegmentCount() > 0) {\n+                transcript.setSpeakers(speakers);\n                 return transcript;\n             } else {\n                 return null;\n             }\n \n-        } catch (org.json.JSONException e) {\n+        } catch (JSONException e) {\n             e.printStackTrace();\n         }\n         return null;\ndiff --git a/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/SrtTranscriptParser.java b/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/SrtTranscriptParser.java\nindex 098dadd994..5d80a72652 100644\n--- a/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/SrtTranscriptParser.java\n+++ b/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/SrtTranscriptParser.java\n@@ -4,8 +4,10 @@\n import org.jsoup.internal.StringUtil;\n \n import java.util.Arrays;\n+import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.Set;\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n@@ -25,21 +27,26 @@ public static Transcript parse(String str) {\n         List<String> lines = Arrays.asList(str.split(\"\\n\"));\n         Iterator<String> iter = lines.iterator();\n         String speaker = \"\";\n-        StringBuilder body = new StringBuilder();\n+        String prevSpeaker = \"\";\n+        StringBuilder body;\n         String line;\n         String segmentBody = \"\";\n         long startTimecode = -1L;\n         long spanStartTimecode = -1L;\n+        long spanEndTimecode = -1L;\n         long endTimecode = -1L;\n         long duration = 0L;\n+        Set<String> speakers = new HashSet<>();\n \n         while (iter.hasNext()) {\n+            body = new StringBuilder();\n             line = iter.next();\n \n             if (line.isEmpty()) {\n                 continue;\n             }\n \n+            spanEndTimecode = endTimecode;\n             if (line.contains(\"-->\")) {\n                 String[] timecodes = line.split(\"-->\");\n                 if (timecodes.length < 2) {\n@@ -65,45 +72,53 @@ public static Transcript parse(String str) {\n                 } while (iter.hasNext());\n             }\n \n-            if (body.indexOf(\":\") != -1) {\n-                String [] parts = body.toString().trim().split(\":\");\n+            if (body.indexOf(\": \") != -1) {\n+                String[] parts = body.toString().trim().split(\":\");\n                 if (parts.length < 2) {\n                     continue;\n                 }\n+                prevSpeaker = speaker;\n                 speaker = parts[0];\n+                speakers.add(speaker);\n                 body = new StringBuilder(parts[1].strip());\n-            }\n-            if (!StringUtil.isBlank(body.toString())) {\n-                segmentBody += \" \" + body;\n-                segmentBody = StringUtils.trim(segmentBody);\n-                if (duration >= TranscriptParser.MIN_SPAN && endTimecode > spanStartTimecode) {\n-                    transcript.addSegment(new TranscriptSegment(spanStartTimecode,\n-                            endTimecode,\n-                            segmentBody,\n-                            speaker));\n-                    duration = 0L;\n-                    spanStartTimecode = -1L;\n-                    segmentBody = \"\";\n+                if (StringUtils.isNotEmpty(prevSpeaker) && !StringUtils.equals(speaker, prevSpeaker)) {\n+                    if (StringUtils.isNotEmpty(segmentBody)) {\n+                        transcript.addSegment(new TranscriptSegment(spanStartTimecode,\n+                                spanEndTimecode, segmentBody, prevSpeaker));\n+                        duration = 0L;\n+                        spanStartTimecode = startTimecode;\n+                        segmentBody = body.toString();\n+                        continue;\n+                    }\n+                }\n+            } else {\n+                if (StringUtils.isNotEmpty(prevSpeaker) && StringUtils.isEmpty(speaker)) {\n+                    speaker = prevSpeaker;\n                 }\n-                body = new StringBuilder();\n+            }\n+\n+            segmentBody += \" \" + body;\n+            segmentBody = StringUtils.trim(segmentBody);\n+            if (duration >= TranscriptParser.MIN_SPAN && endTimecode > spanStartTimecode) {\n+                transcript.addSegment(new TranscriptSegment(spanStartTimecode, endTimecode, segmentBody, speaker));\n+                duration = 0L;\n+                spanStartTimecode = -1L;\n+                segmentBody = \"\";\n             }\n         }\n \n         if (!StringUtil.isBlank(segmentBody) && endTimecode > spanStartTimecode) {\n             segmentBody = StringUtils.trim(segmentBody);\n-            transcript.addSegment(new TranscriptSegment(spanStartTimecode,\n-                    endTimecode,\n-                    segmentBody,\n-                    speaker));\n+            transcript.addSegment(new TranscriptSegment(spanStartTimecode, endTimecode, segmentBody, speaker));\n         }\n         if (transcript.getSegmentCount() > 0) {\n+            transcript.setSpeakers(speakers);\n             return transcript;\n         } else {\n             return null;\n         }\n     }\n \n-    // Time format 00:00:00,000\n     static long parseTimecode(String timecode) {\n         Matcher matcher = TIMECODE_PATTERN.matcher(timecode);\n         if (!matcher.matches()) {\ndiff --git a/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/TranscriptParser.java b/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/TranscriptParser.java\nindex 0a4025d96f..4049b2c8f8 100644\n--- a/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/TranscriptParser.java\n+++ b/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/TranscriptParser.java\n@@ -5,7 +5,8 @@\n import de.danoeh.antennapod.model.feed.Transcript;\n \n public class TranscriptParser {\n-    static final long MIN_SPAN = 1000L; // merge short segments together to form a span of 1 second\n+    static final long MIN_SPAN = 5000L; // Merge short segments together to form a span of 5 seconds\n+    static final long MAX_SPAN = 8000L; // Don't go beyond 10 seconds when merging\n \n     public static Transcript parse(String str, String type) {\n         if (str == null || StringUtils.isBlank(str)) {\ndiff --git a/settings.gradle b/settings.gradle\nindex 3b3df7ba87..9f1d16fa44 100644\n--- a/settings.gradle\n+++ b/settings.gradle\n@@ -52,3 +52,4 @@ include ':ui:notifications'\n include ':ui:preferences'\n include ':ui:statistics'\n include ':ui:widget'\n+include ':ui:transcript'\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\nindex 3a5771b36d..3d6b6e8ef7 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\n@@ -675,8 +675,8 @@ private long updateOrInsertFeedItem(FeedItem item, boolean saveFeed) {\n         values.put(KEY_PODCASTINDEX_CHAPTER_URL, item.getPodcastIndexChapterUrl());\n \n         // We only store one transcript url, we prefer JSON if it exists\n-        String type = item.getPodcastIndexTranscriptType();\n-        String url = item.getPodcastIndexTranscriptUrl();\n+        String type = item.getTranscriptType();\n+        String url = item.getTranscriptUrl();\n         if (url != null) {\n             values.put(KEY_PODCASTINDEX_TRANSCRIPT_TYPE, type);\n             values.put(KEY_PODCASTINDEX_TRANSCRIPT_URL, url);\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemCursor.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemCursor.java\nindex 41e4d474ab..e771133ffe 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemCursor.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemCursor.java\n@@ -26,8 +26,8 @@ public class FeedItemCursor extends CursorWrapper {\n     private final int indexImageUrl;\n     private final int indexPodcastIndexChapterUrl;\n     private final int indexMediaId;\n-    private final int indexPodcastIndexTranscriptUrl;\n     private final int indexPodcastIndexTranscriptType;\n+    private final int indexPodcastIndexTranscriptUrl;\n \n     public FeedItemCursor(Cursor cursor) {\n         super(new FeedMediaCursor(cursor));\n@@ -45,8 +45,8 @@ public FeedItemCursor(Cursor cursor) {\n         indexImageUrl = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_IMAGE_URL);\n         indexPodcastIndexChapterUrl = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_PODCASTINDEX_CHAPTER_URL);\n         indexMediaId = cursor.getColumnIndexOrThrow(PodDBAdapter.SELECT_KEY_MEDIA_ID);\n-        indexPodcastIndexTranscriptUrl = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_PODCASTINDEX_TRANSCRIPT_URL);\n         indexPodcastIndexTranscriptType = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_PODCASTINDEX_TRANSCRIPT_TYPE);\n+        indexPodcastIndexTranscriptUrl = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_PODCASTINDEX_TRANSCRIPT_URL);\n     }\n \n     /**\n@@ -67,8 +67,8 @@ public FeedItem getFeedItem() {\n                 getString(indexItemIdentifier),\n                 getLong(indexAutoDownload) > 0,\n                 getString(indexPodcastIndexChapterUrl),\n-                getString(indexPodcastIndexTranscriptUrl),\n-                getString(indexPodcastIndexTranscriptType));\n+                getString(indexPodcastIndexTranscriptType),\n+                getString(indexPodcastIndexTranscriptUrl));\n         if (!isNull(indexMediaId)) {\n             item.setMedia(feedMediaCursor.getFeedMedia());\n         }\ndiff --git a/ui/chapters/build.gradle b/ui/chapters/build.gradle\nindex a3cb1b6779..a388027802 100644\n--- a/ui/chapters/build.gradle\n+++ b/ui/chapters/build.gradle\n@@ -13,9 +13,11 @@ dependencies {\n     implementation project(':net:common')\n     implementation project(':parser:media')\n     implementation project(':parser:feed')\n+    implementation project(':parser:transcript')\n     implementation project(':storage:database')\n \n     annotationProcessor \"androidx.annotation:annotation:$annotationVersion\"\n     implementation \"commons-io:commons-io:$commonsioVersion\"\n+    implementation \"org.apache.commons:commons-lang3:$commonslangVersion\"\n     implementation \"com.squareup.okhttp3:okhttp:$okhttpVersion\"\n }\ndiff --git a/ui/chapters/src/main/java/de/danoeh/antennapod/ui/chapters/PodcastIndexTranscriptUtils.java b/ui/chapters/src/main/java/de/danoeh/antennapod/ui/chapters/PodcastIndexTranscriptUtils.java\ndeleted file mode 100644\nindex 9add3db235..0000000000\n--- a/ui/chapters/src/main/java/de/danoeh/antennapod/ui/chapters/PodcastIndexTranscriptUtils.java\n+++ /dev/null\n@@ -1,55 +0,0 @@\n-package de.danoeh.antennapod.ui.chapters;\n-\n-import android.util.Log;\n-\n-import java.io.File;\n-import java.io.FileOutputStream;\n-import java.io.IOException;\n-import java.nio.charset.Charset;\n-\n-import de.danoeh.antennapod.model.feed.FeedMedia;\n-import de.danoeh.antennapod.net.common.AntennapodHttpClient;\n-import okhttp3.Request;\n-import okhttp3.Response;\n-import org.apache.commons.io.IOUtils;\n-\n-public class PodcastIndexTranscriptUtils {\n-\n-    private static final String TAG = \"PodcastIndexTranscript\";\n-\n-    public static String loadTranscriptFromUrl(String type, String url, boolean forceRefresh) {\n-        StringBuilder str = new StringBuilder();\n-        Response response = null;\n-        try {\n-            Log.d(TAG, \"Downloading transcript URL \" + url.toString());\n-            Request request = new Request.Builder().url(url).build();\n-            response = AntennapodHttpClient.getHttpClient().newCall(request).execute();\n-            if (response.isSuccessful() && response.body() != null) {\n-                str.append(response.body().string());\n-            }\n-        } catch (IOException e) {\n-            e.printStackTrace();\n-        } finally {\n-            if (response != null) {\n-                response.close();\n-            }\n-        }\n-        return str.toString();\n-    }\n-\n-    public static void storeTranscript(FeedMedia media, String transcript) {\n-        File transcriptFile = new File(media.getTranscriptFileUrl());\n-        FileOutputStream ostream = null;\n-        try {\n-            if (!transcriptFile.exists() && transcriptFile.createNewFile()) {\n-                ostream = new FileOutputStream(transcriptFile);\n-                ostream.write(transcript.getBytes(Charset.forName(\"UTF-8\")));\n-                ostream.close();\n-            }\n-        } catch (IOException e) {\n-            e.printStackTrace();\n-        } finally {\n-            IOUtils.closeQuietly(ostream);\n-        }\n-    }\n-}\ndiff --git a/ui/common/src/main/res/drawable/transcript.xml b/ui/common/src/main/res/drawable/transcript.xml\nnew file mode 100644\nindex 0000000000..435df4d7cc\n--- /dev/null\n+++ b/ui/common/src/main/res/drawable/transcript.xml\n@@ -0,0 +1,9 @@\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:width=\"24dp\"\n+    android:height=\"24dp\"\n+    android:viewportWidth=\"960\"\n+    android:viewportHeight=\"960\">\n+  <path\n+      android:fillColor=\"?attr/action_icon_color\"\n+      android:pathData=\"M240,640L560,640L560,560L240,560L240,640ZM640,640L720,640L720,560L640,560L640,640ZM240,480L320,480L320,400L240,400L240,480ZM400,480L720,480L720,400L400,400L400,480ZM160,800Q127,800 103.5,776.5Q80,753 80,720L80,240Q80,207 103.5,183.5Q127,160 160,160L800,160Q833,160 856.5,183.5Q880,207 880,240L880,720Q880,753 856.5,776.5Q833,800 800,800L160,800ZM160,720L800,720Q800,720 800,720Q800,720 800,720L800,240Q800,240 800,240Q800,240 800,240L160,240Q160,240 160,240Q160,240 160,240L160,720Q160,720 160,720Q160,720 160,720ZM160,720Q160,720 160,720Q160,720 160,720L160,240Q160,240 160,240Q160,240 160,240L160,240Q160,240 160,240Q160,240 160,240L160,720Q160,720 160,720Q160,720 160,720L160,720Z\"/>\n+</vector>\ndiff --git a/ui/i18n/src/main/res/values/strings.xml b/ui/i18n/src/main/res/values/strings.xml\nindex b86792f20e..bd925fefd3 100644\n--- a/ui/i18n/src/main/res/values/strings.xml\n+++ b/ui/i18n/src/main/res/values/strings.xml\n@@ -257,6 +257,10 @@\n         <item quantity=\"other\">%d episodes removed from inbox.</item>\n     </plurals>\n     <string name=\"add_to_favorite_label\">Add to favorites</string>\n+    <string name=\"show_transcript\">Show transcript</string>\n+    <string name=\"transcript\">Transcript</string>\n+    <string name=\"transcript_follow\">Follow audio</string>\n+    <string name=\"no_transcript_label\">No transcript</string>\n     <string name=\"remove_from_favorite_label\">Remove from favorites</string>\n     <string name=\"visit_website_label\">Visit website</string>\n     <string name=\"skip_episode_label\">Skip episode</string>\ndiff --git a/ui/transcript/build.gradle b/ui/transcript/build.gradle\nnew file mode 100644\nindex 0000000000..c82639fa79\n--- /dev/null\n+++ b/ui/transcript/build.gradle\n@@ -0,0 +1,20 @@\n+plugins {\n+    id(\"com.android.library\")\n+}\n+apply from: \"../../common.gradle\"\n+apply from: \"../../playFlavor.gradle\"\n+\n+android {\n+    namespace \"de.danoeh.antennapod.ui.transcript\"\n+}\n+\n+dependencies {\n+    implementation project(':model')\n+    implementation project(':net:common')\n+    implementation project(':parser:media')\n+    implementation project(':parser:transcript')\n+\n+    implementation \"commons-io:commons-io:$commonsioVersion\"\n+    implementation \"org.apache.commons:commons-lang3:$commonslangVersion\"\n+    implementation \"com.squareup.okhttp3:okhttp:$okhttpVersion\"\n+}\ndiff --git a/ui/transcript/src/main/java/de/danoeh/antennapod/ui/transcript/TranscriptUtils.java b/ui/transcript/src/main/java/de/danoeh/antennapod/ui/transcript/TranscriptUtils.java\nnew file mode 100644\nindex 0000000000..6f784457e0\n--- /dev/null\n+++ b/ui/transcript/src/main/java/de/danoeh/antennapod/ui/transcript/TranscriptUtils.java\n@@ -0,0 +1,111 @@\n+package de.danoeh.antennapod.ui.transcript;\n+\n+import android.util.Log;\n+import org.apache.commons.io.FileUtils;\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InterruptedIOException;\n+import java.nio.charset.Charset;\n+import de.danoeh.antennapod.model.feed.FeedMedia;\n+import de.danoeh.antennapod.net.common.AntennapodHttpClient;\n+import de.danoeh.antennapod.model.feed.Transcript;\n+import de.danoeh.antennapod.parser.transcript.TranscriptParser;\n+import okhttp3.CacheControl;\n+import okhttp3.Request;\n+import okhttp3.Response;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class TranscriptUtils {\n+    private static final String TAG = \"Transcript\";\n+\n+    public static String loadTranscriptFromUrl(String url, boolean forceRefresh) throws InterruptedIOException {\n+        if (forceRefresh) {\n+            return loadTranscriptFromUrl(url, CacheControl.FORCE_NETWORK);\n+        }\n+        String str = loadTranscriptFromUrl(url, CacheControl.FORCE_CACHE);\n+        if (str == null || str.length() <= 1) {\n+            // Some publishers use one dummy transcript before actual transcript are available\n+            return loadTranscriptFromUrl(url, CacheControl.FORCE_NETWORK);\n+        }\n+        return str;\n+    }\n+\n+    private static String loadTranscriptFromUrl(String url, CacheControl cacheControl) throws InterruptedIOException {\n+        StringBuilder str = new StringBuilder();\n+        Response response = null;\n+\n+        try {\n+            Log.d(TAG, \"Downloading transcript URL \" + url);\n+            Request request = new Request.Builder().url(url).cacheControl(cacheControl).build();\n+            response = AntennapodHttpClient.getHttpClient().newCall(request).execute();\n+            if (response.isSuccessful() && response.body() != null) {\n+                Log.d(TAG, \"Done Downloading transcript URL \" + url);\n+                str.append(response.body().string());\n+            } else {\n+                Log.d(TAG, \"Error Downloading transcript URL \" + url + \": \" + response.message());\n+            }\n+        } catch (InterruptedIOException e) {\n+            Log.d(TAG, \"InterruptedIOException while downloading transcript URL \" + url);\n+            throw e;\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+            return null;\n+        } finally {\n+            if (response != null) {\n+                response.close();\n+            }\n+        }\n+        return str.toString();\n+    }\n+\n+    public static Transcript loadTranscript(FeedMedia media, Boolean forceRefresh) throws InterruptedIOException {\n+        String transcriptType = media.getItem().getTranscriptType();\n+\n+        if (!forceRefresh && media.getItem().getTranscript() != null) {\n+            return media.getTranscript();\n+        }\n+\n+        if (!forceRefresh && media.getTranscriptFileUrl() != null) {\n+            File transcriptFile = new File(media.getTranscriptFileUrl());\n+            try {\n+                if (transcriptFile.exists()) {\n+                    String t = FileUtils.readFileToString(transcriptFile, (String) null);\n+                    if (StringUtils.isNotEmpty(t)) {\n+                        media.setTranscript(TranscriptParser.parse(t, transcriptType));\n+                        return media.getTranscript();\n+                    }\n+                }\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+        String transcriptUrl = media.getItem().getTranscriptUrl();\n+        String t = TranscriptUtils.loadTranscriptFromUrl(transcriptUrl, forceRefresh);\n+        if (StringUtils.isNotEmpty(t)) {\n+            return TranscriptParser.parse(t, transcriptType);\n+        }\n+        return null;\n+    }\n+\n+    public static void storeTranscript(FeedMedia media, String transcript) {\n+        File transcriptFile = new File(media.getTranscriptFileUrl());\n+        FileOutputStream ostream = null;\n+        try {\n+            if (transcriptFile.exists() && !transcriptFile.delete()) {\n+                Log.e(TAG, \"Failed to delete existing transcript file \" + transcriptFile.getAbsolutePath());\n+            }\n+            if (transcriptFile.createNewFile()) {\n+                ostream = new FileOutputStream(transcriptFile);\n+                ostream.write(transcript.getBytes(Charset.forName(\"UTF-8\")));\n+                ostream.close();\n+            }\n+        } catch (IOException e) {\n+            e.printStackTrace();\n+        } finally {\n+            IOUtils.closeQuietly(ostream);\n+        }\n+    }\n+}\n", "test_patch": "diff --git a/.github/workflows/runEmulatorTests.sh b/.github/workflows/runEmulatorTests.sh\nindex c297932a73..3da5a6592f 100644\n--- a/.github/workflows/runEmulatorTests.sh\n+++ b/.github/workflows/runEmulatorTests.sh\n@@ -1,4 +1,4 @@\n-#!/bin/zsh\n+#!/bin/bash\n \n set -o pipefail\n \ndiff --git a/parser/feed/src/test/java/de/danoeh/antennapod/parser/feed/element/namespace/RssParserTest.java b/parser/feed/src/test/java/de/danoeh/antennapod/parser/feed/element/namespace/RssParserTest.java\nindex 983766f12b..027e843a88 100644\n--- a/parser/feed/src/test/java/de/danoeh/antennapod/parser/feed/element/namespace/RssParserTest.java\n+++ b/parser/feed/src/test/java/de/danoeh/antennapod/parser/feed/element/namespace/RssParserTest.java\n@@ -101,8 +101,8 @@ public void testMultipleFundingTags() throws Exception {\n     public void testPodcastIndexTranscript() throws Exception {\n         File feedFile = FeedParserTestHelper.getFeedFile(\"feed-rss-testPodcastIndexTranscript.xml\");\n         Feed feed = FeedParserTestHelper.runFeedParser(feedFile);\n-        assertEquals(\"https://podnews.net/audio/podnews231011.mp3.json\", feed.getItems().get(0).getPodcastIndexTranscriptUrl());\n-        assertEquals(\"application/json\", feed.getItems().get(0).getPodcastIndexTranscriptType());\n+        assertEquals(\"https://podnews.net/audio/podnews231011.mp3.json\", feed.getItems().get(0).getTranscriptUrl());\n+        assertEquals(\"application/json\", feed.getItems().get(0).getTranscriptType());\n     }\n \n     @Test\ndiff --git a/parser/transcript/src/test/java/de/danoeh/antennapod/parser/transcript/JsonTranscriptParserTest.java b/parser/transcript/src/test/java/de/danoeh/antennapod/parser/transcript/JsonTranscriptParserTest.java\nindex 48996f492c..b795d88d7d 100644\n--- a/parser/transcript/src/test/java/de/danoeh/antennapod/parser/transcript/JsonTranscriptParserTest.java\n+++ b/parser/transcript/src/test/java/de/danoeh/antennapod/parser/transcript/JsonTranscriptParserTest.java\n@@ -14,20 +14,20 @@ public class JsonTranscriptParserTest {\n             + \"'segments': [ \"\n             + \"{ 'speaker' : 'John Doe', 'startTime': 0.8, 'endTime': 1.9, 'body': 'And' },\"\n             + \"{ 'speaker' : 'Sally Green', 'startTime': 1.91, 'endTime': 2.8, 'body': 'this merges' },\"\n-            + \"{ 'startTime': 2.9, 'endTime': 3.4, 'body': 'the' },\"\n-            + \"{ 'startTime': 3.5, 'endTime': 3.6, 'body': 'person' }]}\";\n+            + \"{ 'startTime': 2.9, 'endTime': 3.4, 'body': ' the' },\"\n+            + \"{ 'startTime': 3.5, 'endTime': 3.6, 'body': ' person' }]}\";\n \n     @Test\n     public void testParseJson() {\n         Transcript result = JsonTranscriptParser.parse(jsonStr);\n-\n-        assertEquals(result.getSegmentAtTime(0L), null);\n+        // TODO: for gaps in the transcript (ads, music) should we return null?\n+        assertEquals(result.getSegmentAtTime(0L).getStartTime(), 800L);\n         assertEquals(result.getSegmentAtTime(800L).getSpeaker(), \"John Doe\");\n         assertEquals(result.getSegmentAtTime(800L).getStartTime(), 800L);\n         assertEquals(result.getSegmentAtTime(800L).getEndTime(), 1900L);\n-        assertEquals(1910L, (long) result.getEntryAfterTime(1800L).getKey());\n-        // 2 segments get merged into at least 1 second\n-        assertEquals(\"this merges the\", result.getEntryAfterTime(1800L).getValue().getWords());\n+        assertEquals(result.getSegmentAtTime(1800L).getStartTime(), 800L);\n+        // 2 segments get merged into at least 5 second\n+        assertEquals(result.getSegmentAtTime(1800L).getWords(), \"And\");\n     }\n \n     @Test\ndiff --git a/parser/transcript/src/test/java/de/danoeh/antennapod/parser/transcript/SrtTranscriptParserTest.java b/parser/transcript/src/test/java/de/danoeh/antennapod/parser/transcript/SrtTranscriptParserTest.java\nindex f7854c5bf2..e72ea8ebc2 100644\n--- a/parser/transcript/src/test/java/de/danoeh/antennapod/parser/transcript/SrtTranscriptParserTest.java\n+++ b/parser/transcript/src/test/java/de/danoeh/antennapod/parser/transcript/SrtTranscriptParserTest.java\n@@ -10,13 +10,13 @@\n @RunWith(RobolectricTestRunner.class)\n public class SrtTranscriptParserTest {\n     private static String srtStr = \"1\\n\"\n-            + \"00:00:00,000 --> 00:00:02,730\\n\"\n+            + \"00:00:00,000 --> 00:00:50,730\\n\"\n             + \"John Doe: Promoting your podcast in a new\\n\\n\"\n             + \"2\\n\"\n-            + \"00:00:02,730 --> 00:00:04,600\\n\"\n+            + \"00:00:90,740 --> 00:00:91,600\\n\"\n             + \"way. The latest from PogNews.\\n\\n\"\n-            + \"00:00:04,730 --> 00:00:05,600\\n\"\n-            + \"way. The latest from PogNews.\";\n+            + \"00:00:91,730 --> 00:00:93,600\\n\"\n+            + \"We bring your favorite podcast.\";\n \n     @Test\n     public void testParseSrt() {\n@@ -25,9 +25,10 @@ public void testParseSrt() {\n         assertEquals(result.getSegmentAtTime(0L).getWords(), \"Promoting your podcast in a new\");\n         assertEquals(result.getSegmentAtTime(0L).getSpeaker(), \"John Doe\");\n         assertEquals(result.getSegmentAtTime(0L).getStartTime(), 0L);\n-        assertEquals(result.getSegmentAtTime(0L).getEndTime(), 2730L);\n-        assertEquals((long) result.getEntryAfterTime(1000L).getKey(), 2730L);\n-        assertEquals(result.getEntryAfterTime(1000L).getValue().getWords(), \"way. The latest from PogNews.\");\n+        assertEquals(result.getSegmentAtTime(0L).getEndTime(), 50730L);\n+        assertEquals(result.getSegmentAtTime(90740).getStartTime(), 90740);\n+        assertEquals(\"way. The latest from PogNews. We bring your favorite podcast.\",\n+                result.getSegmentAtTime(90740).getWords());\n     }\n \n     @Test\n", "problem_statement": "Support for podcast:transcript tag\n# Checklist\r\n<!-- Place an x in the boxes to tick them: [x] -->\r\n\r\n- [x] I have used the search function to see if someone else has already submitted the same feature request.\r\n- [x] I will only create one feature request per issue.\r\n- [x] I will describe the problem with as much detail as possible\r\n\r\n# Feature description\r\nSome podcasts include text transcript using `podcast:transcipt`\r\n\r\n**Suggested solution**:\r\nDisplay transcript and sync it with the audio.\r\n\r\nMeeting notes from Nov 2nd, 2023 https://github.com/AntennaPod/AntennaPod/issues/4935#issuecomment-1791614891\r\n\n", "hints_text": "@keunes or @ByteHamster please assign to me, since I have the podcastindex namespace parsing done in #4933, I could tackle `podcast:transcript`\nI have a a few suggestions for transcript related features I think  would be great to include in AntennaPod (originally mentioned in https://github.com/AntennaPod/AntennaPod/issues/5002):\r\n\r\n1. Optionally including timestamps when copying from the trancsript. This would be helpful when using a noteapp to write down interesting segments from the podcast as it makes it easier to go back to the podcast an relisten to the particular segment.\r\n2.  Having the transcript autoscroll as the episode is playing, so when switching to the transcript tab, the text is in the same position as the audio. This would facilitate notetaking while listening.\r\n3. Searching the transcript. I am referring to searching within a single transcript , which would make it easier to find interesting segments (which in turn could be navigated to if combined with the below item).\r\n4. Using the transcript for seeking in the audio (clicking sentences to jump to that position).\r\n\r\nThere are currently at least two podcast apps on iOS that provide some of these features, but none on Android as far as I know. Those apps are https://podcast9.com/ and https://www.airr.io/. They are labeling themselves as more educational / productive alternatives to regular podcast apps and their main value proposition is the ability to interact with and remember what you listen to as well as easily share your favorite bits with others.\r\n\r\nA future item to consider which might be out of scope currently is to automatically create transcripts for episodes that don't provide it, e.g. using the live transcribe feature on phones where it is available.\nNice ideas \ud83d\udc4d My guess would be that # 4 wouldn't be too difficult. But for the others I guess we (the app) would need to receive the timestamps with the transcript I think - as I reckon it's not feasible for AP to automatically match the text with the audio. Do you know if transcripts typically have such timestamps?\nThanks @keunes ! I am not very experienced with podcast data and metadata, but I looked around a bit and it seems like at least some transcripts provide this. The [example used on the podcastindex API docs](https://podcastindex-org.github.io/docs-api/#get-/episodes/byid) page includes this segment:\r\n\r\n```json\r\ntranscriptUrl: \"https://mp3s.nashownotes.com/NA-1322-Captions.srt\"\r\n```\r\n\r\nThat srt file includes timestamps which look like this:\r\n\r\n```srt\r\n1\r\n00:00:00,000 --> 00:00:05,340\r\nPull my mask over my nose. Adam\r\nCurry John C Dvorak, Thursday,\r\n\r\n2\r\n00:00:05,340 --> 00:00:09,030\r\nFebruary 18 2021. This is your\r\naward winning media\r\n\r\n3\r\n00:00:09,030 --> 00:00:13,380\r\nassassination Episode 13. This\r\nis no agenda.\r\n\r\n...\r\n```\r\n\r\nI am not sure how common it is, but at least it exists.\r\n\r\nA complimentary approach that is less robust but does not rely on external data could be to match the relative position of sentences in the transcript with the relative time of the audio file (when no timestamps are available). Even if this was only able to generate precision to the minute, I think it would be helpful for most items I mentioned above. For some, like the scrolling text, it would probably perform quite well since so much of the transcript would be shown on the screen that the matched position does not have to be exact. It would probably benefit from calculating the relative audio position without silences (I noted that there is already an option in AP to skip these when listening).\r\n\nI like to add an idea mentioned in the issue above: **hide empty tabs** - that could be empty transcripts and especially nonexistent chapters, if only one tab remains the tablayout itself should probably be hidden.\r\n\r\nI think thats a sensible solution, to not crowd the AudioPlayer with empty tabs and require to user to swipe a thousand times to get to the desired tab, makes the UX clearer :)\n@tonytamsf Any idea how to implement the data store? Downloading all transcripts of all episodes could result in a huge amount of text to be stored. We already have the problem that the database is pretty big. I think it would be better to only store the URLs and then load the transcript when actually viewing the transcript page in AntennaPod. We could enable caching with okhttp to reduce the number of web requests. \n> @tonytamsf Any idea how to implement the data store? Downloading all transcripts of all episodes could result in a huge amount of text to be stored. We already have the problem that the database is pretty big. I think it would be better to only store the URLs and then load the transcript when actually viewing the transcript page in AntennaPod. We could enable caching with okhttp to reduce the number of web requests.\r\n\r\nI like your idea, there is no need to store transcription.  Depending on the user, they may not want to be downloading transcript using mobile data, so we might have to get user consent to use mobile to download transcript.\nWhy not storing transcript on file text on device? Same way episodes are stored. They would be removed along with episodes and it would allow to make them available like episodes are.\r\n\r\nEdit :\r\nAnd it won't clutter database except maybe to put a flag to know there is transcript downloaded. I am not sure it's even needed as all logics would be parallel to what is done for downloaded episodes.\nSounds like a good idea. When streaming, users need a data connection anyways. When downloading, we can download the transcripts, too. :+1:\n> Why not storing transcript on file text on device?\n\nI'm just wondering: this wouldn't hinder 'processing' the info (esp. timestamps, for # 4 in OP).\n\n> When downloading, we can download the transcripts, too\n\nJust to throw an idea out: couldn't this be done, but then in the db? As in, download & store in db when episode is downloaded; remove from dB when file is deleted? (Don't know if this would have any actual benefit, see above).\nI don't think storing and using text files would cause any problem : it is what video player does with srt files for subtitles.\nStoring it in the database but only for downloaded episodes should work :) Then we don't need to store the file path, we can just store the transcript directly.\nDon't know if you saw how Podverse implemented transcript with search. For reference there is a video of what they did : https://twitter.com/Podverse/status/1413642917760184325?s=19\r\n\r\nIMHO about their screen : \r\n- I would prefer timecode on left side and with a smaller font and using grey as text color. So time code would be there but won't distract your eyes when reading transcription\r\n- I wouldn't separate block like they did. It's like there is an empty line beetween each segment which is annoying when reading\nThanks for sharing that @Matth7878!\r\n\r\n> I would prefer timecode on left side and with a smaller font and using grey as text color\r\n\r\nFully agree\r\n\r\n> I wouldn't separate block like they did\r\n\r\nI understand your point, but we can't really merge sentences that are separated into two blocks I think:\r\n* we don't know where we can stitch parts together, and where a hard enter should be kept (in the interface). If there's no whitespace, it might still be complicated to read:\r\n![Schermafdruk van 2021-07-11 10-45-14](https://user-images.githubusercontent.com/11229646/125188759-38432280-e235-11eb-89f0-e0ce24a2ffff.png)\r\n* if we do stitch together the sentences, there might be a situation where one line on the screen covers three lines in the transcript file. Then we can only display the first timestamp, which can be problematic in some cases (e.g. when there is a line with `[silence]` that takes a minute - you wouldn't be able to jump to the bit after the silence).\r\n\nLet me take a stab at getting the podcast:transcript tag to download and stored.  Then we can work on the UI on the next step\n> Let me take a stab at getting the podcast:transcript tag to download and stored. Then we can work on the UI on the next step\r\n\r\nSorry I have been taking a break from AntennaPod.  I'm un-assigning myself until I get back\n\r\n> Sorry I have been taking a break from AntennaPod. I'm un-assigning myself until I get back\r\n\r\nI'm back with my beloved AP app. I'll start working on downloading the transcript\nAny thoughts about the support of all 4 content types in the `<podcast:transcript>` tag?\r\n\r\nSpec: https://github.com/Podcastindex-org/podcast-namespace/blob/main/transcripts/transcripts.md\r\n\r\n* HTML - this format has no or limited timecode - I recommend that we ignore this\r\n* JSON - Much more flexible - we should fully support this, I'm searching for sample podcast that use this format (not seeing it yet)\r\n* SRT - great for video or audio, max number of lines 2, max chars 32 - I recommend we support this fully\r\n* WebVTT - for HTML on the web, I recommend we don't support this\r\n\r\nExample: https://podnews.net/rss\r\n\r\n```\r\n<podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.vtt\" type=\"text/vtt\" />\r\n<podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.srt\" type=\"application/srt\" />\r\n<podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.txt\" type=\"text/plain\" />\r\n<podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.srt\" type=\"application/x-subrip\" rel=\"captions\" />\r\n```\r\n\r\nIt looks like Podnews also provides `text/pain` which is not in the Podcast 2.0 spec\r\n\r\n@jamescridland I am a loyal listener of Podnews, is there a reason you don't have JSON version of `podcast:transcript`?  \r\n\r\nExample: Podcasting 2.0 https://feeds.podcastindex.org/pc20.xml\r\n\r\nIt uses the SRT format \r\n`<podcast:transcript url=\"https://mp3s.nashownotes.com/PC20-125-Captions.srt\" type=\"application/srt\" rel=\"captions\"/>`\n@ByteHamster - do you have objections if I pull in this code to parse SRT files? https://github.com/gusthavosouza/SRTParser.\r\n\r\nI'm contacting the author about the missing license file his source code.\r\n\r\nIf you prefer I write my parser, I could do that.  It's not that hard.  Before I embark, I wanted to hear your opinion.\n> HTML - this format has no or limited timecode - I recommend that we ignore this\n\nAgreed.\n\nSupporting JSON & SRT is quite nice already.\n@tonytamsf I can't generate JSON transcripts - whisper.cpp is what I use, and it doesn't make them.\r\n\r\nI agree that supporting all four is redundant, and would agree with your suggestion to cease support for VTT. VTT seems to have been chosen because of support from libraries; but it seems to me that we are offering too many formats here for sensible support. It's not complicated to make an SRT using the same tools as that might make a VTT.\r\n\r\n(Edited) I was under the impression that support for HTML was as a simple link to a full web page with a transcript. This doesn't appear to be the case, and I believe that we should also remove this. So, we end up with (in preference order):\r\n\r\n1. JSON files for word-by-word closed-captioning, editing, etc.\r\n2. SRT files for closed-captioning (max 32 char length)\r\n\r\n(I shall also go and remove the TXT format from the Podnews feed; but will keep the VTT file there).\n> Any thoughts about the support of all 4 content types in the `<podcast:transcript>` tag?\r\n> \r\n> Spec: https://github.com/Podcastindex-org/podcast-namespace/blob/main/transcripts/transcripts.md\r\n> \r\n> * HTML - this format has no or limited timecode - I recommend that we ignore this\r\n> * JSON - Much more flexible - we should fully support this, I'm searching for sample podcast that use this format (not seeing it yet)\r\n> * SRT - great for video or audio, max number of lines 2, max chars 32 - I recommend we support this fully\r\n> * WebVTT - for HTML on the web, I recommend we don't support this\r\n> \r\n> Example: https://podnews.net/rss\r\n> \r\n> ```\r\n> <podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.vtt\" type=\"text/vtt\" />\r\n> <podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.srt\" type=\"application/srt\" />\r\n> <podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.txt\" type=\"text/plain\" />\r\n> <podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.srt\" type=\"application/x-subrip\" rel=\"captions\" />\r\n> ```\r\n> \r\n> It looks like Podnews also provides `text/pain` which is not in the Podcast 2.0 spec\r\n> \r\n> @jamescridland I am a loyal listener of Podnews, is there a reason you don't have JSON version of `podcast:transcript`?\r\n> \r\n> Example: Podcasting 2.0 https://feeds.podcastindex.org/pc20.xml\r\n> \r\n> It uses the SRT format `<podcast:transcript url=\"https://mp3s.nashownotes.com/PC20-125-Captions.srt\" type=\"application/srt\" rel=\"captions\"/>`\r\n\r\n@tonytamsf, @jamescridland, `text/plain` is mentioned [here](https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#transcript) but not [here](https://github.com/Podcastindex-org/podcast-namespace/blob/main/transcripts/transcripts.md).\nI don't get this removing supported formats business.  VTT is the only format supported natively by browsers, and like SRT+ in many ways but a proper w3c standard.  If some of the first apps to take a stab at implementing don't support all formats, that's on them (and will improve with time) - no need to penalize everyone else by removing valuable stuff from the spec.  We should encourage the server side to push as much signal out to the world as they can.\n> I don't get this removing supported formats business. VTT is the only format supported natively by browsers\r\n\r\nNote that this issue is about support for the transcript tag in AntennaPod. First I thought that HTML was pointless, but I see now that it has a (different) use case - outside of the scope of this issue.\r\n\r\nMaybe let's create a separate issue in the PC namespace repo about this wider (PC namespace) topic.\nAh, sorry - followed a clickbaity link from [podnews](https://podnews.net/update/size-matters), and thought this was referring to the spec itself!\r\n\r\n> [Should we drop support for VTT and even HTML file support](https://github.com/AntennaPod/AntennaPod/issues/4935#issuecomment-1465273529?utm_source=podnews.net&utm_medium=web&utm_campaign=podnews.net:2023-03-13) for the podcast:transcript tag?\r\n\n> do you have objections if I pull in this code to parse SRT files? https://github.com/gusthavosouza/SRTParser.\r\n\r\nIf the license allows that, it should be okay. Probably needs some changes, though, because we only want English comments and maybe don't need all the features.\n> because we only want English comments\r\n\r\nDo we? With 'comments' do you refer to the actual transcripts (subtitles)? If a user has their device in French and there are transcripts/subtitles available in French, why not use that instead.\r\n\r\nSide note on implementation: I would be in favour of storing the transcript 'on drive' for downloaded episodes. As we've discussed for chapters, it's probably too big for in the database, and retrieving it only on playtime causes issues like #6062.\nThis issue has been mentioned on **AntennaPod Forum**. There might be relevant details there:\n\nhttps://forum.antennapod.org/t/podcast-subtitles/3365/4\n\n@keunes - I'm done with the data parsing for JSON and working on the SRT format now for `<podcast:transcript>`.  After I'm done with the data storage, I would like some mockups on how transcription would work in the AP app.\r\n\r\n1. How does transcription display while an episode is being played?  Does it by default hover as an overlay and users can click on the words to jump into a full timecode view?\r\n2. In the timecode full transcription view, I assume the user can scroll back and forward to view the transcription and tap on a timecode to jump into the audio?  Would each word highlight to follow along the audio?\r\n3. The user can copy and paste any portion transcript?\r\n4. Without the overlay of the words, can users jump to view the transcript before listening, how would that work?\r\n5. Propose Phase 2 : Can users search the transcripts in one episode, across all episodes and subscriptions?\nYeey. That's great news @tonytamsf!\n\nLet me try to reply to some of your questions:\n\n> How does transcription display while an episode is being played? Does it by default hover as an overlay and users can click on the words to jump into a full timecode view?\n\nBy default this 'live subtitling' should be enabled/visible in the full player, for discoverability (there are not yet many feeds with this tag, so we want to show it when it's available). It should be possible via a setting in the UI section to disable this. (I expect that someone at some point will ask to make this a setting at podcast level, e.g. to only turn it on for their language learning, but let's see.)\n\nWe'll need a mock-up for this. We can probably take inspiration from some of the other apps who have enabled this already. To make it work nicely, we might have to make some design/UI changes.\n\n> In the timecode full transcription view, I assume the user can scroll back and forward to view the transcription and tap on a timecode to jump into the audio?\n\nYes. We'll need a mock-up for this.\n\n> Would each word highlight to follow along the audio?\n\nDepends. It's not always possible at word-level. E.g. SRT/VTT does not \u2013 here I think we should highlight each fragment.\n\nIn any case, I think the highlighting should be quite subtle (and I'm wondering if it's acceptable if e.g. highlight colour is not visible to visually impaired/does not comply with accessibility standards). We'll need a mock-up for this.\n\nhttps://github.com/Podcastindex-org/podcast-namespace/blob/main/transcripts/transcripts.md\n\n(~~Which transcript file types do you support at thi point?~~ I see it's SRT and JSON.)\n\n>  The user can copy and paste any portion transcript?\n\nYes.\n\n> Without the overlay of the words, can users jump to view the transcript before listening, how would that work?\n\nYes, this should be possible. I made a proposal a long time ago here, following user feedback on a beta version: https://forum.antennapod.org/t/user-feedback-swipe-navigation-from-player-screen-2-3-beta/1119\n\nIt's probably a lot of work to implement, bit I still stand behind the UX concept.\n\n(As a back-up, there should probably be an entry in the overflow menu.)\n\n> Propose Phase 2 : Can users search the transcripts in one episode, across all episodes and subscriptions?\n\nThat would be cool indeed. Certainly *within* the current episode (e.g. to find the section where they talk about X). Global search is an entirely separate thing.\n> I made a proposal a long time ago here... It's probably a lot of work to implement, bit I still stand behind the UX concept. (As a back-up, there should probably be an entry in the overflow menu.)\r\n\r\nThat's outside the scope of this PR (and would need some discussion). For now, I would do the overflow button. There is enough to discuss about the subtitles dialog/page itself\nI have a working PR that can parse, scroll through the transcript while following the audio.   Feel free to download a test version and give some feedback. \r\n I use `Podnews Daily` to do my test https://github.com/AntennaPod/AntennaPod/pull/6710\r\n\r\nUnfortunately, after sampling podcasts that I am subscribed to, the state of the transcript format is still not super well supported.  Here is a sample of of 104 feeds\r\n\r\n# Podcasts sampling\r\n- Roblox Tech Talk - `text/plain` https://share.transistor.fm/s/39ce510f/transcript.txt\r\n   -  parsable with timecoees\r\n-  Dev Interrupted - `text/html` https://feeds.buzzsprout.com/1422892/10190284/transcript\r\n   - not parsable\r\n- The Method - json & 'text/html' https://feeds.buzzsprout.com/1859927/9638130/transcript\r\n   - html not parsable\r\n   - json is fine https://feeds.buzzsprout.com/1859927/9638130/transcript.json\r\n   - (only 2 episode)\r\n- Radical Candor - `application/x-subrip` https://freepodcasttranscription.com/transcription/5e6070b67882e784d6b5baf4b19976bb717f1115.srt\r\n   - parsable\r\n- Indie Bites - `text/plain` https://share.transistor.fm/s/6cdce2f8/transcript.txt (no timecodes)\r\n  - not parsable\r\n- The Golden Hour - `text/html` https://www.podcastone.com/episode/Someones-Getting-Tased--The-Golden-Hour-51-w/-Brendan-Schaub-Erik-Griffin--Chris-DElia?view=transcript\r\n   - not parsable\nHi, really exciting times for AntennaPod and Podcsting in general. I've been doing some research about the use of transcript in the Podcasting 2.0 namespace.\r\n- I've found that even these mime types being equivalent `text/srt` `application/srt` `application/x-subrip` most player don't support all 3, so in in a \"test\" feed I declare all for the same file. \r\n- SRT is the most used format, then JSON, VTT and TXT (but these are usually full transcripts, not subtitle with parsable timecodes)\r\n\r\nIn case is useful, I have a feed with different options of redirect/hosting with different formats and mime-types if you want to test different edge cases, as discussed here : https://github.com/podverse/podverse-web/issues/1168#issuecomment-1695231077\r\nProbably the redirect / hosting part is no problem here as that part was for testing CORS in different web players. (Gitlab Pages works best with web players than Archive if something is interested)\r\n\r\n```\r\nEpisode 16\r\nOp3+ archive.org + vtt only\r\n\r\nEpisode 15\r\nOp3+ gitlab + vtt only\r\n\r\nEpisode 09\r\nOp3 + gitlab + vtt\r\nOp3 + archive + srt\r\n\r\nEpisode 08 (without OP3)\r\nGitlab + vtt\r\nArchive + srt\r\n\r\nEpisode Episode 00\r\nOp3 + gitlab + vtt/srt\r\n\r\nAll others\r\nOP3 + archive + vtt/srt\r\n```\r\nA problem that I've found with some player, in case you want to take it into account, is that if there is first a transcript tag with a file that doesn't work, some player won't try the next tag that would work.\r\n\r\nFeed:\r\nhttps://kdeexpress.gitlab.io/feed\r\n\r\n**TL;NR**\r\n\r\nI would prioritize SRT parsing, then JSON and if there is no much trouble VTT given the similarities with SRT. \r\nFor `text/html` and `text/plain` I would either show a new screen with all the text just assuming that is the full transcript to read or just offer a link to be open in the web browser.\nI'd jump in here and say two things:\r\n\r\nThe accurate stat is [contained here](https://stats.podcastindex.org/hourly_counts.json) - which at the time of writing is: \r\n\r\n>    \"feedsWithTranscripts\": 38,255\r\n>    \"episodesWithTranscripts\": 1,379,606\r\n\r\nThere's obviously a chicken and egg scenario with support. If AntennaPod supports transcripts, it would be a significant benefit to podcasting as a whole, but also to the uptake of this feature. But you'll get considerable promotion when this is launched. (I will, as one guarantee, give you a headline story in Podnews.)\r\n\r\nSecondly; might I suggest you ideally support these in this format:\r\n\r\n1. JSON - this is accurate to the word level, and allows [this kind of highlighted transcript](https://www.steno.fm/show/9b024349-ccf0-5f69-a609-6b82873eab3c/episode/aHR0cHM6Ly9wb2RuZXdzLm5ldC91cGRhdGUvZ2Vuei1mYXN0ZXN0LWdyb3dpbmc=), where the individual word being said is highlighted on screen. That also allows you to lay out closed-captions in a very bespoke way - allowing you to properly wordwrap them. It also allows more features in future like clipping, where you could highlight a word or sentence, and have the app specifically clip that accurately.\r\n\r\n2. SRT - these are accurate to about 32 characters, and therefore the timing isn't as perfect as it could be. [It works like this](https://www.steno.fm/show/917393e3-1b1e-5cef-ace4-edaa54e1f810/episode/YTQ2OWE5ZmQtMzVlOC00MDNhLWIzMDUtZGEyNmU3MDE1ZjBh). \r\n\r\nI'd, frankly, not support TXT or HTML unless you really want to - my suspicion is that these are relatively poorly supported anyway. But it doesn't seem like a heavy lift to simply open these in a webview. (I'm also very unclear if anyone is using VTT.)\r\n\r\nI hope that helps a bit!\n> If AntennaPod supports transcripts\r\n\r\nThanks for chipping in @jamescridland - one of our contributors is already working on this functionality. Hope we can coordinate re your coverage when it gets released. :-)\r\n\r\n> JSON \u2026 That also allows you to lay out closed-captions in a very bespoke way - allowing you to properly wordwrap them\r\n\r\nSee, that's what I was thinking. But I'm also wondering: how. Let's say it is at word level, how do you wrap that into the traditional two lines neatly? Starting from the first word (with its time stamp) and fill up the two lines until the screen is full, and take the end-time of the last word as the end-time for these two lines? Do you 'hard break' when there's a comma, or a period? What about speaker changes?\r\n\r\nI feel that SRT - given that it's the provider's responsibility to make it work with the character limit - often will provide a more logical view (even if less accurate).\r\n\r\nEither way - I'm very happy that both SRT & JSON already can be fetched and parsed \ud83d\ude00\nThank you @jamescridland for the details, it is helpful.\n\nWhat would be helpful for me when I am implementing the transcript feature is to look at other Android apps that are supporting the transcript tag.  Do you recommend an app that has implemented this feature well and taken advantage of the JSON word level time code? \n[Podverse](https://github.com/podverse) could be a reference. [The web displays](https://podverse.fm/es/episode/hazS_hcJz) 1 word per line :-1: , but the mobile (-rn repo) app shows the full sentence :+1: . So I assume it's using a word level JSON.\r\nIn the Android app each line on sentences is a placeholder for the audio timestamps, not exactly a word by word. [Steno.fm](https://www.steno.fm/show/396d9ae0-da7e-5557-b894-b606231fa3ea/episode/QnV6enNwcm91dC0xMzgwNjg5Nw==) is 1 by 1, but I don't think it's open source :-1: \r\n\r\n![imagen](https://github.com/AntennaPod/AntennaPod/assets/2069735/ae51a17b-13b0-4928-934c-9c49b2156130)\r\n![imagen](https://github.com/AntennaPod/AntennaPod/assets/2069735/2d31a517-72df-4b48-9da9-00c957dc6f04)\r\n\n> What would be helpful for me when I am implementing the transcript feature is to look at other Android apps that are supporting the transcript tag.\n\n@tonytamsf Sorry for the silence on my end. I've been doing a comparative analysis of all the We/Android apps that support the transcript tag and will at some point this weekend share a couple of nice examples.\nHello,\r\n\r\nI've thought and designed a bit more over the weekend. Please find below some recordings of (web) apps that I particularly liked, and a link to some mock-ups I made.\r\n\r\nInspiration\r\n---\r\nI tested all Android & web-[apps listed on the Podcast Index website](https://podcastindex.org/apps?appTypes=podcast+player&elements=Transcript) that support the Transcript tag and are accessible without log-in. I always checked  episode [1601 - \"Unkool & The Gang\"](https://podcastindex.org/podcast/41504?episode=15754728488) of No agenda. It has [this SRT captions file](https://mp3s.nashownotes.com/NA-1601-Captions.srt). Here is [the podcast's RSS feed](https://feeds.noagendaassets.com/noagenda.xml).\r\n\r\n### Podfriend **\r\nCool because: has nicely designed subtitles, with different colours, and speaker images.\r\n\r\nhttps://github.com/AntennaPod/AntennaPod/assets/11229646/aa6d70d0-77d6-42dd-9d5a-ec7557145dd6\r\n\r\n### Steno **\r\ncool because: grouping of source content into blocks per speaker, highlighting background of actively playing blocks as well as selected block (when paused or searching)\r\n[Try for yourself](https://www.steno.fm/show/856cd618-7f34-57ea-9b84-3600f1f65e7f/episode/aHR0cDovLzE2MDEubm9hZ2VuZGFub3Rlcy5jb20=) - my recording is too big for GitHub.\r\n\r\n### Podfans *\r\ncool because: has up/down arrows in search bar, nice design of timestamps (thin + lighter colour - should try that in my mock-ups too, althgouh they only seem to use mm:ss, not hh)\r\n![Screenshot from 2023-10-29 23-16-03 podfans](https://github.com/AntennaPod/AntennaPod/assets/11229646/e94b019e-d7ba-4824-8c67-de9c5a9459a0)\r\n\r\n### Fountain *\r\ncool because: has a little (i) icon with info about the transcript timings - noting they \"might not be accurate if the podcaster has dynamic ads.\" --> not in mock-ups yet\r\n![Screenshot from 2023-10-29 23-09-47 Fountain](https://github.com/AntennaPod/AntennaPod/assets/11229646/007f0bdd-4fe6-40af-8100-a4cac7b4c1af)\r\n\r\n### Anytime Player *\r\ncool because: has 'follow transcript' toggle, the way scrolling position follows active block\r\n![Screenshot from 2023-10-29 23-13-14 anytime player](https://github.com/AntennaPod/AntennaPod/assets/11229646/350b356a-f936-4b2f-8a55-20c0aae2038d)\r\n\r\n### Podcast Addict\r\ncool because: has option in the player settings to (de)activate subtitles\r\n\r\nMock-up & general considerations\r\n---\r\n\r\nPlease find here the mock-ups I have so far: https://design.penpot.app/#/view/e357a320-7535-11eb-8a88-eb0147e048f5?page-id=eae2ba44-fe23-80be-8003-5736fde8c987&section=interactions&index=0&share-id=b509ea44-7222-80be-8003-5db588cbed16\r\n\r\nSome notes:\r\n* Several apps leverage speaker indication (either name + colon in SRT, or as metadata in JSON). It would be really neat if we can do that too. \r\n  * Steno 'collates' blocks - [Nathan explained how](https://mastodon.social/@keunes/111305523569815424).\r\n  * Podfriend & Anytime Player somehow connect speaker info from the subtitles with info from the `person` tags within the item (episode)\r\n```\r\n<podcast:person href=\"http://curry.com/\" img=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Adam_Curry_2016.jpg/440px-Adam_Curry_2016.jpg\" group=\"cast\" role=\"host\">Adam Curry</podcast:person>\r\n<podcast:person href=\"http://dvorak.org/blog\" img=\"https://speaking.com/wp-content/uploads/2018/09/John-Dvorak.jpg\" group=\"cast\" role=\"host\">John C Dvorak</podcast:person>\r\n```\r\n* I think we'll have to first identify if we have or can extract speakers, and adjust the design of the player & transcript screens for it. Yet maybe speaker indication (especially on the player screen) might be out of scope for now.\r\n* I kept the playback controls visible on purpose - I think it's handy to be able to pause and rewind when viewing the transcript.\r\n\r\n_The first set of screens you'll see are  in case there are speakers extracted/known, which can be displayed on the player screen. Followed by some screens where this is not the case. There's also some other details. Maybe it's best if we have a call @tonytamsf & @ByteHamster to see what's feasible for now._\n@keunes Thanks for the great research and screen casts of other players.   I can try to join the next community call about this topic if finding time is difficult \nWe'll be meeting to discuss the mock-ups Thursday 2 November at 21:00 CET, over at https://meet.antennapod.org/transcripts. Anyone interested in this UX review is welcome to join.\nAs discussed and agreed during the meeting:\r\n* implement as full-screen dialog (https://m3.material.io/components/dialogs/overview)\r\n* what to do with landscape player view? For now, easy implementation on the right-hand side.\r\n* store transcript SRT/JSON in filesystem\r\n* if there's word-level JSON without speaker:\r\n  * collate text blocks\r\n    * Sentence-based (using periods & question marks)\r\n    * If long pause, start new block\r\n    * If long single block without period, then break it up after x (30?) seconds\r\n  * combine highlighting in blocks of min. 1 second (e.g. 2 words) to avoid words being skipped due to 1-second refresh rate.\r\n\r\nDesign change to do:\r\n* tap on CC in player, open transcript dialog\r\n* setting to show/hide closed caption (TBC if in player settings or only in global>UI settings)\r\n\r\nIn separate PRs:\r\n* playback controls in transcript view\r\n* option to reach transcript from ep. detail page; show 'can't jump to postion' warning\r\n* Search in transcript\r\n* Speaker tag (parse & store; display in ep. details; display speaker photo in player screen)\nWe will be targeting the `transcript` branch on Github for this work.  Starting with PR https://github.com/AntennaPod/AntennaPod/pull/6739\nI have a test build of how we can display transcripts in 2 lines of text on the player screen.\n\nIt works for JSON (word by word) or SRT (a few seconds of text).\n\nThe way I am able to nicely display the transcript is as follows\n\n- join up segments of text at least one second, most json segments are less than 1 second\n- string together N segments and display them on the two lines of TextView, which has support for ellipses \n- when I detect an ellipse in the TexView, which means words are cut off at the end, start trimming words from the end until the display does not have ellipses. \n- move the words that have been ellipsed to the next segment, and  trimming a little more to get some buffer\n- calculate a reasonable (percentage of words trimmed) new start time of the next segment \n- display the text sync to the position of the audio\n- move to the next segment\n\n@keunes I would like to give this test build to you and maybe just one of two others (maybe @jamescridland ) to test out against different podcasts which have transcripts to make sure the algorithm works. I would like to do this before the code reviews because that will take many weeks while we can fine tune how transcripts will function in the UI.  \n\nnote: detecting words will be difficult with languages like Chinese and Arabic\n@keunes - I have a test build of the transcript functionality in the 3rd PR, it will display 2 lines of transcript in the player screen.  When you have time, please check out it.  If you wanted more podcasts that have the transcript tag to see the variety of how folks format their transcripts, I have crawl all 4 million podcasts from podcastindex.org found the [15233 urls](https://github.com/tonytamsf/podcastindex_data/blob/main/data/transcripts.podcasts.txt) of the podcasts which have at least one podcast:transcript tag\r\n\r\n- PR 3 https://github.com/tonytamsf/AntennaPod/pull/6/checks\r\n- Artifact https://github.com/AntennaPod/AntennaPod/suites/17875428651/artifacts/1026186509\nJust updating on the progress: in branch `transcript` the 2nd PR is merged to be able to download transcripts from the url in `podcast:transcript` https://github.com/AntennaPod/AntennaPod/pull/6797\r\n\r\nThe third PR is to parse SRT and JSON formats, and that is being reviewed https://github.com/AntennaPod/AntennaPod/pull/6852\n4th PR to display 2 lines of transcript on the cover https://github.com/AntennaPod/AntennaPod/pull/6912\n@keunes - take a look at the preview of iOS Podcast player and how the UX is for transcripts, play the video https://podnews.net/article/apple-podcasts-transcriptions-faq\r\n\r\n- Looks like they don't display 2 lines of transcript and just go full screen display\r\n- I like that they retain some basic episode information on the top\r\n- They do word by word highlight and increase the font size of the current line\r\n\nAlso adding some interesting stats here\r\nhttps://podcastindustryinsights.com/podcasting-2-0-features/\r\n\r\n```\r\nCurrent\r\n46,565\r\npodcasts with transcripts\r\n\r\n2,088,707\r\nepisodes with transcripts\r\n```\n> Looks like they don't display 2 lines of transcript and just go full screen display\n\nThat's interesting. Makes you wonder if we need the two-line fragment on the cover. Let's take some use-cases:\n* Language learning: Having the full text instead of just two lines is probably preferred. I'm purposefully processing the written text, so it's OK it takes the full screen. However, I would want to be able to pause & resume from that big screen (which doesn't seem possible in Apple podcasts).\n* Understanding of speakers with accents: I'm mainly listening, and occasionally checking the text. Meanwhile, I'm cleaning my inbox. Having the transcript full-screen is fine if it stays open while I switch between the mini-player and full player (so I don't have to reopen the transcript each time). Otherwise I'd rather have two lines which I keep on for the whole episode.\n* Understanding who speaks when, as hosts have similar voices: I don't really read the text, so the full transcript screen would be a bit much, but would be just as fine as two lines on the player screen.\n* Understanding what someone said, as a car was honking while I'm waiting for a traffic light: Here I'll prefer a full screen, so I can just 'activate' it for a moment, read the bit I missed while listening the podcast continue, without having to rewind.\n\nSeeing Apple's implementation and the use cases I can think of, I'm starting to think we might not need the subtitle version\u2026 @ByteHamster what do you think?\n\nPlus it might be easier to implement?\n\n> Also adding some interesting stats here\n\nDo you know what that does in terms of percentages vis-\u00e0-vis the full index?\nApple Podcasts actually has two views\r\n\r\nThe first is a full transcript view in the episode page, which is just text. Interestingly, there appear to be some restrictions on copy/paste from this view, with no \"Select All\" available, and it seems to only copy a few paragraphs over. This is a \"dumb\" transcript, in that it shows the whole transcript but there's nothing you can do with it.\r\n![IMG_0115](https://github.com/AntennaPod/AntennaPod/assets/231941/e8cbccea-7dcb-4950-a535-d262bcb98bd7)\r\n\r\nAdditionally, when playing the audio, you can turn on the closed-caption view. Apple does additional processing on these to enable word-by-word highlights; this is partially so that they can avoid spam appearing in the service, I would presume. This is an active transcript, so you can scroll down and tap on a section you want to hear.\r\n \r\n![IMG_0116](https://github.com/AntennaPod/AntennaPod/assets/231941/fd3a52ea-9783-423f-be82-9626bc105311)\r\n\r\nApple's own transcripts recognise changes of voices (judging by a look at the downloadable transcript) but it doesn't show the voice in the transcription. It's *supposed* to show voice names if you provide it with a marked-up VTT file, but it doesn't - the \"Unknown\" above is its attempt to parse my own VTT file.\r\n\r\nMy own view is that the \"only show two lines\" view - which the VTT file natually lends itself to - is not a particularly good thing; it requires you to look at the screen at all times, and offers little benefit in terms of navigation. Having seen Apple's version, it seems to avoid clutter by simply adding a \"captions\" button on the player itself, which opens a new screen.\r\n\r\nThe highlighting experience subtly makes the current paragraph larger; and then colours the text as the speaker says it. Assuming the VTT file is the only file you have, I'd suggest it's fine showing the current highlighted sentence in the paragraph; the word-by-word thing is nice, but doesn't really add much to the comprehension or experience.\n> Seeing Apple's implementation and the use cases I can think of, I'm starting to think we might not need the subtitle version\u2026 @ByteHamster what do you think?\r\n>\r\n> Plus it might be easier to implement?\r\n\r\nI would say it's probably a bit easier to implement, yes (at least we don't need to deal with doing line breaks manually). Also, I'm not a big fan of the moving text on the otherwise quite clean player screen anyway. So if @tonytamsf and you agree, I'm totally happy with just having the full transcript screen.\n> Apple Podcasts actually has two views\r\n> \r\n> The first is a full transcript view in the episode page, which is just text. Interestingly, there appear to be some restrictions on copy/paste from this view, with no \"Select All\" available, and it seems to only copy a few paragraphs over. This is a \"dumb\" transcript, in that it shows the whole transcript but there's nothing you can do with it. !\r\n...\r\n> Additionally, when playing the audio, you can turn on the closed-caption view. Apple does additional processing on these to enable word-by-word highlights; this is partially so that they can avoid spam appearing in the service, I would presume. This is an active transcript, so you can scroll down and tap on a section you want to hear.\r\n> \r\n\r\n@jamescridland - is there an issue with the transcript rollout in iTunes today?\r\n\r\n1) On the Podcasts app on my mac, they are featuring a 'Transcript' section, but none of those podcast RSS feeds show the `podcast:transcript` tag\r\n2) When I use view source or `curl` I also cannot see the `podcast:transcript` tag, for example the latest episode of RadioLab\r\n3) Is it at all possible that if it is not the iOS podcast app, Apple will not be showing the transcripts so Android apps or any non Apple iOS podcast apps will not benefit from transcripts?\r\n4) In this [article](https://www.macstories.net/stories/apple-releases-ios-and-ipados-17-4-with-major-safari-and-app-store-changes-in-the-eu-transcripts-for-podcasts-new-emoji-and-more/) on macrumors, `For now, Apple\u2019s generated transcripts are only available for podcasts published in the Apple Podcasts catalogue, not for podcasts you have manually added via an RSS feed` - Does that mean not all of 4 million podcasts on iTunes will get transcripts?\n> 1. On the Podcasts app on my mac, they are featuring a 'Transcript' section, but none of those podcast RSS feeds show the `podcast:transcript` tag\r\n\r\nApple produces its own transcripts, as well as using the podcast:transcript tag.\r\n\r\n> 2. When I use view source or `curl` I also cannot see the `podcast:transcript` tag, for example the latest episode of RadioLab\r\n\r\nAs above!\r\n\r\n> 3. Is it at all possible that if it is not the iOS podcast app, Apple will not be showing the transcripts so Android apps or any non Apple iOS podcast apps will not benefit from transcripts?\r\n\r\nIf there's a podcast:transcript tag listed, then anyone (like AntennaPod) can use the transcript.\r\n\r\nBut Apple isn't making its own transcripts (in the app) available to anyone other than the podcast creator. Which seems fair enough.\r\n\r\n> 4. In this [article](https://www.macstories.net/stories/apple-releases-ios-and-ipados-17-4-with-major-safari-and-app-store-changes-in-the-eu-transcripts-for-podcasts-new-emoji-and-more/) on macrumors, `For now, Apple\u2019s generated transcripts are only available for podcasts published in the Apple Podcasts catalogue, not for podcasts you have manually added via an RSS feed` - Does that mean not all of 4 million podcasts on iTunes will get transcripts?\r\n\r\nThere are only 2.4mn podcasts in Apple Podcasts. All of those come with auto-transcripts unless the creator has opted out.\n> 4\\. `Apple\u2019s generated transcripts are only available for podcasts published in the Apple Podcasts catalogue, not for podcasts you have manually added via an RSS feed` - Does that mean not all of 4 million podcasts on iTunes will get transcripts?\r\n\r\nJust since I'm updating my article...\r\n\r\nApple won't produce automated transcripts for RSS feeds you've manually added. But the app will, apparently, show transcripts from the podcast:transcript tag.\nThank you @jamescridland for the explanation.  Wow, talk about fragmenting the ecosystem with iOS wall.\n\nToday I am writing a school paper on why televisions and movies have gotten close to 100% close captioning but transcripts in podcast are still at 1%.  It is mind boggling \n\n\n\n> Wow, talk about fragmenting the ecosystem with iOS wall.\r\n\r\nActually, it's the opposite here. Apple has taken an open standard that's been under development for three years and implemented it in their app. But for those podcasts that can't be bothered to create a transcript to appear in Apple Podcasts, Apple will do it for them. That seems generous and the right thing to do.\r\n\r\n> transcripts in podcast are still at 1%\r\n\r\nIn Apple Podcasts, transcripts in podcasts are, from today, almost 100%.\r\nAnd Apple have ensured that creators remain in control of their work.\r\nIf there's anything to take away, it's that Apple have done 100% the correct thing.\n> > Wow, talk about fragmenting the ecosystem with iOS wall.\r\n> \r\n> Actually, it's the opposite here. Apple has taken an open standard that's been under development for three years and implemented it in their app. But for those podcasts that can't be bothered to create a transcript to appear in Apple Podcasts, Apple will do it for them. That seems generous and the right thing to do.\r\n\r\nSo if podcast A is transcribed by Apple, the RSS feed that is served out to non iOS Podcast players will not show the `podcast:transcript` tag (let's say it's hosted on transistor.fm). Apple is transcribing podcast A only for the Apple Podcast player.\r\n\r\nSo I will assume that the Apple Podcast app no longer fetches from the transistor.fm RSS feed directly?\r\n\r\nThen transistor.fm has to do it's own transcript in order for Spotify, AntennaPod, Overcast to consume. Is that the correct understanding?\r\n\r\nI guess it's too much to ask Apple to do us all a favor and give us the transcript for free via a `https://transcript.proxy.apple.com/?url=https://transistor.fm/feed.rss`\r\n\n> So if podcast A is transcribed by Apple, the RSS feed that is served out to non iOS Podcast players will not show the podcast:transcript tag (let's say it's hosted on transistor.fm). Apple is transcribing podcast A only for the Apple Podcast player. So I will assume that the Apple Podcast app no longer fetches from the transistor.fm RSS feed directly? Then transistor.fm has to do it's own transcript in order for Spotify, AntennaPod, Overcast to consume. Is that the correct understanding?\r\n\r\nNo, precisely wrong. If the creator is supplying a transcript, **Apple always uses it.**\r\nIf the creator doesn't supply a transcript, Apple - at its own expense - makes a transcript for its own app.\r\n\r\n> I guess it's too much to ask Apple to do us all a favor and give us the transcript for free\r\n\r\nAs the creator - Apple can do what it wants in its own app, but I don't want Apple to suddenly take control of my own RSS feed, no; and nor do I want it to produce transcripts for others.\r\n\r\nApple here is respecting the creator. And, good on them for doing so.\nre the references to Podverse: I can't find any obvious place in `podcast-rn` source that actually loads `<podcast:transcript>` tags from RSS feeds, nor have I been able to make Play Store's Podverse 4.15.4 fetch a transcript JSON file from my test server (after adding the test RSS feed to Podverse, my Apache logs show Podverse fetching the RSS but not the JSON, even when I play the episode, so it's unsurprising that no transcript is shown), nor was I able to make that version of Podverse show a transcript for `feeds.buzzsprout.com/1.rss` which has been cited as a working example of `podcast:transcript`.  So unless I've missed something, it seems Podverse gets its transcripts by some means *other* than the `<podcast:transcript>` tag and they are available only on select podcasts, therefore it's unfortunately not suitable as a player for testing the behaviour of new `<podcast:transcript>` tags.\nPodverse may not support JSON, but probably does SRT. Have you tried that?\nI see Podverse using the JSON transcript from `feeds.buzzsprout.com/1.rss` in their oldest episode: https://podverse.fm/episode/ubyZFbGg8f\r\n\r\n[Here\u2019s the line in podverse-rn](https://github.com/podverse/podverse-rn/blob/3489eca582fd028a518f4158c6f730389688303b/src/screens/EpisodeTranscriptScreen.tsx#L43-L53) where they fetch a transcript URL:\r\n```\r\nif (episode?.transcript?.[0]?.url && episode?.transcript?.[0]?.type) {\r\n  try {\r\n    if (episode?.id) {\r\n      parsedTranscript = await getEpisodeProxyTranscript(episode.id)\r\n    } else {\r\n      parsedTranscript = await getParsedTranscript(episode.transcript[0].url)\r\n    }\r\n  } catch (error) {\r\n    errorLogger(_fileName, 'componentDidMount', error)\r\n  }\r\n}\r\n```\nOh yes.\r\n\r\n<img width=\"646\" alt=\"Screenshot 2024-03-07 at 12 16 19\u202fpm\" src=\"https://github.com/AntennaPod/AntennaPod/assets/231941/385dfdb0-7ff2-45e7-a890-37daa10d9d1a\">\r\n\r\nTo the point of @ssb22 - the JSON call is absolutely made from the Podverse player.\nAh yes, and `getParsedTranscript` in `src/lib/transcriptHelpers.ts` fetches `transcriptUrl` then calls `convertFile` from [the Transcriptator library](https://github.com/stevencrader/transcriptator) which isn't part of the `podverse-rn` repo which explains why my grepping for JSON handling wasn't finding it.  Still my Apache logs were telling me my JSON file referred to in the below RSS wasn't being fetched by Podverse although it was fetched by Anytime Podcast Player:\r\n\r\n    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n    <rss version=\"2.0\" xmlns:atom=\"http://www.w3.org/2005/Atom\" xmlns:itunes=\"http://www.itunes.com/dtds/podcast-1.0.dtd\" xmlns:podcast=\"https://podcastindex.org/namespace/1.0\">\r\n    <channel>\r\n    <atom:link href=\"https://url.removed/\" rel=\"self\" type=\"application/rss+xml\" />\r\n    <title>Test Podcast Title</title>\r\n    <description>Test podcast description</description>\r\n    <link>https://url.removed</link>\r\n    <image>\r\n    <url>https://url.removed.jpg</url>\r\n    <title>Test Title</title>\r\n    <link>https://url.removed</link>\r\n    </image>\r\n    <item>\r\n    <guid>https://url.removed.mp3</guid>\r\n    <link>https://url.removed</link>\r\n    <title>Test Episode Title</title>\r\n    <description>Test episode description</description>\r\n    <podcast:transcript url=\"https://url.removed.json\" type=\"application/json\" />\r\n    <pubDate>Fri, 1 Mar 2024 00:00:00 +0000</pubDate>\r\n    <itunes:episode>1</itunes:episode>\r\n    <enclosure url=\"https://url.removed.mp3\" type=\"audio/mpeg\" length=\"2179906\"/>\r\n    <itunes:duration>153</itunes:duration>\r\n    </item>\r\n    </channel>\r\n    </rss>\r\n\nIf one imports the `feeds.buzzsprout.com/1.rss` feed into Apple Podcasts it doesn't show any transcripts. It does show the chapters, so they do have other Podcast 2.0 features. It seems they do not read transcripts from RSS feeds. Anyone have pointers on why transcripts are not viable sometimes?\nSorry, this is the AntennaPod bug & feature request tracker. For questions about Apple Podcasts, please use their support channels.", "created_at": "2024-04-14T20:57:13Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 7098, "instance_id": "AntennaPod__AntennaPod-7098", "issue_numbers": ["4710"], "base_commit": "cb1a03cd8d55efca8a815d9c55b6a9a6448c0267", "patch": "diff --git a/app/src/main/java/de/danoeh/antennapod/actionbutton/ItemActionButton.java b/app/src/main/java/de/danoeh/antennapod/actionbutton/ItemActionButton.java\nindex 84b2461670..54714be3d1 100644\n--- a/app/src/main/java/de/danoeh/antennapod/actionbutton/ItemActionButton.java\n+++ b/app/src/main/java/de/danoeh/antennapod/actionbutton/ItemActionButton.java\n@@ -7,6 +7,7 @@\n import androidx.annotation.StringRes;\n import android.view.View;\n \n+import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.playback.service.PlaybackStatus;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n@@ -48,6 +49,8 @@ public static ItemActionButton forItem(@NonNull FeedItem item) {\n             return new PlayActionButton(item);\n         } else if (isDownloadingMedia) {\n             return new CancelDownloadActionButton(item);\n+        } else if (item.getFeed().getState() != Feed.STATE_SUBSCRIBED) {\n+            return new StreamActionButton(item);\n         } else if (UserPreferences.isStreamOverDownload()) {\n             return new StreamActionButton(item);\n         } else {\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodeItemListAdapter.java b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodeItemListAdapter.java\nindex 5082f25ffd..db79912611 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodeItemListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodeItemListAdapter.java\n@@ -12,6 +12,7 @@\n \n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n+import androidx.fragment.app.FragmentActivity;\n import androidx.recyclerview.widget.RecyclerView;\n \n import de.danoeh.antennapod.ui.SelectableAdapter;\n@@ -32,13 +33,13 @@\n public class EpisodeItemListAdapter extends SelectableAdapter<EpisodeItemViewHolder>\n         implements View.OnCreateContextMenuListener {\n \n-    private final WeakReference<MainActivity> mainActivityRef;\n+    private final WeakReference<FragmentActivity> mainActivityRef;\n     private List<FeedItem> episodes = new ArrayList<>();\n     private FeedItem longPressedItem;\n     int longPressedPosition = 0; // used to init actionMode\n     private int dummyViews = 0;\n \n-    public EpisodeItemListAdapter(MainActivity mainActivity) {\n+    public EpisodeItemListAdapter(FragmentActivity mainActivity) {\n         super(mainActivity);\n         this.mainActivityRef = new WeakReference<>(mainActivity);\n         setHasStableIds(true);\n@@ -86,9 +87,18 @@ public final void onBindViewHolder(EpisodeItemViewHolder holder, int pos) {\n         holder.bind(item);\n \n         holder.itemView.setOnClickListener(v -> {\n-            MainActivity activity = mainActivityRef.get();\n-            if (activity != null && !inActionMode()) {\n-                activity.loadChildFragment(ItemPagerFragment.newInstance(episodes, item));\n+            if (!inActionMode()) {\n+                if (mainActivityRef.get() instanceof MainActivity) {\n+                    ((MainActivity) mainActivityRef.get())\n+                            .loadChildFragment(ItemPagerFragment.newInstance(episodes, item));\n+                } else {\n+                    ItemPagerFragment fragment = ItemPagerFragment.newInstance(episodes, item);\n+                    mainActivityRef.get().getSupportFragmentManager()\n+                            .beginTransaction()\n+                            .replace(R.id.fragmentContainer, fragment, \"Items\")\n+                            .addToBackStack(\"Items\")\n+                            .commitAllowingStateLoss();\n+                }\n             } else {\n                 toggleSelection(holder.getBindingAdapterPosition());\n             }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodeItemViewHolder.java b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodeItemViewHolder.java\nindex dd1a10450c..c5868a945f 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodeItemViewHolder.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodeItemViewHolder.java\n@@ -1,5 +1,6 @@\n package de.danoeh.antennapod.ui.episodeslist;\n \n+import android.app.Activity;\n import android.os.Build;\n import android.text.Layout;\n import android.text.format.Formatter;\n@@ -17,7 +18,6 @@\n import com.google.android.material.elevation.SurfaceColors;\n \n import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.activity.MainActivity;\n import de.danoeh.antennapod.ui.CoverLoader;\n import de.danoeh.antennapod.actionbutton.ItemActionButton;\n import de.danoeh.antennapod.playback.service.PlaybackStatus;\n@@ -62,10 +62,10 @@ public class EpisodeItemViewHolder extends RecyclerView.ViewHolder {\n     private final View leftPadding;\n     public final CardView coverHolder;\n \n-    private final MainActivity activity;\n+    private final Activity activity;\n     private FeedItem item;\n \n-    public EpisodeItemViewHolder(MainActivity activity, ViewGroup parent) {\n+    public EpisodeItemViewHolder(Activity activity, ViewGroup parent) {\n         super(LayoutInflater.from(activity).inflate(R.layout.feeditemlist_item, parent, false));\n         this.activity = activity;\n         container = itemView.findViewById(R.id.container);\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodeMultiSelectActionHandler.java b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodeMultiSelectActionHandler.java\nindex 76ed47de53..a655982cbb 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodeMultiSelectActionHandler.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodeMultiSelectActionHandler.java\n@@ -1,29 +1,28 @@\n package de.danoeh.antennapod.ui.episodeslist;\n \n+import android.app.Activity;\n import android.util.Log;\n \n import androidx.annotation.PluralsRes;\n \n-import com.google.android.material.snackbar.Snackbar;\n-\n import java.util.List;\n \n import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.activity.MainActivity;\n+import de.danoeh.antennapod.event.MessageEvent;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n import de.danoeh.antennapod.storage.database.DBWriter;\n import de.danoeh.antennapod.storage.database.LongList;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.ui.view.LocalDeleteModal;\n+import org.greenrobot.eventbus.EventBus;\n \n public class EpisodeMultiSelectActionHandler {\n     private static final String TAG = \"EpisodeSelectHandler\";\n-    private final MainActivity activity;\n+    private final Activity activity;\n     private final int actionId;\n     private int totalNumItems = 0;\n-    private Snackbar snackbar = null;\n \n-    public EpisodeMultiSelectActionHandler(MainActivity activity, int actionId) {\n+    public EpisodeMultiSelectActionHandler(Activity activity, int actionId) {\n         this.activity = activity;\n         this.actionId = actionId;\n     }\n@@ -116,12 +115,7 @@ private void showMessage(@PluralsRes int msgId, int numItems) {\n         totalNumItems += numItems;\n         activity.runOnUiThread(() -> {\n             String text = activity.getResources().getQuantityString(msgId, totalNumItems, totalNumItems);\n-            if (snackbar != null) {\n-                snackbar.setText(text);\n-                snackbar.show(); // Resets the timeout\n-            } else {\n-                snackbar = activity.showSnackbarAbovePlayer(text, Snackbar.LENGTH_LONG);\n-            }\n+            EventBus.getDefault().post(new MessageEvent(text));\n         });\n     }\n \ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/FeedItemMenuHandler.java b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/FeedItemMenuHandler.java\nindex e1974940c1..720e0ccbcd 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/FeedItemMenuHandler.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/FeedItemMenuHandler.java\n@@ -16,6 +16,7 @@\n \n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n+import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.net.sync.serviceinterface.SynchronizationQueueSink;\n import de.danoeh.antennapod.storage.preferences.PlaybackPreferences;\n import de.danoeh.antennapod.playback.service.PlaybackServiceInterface;\n@@ -84,6 +85,10 @@ public static boolean onPrepareMenu(Menu menu, FeedItem selectedItem) {\n         setItemVisibility(menu, R.id.add_to_favorites_item, !isFavorite);\n         setItemVisibility(menu, R.id.remove_from_favorites_item, isFavorite);\n         setItemVisibility(menu, R.id.remove_item, fileDownloaded || isLocalFile);\n+\n+        if (selectedItem.getFeed().getState() != Feed.STATE_SUBSCRIBED) {\n+            setItemVisibility(menu, R.id.mark_read_item, false);\n+        }\n         return true;\n     }\n \n@@ -158,7 +163,8 @@ public static boolean onMenuItemClicked(@NonNull Fragment fragment, int menuItem\n         } else if (menuItemId == R.id.mark_read_item) {\n             selectedItem.setPlayed(true);\n             DBWriter.markItemPlayed(selectedItem, FeedItem.PLAYED, true);\n-            if (!selectedItem.getFeed().isLocalFeed() && SynchronizationSettings.isProviderConnected()) {\n+            if (!selectedItem.getFeed().isLocalFeed() && selectedItem.getFeed().getState() == Feed.STATE_SUBSCRIBED\n+                    && SynchronizationSettings.isProviderConnected()) {\n                 FeedMedia media = selectedItem.getMedia();\n                 // not all items have media, Gpodder only cares about those that do\n                 if (media != null) {\n@@ -174,7 +180,8 @@ public static boolean onMenuItemClicked(@NonNull Fragment fragment, int menuItem\n         } else if (menuItemId == R.id.mark_unread_item) {\n             selectedItem.setPlayed(false);\n             DBWriter.markItemPlayed(selectedItem, FeedItem.UNPLAYED, false);\n-            if (!selectedItem.getFeed().isLocalFeed() && selectedItem.getMedia() != null) {\n+            if (!selectedItem.getFeed().isLocalFeed() && selectedItem.getMedia() != null\n+                    && selectedItem.getFeed().getState() == Feed.STATE_SUBSCRIBED) {\n                 EpisodeAction actionNew = new EpisodeAction.Builder(selectedItem, EpisodeAction.NEW)\n                         .currentTimestamp()\n                         .build();\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/AllEpisodesFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/AllEpisodesFragment.java\nindex eb49c94d93..6e48ade397 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/AllEpisodesFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/AllEpisodesFragment.java\n@@ -66,7 +66,12 @@ protected int loadTotalItemCount() {\n \n     @Override\n     protected FeedItemFilter getFilter() {\n-        return new FeedItemFilter(UserPreferences.getPrefFilterAllEpisodes());\n+        FeedItemFilter filter = new FeedItemFilter(UserPreferences.getPrefFilterAllEpisodes());\n+        if (filter.showIsFavorite) {\n+            return new FeedItemFilter(filter, FeedItemFilter.INCLUDE_NOT_SUBSCRIBED);\n+        } else {\n+            return filter;\n+        }\n     }\n \n     @Override\n@@ -91,6 +96,7 @@ public boolean onMenuItemClick(MenuItem item) {\n             ArrayList<String> filter = new ArrayList<>(getFilter().getValuesList());\n             if (filter.contains(FeedItemFilter.IS_FAVORITE)) {\n                 filter.remove(FeedItemFilter.IS_FAVORITE);\n+                filter.remove(FeedItemFilter.INCLUDE_NOT_SUBSCRIBED);\n             } else {\n                 filter.add(FeedItemFilter.IS_FAVORITE);\n             }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/PlaybackHistoryFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/PlaybackHistoryFragment.java\nindex a02f86bd21..abdf043b1e 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/PlaybackHistoryFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/PlaybackHistoryFragment.java\n@@ -23,7 +23,8 @@\n \n public class PlaybackHistoryFragment extends EpisodesListFragment {\n     public static final String TAG = \"PlaybackHistoryFragment\";\n-    private static final FeedItemFilter FILTER_HISTORY = new FeedItemFilter(FeedItemFilter.IS_IN_HISTORY);\n+    private static final FeedItemFilter FILTER_HISTORY = new FeedItemFilter(\n+            FeedItemFilter.IS_IN_HISTORY, FeedItemFilter.INCLUDE_NOT_SUBSCRIBED);\n \n     @NonNull\n     @Override\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/download/CompletedDownloadsFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/download/CompletedDownloadsFragment.java\nindex 001c2b4658..0d82b71330 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/download/CompletedDownloadsFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/download/CompletedDownloadsFragment.java\n@@ -285,7 +285,7 @@ private void loadItems() {\n         disposable = Observable.fromCallable(() -> {\n             SortOrder sortOrder = UserPreferences.getDownloadsSortedOrder();\n             List<FeedItem> downloadedItems = DBReader.getEpisodes(0, Integer.MAX_VALUE,\n-                        new FeedItemFilter(FeedItemFilter.DOWNLOADED), sortOrder);\n+                    new FeedItemFilter(FeedItemFilter.DOWNLOADED, FeedItemFilter.INCLUDE_NOT_SUBSCRIBED), sortOrder);\n \n             List<String> mediaUrls = new ArrayList<>();\n             if (runningDownloads == null) {\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/episode/ItemFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/episode/ItemFragment.java\nindex e31004a57f..a5ee78a58c 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/episode/ItemFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/episode/ItemFragment.java\n@@ -38,6 +38,7 @@\n import de.danoeh.antennapod.actionbutton.StreamActionButton;\n import de.danoeh.antennapod.actionbutton.VisitWebsiteActionButton;\n import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n+import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.playback.service.PlaybackStatus;\n import de.danoeh.antennapod.event.FeedItemEvent;\n import de.danoeh.antennapod.event.PlayerStatusEvent;\n@@ -49,6 +50,7 @@\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n import de.danoeh.antennapod.storage.database.DBReader;\n+import de.danoeh.antennapod.ui.appstartintent.OnlineFeedviewActivityStarter;\n import de.danoeh.antennapod.ui.common.Converter;\n import de.danoeh.antennapod.ui.common.DateFormatter;\n import de.danoeh.antennapod.ui.common.CircularProgressBar;\n@@ -114,6 +116,7 @@ public static ItemFragment newInstance(long feeditem) {\n     private ItemActionButton actionButton1;\n     private ItemActionButton actionButton2;\n     private View noMediaLabel;\n+    private View nonSubscribedWarningLabel;\n \n     private Disposable disposable;\n     private PlaybackController controller;\n@@ -164,6 +167,7 @@ public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,\n         butAction1Text = layout.findViewById(R.id.butAction1Text);\n         butAction2Text = layout.findViewById(R.id.butAction2Text);\n         noMediaLabel = layout.findViewById(R.id.noMediaLabel);\n+        nonSubscribedWarningLabel = layout.findViewById(R.id.nonSubscribedWarningLabel);\n \n         butAction1.setOnClickListener(v -> {\n             if (actionButton1 instanceof StreamActionButton && !UserPreferences.isStreamOverDownload()\n@@ -287,6 +291,11 @@ private void updateAppearance() {\n             txtvPublished.setContentDescription(DateFormatter.formatForAccessibility(item.getPubDate()));\n         }\n \n+        if (item.getFeed().getState() != Feed.STATE_SUBSCRIBED) {\n+            nonSubscribedWarningLabel.setVisibility(View.VISIBLE);\n+            nonSubscribedWarningLabel.setOnClickListener(v -> openPodcast());\n+        }\n+\n         float radius = 8 * getResources().getDisplayMetrics().density;\n         RequestOptions options = new RequestOptions()\n                 .error(ImagePlaceholder.getDrawable(getContext(), radius))\n@@ -366,8 +375,13 @@ private void openPodcast() {\n         if (item == null) {\n             return;\n         }\n-        Fragment fragment = FeedItemlistFragment.newInstance(item.getFeedId());\n-        ((MainActivity) getActivity()).loadChildFragment(fragment);\n+        if (item.getFeed().getState() == Feed.STATE_SUBSCRIBED) {\n+            Fragment fragment = FeedItemlistFragment.newInstance(item.getFeedId());\n+            ((MainActivity) getActivity()).loadChildFragment(fragment);\n+        } else {\n+            startActivity(new OnlineFeedviewActivityStarter(getContext(), item.getFeed().getDownloadUrl())\n+                    .getIntent());\n+        }\n     }\n \n     @Subscribe(threadMode = ThreadMode.MAIN)\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/episode/ItemPagerFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/episode/ItemPagerFragment.java\nindex e7f3456175..951e5affb5 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/episode/ItemPagerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/episode/ItemPagerFragment.java\n@@ -1,5 +1,6 @@\n package de.danoeh.antennapod.ui.screen.episode;\n \n+import android.content.Intent;\n import android.os.Bundle;\n import android.view.LayoutInflater;\n import android.view.MenuItem;\n@@ -13,7 +14,8 @@\n import androidx.viewpager2.adapter.FragmentStateAdapter;\n import androidx.viewpager2.widget.ViewPager2;\n \n-import de.danoeh.antennapod.ui.screen.feed.FeedItemlistFragment;\n+import de.danoeh.antennapod.model.feed.Feed;\n+import de.danoeh.antennapod.ui.appstartintent.OnlineFeedviewActivityStarter;\n import org.greenrobot.eventbus.EventBus;\n import org.greenrobot.eventbus.Subscribe;\n import org.greenrobot.eventbus.ThreadMode;\n@@ -173,8 +175,12 @@ private void openPodcast() {\n         if (item == null) {\n             return;\n         }\n-        Fragment fragment = FeedItemlistFragment.newInstance(item.getFeedId());\n-        ((MainActivity) getActivity()).loadChildFragment(fragment);\n+        if (item.getFeed().getState() == Feed.STATE_SUBSCRIBED) {\n+            Intent intent = MainActivity.getIntentToOpenFeed(getContext(), item.getFeedId());\n+            startActivity(intent);\n+        } else {\n+            startActivity(new OnlineFeedviewActivityStarter(getContext(), item.getFeed().getDownloadUrl()).getIntent());\n+        }\n     }\n \n     private class ItemPagerAdapter extends FragmentStateAdapter {\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedInfoFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedInfoFragment.java\nindex aabb0852e2..f73b69d752 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedInfoFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedInfoFragment.java\n@@ -122,7 +122,6 @@ protected void doTint(Context themedContext) {\n         viewBinding.header.butFilter.setVisibility(View.INVISIBLE);\n         // https://github.com/bumptech/glide/issues/529\n         viewBinding.imgvBackground.setColorFilter(new LightingColorFilter(0xff828282, 0x000000));\n-\n         viewBinding.urlLabel.setOnClickListener(copyUrlToClipboard);\n \n         long feedId = getArguments().getLong(EXTRA_FEED_ID);\n@@ -237,6 +236,25 @@ private void showFeed() {\n             viewBinding.supportUrl.setText(str.toString());\n         }\n \n+        if (feed.getState() == Feed.STATE_SUBSCRIBED) {\n+            long feedId = getArguments().getLong(EXTRA_FEED_ID);\n+            getParentFragmentManager().beginTransaction().replace(R.id.statisticsFragmentContainer,\n+                            FeedStatisticsFragment.newInstance(feedId, false), \"feed_statistics_fragment\")\n+                    .commitAllowingStateLoss();\n+\n+            viewBinding.statisticsButton.setOnClickListener(view -> {\n+                StatisticsFragment fragment = new StatisticsFragment();\n+                ((MainActivity) getActivity()).loadChildFragment(fragment, TransitionEffect.SLIDE);\n+            });\n+        } else {\n+            viewBinding.statisticsButton.setVisibility(View.GONE);\n+            viewBinding.statisticsFragmentContainer.setVisibility(View.GONE);\n+            viewBinding.statisticsHeadingLabel.setVisibility(View.GONE);\n+            viewBinding.supportHeadingLabel.setVisibility(View.GONE);\n+            viewBinding.supportUrl.setVisibility(View.GONE);\n+            viewBinding.descriptionHeadingLabel.setVisibility(View.GONE);\n+        }\n+\n         refreshToolbarState();\n     }\n \n@@ -249,13 +267,14 @@ public void onDestroy() {\n     }\n \n     private void refreshToolbarState() {\n+        boolean isSubscribed = feed != null && feed.getState() == Feed.STATE_SUBSCRIBED;\n         viewBinding.toolbar.getMenu().findItem(R.id.reconnect_local_folder).setVisible(\n-                feed != null && feed.isLocalFeed());\n-        viewBinding.toolbar.getMenu().findItem(R.id.share_item).setVisible(feed != null && !feed.isLocalFeed());\n-        viewBinding.toolbar.getMenu().findItem(R.id.visit_website_item).setVisible(feed != null\n+                isSubscribed && feed.isLocalFeed());\n+        viewBinding.toolbar.getMenu().findItem(R.id.share_item).setVisible(isSubscribed && !feed.isLocalFeed());\n+        viewBinding.toolbar.getMenu().findItem(R.id.visit_website_item).setVisible(isSubscribed\n                 && feed.getLink() != null\n                 && IntentUtils.isCallable(getContext(), new Intent(Intent.ACTION_VIEW, Uri.parse(feed.getLink()))));\n-        viewBinding.toolbar.getMenu().findItem(R.id.edit_feed_url_item).setVisible(feed != null && !feed.isLocalFeed());\n+        viewBinding.toolbar.getMenu().findItem(R.id.edit_feed_url_item).setVisible(isSubscribed && !feed.isLocalFeed());\n     }\n \n     @Override\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedItemlistFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedItemlistFragment.java\nindex 9bc45a235f..2167887d51 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedItemlistFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedItemlistFragment.java\n@@ -12,52 +12,23 @@\n import android.view.View;\n import android.view.ViewGroup;\n import android.widget.AdapterView;\n-import android.widget.Toast;\n-\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n import androidx.appcompat.content.res.AppCompatResources;\n import androidx.core.util.Pair;\n import androidx.fragment.app.Fragment;\n+import androidx.fragment.app.FragmentActivity;\n import androidx.recyclerview.widget.RecyclerView;\n-\n import com.bumptech.glide.Glide;\n import com.bumptech.glide.request.RequestOptions;\n import com.google.android.material.appbar.MaterialToolbar;\n import com.google.android.material.snackbar.Snackbar;\n-\n-import de.danoeh.antennapod.ui.CoverLoader;\n-import de.danoeh.antennapod.ui.screen.episode.ItemPagerFragment;\n-import de.danoeh.antennapod.ui.screen.SearchFragment;\n-import de.danoeh.antennapod.ui.TransitionEffect;\n-import de.danoeh.antennapod.net.download.serviceinterface.FeedUpdateManager;\n-import de.danoeh.antennapod.ui.screen.download.DownloadLogFragment;\n-import de.danoeh.antennapod.ui.screen.feed.preferences.FeedSettingsFragment;\n-import org.apache.commons.lang3.StringUtils;\n-import org.apache.commons.lang3.Validate;\n-import org.greenrobot.eventbus.EventBus;\n-import org.greenrobot.eventbus.Subscribe;\n-import org.greenrobot.eventbus.ThreadMode;\n-\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.concurrent.ExecutionException;\n-\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n-import de.danoeh.antennapod.ui.episodeslist.EpisodeItemListAdapter;\n-import de.danoeh.antennapod.event.FeedEvent;\n-import de.danoeh.antennapod.ui.MenuItemUtils;\n-import de.danoeh.antennapod.storage.database.DBReader;\n-import de.danoeh.antennapod.storage.database.DBWriter;\n-import de.danoeh.antennapod.ui.common.IntentUtils;\n-import de.danoeh.antennapod.ui.share.ShareUtils;\n-import de.danoeh.antennapod.ui.episodeslist.MoreContentListFooterUtil;\n import de.danoeh.antennapod.databinding.FeedItemListFragmentBinding;\n-import de.danoeh.antennapod.ui.screen.download.DownloadLogDetailsDialog;\n-import de.danoeh.antennapod.ui.FeedItemFilterDialog;\n import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.event.FavoritesEvent;\n+import de.danoeh.antennapod.event.FeedEvent;\n import de.danoeh.antennapod.event.FeedItemEvent;\n import de.danoeh.antennapod.event.FeedListUpdateEvent;\n import de.danoeh.antennapod.event.FeedUpdateRunningEvent;\n@@ -65,21 +36,48 @@\n import de.danoeh.antennapod.event.QueueEvent;\n import de.danoeh.antennapod.event.UnreadItemsUpdateEvent;\n import de.danoeh.antennapod.event.playback.PlaybackPositionEvent;\n-import de.danoeh.antennapod.ui.episodeslist.EpisodeMultiSelectActionHandler;\n-import de.danoeh.antennapod.ui.swipeactions.SwipeActions;\n-import de.danoeh.antennapod.ui.episodeslist.FeedItemMenuHandler;\n import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedItemFilter;\n+import de.danoeh.antennapod.net.download.serviceinterface.FeedUpdateManager;\n+import de.danoeh.antennapod.storage.database.DBReader;\n+import de.danoeh.antennapod.storage.database.DBWriter;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n-import de.danoeh.antennapod.ui.glide.FastBlurTransformation;\n+import de.danoeh.antennapod.ui.CoverLoader;\n+import de.danoeh.antennapod.ui.FeedItemFilterDialog;\n+import de.danoeh.antennapod.ui.MenuItemUtils;\n+import de.danoeh.antennapod.ui.TransitionEffect;\n+import de.danoeh.antennapod.ui.appstartintent.MainActivityStarter;\n+import de.danoeh.antennapod.ui.cleaner.HtmlToPlainText;\n+import de.danoeh.antennapod.ui.common.IntentUtils;\n+import de.danoeh.antennapod.ui.episodeslist.EpisodeItemListAdapter;\n import de.danoeh.antennapod.ui.episodeslist.EpisodeItemViewHolder;\n+import de.danoeh.antennapod.ui.episodeslist.EpisodeMultiSelectActionHandler;\n+import de.danoeh.antennapod.ui.episodeslist.FeedItemMenuHandler;\n+import de.danoeh.antennapod.ui.episodeslist.MoreContentListFooterUtil;\n+import de.danoeh.antennapod.ui.glide.FastBlurTransformation;\n+import de.danoeh.antennapod.ui.screen.SearchFragment;\n+import de.danoeh.antennapod.ui.screen.download.DownloadLogDetailsDialog;\n+import de.danoeh.antennapod.ui.screen.download.DownloadLogFragment;\n+import de.danoeh.antennapod.ui.screen.episode.ItemPagerFragment;\n+import de.danoeh.antennapod.ui.screen.feed.preferences.FeedSettingsFragment;\n+import de.danoeh.antennapod.ui.share.ShareUtils;\n+import de.danoeh.antennapod.ui.swipeactions.SwipeActions;\n import io.reactivex.Maybe;\n import io.reactivex.Observable;\n import io.reactivex.android.schedulers.AndroidSchedulers;\n import io.reactivex.disposables.Disposable;\n import io.reactivex.schedulers.Schedulers;\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.commons.lang3.Validate;\n+import org.greenrobot.eventbus.EventBus;\n+import org.greenrobot.eventbus.Subscribe;\n+import org.greenrobot.eventbus.ThreadMode;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n \n /**\n  * Displays a list of FeedItems.\n@@ -100,7 +98,6 @@ public class FeedItemlistFragment extends Fragment implements AdapterView.OnItem\n     private boolean displayUpArrow;\n     private long feedID;\n     private Feed feed;\n-    private boolean headerCreated = false;\n     private Disposable disposable;\n     private FeedItemListFragmentBinding viewBinding;\n \n@@ -145,12 +142,18 @@ public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup c\n         if (savedInstanceState != null) {\n             displayUpArrow = savedInstanceState.getBoolean(KEY_UP_ARROW);\n         }\n-        ((MainActivity) getActivity()).setupToolbarToggle(viewBinding.toolbar, displayUpArrow);\n+        if (getActivity() instanceof MainActivity) {\n+            ((MainActivity) getActivity()).setupToolbarToggle(viewBinding.toolbar, displayUpArrow);\n+            viewBinding.recyclerView.setRecycledViewPool(((MainActivity) getActivity()).getRecycledViewPool());\n+        } else {\n+            viewBinding.toolbar.setNavigationIcon(R.drawable.ic_close);\n+            viewBinding.toolbar.setNavigationOnClickListener(view -> getActivity().finish());\n+        }\n         updateToolbar();\n         setupLoadMoreScrollListener();\n+        setupHeaderView();\n \n-        viewBinding.recyclerView.setRecycledViewPool(((MainActivity) getActivity()).getRecycledViewPool());\n-        adapter = new FeedItemListAdapter((MainActivity) getActivity());\n+        adapter = new FeedItemListAdapter(getActivity());\n         adapter.setOnSelectModeListener(this);\n         viewBinding.recyclerView.setAdapter(adapter);\n         swipeActions = new SwipeActions(this, TAG).attachTo(viewBinding.recyclerView);\n@@ -198,7 +201,7 @@ public void onScrolled(@NonNull RecyclerView view, int deltaX, int deltaY) {\n                         Snackbar.LENGTH_SHORT);\n                 return false;\n             }\n-            new EpisodeMultiSelectActionHandler(((MainActivity) getActivity()), menuItem.getItemId())\n+            new EpisodeMultiSelectActionHandler(getActivity(), menuItem.getItemId())\n                     .handleAction(adapter.getSelectedItems());\n             adapter.endSelectMode();\n             return true;\n@@ -249,6 +252,13 @@ private void updateToolbar() {\n         if (feed.isLocalFeed()) {\n             viewBinding.toolbar.getMenu().findItem(R.id.share_item).setVisible(false);\n         }\n+        if (feed.getState() == Feed.STATE_NOT_SUBSCRIBED) {\n+            viewBinding.toolbar.getMenu().findItem(R.id.sort_items).setVisible(false);\n+            viewBinding.toolbar.getMenu().findItem(R.id.refresh_item).setVisible(false);\n+            viewBinding.toolbar.getMenu().findItem(R.id.rename_item).setVisible(false);\n+            viewBinding.toolbar.getMenu().findItem(R.id.remove_feed).setVisible(false);\n+            viewBinding.toolbar.getMenu().findItem(R.id.action_search).setVisible(false);\n+        }\n     }\n \n     @Override\n@@ -263,8 +273,7 @@ public void onConfigurationChanged(@NonNull Configuration newConfig) {\n     @Override\n     public boolean onMenuItemClick(MenuItem item) {\n         if (feed == null) {\n-            ((MainActivity) getActivity()).showSnackbarAbovePlayer(\n-                    R.string.please_wait_for_data, Toast.LENGTH_LONG);\n+            EventBus.getDefault().post(getString(R.string.please_wait_for_data));\n             return true;\n         }\n         if (item.getItemId() == R.id.visit_website_item) {\n@@ -443,7 +452,6 @@ public void onEventMainThread(FeedUpdateRunningEvent event) {\n     }\n \n     private void refreshHeaderView() {\n-        setupHeaderView();\n         if (viewBinding == null || feed == null) {\n             Log.e(TAG, \"Unable to refresh header view\");\n             return;\n@@ -454,7 +462,7 @@ private void refreshHeaderView() {\n         } else {\n             viewBinding.header.txtvFailure.setVisibility(View.GONE);\n         }\n-        if (!feed.getPreferences().getKeepUpdated()) {\n+        if (!feed.getPreferences().getKeepUpdated() && feed.getState() == Feed.STATE_SUBSCRIBED) {\n             viewBinding.header.txtvUpdatesDisabled.setText(R.string.updates_disabled_label);\n             viewBinding.header.txtvUpdatesDisabled.setVisibility(View.VISIBLE);\n         } else {\n@@ -462,7 +470,11 @@ private void refreshHeaderView() {\n         }\n         viewBinding.header.txtvTitle.setText(feed.getTitle());\n         viewBinding.header.txtvAuthor.setText(feed.getAuthor());\n-        if (feed.getItemFilter() != null) {\n+        viewBinding.header.descriptionContainer.setVisibility(View.GONE);\n+        if (feed.getState() != Feed.STATE_SUBSCRIBED) {\n+            viewBinding.header.descriptionContainer.setVisibility(View.VISIBLE);\n+            viewBinding.header.headerDescriptionLabel.setText(HtmlToPlainText.getPlainText(feed.getDescription()));\n+        } else if (feed.getItemFilter() != null) {\n             FeedItemFilter filter = feed.getItemFilter();\n             if (filter.getValues().length > 0) {\n                 viewBinding.header.txtvInformation.setText(R.string.filtered_label);\n@@ -475,17 +487,30 @@ private void refreshHeaderView() {\n         } else {\n             viewBinding.header.txtvInformation.setVisibility(View.GONE);\n         }\n-    }\n+        boolean isSubscribed = feed.getState() == Feed.STATE_SUBSCRIBED;\n+        viewBinding.header.butShowInfo.setVisibility(isSubscribed ? View.VISIBLE : View.GONE);\n+        viewBinding.header.butFilter.setVisibility(isSubscribed ? View.VISIBLE : View.GONE);\n+        viewBinding.header.butShowSettings.setVisibility(isSubscribed ? View.VISIBLE : View.GONE);\n+        viewBinding.header.butSubscribe.setVisibility(isSubscribed ? View.GONE : View.VISIBLE);\n \n-    private void setupHeaderView() {\n-        if (feed == null || headerCreated) {\n-            return;\n+        if (!isSubscribed && feed.getLastRefreshAttempt() < System.currentTimeMillis() - 1000L * 3600 * 24) {\n+            FeedUpdateManager.getInstance().runOnce(getContext(), feed, true);\n         }\n+    }\n \n+    private void setupHeaderView() {\n         // https://github.com/bumptech/glide/issues/529\n         viewBinding.imgvBackground.setColorFilter(new LightingColorFilter(0xff666666, 0x000000));\n         viewBinding.header.butShowInfo.setOnClickListener(v -> showFeedInfo());\n         viewBinding.header.imgvCover.setOnClickListener(v -> showFeedInfo());\n+        viewBinding.header.headerDescriptionLabel.setOnClickListener(v -> showFeedInfo());\n+        viewBinding.header.butSubscribe.setOnClickListener(view -> {\n+            DBWriter.setFeedState(getContext(), feed, Feed.STATE_SUBSCRIBED);\n+            MainActivityStarter mainActivityStarter = new MainActivityStarter(getContext());\n+            mainActivityStarter.withOpenFeed(feed.getId());\n+            getActivity().finish();\n+            startActivity(mainActivityStarter.getIntent());\n+        });\n         viewBinding.header.butShowSettings.setOnClickListener(v -> {\n             if (feed != null) {\n                 FeedSettingsFragment fragment = FeedSettingsFragment.newInstance(feed);\n@@ -495,7 +520,6 @@ private void setupHeaderView() {\n         viewBinding.header.butFilter.setOnClickListener(v ->\n                 FeedItemFilterDialog.newInstance(feed).show(getChildFragmentManager(), null));\n         viewBinding.header.txtvFailure.setOnClickListener(v -> showErrorDetails());\n-        headerCreated = true;\n     }\n \n     private void showErrorDetails() {\n@@ -516,9 +540,18 @@ private void showErrorDetails() {\n     }\n \n     private void showFeedInfo() {\n-        if (feed != null) {\n-            FeedInfoFragment fragment = FeedInfoFragment.newInstance(feed);\n+        if (feed == null) {\n+            return;\n+        }\n+        FeedInfoFragment fragment = FeedInfoFragment.newInstance(feed);\n+        if (getActivity() instanceof MainActivity) {\n             ((MainActivity) getActivity()).loadChildFragment(fragment, TransitionEffect.SLIDE);\n+        } else {\n+            getActivity().getSupportFragmentManager()\n+                    .beginTransaction()\n+                    .replace(R.id.fragmentContainer, fragment, \"Info\")\n+                    .addToBackStack(\"Info\")\n+                    .commitAllowingStateLoss();\n         }\n     }\n \n@@ -625,7 +658,7 @@ public void onKeyUp(KeyEvent event) {\n     }\n \n     private class FeedItemListAdapter extends EpisodeItemListAdapter {\n-        public FeedItemListAdapter(MainActivity mainActivity) {\n+        public FeedItemListAdapter(FragmentActivity mainActivity) {\n             super(mainActivity);\n         }\n \n@@ -648,7 +681,7 @@ protected void afterBindViewHolder(EpisodeItemViewHolder holder, int pos) {\n         @Override\n         public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {\n             super.onCreateContextMenu(menu, v, menuInfo);\n-            if (!inActionMode()) {\n+            if (!inActionMode() && feed.getState() == Feed.STATE_SUBSCRIBED) {\n                 menu.findItem(R.id.multi_select).setVisible(true);\n             }\n             MenuItemUtils.setOnClickListeners(menu, FeedItemlistFragment.this::onContextItemSelected);\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/DownloadsSection.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/DownloadsSection.java\nindex cc3288e2f2..06de7803a1 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/DownloadsSection.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/DownloadsSection.java\n@@ -39,6 +39,8 @@\n public class DownloadsSection extends HomeSection {\n     public static final String TAG = \"DownloadsSection\";\n     private static final int NUM_EPISODES = 2;\n+    private static final FeedItemFilter FILTER_DOWNLOADED = new FeedItemFilter(\n+            FeedItemFilter.DOWNLOADED, FeedItemFilter.INCLUDE_NOT_SUBSCRIBED);\n     private EpisodeItemListAdapter adapter;\n     private List<FeedItem> items;\n     private Disposable disposable;\n@@ -52,7 +54,7 @@ public View onCreateView(@NonNull LayoutInflater inflater,\n         viewBinding.recyclerView.setOverScrollMode(RecyclerView.OVER_SCROLL_NEVER);\n         viewBinding.recyclerView.setLayoutManager(new LinearLayoutManager(getContext(), RecyclerView.VERTICAL, false));\n         viewBinding.recyclerView.setRecycledViewPool(((MainActivity) requireActivity()).getRecycledViewPool());\n-        adapter = new EpisodeItemListAdapter((MainActivity) requireActivity()) {\n+        adapter = new EpisodeItemListAdapter(requireActivity()) {\n             @Override\n             public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {\n                 super.onCreateContextMenu(menu, v, menuInfo);\n@@ -124,8 +126,7 @@ private void loadItems() {\n             disposable.dispose();\n         }\n         SortOrder sortOrder = UserPreferences.getDownloadsSortedOrder();\n-        disposable = Observable.fromCallable(() -> DBReader.getEpisodes(0, NUM_EPISODES,\n-                        new FeedItemFilter(FeedItemFilter.DOWNLOADED), sortOrder))\n+        disposable = Observable.fromCallable(() -> DBReader.getEpisodes(0, NUM_EPISODES, FILTER_DOWNLOADED, sortOrder))\n                 .subscribeOn(Schedulers.io())\n                 .observeOn(AndroidSchedulers.mainThread())\n                 .subscribe(downloads -> {\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/onlinefeedview/FeedItemlistDescriptionAdapter.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/onlinefeedview/FeedItemlistDescriptionAdapter.java\ndeleted file mode 100644\nindex f46d786cfe..0000000000\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/onlinefeedview/FeedItemlistDescriptionAdapter.java\n+++ /dev/null\n@@ -1,112 +0,0 @@\n-package de.danoeh.antennapod.ui.screen.onlinefeedview;\n-\n-import android.content.Context;\n-import android.view.LayoutInflater;\n-import android.view.View;\n-import android.view.ViewGroup;\n-import android.widget.ArrayAdapter;\n-import android.widget.Button;\n-import android.widget.TextView;\n-\n-import androidx.annotation.NonNull;\n-import androidx.annotation.Nullable;\n-\n-import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.model.playback.MediaType;\n-import de.danoeh.antennapod.net.common.NetworkUtils;\n-import de.danoeh.antennapod.model.playback.RemoteMedia;\n-import de.danoeh.antennapod.model.feed.FeedItem;\n-import de.danoeh.antennapod.playback.service.PlaybackService;\n-import de.danoeh.antennapod.playback.service.PlaybackServiceStarter;\n-import de.danoeh.antennapod.ui.common.DateFormatter;\n-import de.danoeh.antennapod.model.playback.Playable;\n-import de.danoeh.antennapod.ui.cleaner.HtmlToPlainText;\n-import de.danoeh.antennapod.ui.StreamingConfirmationDialog;\n-\n-import java.util.List;\n-\n-/**\n- * List adapter for showing a list of FeedItems with their title and description.\n- */\n-public class FeedItemlistDescriptionAdapter extends ArrayAdapter<FeedItem> {\n-    private static final int MAX_LINES_COLLAPSED = 2;\n-\n-    public FeedItemlistDescriptionAdapter(Context context, int resource, List<FeedItem> objects) {\n-        super(context, resource, objects);\n-    }\n-\n-    @NonNull\n-    @Override\n-    public View getView(int position, @Nullable View convertView, @NonNull ViewGroup parent) {\n-        Holder holder;\n-\n-        FeedItem item = getItem(position);\n-\n-        // Inflate layout\n-        if (convertView == null) {\n-            holder = new Holder();\n-            LayoutInflater inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n-            convertView = inflater.inflate(R.layout.itemdescription_listitem, parent, false);\n-            holder.title = convertView.findViewById(R.id.txtvTitle);\n-            holder.pubDate = convertView.findViewById(R.id.txtvPubDate);\n-            holder.description = convertView.findViewById(R.id.txtvDescription);\n-            holder.preview = convertView.findViewById(R.id.butPreview);\n-\n-            convertView.setTag(holder);\n-        } else {\n-            holder = (Holder) convertView.getTag();\n-        }\n-\n-        holder.title.setText(item.getTitle());\n-        holder.pubDate.setText(DateFormatter.formatAbbrev(getContext(), item.getPubDate()));\n-        if (item.getDescription() != null) {\n-            String description = HtmlToPlainText.getPlainText(item.getDescription())\n-                    .replaceAll(\"\\n\", \" \")\n-                    .replaceAll(\"\\\\s+\", \" \")\n-                    .trim();\n-            holder.description.setText(description);\n-            holder.description.setMaxLines(MAX_LINES_COLLAPSED);\n-        }\n-        holder.description.setTag(Boolean.FALSE); // not expanded\n-        holder.preview.setVisibility(View.GONE);\n-        holder.preview.setOnClickListener(v -> {\n-            if (item.getMedia() == null) {\n-                return;\n-            }\n-            Playable playable = new RemoteMedia(item);\n-            if (!NetworkUtils.isStreamingAllowed()) {\n-                new StreamingConfirmationDialog(getContext(), playable).show();\n-                return;\n-            }\n-\n-            new PlaybackServiceStarter(getContext(), playable)\n-                    .callEvenIfRunning(true)\n-                    .start();\n-\n-            if (playable.getMediaType() == MediaType.VIDEO) {\n-                getContext().startActivity(PlaybackService.getPlayerActivityIntent(getContext(), playable));\n-            }\n-        });\n-        convertView.setOnClickListener(v -> {\n-            if (holder.description.getTag() == Boolean.TRUE) {\n-                holder.description.setMaxLines(MAX_LINES_COLLAPSED);\n-                holder.preview.setVisibility(View.GONE);\n-                holder.description.setTag(Boolean.FALSE);\n-            } else {\n-                holder.description.setMaxLines(30);\n-                holder.description.setTag(Boolean.TRUE);\n-\n-                holder.preview.setVisibility(item.getMedia() != null ? View.VISIBLE : View.GONE);\n-                holder.preview.setText(R.string.preview_episode);\n-            }\n-        });\n-        return convertView;\n-    }\n-\n-    static class Holder {\n-        TextView title;\n-        TextView pubDate;\n-        TextView description;\n-        Button preview;\n-    }\n-}\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/onlinefeedview/OnlineFeedViewActivity.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/onlinefeedview/OnlineFeedViewActivity.java\nindex 7b8558c3d0..be601027c0 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/onlinefeedview/OnlineFeedViewActivity.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/onlinefeedview/OnlineFeedViewActivity.java\n@@ -4,8 +4,6 @@\n import android.content.Context;\n import android.content.DialogInterface;\n import android.content.Intent;\n-import android.content.SharedPreferences;\n-import android.graphics.LightingColorFilter;\n import android.os.Bundle;\n import android.text.Spannable;\n import android.text.SpannableString;\n@@ -13,68 +11,45 @@\n import android.text.style.ForegroundColorSpan;\n import android.util.Log;\n import android.view.View;\n-import android.view.ViewGroup;\n-import android.widget.AdapterView;\n import android.widget.ArrayAdapter;\n import android.widget.Toast;\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n import androidx.annotation.UiThread;\n-import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n import androidx.appcompat.app.AppCompatActivity;\n-import com.bumptech.glide.Glide;\n-import com.bumptech.glide.request.RequestOptions;\n-import com.google.android.material.snackbar.Snackbar;\n-\n+import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.net.download.service.feed.remote.Downloader;\n-import de.danoeh.antennapod.net.download.service.feed.remote.HttpDownloader;\n-import de.danoeh.antennapod.ui.appstartintent.MainActivityStarter;\n-import de.danoeh.antennapod.ui.common.ThemeSwitcher;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequestCreator;\n-import de.danoeh.antennapod.net.discovery.FeedUrlNotFoundException;\n-import de.danoeh.antennapod.storage.database.FeedDatabaseWriter;\n-import de.danoeh.antennapod.playback.service.PlaybackServiceInterface;\n-import de.danoeh.antennapod.ui.screen.download.DownloadErrorLabel;\n import de.danoeh.antennapod.databinding.EditTextDialogBinding;\n-import de.danoeh.antennapod.databinding.OnlinefeedviewHeaderBinding;\n-import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n-import de.danoeh.antennapod.event.FeedListUpdateEvent;\n-import de.danoeh.antennapod.event.PlayerStatusEvent;\n-import de.danoeh.antennapod.storage.preferences.PlaybackPreferences;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n-import de.danoeh.antennapod.storage.preferences.UserPreferences;\n+import de.danoeh.antennapod.databinding.OnlinefeedviewActivityBinding;\n+import de.danoeh.antennapod.model.download.DownloadError;\n import de.danoeh.antennapod.model.download.DownloadRequest;\n import de.danoeh.antennapod.model.download.DownloadResult;\n-import de.danoeh.antennapod.storage.database.DBReader;\n-import de.danoeh.antennapod.storage.database.DBWriter;\n+import de.danoeh.antennapod.model.feed.Feed;\n+import de.danoeh.antennapod.net.common.UrlChecker;\n import de.danoeh.antennapod.net.discovery.CombinedSearcher;\n+import de.danoeh.antennapod.net.discovery.FeedUrlNotFoundException;\n import de.danoeh.antennapod.net.discovery.PodcastSearchResult;\n import de.danoeh.antennapod.net.discovery.PodcastSearcherRegistry;\n+import de.danoeh.antennapod.net.download.service.feed.remote.Downloader;\n+import de.danoeh.antennapod.net.download.service.feed.remote.HttpDownloader;\n+import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequestCreator;\n import de.danoeh.antennapod.parser.feed.FeedHandler;\n import de.danoeh.antennapod.parser.feed.FeedHandlerResult;\n-import de.danoeh.antennapod.model.download.DownloadError;\n-import de.danoeh.antennapod.ui.common.IntentUtils;\n-import de.danoeh.antennapod.net.common.UrlChecker;\n-import de.danoeh.antennapod.ui.cleaner.HtmlToPlainText;\n-import de.danoeh.antennapod.databinding.OnlinefeedviewActivityBinding;\n-import de.danoeh.antennapod.model.feed.Feed;\n-import de.danoeh.antennapod.model.feed.FeedPreferences;\n-import de.danoeh.antennapod.model.playback.RemoteMedia;\n import de.danoeh.antennapod.parser.feed.UnsupportedFeedtypeException;\n+import de.danoeh.antennapod.storage.database.DBReader;\n+import de.danoeh.antennapod.storage.database.DBWriter;\n+import de.danoeh.antennapod.storage.database.FeedDatabaseWriter;\n+import de.danoeh.antennapod.ui.appstartintent.MainActivityStarter;\n+import de.danoeh.antennapod.ui.common.ThemeSwitcher;\n import de.danoeh.antennapod.ui.common.ThemeUtils;\n-import de.danoeh.antennapod.ui.glide.FastBlurTransformation;\n import de.danoeh.antennapod.ui.preferences.screen.synchronization.AuthenticationDialog;\n+import de.danoeh.antennapod.ui.screen.download.DownloadErrorLabel;\n+import de.danoeh.antennapod.ui.screen.feed.FeedItemlistFragment;\n import io.reactivex.Maybe;\n import io.reactivex.Observable;\n import io.reactivex.android.schedulers.AndroidSchedulers;\n import io.reactivex.disposables.Disposable;\n-import io.reactivex.observers.DisposableMaybeObserver;\n import io.reactivex.schedulers.Schedulers;\n-import org.apache.commons.lang3.StringUtils;\n-import org.greenrobot.eventbus.EventBus;\n-import org.greenrobot.eventbus.Subscribe;\n-import org.greenrobot.eventbus.ThreadMode;\n \n import java.io.File;\n import java.io.IOException;\n@@ -95,30 +70,16 @@\n  * and the activity will finish as soon as the error dialog is closed.\n  */\n public class OnlineFeedViewActivity extends AppCompatActivity {\n-\n-    private static final int RESULT_ERROR = 2;\n     private static final String TAG = \"OnlineFeedViewActivity\";\n-    private static final String PREFS = \"OnlineFeedViewActivityPreferences\";\n-    private static final String PREF_LAST_AUTO_DOWNLOAD = \"lastAutoDownload\";\n-    private static final int DESCRIPTION_MAX_LINES_COLLAPSED = 4;\n-\n-    private volatile List<Feed> feeds;\n     private String selectedDownloadUrl;\n     private Downloader downloader;\n     private String username = null;\n     private String password = null;\n-\n     private boolean isPaused;\n-    private boolean didPressSubscribe = false;\n     private boolean isFeedFoundBySearch = false;\n-\n     private Dialog dialog;\n-\n     private Disposable download;\n     private Disposable parser;\n-    private Disposable updater;\n-\n-    private OnlinefeedviewHeaderBinding headerBinding;\n     private OnlinefeedviewActivityBinding viewBinding;\n \n     @Override\n@@ -128,12 +89,9 @@ protected void onCreate(Bundle savedInstanceState) {\n \n         viewBinding = OnlinefeedviewActivityBinding.inflate(getLayoutInflater());\n         setContentView(viewBinding.getRoot());\n-\n         viewBinding.transparentBackground.setOnClickListener(v -> finish());\n-        viewBinding.closeButton.setOnClickListener(view -> finish());\n         viewBinding.card.setOnClickListener(null);\n         viewBinding.card.setCardBackgroundColor(ThemeUtils.getColorFromAttr(this, R.attr.colorSurface));\n-        headerBinding = OnlinefeedviewHeaderBinding.inflate(getLayoutInflater());\n \n         String feedUrl = null;\n         if (getIntent().hasExtra(ARG_FEEDURL)) {\n@@ -149,7 +107,6 @@ protected void onCreate(Bundle savedInstanceState) {\n             showNoPodcastFoundError();\n         } else {\n             Log.d(TAG, \"Activity was started with url \" + feedUrl);\n-            setLoadingLayout();\n             // Remove subscribeonandroid.com from feed URL in order to subscribe to the actual feed URL\n             if (feedUrl.contains(\"subscribeonandroid.com\")) {\n                 feedUrl = feedUrl.replaceFirst(\"((www.)?(subscribeonandroid.com/))\", \"\");\n@@ -167,33 +124,20 @@ private void showNoPodcastFoundError() {\n                 .setNeutralButton(android.R.string.ok, (dialog, which) -> finish())\n                 .setTitle(R.string.error_label)\n                 .setMessage(R.string.null_value_podcast_error)\n-                .setOnDismissListener(dialog1 -> {\n-                    setResult(RESULT_ERROR);\n-                    finish();\n-                })\n+                .setOnDismissListener(dialog1 -> finish())\n                 .show());\n     }\n \n-    /**\n-     * Displays a progress indicator.\n-     */\n-    private void setLoadingLayout() {\n-        viewBinding.progressBar.setVisibility(View.VISIBLE);\n-        viewBinding.feedDisplayContainer.setVisibility(View.GONE);\n-    }\n-\n     @Override\n     protected void onStart() {\n         super.onStart();\n         isPaused = false;\n-        EventBus.getDefault().register(this);\n     }\n \n     @Override\n     protected void onStop() {\n         super.onStop();\n         isPaused = true;\n-        EventBus.getDefault().unregister(this);\n         if (downloader != null && !downloader.isFinished()) {\n             downloader.cancel();\n         }\n@@ -205,9 +149,6 @@ protected void onStop() {\n     @Override\n     public void onDestroy() {\n         super.onDestroy();\n-        if(updater != null) {\n-            updater.dispose();\n-        }\n         if(download != null) {\n             download.dispose();\n         }\n@@ -239,7 +180,7 @@ private void lookupUrlAndDownload(String url) {\n         download = PodcastSearcherRegistry.lookupUrl(url)\n                 .subscribeOn(Schedulers.io())\n                 .observeOn(Schedulers.io())\n-                .subscribe(this::startFeedDownload,\n+                .subscribe(this::downloadIfNotAlreadySubscribed,\n                         error -> {\n                             if (error instanceof FeedUrlNotFoundException) {\n                                 tryToRetrieveFeedUrlBySearch((FeedUrlNotFoundException) error);\n@@ -256,7 +197,7 @@ private void tryToRetrieveFeedUrlBySearch(FeedUrlNotFoundException error) {\n         if (url != null) {\n             Log.d(TAG, \"Successfully retrieve feed url\");\n             isFeedFoundBySearch = true;\n-            startFeedDownload(url);\n+            downloadIfNotAlreadySubscribed(url);\n         } else {\n             showNoPodcastFoundError();\n             Log.d(TAG, \"Failed to retrieve feed url\");\n@@ -277,6 +218,28 @@ private String searchFeedUrlByTrackName(String trackName, String artistName) {\n         return null;\n     }\n \n+    private Feed downloadIfNotAlreadySubscribed(String url) {\n+        download = Maybe.fromCallable(() -> {\n+            List<Feed> feeds = DBReader.getFeedList();\n+            for (Feed f : feeds) {\n+                if (f.getDownloadUrl().equals(url)) {\n+                    return f;\n+                }\n+            }\n+            return null;\n+        })\n+        .subscribeOn(Schedulers.io())\n+        .observeOn(AndroidSchedulers.mainThread())\n+        .subscribe(subscribedFeed -> {\n+            if (subscribedFeed.getState() == Feed.STATE_SUBSCRIBED) {\n+                openFeed(subscribedFeed.getId());\n+            } else {\n+                showFeedFragment(subscribedFeed.getId());\n+            }\n+        }, error -> Log.e(TAG, Log.getStackTraceString(error)), () -> startFeedDownload(url));\n+        return null;\n+    }\n+\n     private void startFeedDownload(String url) {\n         Log.d(TAG, \"Starting feed download\");\n         selectedDownloadUrl = UrlChecker.prepareUrl(url);\n@@ -286,7 +249,6 @@ private void startFeedDownload(String url) {\n                 .build();\n \n         download = Observable.fromCallable(() -> {\n-            feeds = DBReader.getFeedList();\n             downloader = new HttpDownloader(request);\n             downloader.call();\n             return downloader.getResult();\n@@ -315,46 +277,25 @@ private void checkDownloadResult(@NonNull DownloadResult status, String destinat\n         }\n     }\n \n-    @Subscribe\n-    public void onFeedListChanged(FeedListUpdateEvent event) {\n-        updater = Observable.fromCallable(DBReader::getFeedList)\n-                .subscribeOn(Schedulers.io())\n-                .observeOn(AndroidSchedulers.mainThread())\n-                .subscribe(\n-                        feeds -> {\n-                            OnlineFeedViewActivity.this.feeds = feeds;\n-                            handleUpdatedFeedStatus();\n-                        }, error -> Log.e(TAG, Log.getStackTraceString(error))\n-                );\n-    }\n-\n-    @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\n-    public void onEventMainThread(EpisodeDownloadEvent event) {\n-        handleUpdatedFeedStatus();\n-    }\n-\n     private void parseFeed(String destination) {\n         Log.d(TAG, \"Parsing feed\");\n-        parser = Maybe.fromCallable(() -> doParseFeed(destination))\n-                .subscribeOn(Schedulers.computation())\n-                .observeOn(AndroidSchedulers.mainThread())\n-                .subscribeWith(new DisposableMaybeObserver<FeedHandlerResult>() {\n-                    @Override\n-                    public void onSuccess(@NonNull FeedHandlerResult result) {\n-                        showFeedInformation(result.feed, result.alternateFeedUrls);\n-                    }\n-\n-                    @Override\n-                    public void onComplete() {\n-                        // Ignore null result: We showed the discovery dialog.\n-                    }\n-\n-                    @Override\n-                    public void onError(@NonNull Throwable error) {\n-                        showErrorDialog(error.getMessage(), \"\");\n-                        Log.d(TAG, \"Feed parser exception: \" + Log.getStackTraceString(error));\n-                    }\n-                });\n+        parser = Observable.fromCallable(() -> {\n+            FeedHandlerResult handlerResult = doParseFeed(destination);\n+            Feed feed = handlerResult.feed;\n+            feed.setState(Feed.STATE_NOT_SUBSCRIBED);\n+            feed.setLastRefreshAttempt(System.currentTimeMillis());\n+            FeedDatabaseWriter.updateFeed(this, feed, false);\n+            Feed feedFromDb = DBReader.getFeed(feed.getId(), false, 0, Integer.MAX_VALUE);\n+            feedFromDb.getPreferences().setKeepUpdated(false);\n+            DBWriter.setFeedPreferences(feedFromDb.getPreferences());\n+            return feed.getId();\n+        })\n+        .subscribeOn(Schedulers.computation())\n+        .observeOn(AndroidSchedulers.mainThread())\n+        .subscribe(this::showFeedFragment, error -> {\n+            error.printStackTrace();\n+            showErrorDialog(error.getMessage(), \"\");\n+        });\n     }\n \n     /**\n@@ -392,123 +333,23 @@ private FeedHandlerResult doParseFeed(String destination) throws Exception {\n         }\n     }\n \n-    /**\n-     * Called when feed parsed successfully.\n-     * This method is executed on the GUI thread.\n-     */\n-    private void showFeedInformation(final Feed feed, Map<String, String> alternateFeedUrls) {\n-        viewBinding.progressBar.setVisibility(View.GONE);\n-        viewBinding.feedDisplayContainer.setVisibility(View.VISIBLE);\n+    private void showFeedFragment(long id) {\n         if (isFeedFoundBySearch) {\n-            int resId = R.string.no_feed_url_podcast_found_by_search;\n-            Snackbar.make(findViewById(android.R.id.content), resId, Snackbar.LENGTH_LONG).show();\n-        }\n-\n-        viewBinding.backgroundImage.setColorFilter(new LightingColorFilter(0xff828282, 0x000000));\n-\n-        viewBinding.listView.addHeaderView(headerBinding.getRoot());\n-        viewBinding.listView.setSelector(android.R.color.transparent);\n-        viewBinding.listView.setAdapter(new FeedItemlistDescriptionAdapter(this, 0, feed.getItems()));\n-\n-        if (StringUtils.isNotBlank(feed.getImageUrl())) {\n-            Glide.with(this)\n-                    .load(feed.getImageUrl())\n-                    .apply(new RequestOptions()\n-                        .placeholder(R.color.light_gray)\n-                        .error(R.color.light_gray)\n-                        .fitCenter()\n-                        .dontAnimate())\n-                    .into(viewBinding.coverImage);\n-            Glide.with(this)\n-                    .load(feed.getImageUrl())\n-                    .apply(new RequestOptions()\n-                            .placeholder(R.color.image_readability_tint)\n-                            .error(R.color.image_readability_tint)\n-                            .transform(new FastBlurTransformation())\n-                            .dontAnimate())\n-                    .into(viewBinding.backgroundImage);\n-        }\n-\n-        viewBinding.titleLabel.setText(feed.getTitle());\n-        viewBinding.authorLabel.setText(feed.getAuthor());\n-        headerBinding.txtvDescription.setText(HtmlToPlainText.getPlainText(feed.getDescription()));\n-\n-        viewBinding.subscribeButton.setOnClickListener(v -> {\n-            if (feedInFeedlist()) {\n-                openFeed();\n-            } else {\n-                FeedDatabaseWriter.updateFeed(this, feed, false);\n-                didPressSubscribe = true;\n-                handleUpdatedFeedStatus();\n-            }\n-        });\n-\n-        viewBinding.stopPreviewButton.setOnClickListener(v -> {\n-            PlaybackPreferences.writeNoMediaPlaying();\n-            IntentUtils.sendLocalBroadcast(this, PlaybackServiceInterface.ACTION_SHUTDOWN_PLAYBACK_SERVICE);\n-        });\n-\n-        if (UserPreferences.isEnableAutodownload()) {\n-            SharedPreferences preferences = getSharedPreferences(PREFS, MODE_PRIVATE);\n-            viewBinding.autoDownloadCheckBox.setChecked(preferences.getBoolean(PREF_LAST_AUTO_DOWNLOAD, true));\n+            Toast.makeText(this, R.string.no_feed_url_podcast_found_by_search, Toast.LENGTH_LONG).show();\n         }\n \n-        headerBinding.txtvDescription.setMaxLines(DESCRIPTION_MAX_LINES_COLLAPSED);\n-        headerBinding.txtvDescription.setOnClickListener(v -> {\n-            if (headerBinding.txtvDescription.getMaxLines() > DESCRIPTION_MAX_LINES_COLLAPSED) {\n-                headerBinding.txtvDescription.setMaxLines(DESCRIPTION_MAX_LINES_COLLAPSED);\n-            } else {\n-                headerBinding.txtvDescription.setMaxLines(2000);\n-            }\n-        });\n-\n-        if (alternateFeedUrls.isEmpty()) {\n-            viewBinding.alternateUrlsSpinner.setVisibility(View.GONE);\n-        } else {\n-            viewBinding.alternateUrlsSpinner.setVisibility(View.VISIBLE);\n-\n-            final List<String> alternateUrlsList = new ArrayList<>();\n-            final List<String> alternateUrlsTitleList = new ArrayList<>();\n-\n-            alternateUrlsList.add(feed.getDownloadUrl());\n-            alternateUrlsTitleList.add(feed.getTitle());\n-\n-\n-            alternateUrlsList.addAll(alternateFeedUrls.keySet());\n-            for (String url : alternateFeedUrls.keySet()) {\n-                alternateUrlsTitleList.add(alternateFeedUrls.get(url));\n-            }\n-\n-            ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,\n-                    R.layout.alternate_urls_item, alternateUrlsTitleList) {\n-                @Override\n-                public View getDropDownView(int position, @Nullable View convertView, @NonNull ViewGroup parent) {\n-                    // reusing the old view causes a visual bug on Android <= 10\n-                    return super.getDropDownView(position, null, parent);\n-                }\n-            };\n-\n-            adapter.setDropDownViewResource(R.layout.alternate_urls_dropdown_item);\n-            viewBinding.alternateUrlsSpinner.setAdapter(adapter);\n-            viewBinding.alternateUrlsSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\n-                @Override\n-                public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\n-                    selectedDownloadUrl = alternateUrlsList.get(position);\n-                }\n-\n-                @Override\n-                public void onNothingSelected(AdapterView<?> parent) {\n-\n-                }\n-            });\n-        }\n-        handleUpdatedFeedStatus();\n+        viewBinding.progressBar.setVisibility(View.GONE);\n+        FeedItemlistFragment fragment = FeedItemlistFragment.newInstance(id);\n+        getSupportFragmentManager()\n+                .beginTransaction()\n+                .replace(R.id.fragmentContainer, fragment, FeedItemlistFragment.TAG)\n+                .commitAllowingStateLoss();\n     }\n \n-    private void openFeed() {\n+    private void openFeed(long feedId) {\n         // feed.getId() is always 0, we have to retrieve the id from the feed list from the database\n         MainActivityStarter mainActivityStarter = new MainActivityStarter(this);\n-        mainActivityStarter.withOpenFeed(getFeedId());\n+        mainActivityStarter.withOpenFeed(feedId);\n         if (getIntent().getBooleanExtra(ARG_STARTED_FROM_SEARCH, false)) {\n             mainActivityStarter.withAddToBackStack();\n         }\n@@ -516,60 +357,6 @@ private void openFeed() {\n         startActivity(mainActivityStarter.getIntent());\n     }\n \n-    private void handleUpdatedFeedStatus() {\n-        if (DownloadServiceInterface.get().isDownloadingEpisode(selectedDownloadUrl)) {\n-            viewBinding.subscribeButton.setEnabled(false);\n-            viewBinding.subscribeButton.setText(R.string.subscribing_label);\n-        } else if (feedInFeedlist()) {\n-            viewBinding.subscribeButton.setEnabled(true);\n-            viewBinding.subscribeButton.setText(R.string.open_podcast);\n-            if (didPressSubscribe) {\n-                didPressSubscribe = false;\n-\n-                Feed feed1 = DBReader.getFeed(getFeedId(), false, 0, 0);\n-                FeedPreferences feedPreferences = feed1.getPreferences();\n-                if (UserPreferences.isEnableAutodownload()) {\n-                    boolean autoDownload = viewBinding.autoDownloadCheckBox.isChecked();\n-                    feedPreferences.setAutoDownload(autoDownload);\n-\n-                    SharedPreferences preferences = getSharedPreferences(PREFS, MODE_PRIVATE);\n-                    SharedPreferences.Editor editor = preferences.edit();\n-                    editor.putBoolean(PREF_LAST_AUTO_DOWNLOAD, autoDownload);\n-                    editor.apply();\n-                }\n-                if (username != null) {\n-                    feedPreferences.setUsername(username);\n-                    feedPreferences.setPassword(password);\n-                }\n-                DBWriter.setFeedPreferences(feedPreferences);\n-\n-                openFeed();\n-            }\n-        } else {\n-            viewBinding.subscribeButton.setEnabled(true);\n-            viewBinding.subscribeButton.setText(R.string.subscribe_label);\n-            if (UserPreferences.isEnableAutodownload()) {\n-                viewBinding.autoDownloadCheckBox.setVisibility(View.VISIBLE);\n-            }\n-        }\n-    }\n-\n-    private boolean feedInFeedlist() {\n-        return getFeedId() != 0;\n-    }\n-\n-    private long getFeedId() {\n-        if (feeds == null) {\n-            return 0;\n-        }\n-        for (Feed f : feeds) {\n-            if (f.getDownloadUrl().equals(selectedDownloadUrl)) {\n-                return f.getId();\n-            }\n-        }\n-        return 0;\n-    }\n-\n     @UiThread\n     private void showErrorDialog(String errorMsg, String details) {\n         if (!isFinishing() && !isPaused) {\n@@ -589,7 +376,6 @@ private void showErrorDialog(String errorMsg, String details) {\n                 builder.setNeutralButton(R.string.edit_url_menu, (dialog, which) -> editUrl());\n             }\n             builder.setOnCancelListener(dialog -> {\n-                setResult(RESULT_ERROR);\n                 finish();\n             });\n             if (dialog != null && dialog.isShowing()) {\n@@ -608,24 +394,15 @@ private void editUrl() {\n         }\n         builder.setView(dialogBinding.getRoot());\n         builder.setPositiveButton(R.string.confirm_label, (dialog, which) -> {\n-            setLoadingLayout();\n             lookupUrlAndDownload(dialogBinding.urlEditText.getText().toString());\n         });\n         builder.setNegativeButton(R.string.cancel_label, (dialog1, which) -> dialog1.cancel());\n         builder.setOnCancelListener(dialog1 -> {\n-            setResult(RESULT_ERROR);\n             finish();\n         });\n         builder.show();\n     }\n \n-    @Subscribe(threadMode = ThreadMode.MAIN)\n-    public void playbackStateChanged(PlayerStatusEvent event) {\n-        boolean isPlayingPreview =\n-                PlaybackPreferences.getCurrentlyPlayingMediaType() == RemoteMedia.PLAYABLE_TYPE_REMOTE_MEDIA;\n-        viewBinding.stopPreviewButton.setVisibility(isPlayingPreview ? View.VISIBLE : View.GONE);\n-    }\n-\n     /**\n      *\n      * @return true if a FeedDiscoveryDialog is shown, false otherwise (e.g., due to no feed found).\n@@ -657,7 +434,7 @@ private boolean showFeedDiscoveryDialog(File feedFile, String baseUrl) {\n         if (urls.size() == 1) {\n             // Skip dialog and display the item directly\n             resetIntent(urls.get(0));\n-            startFeedDownload(urls.get(0));\n+            downloadIfNotAlreadySubscribed(urls.get(0));\n             return true;\n         }\n \n@@ -667,7 +444,7 @@ private boolean showFeedDiscoveryDialog(File feedFile, String baseUrl) {\n             String selectedUrl = urls.get(which);\n             dialog.dismiss();\n             resetIntent(selectedUrl);\n-            startFeedDownload(selectedUrl);\n+            downloadIfNotAlreadySubscribed(selectedUrl);\n         };\n \n         MaterialAlertDialogBuilder ab = new MaterialAlertDialogBuilder(OnlineFeedViewActivity.this)\n@@ -704,7 +481,7 @@ protected void onCancelled() {\n         protected void onConfirmed(String username, String password) {\n             OnlineFeedViewActivity.this.username = username;\n             OnlineFeedViewActivity.this.password = password;\n-            startFeedDownload(feedUrl);\n+            downloadIfNotAlreadySubscribed(feedUrl);\n         }\n     }\n \ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/AudioPlayerFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/AudioPlayerFragment.java\nindex e66ed6d3ea..7aa9da5036 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/AudioPlayerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/AudioPlayerFragment.java\n@@ -25,8 +25,10 @@\n import com.google.android.material.bottomsheet.BottomSheetBehavior;\n import com.google.android.material.elevation.SurfaceColors;\n \n+import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.playback.service.PlaybackController;\n import de.danoeh.antennapod.ui.appstartintent.MediaButtonStarter;\n+import de.danoeh.antennapod.ui.appstartintent.OnlineFeedviewActivityStarter;\n import de.danoeh.antennapod.ui.chapters.ChapterUtils;\n import de.danoeh.antennapod.ui.episodes.PlaybackSpeedUtils;\n import de.danoeh.antennapod.ui.episodes.TimeSpeedConverter;\n@@ -497,14 +499,25 @@ public boolean onMenuItemClick(MenuItem item) {\n             return true;\n         } else if (itemId == R.id.open_feed_item) {\n             if (feedItem != null) {\n-                Intent intent = MainActivity.getIntentToOpenFeed(getContext(), feedItem.getFeedId());\n-                startActivity(intent);\n+                openFeed(feedItem.getFeed());\n             }\n             return true;\n         }\n         return false;\n     }\n \n+    private void openFeed(Feed feed) {\n+        if (feed == null) {\n+            return;\n+        }\n+        if (feed.getState() == Feed.STATE_SUBSCRIBED) {\n+            Intent intent = MainActivity.getIntentToOpenFeed(getContext(), feed.getId());\n+            startActivity(intent);\n+        } else {\n+            startActivity(new OnlineFeedviewActivityStarter(getContext(), feed.getDownloadUrl()).getIntent());\n+        }\n+    }\n+\n     public void fadePlayerToToolbar(float slideOffset) {\n         float playerFadeProgress = Math.max(0.0f, Math.min(0.2f, slideOffset - 0.2f)) / 0.2f;\n         View player = getView().findViewById(R.id.playerFragment);\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/CoverFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/CoverFragment.java\nindex 073d5b0be3..d4931380ed 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/CoverFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/CoverFragment.java\n@@ -32,6 +32,8 @@\n import com.google.android.material.snackbar.Snackbar;\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n+import de.danoeh.antennapod.model.feed.Feed;\n+import de.danoeh.antennapod.ui.appstartintent.OnlineFeedviewActivityStarter;\n import de.danoeh.antennapod.ui.chapters.ChapterUtils;\n import de.danoeh.antennapod.ui.screen.chapter.ChaptersFragment;\n import de.danoeh.antennapod.playback.service.PlaybackController;\n@@ -122,9 +124,7 @@ private void displayMediaInfo(@NonNull Playable media) {\n                 + \"\\u00A0\"\n                 + StringUtils.replace(StringUtils.stripToEmpty(pubDateStr), \" \", \"\\u00A0\"));\n         if (media instanceof FeedMedia) {\n-            Intent openFeed = MainActivity.getIntentToOpenFeed(requireContext(),\n-                    ((FeedMedia) media).getItem().getFeedId());\n-            viewBinding.txtvPodcastTitle.setOnClickListener(v -> startActivity(openFeed));\n+            viewBinding.txtvPodcastTitle.setOnClickListener(v -> openFeed(((FeedMedia) media).getItem().getFeed()));\n         } else {\n             viewBinding.txtvPodcastTitle.setOnClickListener(null);\n         }\n@@ -164,6 +164,18 @@ public void onAnimationEnd(Animator animation) {\n         updateChapterControlVisibility();\n     }\n \n+    private void openFeed(Feed feed) {\n+        if (feed == null) {\n+            return;\n+        }\n+        if (feed.getState() == Feed.STATE_SUBSCRIBED) {\n+            Intent intent = MainActivity.getIntentToOpenFeed(getContext(), feed.getId());\n+            startActivity(intent);\n+        } else {\n+            startActivity(new OnlineFeedviewActivityStarter(getContext(), feed.getDownloadUrl()).getIntent());\n+        }\n+    }\n+\n     private void updateChapterControlVisibility() {\n         boolean chapterControlVisible = false;\n         if (media.getChapters() != null) {\ndiff --git a/app/src/main/res/layout/alternate_urls_dropdown_item.xml b/app/src/main/res/layout/alternate_urls_dropdown_item.xml\ndeleted file mode 100644\nindex 3c4dcc7fc6..0000000000\n--- a/app/src/main/res/layout/alternate_urls_dropdown_item.xml\n+++ /dev/null\n@@ -1,8 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<CheckedTextView\n-    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:id=\"@android:id/text1\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"wrap_content\"\n-    android:paddingVertical=\"8dp\"\n-    style=\"?android:attr/spinnerDropDownItemStyle\" />\ndiff --git a/app/src/main/res/layout/alternate_urls_item.xml b/app/src/main/res/layout/alternate_urls_item.xml\ndeleted file mode 100644\nindex 54e05b49d0..0000000000\n--- a/app/src/main/res/layout/alternate_urls_item.xml\n+++ /dev/null\n@@ -1,9 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<TextView\n-    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:id=\"@android:id/text1\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"wrap_content\"\n-    android:maxLines=\"3\"\n-    android:textAlignment=\"inherit\"\n-    style=\"?android:attr/spinnerItemStyle\" />\ndiff --git a/app/src/main/res/layout/feedinfo.xml b/app/src/main/res/layout/feedinfo.xml\nindex 1a6d8ce931..ba121a8f34 100644\n--- a/app/src/main/res/layout/feedinfo.xml\n+++ b/app/src/main/res/layout/feedinfo.xml\n@@ -66,13 +66,13 @@\n             android:layout_width=\"match_parent\"\n             android:layout_height=\"wrap_content\"\n             android:orientation=\"vertical\"\n+            android:paddingTop=\"16dp\"\n             android:paddingHorizontal=\"@dimen/additional_horizontal_spacing\">\n \n             <TextView\n                 android:id=\"@+id/statisticsHeadingLabel\"\n                 android:layout_width=\"wrap_content\"\n                 android:layout_height=\"wrap_content\"\n-                android:layout_marginTop=\"16dp\"\n                 android:textSize=\"18sp\"\n                 android:layout_marginBottom=\"8dp\"\n                 android:text=\"@string/statistics_label\"\n@@ -90,6 +90,7 @@\n                 android:layout_height=\"wrap_content\"\n                 android:minWidth=\"0dp\"\n                 android:minHeight=\"0dp\"\n+                android:layout_marginBottom=\"16dp\"\n                 android:text=\"@string/statistics_view_all\"\n                 style=\"@style/Widget.MaterialComponents.Button.TextButton\" />\n \n@@ -97,7 +98,6 @@\n                 android:id=\"@+id/supportHeadingLabel\"\n                 android:layout_width=\"match_parent\"\n                 android:layout_height=\"wrap_content\"\n-                android:layout_marginTop=\"16dp\"\n                 android:layout_marginBottom=\"4dp\"\n                 android:text=\"@string/support_funding_label\"\n                 android:textColor=\"?android:attr/textColorPrimary\"\n@@ -120,7 +120,6 @@\n                 android:layout_width=\"wrap_content\"\n                 android:layout_height=\"wrap_content\"\n                 android:textSize=\"18sp\"\n-                android:layout_marginTop=\"16dp\"\n                 android:layout_marginBottom=\"4dp\"\n                 android:text=\"@string/description_label\"\n                 android:textColor=\"?android:attr/textColorPrimary\"\n@@ -130,7 +129,6 @@\n                 android:id=\"@+id/descriptionLabel\"\n                 android:layout_width=\"match_parent\"\n                 android:layout_height=\"wrap_content\"\n-                android:text=\"@string/design_time_lorem_ipsum\"\n                 android:textIsSelectable=\"true\"\n                 tools:background=\"@android:color/holo_green_dark\" />\n \ndiff --git a/app/src/main/res/layout/feeditem_fragment.xml b/app/src/main/res/layout/feeditem_fragment.xml\nindex 37db9067c3..df95b8c157 100644\n--- a/app/src/main/res/layout/feeditem_fragment.xml\n+++ b/app/src/main/res/layout/feeditem_fragment.xml\n@@ -174,6 +174,20 @@\n \n         </LinearLayout>\n \n+        <TextView\n+            android:id=\"@+id/nonSubscribedWarningLabel\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginVertical=\"8dp\"\n+            android:layout_marginBottom=\"8dp\"\n+            android:paddingHorizontal=\"16dp\"\n+            android:paddingVertical=\"8dp\"\n+            android:background=\"@drawable/bg_message_info\"\n+            android:textColor=\"?attr/colorAccent\"\n+            android:visibility=\"gone\"\n+            android:foreground=\"?attr/selectableItemBackground\"\n+            android:text=\"@string/state_deleted_not_subscribed\" />\n+\n         <TextView\n             android:id=\"@+id/noMediaLabel\"\n             android:layout_width=\"match_parent\"\ndiff --git a/app/src/main/res/layout/feeditemlist_header.xml b/app/src/main/res/layout/feeditemlist_header.xml\nindex 9b6d190a85..857e44d599 100644\n--- a/app/src/main/res/layout/feeditemlist_header.xml\n+++ b/app/src/main/res/layout/feeditemlist_header.xml\n@@ -28,6 +28,14 @@\n                 android:layout_width=\"148dp\"\n                 android:layout_height=\"match_parent\" />\n \n+            <Button\n+                android:id=\"@+id/butSubscribe\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:text=\"@string/subscribe_label\"\n+                android:visibility=\"gone\"\n+                tools:visibility=\"visible\" />\n+\n             <ImageButton\n                 android:id=\"@+id/butShowInfo\"\n                 android:layout_width=\"40dp\"\n@@ -178,4 +186,52 @@\n         tools:visibility=\"visible\"\n         tools:text=\"Updates disabled\" />\n \n+    <LinearLayout\n+        android:id=\"@+id/descriptionContainer\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:paddingHorizontal=\"16dp\"\n+        android:background=\"?android:attr/colorBackground\"\n+        android:orientation=\"vertical\"\n+        android:visibility=\"gone\">\n+\n+        <TextView\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginBottom=\"8dp\"\n+            android:layout_marginTop=\"16dp\"\n+            android:paddingHorizontal=\"16dp\"\n+            android:paddingVertical=\"8dp\"\n+            android:background=\"@drawable/bg_message_info\"\n+            android:textColor=\"?attr/colorAccent\"\n+            android:text=\"@string/state_deleted_not_subscribed\" />\n+\n+        <TextView\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginBottom=\"8dp\"\n+            android:text=\"@string/description_label\"\n+            style=\"@style/TextAppearance.Material3.TitleMedium\" />\n+\n+        <TextView\n+            android:id=\"@+id/headerDescriptionLabel\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:ellipsize=\"end\"\n+            android:lineHeight=\"20dp\"\n+            android:maxLines=\"3\"\n+            android:layout_marginBottom=\"16dp\"\n+            android:background=\"?android:attr/selectableItemBackground\"\n+            style=\"@style/AntennaPod.TextView.ListItemBody\"\n+            tools:text=\"@string/design_time_lorem_ipsum\" />\n+\n+        <TextView\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:text=\"@string/preview_episodes\"\n+            android:layout_marginBottom=\"8dp\"\n+            style=\"@style/TextAppearance.Material3.TitleMedium\" />\n+\n+    </LinearLayout>\n+\n </LinearLayout>\ndiff --git a/app/src/main/res/layout/itemdescription_listitem.xml b/app/src/main/res/layout/itemdescription_listitem.xml\ndeleted file mode 100644\nindex c3f8c24b8d..0000000000\n--- a/app/src/main/res/layout/itemdescription_listitem.xml\n+++ /dev/null\n@@ -1,51 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<LinearLayout\n-    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    xmlns:tools=\"http://schemas.android.com/tools\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"wrap_content\"\n-    android:orientation=\"vertical\"\n-    android:paddingHorizontal=\"20dp\"\n-    android:paddingVertical=\"16dp\">\n-\n-    <TextView\n-        android:id=\"@+id/txtvPubDate\"\n-        android:layout_width=\"wrap_content\"\n-        android:layout_height=\"wrap_content\"\n-        android:ellipsize=\"end\"\n-        android:lines=\"1\"\n-        style=\"@android:style/TextAppearance.Small\"\n-        tools:text=\"22 Jan 2016\"\n-        tools:background=\"@android:color/holo_green_dark\" />\n-\n-    <TextView\n-        android:id=\"@+id/txtvTitle\"\n-        android:layout_width=\"match_parent\"\n-        android:layout_height=\"wrap_content\"\n-        android:layout_marginVertical=\"12dp\"\n-        android:ellipsize=\"end\"\n-        android:maxLines=\"2\"\n-        style=\"@style/AntennaPod.TextView.ListItemPrimaryTitle\"\n-        tools:text=\"Feed item title\"\n-        tools:background=\"@android:color/holo_green_dark\" />\n-\n-    <TextView\n-        android:id=\"@+id/txtvDescription\"\n-        android:layout_width=\"match_parent\"\n-        android:layout_height=\"wrap_content\"\n-        android:ellipsize=\"end\"\n-        android:maxLines=\"2\"\n-        style=\"@style/AntennaPod.TextView.ListItemBody\"\n-        tools:text=\"Feed item description\"\n-        tools:background=\"@android:color/holo_green_dark\" />\n-\n-    <Button\n-        android:id=\"@+id/butPreview\"\n-        android:layout_width=\"wrap_content\"\n-        android:layout_height=\"wrap_content\"\n-        android:layout_marginTop=\"8dp\"\n-        android:text=\"@string/preview_episode\"\n-        android:layout_gravity=\"end|right\"\n-        style=\"@style/Widget.MaterialComponents.Button.OutlinedButton\" />\n-\n-</LinearLayout>\ndiff --git a/app/src/main/res/layout/onlinefeedview_activity.xml b/app/src/main/res/layout/onlinefeedview_activity.xml\nindex 88b87da1af..a121c9e0ed 100644\n--- a/app/src/main/res/layout/onlinefeedview_activity.xml\n+++ b/app/src/main/res/layout/onlinefeedview_activity.xml\n@@ -2,7 +2,6 @@\n <LinearLayout\n     xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n-    xmlns:tools=\"http://schemas.android.com/tools\"\n     android:id=\"@+id/transparentBackground\"\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\">\n@@ -11,169 +10,22 @@\n         android:id=\"@+id/card\"\n         android:layout_width=\"match_parent\"\n         android:layout_height=\"match_parent\"\n-        android:layout_margin=\"24dp\"\n+        android:layout_marginHorizontal=\"16dp\"\n+        android:layout_marginVertical=\"56dp\"\n         android:elevation=\"16dp\"\n         app:cardCornerRadius=\"8dp\">\n \n-        <FrameLayout\n+        <androidx.fragment.app.FragmentContainerView\n+            android:id=\"@+id/fragmentContainer\"\n             android:layout_width=\"match_parent\"\n-            android:layout_height=\"match_parent\"\n-            android:orientation=\"vertical\">\n-\n-            <ProgressBar\n-                android:id=\"@+id/progressBar\"\n-                android:layout_width=\"wrap_content\"\n-                android:layout_height=\"wrap_content\"\n-                android:layout_gravity=\"center\"\n-                style=\"?android:attr/progressBarStyle\" />\n-\n-            <LinearLayout\n-                android:id=\"@+id/feed_display_container\"\n-                android:layout_width=\"match_parent\"\n-                android:layout_height=\"match_parent\"\n-                android:orientation=\"vertical\">\n-\n-                <RelativeLayout\n-                    android:layout_width=\"match_parent\"\n-                    android:layout_height=\"@dimen/feeditemlist_header_height\"\n-                    android:layout_marginBottom=\"12dp\"\n-                    android:background=\"@color/feed_image_bg\">\n-\n-                    <ImageView\n-                        android:id=\"@+id/backgroundImage\"\n-                        android:layout_width=\"match_parent\"\n-                        android:layout_height=\"match_parent\"\n-                        android:scaleType=\"centerCrop\" />\n-\n-                    <ImageView\n-                        android:id=\"@+id/coverImage\"\n-                        android:layout_width=\"@dimen/thumbnail_length_onlinefeedview\"\n-                        android:layout_height=\"@dimen/thumbnail_length_onlinefeedview\"\n-                        android:layout_alignParentLeft=\"true\"\n-                        android:layout_alignParentStart=\"true\"\n-                        android:layout_alignParentTop=\"true\"\n-                        android:layout_centerVertical=\"true\"\n-                        android:layout_marginBottom=\"12dp\"\n-                        android:layout_marginLeft=\"16dp\"\n-                        android:layout_marginStart=\"16dp\"\n-                        android:layout_marginTop=\"24dp\"\n-                        android:background=\"@drawable/bg_rounded_corners\"\n-                        android:clipToOutline=\"true\"\n-                        android:importantForAccessibility=\"no\"\n-                        tools:src=\"@tools:sample/avatars\" />\n-\n-                    <TextView\n-                        android:id=\"@+id/titleLabel\"\n-                        android:layout_width=\"0dp\"\n-                        android:layout_height=\"wrap_content\"\n-                        android:layout_alignParentTop=\"true\"\n-                        android:layout_marginBottom=\"8dp\"\n-                        android:layout_marginLeft=\"16dp\"\n-                        android:layout_marginStart=\"16dp\"\n-                        android:layout_marginTop=\"24dp\"\n-                        android:layout_marginRight=\"24dp\"\n-                        android:layout_marginEnd=\"24dp\"\n-                        android:layout_alignParentEnd=\"true\"\n-                        android:layout_alignParentRight=\"true\"\n-                        android:layout_toRightOf=\"@id/coverImage\"\n-                        android:layout_toEndOf=\"@id/coverImage\"\n-                        android:ellipsize=\"end\"\n-                        android:maxLines=\"2\"\n-                        android:shadowColor=\"@color/black\"\n-                        android:shadowRadius=\"3\"\n-                        android:textColor=\"@color/white\"\n-                        android:textSize=\"20sp\"\n-                        android:textFontWeight=\"800\"\n-                        tools:text=\"Podcast title\" />\n-\n-                    <TextView\n-                        android:id=\"@+id/author_label\"\n-                        android:layout_width=\"0dip\"\n-                        android:layout_height=\"wrap_content\"\n-                        android:layout_below=\"@id/titleLabel\"\n-                        android:layout_marginBottom=\"16dp\"\n-                        android:layout_marginLeft=\"16dp\"\n-                        android:layout_marginStart=\"16dp\"\n-                        android:layout_marginRight=\"16dp\"\n-                        android:layout_marginEnd=\"16dp\"\n-                        android:layout_alignParentEnd=\"true\"\n-                        android:layout_alignParentRight=\"true\"\n-                        android:layout_toRightOf=\"@id/coverImage\"\n-                        android:layout_toEndOf=\"@id/coverImage\"\n-                        android:ellipsize=\"end\"\n-                        android:lines=\"1\"\n-                        android:shadowColor=\"@color/black\"\n-                        android:shadowRadius=\"3\"\n-                        android:textColor=\"@color/white\"\n-                        android:textSize=\"@dimen/text_size_small\"\n-                        tools:text=\"Podcast author\" />\n-\n-                    <ImageButton\n-                        android:id=\"@+id/closeButton\"\n-                        android:layout_width=\"16dp\"\n-                        android:layout_height=\"16dp\"\n-                        android:layout_alignParentRight=\"true\"\n-                        android:layout_marginTop=\"12dp\"\n-                        android:layout_marginRight=\"12dp\"\n-                        android:background=\"@android:color/transparent\"\n-                        android:src=\"@drawable/ic_close_white\" />\n-\n-                </RelativeLayout>\n-\n-                <LinearLayout\n-                    android:layout_width=\"match_parent\"\n-                    android:layout_height=\"wrap_content\"\n-                    android:paddingHorizontal=\"16dp\"\n-                    android:orientation=\"vertical\">\n-\n-                    <Spinner\n-                        android:id=\"@+id/alternate_urls_spinner\"\n-                        android:layout_width=\"match_parent\"\n-                        android:layout_height=\"wrap_content\"\n-                        android:dropDownWidth=\"match_parent\"\n-                        android:padding=\"8dp\"\n-                        android:textColor=\"?android:attr/textColorPrimary\"\n-                        android:textSize=\"@dimen/text_size_micro\" />\n-\n-                    <Button\n-                        android:id=\"@+id/subscribeButton\"\n-                        android:layout_width=\"match_parent\"\n-                        android:layout_height=\"wrap_content\"\n-                        android:layout_marginTop=\"4dp\"\n-                        android:text=\"@string/subscribe_label\" />\n-\n-                    <CheckBox\n-                        android:id=\"@+id/autoDownloadCheckBox\"\n-                        android:layout_width=\"match_parent\"\n-                        android:layout_height=\"wrap_content\"\n-                        android:layout_gravity=\"left\"\n-                        android:checked=\"true\"\n-                        android:layout_marginTop=\"8dp\"\n-                        android:text=\"@string/auto_download_label\"\n-                        android:visibility=\"gone\"\n-                        tools:visibility=\"visible\" />\n-\n-                    <Button\n-                        android:id=\"@+id/stopPreviewButton\"\n-                        android:layout_width=\"match_parent\"\n-                        android:layout_height=\"wrap_content\"\n-                        android:layout_marginTop=\"4dp\"\n-                        android:text=\"@string/stop_preview\"\n-                        android:visibility=\"gone\"\n-                        tools:visibility=\"visible\" />\n-\n-                </LinearLayout>\n-\n-                <ListView\n-                    android:id=\"@+id/listView\"\n-                    android:layout_width=\"match_parent\"\n-                    android:layout_height=\"match_parent\"\n-                    android:paddingTop=\"16dp\"\n-                    android:clipToPadding=\"false\" />\n-\n-            </LinearLayout>\n-\n-        </FrameLayout>\n+            android:layout_height=\"match_parent\" />\n+\n+        <ProgressBar\n+            android:id=\"@+id/progressBar\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_gravity=\"center\"\n+            style=\"?android:attr/progressBarStyle\" />\n \n     </androidx.cardview.widget.CardView>\n \ndiff --git a/app/src/main/res/layout/onlinefeedview_header.xml b/app/src/main/res/layout/onlinefeedview_header.xml\ndeleted file mode 100644\nindex 6d740c772b..0000000000\n--- a/app/src/main/res/layout/onlinefeedview_header.xml\n+++ /dev/null\n@@ -1,36 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<LinearLayout\n-    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    xmlns:tools=\"http://schemas.android.com/tools\"\n-    android:layout_width=\"match_parent\"\n-    android:layout_height=\"wrap_content\"\n-    android:orientation=\"vertical\"\n-    android:paddingLeft=\"20dp\"\n-    android:paddingRight=\"20dp\"\n-    android:layout_marginBottom=\"8dp\">\n-\n-    <TextView\n-        android:layout_width=\"wrap_content\"\n-        android:layout_height=\"wrap_content\"\n-        android:layout_marginBottom=\"8dp\"\n-        android:text=\"@string/description_label\"\n-        style=\"@style/TextAppearance.Material3.TitleMedium\" />\n-\n-    <TextView\n-        android:id=\"@+id/txtvDescription\"\n-        android:layout_width=\"wrap_content\"\n-        android:layout_height=\"wrap_content\"\n-        android:layout_marginBottom=\"16dp\"\n-        android:ellipsize=\"end\"\n-        android:lineHeight=\"20dp\"\n-        style=\"@style/AntennaPod.TextView.ListItemBody\"\n-        tools:text=\"@string/design_time_lorem_ipsum\" />\n-\n-    <TextView\n-        android:layout_width=\"wrap_content\"\n-        android:layout_height=\"wrap_content\"\n-        android:layout_marginBottom=\"16dp\"\n-        android:text=\"@string/episodes_label\"\n-        style=\"@style/TextAppearance.Material3.TitleMedium\" />\n-\n-</LinearLayout>\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/Feed.java b/model/src/main/java/de/danoeh/antennapod/model/feed/Feed.java\nindex 15d256c244..634d3440d7 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/feed/Feed.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/Feed.java\n@@ -15,6 +15,8 @@\n public class Feed {\n \n     public static final int FEEDFILETYPE_FEED = 0;\n+    public static final int STATE_SUBSCRIBED = 0;\n+    public static final int STATE_NOT_SUBSCRIBED = 1;\n     public static final String TYPE_RSS2 = \"rss\";\n     public static final String TYPE_ATOM1 = \"atom\";\n     public static final String PREFIX_LOCAL_FOLDER = \"antennapod_local:\";\n@@ -101,6 +103,7 @@ public class Feed {\n      */\n     @Nullable\n     private SortOrder sortOrder;\n+    private int state;\n \n     /**\n      * This constructor is used for restoring a feed from the database.\n@@ -109,7 +112,7 @@ public Feed(long id, String lastModified, String title, String customTitle, Stri\n                 String description, String paymentLinks, String author, String language,\n                 String type, String feedIdentifier, String imageUrl, String fileUrl,\n                 String downloadUrl, long lastRefreshAttempt, boolean paged, String nextPageLink,\n-                String filter, @Nullable SortOrder sortOrder, boolean lastUpdateFailed) {\n+                String filter, @Nullable SortOrder sortOrder, boolean lastUpdateFailed, int state) {\n         this.localFileUrl = fileUrl;\n         this.downloadUrl = downloadUrl;\n         this.lastRefreshAttempt = lastRefreshAttempt;\n@@ -135,6 +138,7 @@ public Feed(long id, String lastModified, String title, String customTitle, Stri\n         }\n         setSortOrder(sortOrder);\n         this.lastUpdateFailed = lastUpdateFailed;\n+        this.state = state;\n     }\n \n     /**\n@@ -144,7 +148,7 @@ public Feed(long id, String lastModified, String title, String link, String desc\n                 String author, String language, String type, String feedIdentifier, String imageUrl, String fileUrl,\n                 String downloadUrl, long lastRefreshAttempt) {\n         this(id, lastModified, title, null, link, description, paymentLink, author, language, type, feedIdentifier,\n-                imageUrl, fileUrl, downloadUrl, lastRefreshAttempt, false, null, null, null, false);\n+                imageUrl, fileUrl, downloadUrl, lastRefreshAttempt, false, null, null, null, false, STATE_SUBSCRIBED);\n     }\n \n     /**\n@@ -468,4 +472,12 @@ public void setLastUpdateFailed(boolean lastUpdateFailed) {\n     public boolean isLocalFeed() {\n         return downloadUrl.startsWith(PREFIX_LOCAL_FOLDER);\n     }\n+\n+    public int getState() {\n+        return state;\n+    }\n+\n+    public void setState(int state) {\n+        this.state = state;\n+    }\n }\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItemFilter.java b/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItemFilter.java\nindex 95a7a61102..1faeda0122 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItemFilter.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItemFilter.java\n@@ -24,6 +24,7 @@ public class FeedItemFilter implements Serializable {\n     public final boolean showIsFavorite;\n     public final boolean showNotFavorite;\n     public final boolean showInHistory;\n+    public final boolean includeNotSubscribed;\n \n     public static final String PLAYED = \"played\";\n     public static final String UNPLAYED = \"unplayed\";\n@@ -39,6 +40,7 @@ public class FeedItemFilter implements Serializable {\n     public static final String DOWNLOADED = \"downloaded\";\n     public static final String NOT_DOWNLOADED = \"not_downloaded\";\n     public static final String IS_IN_HISTORY = \"is_in_history\";\n+    public static final String INCLUDE_NOT_SUBSCRIBED = \"include_not_subscribed\";\n \n     public static FeedItemFilter unfiltered() {\n         return new FeedItemFilter(\"\");\n@@ -48,6 +50,10 @@ public FeedItemFilter(String properties) {\n         this(TextUtils.split(properties, \",\"));\n     }\n \n+    public FeedItemFilter(FeedItemFilter filter, String... additionalProperties) {\n+        this(TextUtils.join(\",\", filter.getValues()) + \",\" + TextUtils.join(\",\", additionalProperties));\n+    }\n+\n     public FeedItemFilter(String... properties) {\n         this.properties = properties;\n \n@@ -66,6 +72,7 @@ public FeedItemFilter(String... properties) {\n         showNotFavorite = hasProperty(NOT_FAVORITE);\n         showNew = hasProperty(NEW);\n         showInHistory = hasProperty(IS_IN_HISTORY);\n+        includeNotSubscribed = hasProperty(INCLUDE_NOT_SUBSCRIBED);\n     }\n \n     private boolean hasProperty(String property) {\n@@ -112,6 +119,9 @@ public boolean matches(FeedItem item) {\n         } else if (showInHistory && item.getMedia() != null\n                 && item.getMedia().getPlaybackCompletionDate().getTime() == 0) {\n             return false;\n+        } else if (!includeNotSubscribed && item.getFeed() != null\n+                && item.getFeed().getState() != Feed.STATE_SUBSCRIBED) {\n+            return false;\n         }\n         return true;\n     }\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/SubscriptionsFilter.java b/model/src/main/java/de/danoeh/antennapod/model/feed/SubscriptionsFilter.java\nindex 434d474a79..2d584adef8 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/feed/SubscriptionsFilter.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/SubscriptionsFilter.java\n@@ -12,6 +12,7 @@ public class SubscriptionsFilter {\n     private final String[] properties;\n \n     private boolean showIfCounterGreaterZero = false;\n+    private boolean hideNonSubscribedFeeds = true;\n \n     private boolean showAutoDownloadEnabled = false;\n     private boolean showAutoDownloadDisabled = false;\n@@ -67,10 +68,6 @@ public boolean isEnabled() {\n      * Run a list of feed items through the filter.\n      */\n     public List<Feed> filter(List<Feed> items, Map<Long, Integer> feedCounters) {\n-        if (properties.length == 0) {\n-            return items;\n-        }\n-\n         List<Feed> result = new ArrayList<>();\n \n         for (Feed item : items) {\n@@ -95,6 +92,10 @@ public List<Feed> filter(List<Feed> items, Map<Long, Integer> feedCounters) {\n                 continue;\n             }\n \n+            if (hideNonSubscribedFeeds && item.getState() != Feed.STATE_SUBSCRIBED) {\n+                continue;\n+            }\n+\n             // If the item reaches here, it meets all criteria (except counter > 0)\n             result.add(item);\n         }\ndiff --git a/net/discovery/src/main/java/de/danoeh/antennapod/net/discovery/ItunesTopListLoader.java b/net/discovery/src/main/java/de/danoeh/antennapod/net/discovery/ItunesTopListLoader.java\nindex 128aad5939..c837a14efc 100644\n--- a/net/discovery/src/main/java/de/danoeh/antennapod/net/discovery/ItunesTopListLoader.java\n+++ b/net/discovery/src/main/java/de/danoeh/antennapod/net/discovery/ItunesTopListLoader.java\n@@ -58,7 +58,8 @@ private static List<PodcastSearchResult> removeSubscribed(\n             List<PodcastSearchResult> suggestedPodcasts, List<Feed> subscribedFeeds, int limit) {\n         Set<String> subscribedPodcastsSet = new HashSet<>();\n         for (Feed subscribedFeed : subscribedFeeds) {\n-            if (subscribedFeed.getTitle() != null && subscribedFeed.getAuthor() != null) {\n+            if (subscribedFeed.getTitle() != null && subscribedFeed.getAuthor() != null\n+                    && subscribedFeed.getState() == Feed.STATE_SUBSCRIBED) {\n                 subscribedPodcastsSet.add(subscribedFeed.getTitle().trim() + \" - \" + subscribedFeed.getAuthor().trim());\n             }\n         }\ndiff --git a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/MediaDownloadedHandler.java b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/MediaDownloadedHandler.java\nindex 96c1549e2a..cf9ec17e19 100644\n--- a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/MediaDownloadedHandler.java\n+++ b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/MediaDownloadedHandler.java\n@@ -7,6 +7,7 @@\n import androidx.annotation.NonNull;\n \n import de.danoeh.antennapod.model.MediaMetadataRetrieverCompat;\n+import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.net.sync.serviceinterface.SynchronizationQueueSink;\n import de.danoeh.antennapod.ui.chapters.ChapterUtils;\n import org.greenrobot.eventbus.EventBus;\n@@ -104,7 +105,7 @@ public void run() {\n                     FeedMedia.FEEDFILETYPE_FEEDMEDIA, false, DownloadError.ERROR_DB_ACCESS_ERROR, e.getMessage());\n         }\n \n-        if (item != null) {\n+        if (item != null && item.getFeed().getState() == Feed.STATE_SUBSCRIBED) {\n             EpisodeAction action = new EpisodeAction.Builder(item, EpisodeAction.DOWNLOAD)\n                     .currentTimestamp()\n                     .build();\ndiff --git a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/FeedUpdateWorker.java b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/FeedUpdateWorker.java\nindex 9e363b5852..b5174dfcb8 100644\n--- a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/FeedUpdateWorker.java\n+++ b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/FeedUpdateWorker.java\n@@ -35,6 +35,7 @@\n \n import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequestBuilder;\n import de.danoeh.antennapod.parser.feed.FeedHandlerResult;\n+import de.danoeh.antennapod.storage.database.NonSubscribedFeedsCleaner;\n import de.danoeh.antennapod.ui.notifications.NotificationUtils;\n import java.util.ArrayList;\n import java.util.Collections;\n@@ -69,7 +70,7 @@ public Result doWork() {\n             Iterator<Feed> itr = toUpdate.iterator();\n             while (itr.hasNext()) {\n                 Feed feed = itr.next();\n-                if (!feed.getPreferences().getKeepUpdated()) {\n+                if (!feed.getPreferences().getKeepUpdated() || feed.getState() != Feed.STATE_SUBSCRIBED) {\n                     itr.remove();\n                     continue;\n                 }\n@@ -99,8 +100,9 @@ public Result doWork() {\n         }\n         refreshFeeds(toUpdate,  force);\n \n-        notificationManager.cancel(R.id.notification_updating_feeds);\n+        NonSubscribedFeedsCleaner.deleteOldNonSubscribedFeeds(getApplicationContext());\n         AutoDownloadManager.getInstance().autodownloadUndownloadedItems(getApplicationContext());\n+        notificationManager.cancel(R.id.notification_updating_feeds);\n         return Result.success();\n     }\n \ndiff --git a/net/sync/service-interface/src/main/java/de/danoeh/antennapod/net/sync/serviceinterface/SynchronizationQueueSink.java b/net/sync/service-interface/src/main/java/de/danoeh/antennapod/net/sync/serviceinterface/SynchronizationQueueSink.java\nindex ad235130a2..e617dfc781 100644\n--- a/net/sync/service-interface/src/main/java/de/danoeh/antennapod/net/sync/serviceinterface/SynchronizationQueueSink.java\n+++ b/net/sync/service-interface/src/main/java/de/danoeh/antennapod/net/sync/serviceinterface/SynchronizationQueueSink.java\n@@ -2,6 +2,7 @@\n \n import android.content.Context;\n \n+import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.storage.preferences.SynchronizationSettings;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n \n@@ -62,7 +63,8 @@ public static void enqueueEpisodePlayedIfSynchronizationIsActive(Context context\n         if (!SynchronizationSettings.isProviderConnected()) {\n             return;\n         }\n-        if (media.getItem() == null || media.getItem().getFeed().isLocalFeed()) {\n+        if (media.getItem() == null || media.getItem().getFeed().isLocalFeed()\n+                || media.getItem().getFeed().getState() != Feed.STATE_SUBSCRIBED) {\n             return;\n         }\n         if (media.getStartPosition() < 0 || (!completed && media.getStartPosition() >= media.getPosition())) {\ndiff --git a/playback/service/src/main/java/de/danoeh/antennapod/playback/service/PlaybackService.java b/playback/service/src/main/java/de/danoeh/antennapod/playback/service/PlaybackService.java\nindex 5fa89dd43d..7d20124cf3 100644\n--- a/playback/service/src/main/java/de/danoeh/antennapod/playback/service/PlaybackService.java\n+++ b/playback/service/src/main/java/de/danoeh/antennapod/playback/service/PlaybackService.java\n@@ -436,7 +436,9 @@ private List<MediaBrowserCompat.MediaItem> loadChildrenSynchronous(@NonNull Stri\n                     DBReader.getTotalEpisodeCount(new FeedItemFilter(FeedItemFilter.UNPLAYED))));\n             List<Feed> feeds = DBReader.getFeedList();\n             for (Feed feed : feeds) {\n-                mediaItems.add(createBrowsableMediaItemForFeed(feed));\n+                if (feed.getState() == Feed.STATE_SUBSCRIBED) {\n+                    mediaItems.add(createBrowsableMediaItemForFeed(feed));\n+                }\n             }\n             return mediaItems;\n         }\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBReader.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBReader.java\nindex 4329903796..272df50488 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBReader.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBReader.java\n@@ -356,7 +356,9 @@ public static Feed getFeed(final long feedId, boolean filtered, int offset, int\n         try (FeedCursor cursor = new FeedCursor(adapter.getFeedCursor(feedId))) {\n             if (cursor.moveToNext()) {\n                 feed = cursor.getFeed();\n-                FeedItemFilter filter = filtered ? feed.getItemFilter() : FeedItemFilter.unfiltered();\n+                FeedItemFilter filter = (filtered && feed.getItemFilter() != null)\n+                        ? feed.getItemFilter() : FeedItemFilter.unfiltered();\n+                filter = new FeedItemFilter(filter, FeedItemFilter.INCLUDE_NOT_SUBSCRIBED);\n                 List<FeedItem> items = getFeedItemList(feed, filter, feed.getSortOrder(), offset, limit);\n                 for (FeedItem item : items) {\n                     item.setFeed(feed);\n@@ -668,9 +670,10 @@ public static NavDrawerData getNavDrawerData(@Nullable SubscriptionsFilter subsc\n         final Map<Long, Integer> feedCounters = adapter.getFeedCounters(feedCounter);\n         List<Feed> feeds = getFeedList();\n \n-        if (subscriptionsFilter != null) {\n-            feeds = subscriptionsFilter.filter(feeds, feedCounters);\n+        if (subscriptionsFilter == null) {\n+            subscriptionsFilter = new SubscriptionsFilter(\"\");\n         }\n+        feeds = subscriptionsFilter.filter(feeds, feedCounters);\n \n         Comparator<Feed> comparator;\n         switch (feedOrder) {\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBUpgrader.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBUpgrader.java\nindex 19a02972de..be09a5132e 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBUpgrader.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBUpgrader.java\n@@ -6,6 +6,7 @@\n import android.media.MediaMetadataRetriever;\n import android.util.Log;\n \n+import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.model.feed.FeedItem;\n \n import static de.danoeh.antennapod.model.feed.FeedPreferences.SPEED_USE_GLOBAL;\n@@ -338,6 +339,10 @@ static void upgrade(final SQLiteDatabase db, final int oldVersion, final int new\n             db.execSQL(\"ALTER TABLE \" + PodDBAdapter.TABLE_NAME_FEEDS\n                     + \" ADD COLUMN \" + PodDBAdapter.KEY_FEED_SKIP_SILENCE + \" INTEGER\");\n         }\n+        if (oldVersion < 3050000) {\n+            db.execSQL(\"ALTER TABLE \" + PodDBAdapter.TABLE_NAME_FEEDS\n+                    + \" ADD COLUMN \" + PodDBAdapter.KEY_STATE + \" INTEGER DEFAULT \" + Feed.STATE_SUBSCRIBED);\n+        }\n     }\n \n }\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBWriter.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBWriter.java\nindex 5f684b3985..11e1ad7510 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBWriter.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBWriter.java\n@@ -14,6 +14,7 @@\n import com.google.common.util.concurrent.Futures;\n import de.danoeh.antennapod.event.DownloadLogEvent;\n \n+import de.danoeh.antennapod.model.feed.FeedItemFilter;\n import de.danoeh.antennapod.net.download.serviceinterface.AutoDownloadManager;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n import de.danoeh.antennapod.net.download.serviceinterface.FeedUpdateManager;\n@@ -141,12 +142,13 @@ private static boolean deleteFeedMediaSynchronous(@NonNull Context context, @Non\n             // Do full update of this feed to get rid of the item\n             FeedUpdateManager.getInstance().runOnce(context, media.getItem().getFeed());\n         } else {\n-            // Gpodder: queue delete action for synchronization\n-            FeedItem item = media.getItem();\n-            EpisodeAction action = new EpisodeAction.Builder(item, EpisodeAction.DELETE)\n-                    .currentTimestamp()\n-                    .build();\n-            SynchronizationQueueSink.enqueueEpisodeActionIfSynchronizationIsActive(context, action);\n+            if (media.getItem().getFeed().getState() == Feed.STATE_SUBSCRIBED) {\n+                FeedItem item = media.getItem();\n+                EpisodeAction action = new EpisodeAction.Builder(item, EpisodeAction.DELETE)\n+                        .currentTimestamp()\n+                        .build();\n+                SynchronizationQueueSink.enqueueEpisodeActionIfSynchronizationIsActive(context, action);\n+            }\n \n             EventBus.getDefault().post(FeedItemEvent.updated(media.getItem()));\n         }\n@@ -174,7 +176,7 @@ public static Future<?> deleteFeed(final Context context, final long feedId) {\n             adapter.removeFeed(feed);\n             adapter.close();\n \n-            if (!feed.isLocalFeed()) {\n+            if (!feed.isLocalFeed() && feed.getState() == Feed.STATE_SUBSCRIBED) {\n                 SynchronizationQueueSink.enqueueFeedRemovedIfSynchronizationIsActive(context, feed.getDownloadUrl());\n             }\n             EventBus.getDefault().post(new FeedListUpdateEvent(feed));\n@@ -786,7 +788,7 @@ static Future<?> addNewFeed(final Context context, final Feed... feeds) {\n             adapter.close();\n \n             for (Feed feed : feeds) {\n-                if (!feed.isLocalFeed()) {\n+                if (!feed.isLocalFeed() && feed.getState() == Feed.STATE_SUBSCRIBED) {\n                     SynchronizationQueueSink.enqueueFeedAddedIfSynchronizationIsActive(context, feed.getDownloadUrl());\n                 }\n             }\n@@ -928,6 +930,32 @@ public static Future<?> setFeedCustomTitle(Feed feed) {\n         });\n     }\n \n+    public static Future<?> setFeedState(Context context, Feed feed, int newState) {\n+        int oldState = feed.getState();\n+        return runOnDbThread(() -> {\n+            PodDBAdapter adapter = PodDBAdapter.getInstance();\n+            adapter.open();\n+            adapter.setFeedState(feed.getId(), newState);\n+            feed.setState(newState);\n+            if (oldState == Feed.STATE_NOT_SUBSCRIBED && newState == Feed.STATE_SUBSCRIBED) {\n+                feed.getPreferences().setKeepUpdated(true);\n+                DBWriter.setFeedPreferences(feed.getPreferences());\n+                FeedUpdateManager.getInstance().runOnceOrAsk(context, feed);\n+                SynchronizationQueueSink.enqueueFeedAddedIfSynchronizationIsActive(context, feed.getDownloadUrl());\n+                DBReader.getFeedItemList(feed, FeedItemFilter.unfiltered(),\n+                        SortOrder.DATE_NEW_OLD, 0, Integer.MAX_VALUE);\n+                for (FeedItem item : feed.getItems()) {\n+                    if (item.isPlayed()) {\n+                        SynchronizationQueueSink.enqueueEpisodePlayedIfSynchronizationIsActive(\n+                                context, item.getMedia(), true);\n+                    }\n+                }\n+            }\n+            adapter.close();\n+            EventBus.getDefault().post(new FeedListUpdateEvent(feed));\n+        });\n+    }\n+\n     /**\n      * Sort the FeedItems in the queue with the given the named sort order.\n      *\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/FeedDatabaseWriter.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/FeedDatabaseWriter.java\nindex 7269fcd55f..a62e18809b 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/FeedDatabaseWriter.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/FeedDatabaseWriter.java\n@@ -157,7 +157,8 @@ public static synchronized Feed updateFeed(Context context, Feed newFeed, boolea\n                                         + \"\\n\\nNow the feed contains:\\n\" + duplicateEpisodeDetails(item)));\n                         oldItem.setItemIdentifier(item.getItemIdentifier());\n \n-                        if (oldItem.isPlayed() && oldItem.getMedia() != null) {\n+                        if (oldItem.isPlayed() && oldItem.getMedia() != null\n+                                && savedFeed.getState() == Feed.STATE_SUBSCRIBED) {\n                             EpisodeAction action = new EpisodeAction.Builder(oldItem, EpisodeAction.PLAY)\n                                     .currentTimestamp()\n                                     .started(oldItem.getMedia().getDuration() / 1000)\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/NonSubscribedFeedsCleaner.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/NonSubscribedFeedsCleaner.java\nnew file mode 100644\nindex 0000000000..47a5a5aeef\n--- /dev/null\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/NonSubscribedFeedsCleaner.java\n@@ -0,0 +1,46 @@\n+package de.danoeh.antennapod.storage.database;\n+\n+import android.content.Context;\n+import android.util.Log;\n+import de.danoeh.antennapod.model.feed.Feed;\n+import de.danoeh.antennapod.model.feed.FeedItem;\n+import de.danoeh.antennapod.model.feed.FeedItemFilter;\n+import de.danoeh.antennapod.model.feed.SortOrder;\n+\n+import java.util.List;\n+\n+public class NonSubscribedFeedsCleaner {\n+    private static final String TAG = \"NonSubscrFeedsCleaner\";\n+    private static final long TIME_TO_KEEP = 1000L * 3600 * 24 * 30; // 30 days\n+\n+    public static void deleteOldNonSubscribedFeeds(Context context) {\n+        List<Feed> feeds = DBReader.getFeedList();\n+        for (Feed feed : feeds) {\n+            if (feed.getState() != Feed.STATE_NOT_SUBSCRIBED) {\n+                continue;\n+            }\n+            DBReader.getFeedItemList(feed, FeedItemFilter.unfiltered(), SortOrder.DATE_NEW_OLD, 0, Integer.MAX_VALUE);\n+            if (shouldDelete(feed)) {\n+                Log.d(TAG, \"Deleting unsubscribed feed \" + feed.getTitle());\n+                DBWriter.deleteFeed(context, feed.getId());\n+            }\n+            feed.setItems(null); // Let it be garbage collected\n+        }\n+    }\n+\n+    public static boolean shouldDelete(Feed feed) {\n+        if (feed.getState() != Feed.STATE_NOT_SUBSCRIBED) {\n+            return false;\n+        } else if (feed.getItems() == null) {\n+            return false;\n+        }\n+        for (FeedItem item : feed.getItems()) {\n+            if (item.isTagged(FeedItem.TAG_FAVORITE)\n+                    || item.isTagged(FeedItem.TAG_QUEUE)\n+                    || item.isDownloaded()) {\n+                return false;\n+            }\n+        }\n+        return feed.getLastRefreshAttempt() < System.currentTimeMillis() - TIME_TO_KEEP;\n+    }\n+}\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\nindex 2cbf275090..aec136457d 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\n@@ -52,7 +52,7 @@ public class PodDBAdapter {\n \n     private static final String TAG = \"PodDBAdapter\";\n     public static final String DATABASE_NAME = \"Antennapod.db\";\n-    public static final int VERSION = 3040000;\n+    public static final int VERSION = 3050000;\n \n     /**\n      * Maximum number of arguments for IN-operator.\n@@ -121,6 +121,7 @@ public class PodDBAdapter {\n     public static final String KEY_EPISODE_NOTIFICATION = \"episode_notification\";\n     public static final String KEY_NEW_EPISODES_ACTION = \"new_episodes_action\";\n     public static final String KEY_PODCASTINDEX_CHAPTER_URL = \"podcastindex_chapter_url\";\n+    public static final String KEY_STATE = \"state\";\n \n     // Table names\n     public static final String TABLE_NAME_FEEDS = \"Feeds\";\n@@ -171,6 +172,7 @@ public class PodDBAdapter {\n             + KEY_FEED_SKIP_INTRO + \" INTEGER DEFAULT 0,\"\n             + KEY_FEED_SKIP_ENDING + \" INTEGER DEFAULT 0,\"\n             + KEY_EPISODE_NOTIFICATION + \" INTEGER DEFAULT 0,\"\n+            + KEY_STATE + \" INTEGER DEFAULT \" + Feed.STATE_SUBSCRIBED + \",\"\n             + KEY_NEW_EPISODES_ACTION + \" INTEGER DEFAULT 0)\";\n \n     private static final String CREATE_TABLE_FEED_ITEMS = \"CREATE TABLE \"\n@@ -323,6 +325,7 @@ public class PodDBAdapter {\n             + TABLE_NAME_FEEDS + \".\" + KEY_FEED_SKIP_INTRO + \", \"\n             + TABLE_NAME_FEEDS + \".\" + KEY_FEED_SKIP_ENDING + \", \"\n             + TABLE_NAME_FEEDS + \".\" + KEY_EPISODE_NOTIFICATION + \", \"\n+            + TABLE_NAME_FEEDS + \".\" + KEY_STATE + \", \"\n             + TABLE_NAME_FEEDS + \".\" + KEY_NEW_EPISODES_ACTION;\n \n     private static final String JOIN_FEED_ITEM_AND_MEDIA = \" LEFT JOIN \" + TABLE_NAME_FEED_MEDIA\n@@ -337,6 +340,9 @@ public class PodDBAdapter {\n             \"SELECT \" + KEYS_FEED_ITEM_WITHOUT_DESCRIPTION + \", \" + KEYS_FEED_MEDIA\n             + \" FROM \" + TABLE_NAME_FEED_ITEMS\n             + JOIN_FEED_ITEM_AND_MEDIA;\n+    public static final String SELECT_WHERE_FEED_IS_SUBSCRIBED = TABLE_NAME_FEED_ITEMS + \".\" + KEY_FEED\n+            + \" IN (SELECT \" + KEY_ID + \" FROM \" + TABLE_NAME_FEEDS\n+            + \" WHERE \" + KEY_STATE + \"=\" + Feed.STATE_SUBSCRIBED + \")\";\n \n     private static Context context;\n     private static PodDBAdapter instance;\n@@ -431,6 +437,7 @@ private long setFeed(Feed feed) {\n         values.put(KEY_LASTUPDATE, feed.getLastModified());\n         values.put(KEY_TYPE, feed.getType());\n         values.put(KEY_FEED_IDENTIFIER, feed.getFeedIdentifier());\n+        values.put(KEY_STATE, feed.getState());\n \n         values.put(KEY_IS_PAGED, feed.isPaged());\n         values.put(KEY_NEXT_PAGE_LINK, feed.getNextPageLink());\n@@ -768,6 +775,12 @@ public void setFeedCustomTitle(long feedId, String customTitle) {\n         db.update(TABLE_NAME_FEEDS, values, KEY_ID + \"=?\", new String[]{String.valueOf(feedId)});\n     }\n \n+    public void setFeedState(long feedId, int state) {\n+        ContentValues values = new ContentValues();\n+        values.put(KEY_STATE, state);\n+        db.update(TABLE_NAME_FEEDS, values, KEY_ID + \"=?\", new String[]{String.valueOf(feedId)});\n+    }\n+\n     /**\n      * Inserts or updates a download status.\n      */\n@@ -1101,6 +1114,7 @@ public Cursor getRandomEpisodesCursor(int limit, int seed) {\n                     // Hide episodes that have been played but not completed\n                     + \" AND (\" + KEY_LAST_PLAYED_TIME + \" == 0\"\n                         + \" OR \" + KEY_LAST_PLAYED_TIME + \" > \" + (System.currentTimeMillis() - 1000L * 3600L) + \")\"\n+                    + \" AND \" + SELECT_WHERE_FEED_IS_SUBSCRIBED\n                 + \" ORDER BY \" + randomEpisodeNumber(seed);\n         final String query = \"SELECT * FROM (\" + allItemsRandomOrder + \")\"\n                 + \" GROUP BY \" + KEY_FEED\n@@ -1221,6 +1235,7 @@ public final Cursor getFeedStatisticsCursor(boolean includeMarkedAsPlayed, long\n                 + JOIN_FEED_ITEM_AND_MEDIA\n                 + \" INNER JOIN \" + TABLE_NAME_FEEDS\n                 + \" ON \" + TABLE_NAME_FEED_ITEMS + \".\" + KEY_FEED + \"=\" + TABLE_NAME_FEEDS + \".\" + KEY_ID\n+                + \" WHERE \" + TABLE_NAME_FEEDS + \".\" + KEY_STATE + \"=\" + Feed.STATE_SUBSCRIBED\n                 + \" GROUP BY \" + TABLE_NAME_FEEDS + \".\" + KEY_ID;\n         return db.rawQuery(query, null);\n     }\n@@ -1372,7 +1387,7 @@ public Cursor searchItems(long feedID, String searchQuery) {\n         }\n \n         String queryStart = SELECT_FEED_ITEMS_AND_MEDIA_WITH_DESCRIPTION\n-                + \" WHERE \" + queryFeedId + \" AND (\";\n+                + \" WHERE \" + queryFeedId + \" AND \" + SELECT_WHERE_FEED_IS_SUBSCRIBED + \" AND (\";\n         StringBuilder sb = new StringBuilder(queryStart);\n \n         for (int i = 0; i < queryWords.length; i++) {\n@@ -1401,12 +1416,13 @@ public Cursor searchItems(long feedID, String searchQuery) {\n     public Cursor searchFeeds(String searchQuery) {\n         String[] queryWords = prepareSearchQuery(searchQuery);\n \n-        String queryStart = \"SELECT \" + KEYS_FEED + \" FROM \" + TABLE_NAME_FEEDS + \" WHERE \";\n+        String queryStart = \"SELECT \" + KEYS_FEED + \" FROM \" + TABLE_NAME_FEEDS\n+                + \" WHERE \" + KEY_STATE + \" = \" + Feed.STATE_SUBSCRIBED;\n         StringBuilder sb = new StringBuilder(queryStart);\n \n         for (int i = 0; i < queryWords.length; i++) {\n             sb\n-                    .append(\"(\")\n+                    .append(\" AND (\")\n                     .append(KEY_TITLE).append(\" LIKE '%\").append(queryWords[i])\n                     .append(\"%' OR \")\n                     .append(KEY_CUSTOM_TITLE).append(\" LIKE '%\").append(queryWords[i])\n@@ -1415,13 +1431,9 @@ public Cursor searchFeeds(String searchQuery) {\n                     .append(\"%' OR \")\n                     .append(KEY_DESCRIPTION).append(\" LIKE '%\").append(queryWords[i])\n                     .append(\"%') \");\n-\n-            if (i != queryWords.length - 1) {\n-                sb.append(\"AND \");\n-            }\n         }\n \n-        sb.append(\"ORDER BY \" + KEY_TITLE + \" ASC LIMIT 300\");\n+        sb.append(\" ORDER BY \" + KEY_TITLE + \" ASC LIMIT 300\");\n \n         return db.rawQuery(sb.toString(), null);\n     }\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedCursor.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedCursor.java\nindex 2707275caa..3aba691063 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedCursor.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedCursor.java\n@@ -34,6 +34,7 @@ public class FeedCursor extends CursorWrapper {\n     private final int indexSortOrder;\n     private final int indexLastUpdateFailed;\n     private final int indexImageUrl;\n+    private final int indexState;\n \n     public FeedCursor(Cursor cursor) {\n         super(new FeedPreferencesCursor(cursor));\n@@ -58,6 +59,7 @@ public FeedCursor(Cursor cursor) {\n         indexSortOrder = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_SORT_ORDER);\n         indexLastUpdateFailed = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_LAST_UPDATE_FAILED);\n         indexImageUrl = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_IMAGE_URL);\n+        indexState = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_STATE);\n     }\n \n     /**\n@@ -85,7 +87,8 @@ public Feed getFeed() {\n                 getString(indexNextPageLink),\n                 getString(indexHide),\n                 SortOrder.fromCodeString(getString(indexSortOrder)),\n-                getInt(indexLastUpdateFailed) > 0);\n+                getInt(indexLastUpdateFailed) > 0,\n+                getInt(indexState));\n         feed.setPreferences(preferencesCursor.getFeedPreferences());\n         return feed;\n     }\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemFilterQuery.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemFilterQuery.java\nindex a4794d324d..481107cfac 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemFilterQuery.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemFilterQuery.java\n@@ -66,6 +66,9 @@ public static String generateFrom(FeedItemFilter filter) {\n         if (filter.showInHistory) {\n             statements.add(keyCompletionDate + \" > 0 \");\n         }\n+        if (!filter.includeNotSubscribed) {\n+            statements.add(PodDBAdapter.SELECT_WHERE_FEED_IS_SUBSCRIBED);\n+        }\n \n         if (statements.isEmpty()) {\n             return \"\";\ndiff --git a/storage/importexport/src/main/java/de/danoeh/antennapod/storage/importexport/HtmlWriter.java b/storage/importexport/src/main/java/de/danoeh/antennapod/storage/importexport/HtmlWriter.java\nindex 0b162fab0f..d259db43b1 100644\n--- a/storage/importexport/src/main/java/de/danoeh/antennapod/storage/importexport/HtmlWriter.java\n+++ b/storage/importexport/src/main/java/de/danoeh/antennapod/storage/importexport/HtmlWriter.java\n@@ -28,6 +28,9 @@ public static void writeDocument(List<Feed> feeds, Writer writer, Context contex\n \n         writer.append(templateParts[0]);\n         for (Feed feed : feeds) {\n+            if (feed.getState() != Feed.STATE_SUBSCRIBED) {\n+                continue;\n+            }\n             writer.append(\"<li><div><img src=\\\"\");\n             writer.append(feed.getImageUrl());\n             writer.append(\"\\\" /><p>\");\ndiff --git a/storage/importexport/src/main/java/de/danoeh/antennapod/storage/importexport/OpmlWriter.java b/storage/importexport/src/main/java/de/danoeh/antennapod/storage/importexport/OpmlWriter.java\nindex 9701476f95..d06932a5e4 100644\n--- a/storage/importexport/src/main/java/de/danoeh/antennapod/storage/importexport/OpmlWriter.java\n+++ b/storage/importexport/src/main/java/de/danoeh/antennapod/storage/importexport/OpmlWriter.java\n@@ -48,6 +48,9 @@ public static void writeDocument(List<Feed> feeds, Writer writer)\n \n         xs.startTag(null, OpmlSymbols.BODY);\n         for (Feed feed : feeds) {\n+            if (feed.getState() != Feed.STATE_SUBSCRIBED) {\n+                continue;\n+            }\n             xs.startTag(null, OpmlSymbols.OUTLINE);\n             xs.attribute(null, OpmlSymbols.TEXT, feed.getTitle());\n             xs.attribute(null, OpmlSymbols.TITLE, feed.getTitle());\ndiff --git a/ui/common/src/main/res/drawable/bg_message_info.xml b/ui/common/src/main/res/drawable/bg_message_info.xml\nnew file mode 100644\nindex 0000000000..6543066cfd\n--- /dev/null\n+++ b/ui/common/src/main/res/drawable/bg_message_info.xml\n@@ -0,0 +1,17 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<shape xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+       xmlns:aapt=\"http://schemas.android.com/aapt\">\n+    <stroke\n+        android:width=\"2dp\"\n+        android:color=\"?attr/colorPrimary\" />\n+\n+    <corners android:radius=\"8dp\" />\n+\n+    <solid>\n+        <aapt:attr name=\"android:color\" >\n+            <selector>\n+                <item android:alpha=\"0.1\" android:color=\"?attr/colorPrimary\" />\n+            </selector>\n+        </aapt:attr>\n+    </solid>\n+</shape>\n\\ No newline at end of file\ndiff --git a/ui/common/src/main/res/drawable/bg_rounded_corners.xml b/ui/common/src/main/res/drawable/bg_rounded_corners.xml\ndeleted file mode 100644\nindex 11b7710c40..0000000000\n--- a/ui/common/src/main/res/drawable/bg_rounded_corners.xml\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<shape\n-    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    android:shape=\"rectangle\">\n-    <corners android:radius=\"8dp\" />\n-</shape>\ndiff --git a/ui/common/src/main/res/drawable/ic_close.xml b/ui/common/src/main/res/drawable/ic_close.xml\nnew file mode 100644\nindex 0000000000..ccba7f4a04\n--- /dev/null\n+++ b/ui/common/src/main/res/drawable/ic_close.xml\n@@ -0,0 +1,11 @@\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:width=\"24dp\"\n+    android:height=\"24dp\"\n+    android:viewportWidth=\"24\"\n+    android:viewportHeight=\"24\">\n+  <path\n+      android:pathData=\"M17.656,6.343L12,12M12,12L6.343,17.656M12,12L17.656,17.656M12,12L6.343,6.343\"\n+      android:strokeWidth=\"2\"\n+      android:fillColor=\"#00000000\"\n+      android:strokeColor=\"?attr/action_icon_color\"/>\n+</vector>\ndiff --git a/ui/common/src/main/res/values/colors.xml b/ui/common/src/main/res/values/colors.xml\nindex ad835faf47..55ba650e78 100644\n--- a/ui/common/src/main/res/values/colors.xml\n+++ b/ui/common/src/main/res/values/colors.xml\n@@ -8,7 +8,6 @@\n     <color name=\"medium_gray\">#afafaf</color>\n     <color name=\"black\">#000000</color>\n     <color name=\"image_readability_tint\">#80000000</color>\n-    <color name=\"feed_image_bg\">#50000000</color>\n     <color name=\"feed_text_bg\">#55333333</color>\n \n     <!-- Theme colors -->\ndiff --git a/ui/common/src/main/res/values/dimens.xml b/ui/common/src/main/res/values/dimens.xml\nindex 5cfcd68b62..82c2b14517 100644\n--- a/ui/common/src/main/res/values/dimens.xml\n+++ b/ui/common/src/main/res/values/dimens.xml\n@@ -7,8 +7,6 @@\n     <dimen name=\"text_size_large\">22sp</dimen>\n     <dimen name=\"thumbnail_length_itemlist\">56dp</dimen>\n     <dimen name=\"thumbnail_length_queue_item\">56dp</dimen>\n-    <dimen name=\"thumbnail_length_onlinefeedview\">92dp</dimen>\n-    <dimen name=\"feeditemlist_header_height\">132dp</dimen>\n     <dimen name=\"thumbnail_length_navlist\">40dp</dimen>\n     <dimen name=\"listitem_iconwithtext_height\">48dp</dimen>\n     <dimen name=\"listitem_iconwithtext_textleftpadding\">16dp</dimen>\ndiff --git a/ui/i18n/src/main/res/values/strings.xml b/ui/i18n/src/main/res/values/strings.xml\nindex a840a1abfe..f5ac3c3064 100644\n--- a/ui/i18n/src/main/res/values/strings.xml\n+++ b/ui/i18n/src/main/res/values/strings.xml\n@@ -681,9 +681,8 @@\n \n     <!-- Online feed view -->\n     <string name=\"subscribe_label\">Subscribe</string>\n-    <string name=\"subscribing_label\">Subscribing&#8230;</string>\n-    <string name=\"preview_episode\">Preview</string>\n-    <string name=\"stop_preview\">Stop preview</string>\n+    <string name=\"preview_episodes\">Episodes preview</string>\n+    <string name=\"state_deleted_not_subscribed\">Playback state and history of non-subscribed podcasts are deleted after a while. Subscribe to keep them.</string>\n \n     <!-- Content descriptions for image buttons -->\n     <string name=\"toolbar_back_button_content_description\">Back</string>\n", "test_patch": "diff --git a/storage/database/src/test/java/de/danoeh/antennapod/storage/database/NonSubscribedFeedsCleanerTest.java b/storage/database/src/test/java/de/danoeh/antennapod/storage/database/NonSubscribedFeedsCleanerTest.java\nnew file mode 100644\nindex 0000000000..76bbfddc1a\n--- /dev/null\n+++ b/storage/database/src/test/java/de/danoeh/antennapod/storage/database/NonSubscribedFeedsCleanerTest.java\n@@ -0,0 +1,104 @@\n+package de.danoeh.antennapod.storage.database;\n+\n+import de.danoeh.antennapod.model.feed.Feed;\n+import de.danoeh.antennapod.model.feed.FeedItem;\n+import de.danoeh.antennapod.model.feed.FeedMedia;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.robolectric.RobolectricTestRunner;\n+\n+import java.util.ArrayList;\n+import java.util.Date;\n+import java.util.concurrent.TimeUnit;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+@RunWith(RobolectricTestRunner.class)\n+public class NonSubscribedFeedsCleanerTest {\n+\n+    @Test\n+    public void testSubscribed() {\n+        Feed feed = createFeed();\n+        feed.setLastRefreshAttempt(System.currentTimeMillis() - TimeUnit.MILLISECONDS.convert(200, TimeUnit.DAYS));\n+        assertFalse(NonSubscribedFeedsCleaner.shouldDelete(feed));\n+\n+        feed.setState(Feed.STATE_NOT_SUBSCRIBED);\n+        assertTrue(NonSubscribedFeedsCleaner.shouldDelete(feed));\n+    }\n+\n+    @Test\n+    public void testOldDate() {\n+        Feed feed = createFeed();\n+        feed.setState(Feed.STATE_NOT_SUBSCRIBED);\n+        feed.setLastRefreshAttempt(System.currentTimeMillis());\n+        assertFalse(NonSubscribedFeedsCleaner.shouldDelete(feed));\n+\n+        feed.setLastRefreshAttempt(System.currentTimeMillis() - TimeUnit.MILLISECONDS.convert(10, TimeUnit.DAYS));\n+        assertFalse(NonSubscribedFeedsCleaner.shouldDelete(feed));\n+\n+        feed.setLastRefreshAttempt(System.currentTimeMillis() - TimeUnit.MILLISECONDS.convert(200, TimeUnit.DAYS));\n+        assertTrue(NonSubscribedFeedsCleaner.shouldDelete(feed));\n+\n+        feed.setLastRefreshAttempt(System.currentTimeMillis() + TimeUnit.MILLISECONDS.convert(200, TimeUnit.DAYS));\n+        assertFalse(NonSubscribedFeedsCleaner.shouldDelete(feed));\n+    }\n+\n+    @Test\n+    public void testQueuedItem() {\n+        Feed feed = createFeed();\n+        feed.setState(Feed.STATE_NOT_SUBSCRIBED);\n+        feed.setLastRefreshAttempt(System.currentTimeMillis() - TimeUnit.MILLISECONDS.convert(200, TimeUnit.DAYS));\n+        feed.getItems().add(createItem(feed));\n+        assertTrue(NonSubscribedFeedsCleaner.shouldDelete(feed));\n+\n+        FeedItem queuedItem = createItem(feed);\n+        queuedItem.addTag(FeedItem.TAG_QUEUE);\n+        feed.getItems().add(queuedItem);\n+        assertFalse(NonSubscribedFeedsCleaner.shouldDelete(feed));\n+    }\n+\n+    @Test\n+    public void testFavoriteItem() {\n+        Feed feed = createFeed();\n+        feed.setState(Feed.STATE_NOT_SUBSCRIBED);\n+        feed.setLastRefreshAttempt(System.currentTimeMillis() - TimeUnit.MILLISECONDS.convert(200, TimeUnit.DAYS));\n+        feed.getItems().add(createItem(feed));\n+        assertTrue(NonSubscribedFeedsCleaner.shouldDelete(feed));\n+\n+        FeedItem queuedItem = createItem(feed);\n+        queuedItem.addTag(FeedItem.TAG_FAVORITE);\n+        feed.getItems().add(queuedItem);\n+        assertFalse(NonSubscribedFeedsCleaner.shouldDelete(feed));\n+    }\n+\n+    @Test\n+    public void testDownloadedItem() {\n+        Feed feed = createFeed();\n+        feed.setState(Feed.STATE_NOT_SUBSCRIBED);\n+        feed.setLastRefreshAttempt(System.currentTimeMillis() - TimeUnit.MILLISECONDS.convert(200, TimeUnit.DAYS));\n+        feed.getItems().add(createItem(feed));\n+        assertTrue(NonSubscribedFeedsCleaner.shouldDelete(feed));\n+\n+        FeedItem queuedItem = createItem(feed);\n+        queuedItem.getMedia().setDownloaded(true, System.currentTimeMillis());\n+        feed.getItems().add(queuedItem);\n+        assertFalse(NonSubscribedFeedsCleaner.shouldDelete(feed));\n+    }\n+\n+    private Feed createFeed() {\n+        Feed feed = new Feed(0, null, \"title\", \"http://example.com\", \"This is the description\",\n+                \"http://example.com/payment\", \"Daniel\", \"en\", null, \"http://example.com/feed\",\n+                \"http://example.com/image\", null, \"http://example.com/feed\", System.currentTimeMillis());\n+        feed.setItems(new ArrayList<>());\n+        return feed;\n+    }\n+\n+    private FeedItem createItem(Feed feed) {\n+        FeedItem item = new FeedItem(0, \"Item\", \"ItemId\", \"url\", new Date(), FeedItem.PLAYED, feed);\n+        FeedMedia media = new FeedMedia(item, \"http://download.url.net/\", 1234567, \"audio/mpeg\");\n+        media.setId(item.getId());\n+        item.setMedia(media);\n+        return item;\n+    }\n+}\n", "problem_statement": "Add/play single episode without subscribing to podcast\n# Checklist\r\n<!-- Place an x in the boxes to tick them: [x] -->\r\n\r\n- [x] I have used the search function to see if someone else has already submitted the same feature request.\r\n- [x] I will only create one feature request per issue.\r\n- [x] I will describe the problem with as much detail as possible.\r\n\r\n# System info\r\n\r\n**App version**: 2.0.3\r\n\r\n**App source**:  F-Droid\r\n\r\n# Feature description\r\n\r\n**Problem you may be having, or feature you want**:\r\n\r\nAfter recommending AntennaPod to a friend, the friend is really happy with the application and use it to listen to regular podcast shows, some of them in auto-download, some of them cherry picking the episodes according to the description and title. \r\n\r\nI recommend a particular episode of a podcast I enjoy, which she doesn't follow, she says \"great, I'll listen to it, but not right now, I'll add it to AntennaPod\", but then she had the following reaction \"Hey, why can't I add a single episode without having to subscribe to the whole podcast ?\". And I thought this would be a nice feature in AntennaPod : not having to subscribe to a podcast which you won't follow or have to unsubscribe to later, and benefit from the \"Queue\" feature that enables one to \"Listen later\" to a single episode. \r\n\r\n\r\n**Suggested solution**:\r\n\r\nIn the podcast \"Subscribe\" menu, when the user clicks on an episode there is a \"Preview\" link which is useful to listen to it straight away, there could be an other link / button with \"Download to listen later (without subscribing)\".  \r\n\r\n**Screenshots / Drawings / Technical details**:\r\n<!-- If your request is about (or includes) changing or extending the UI, describe what the UI would look like and how the user would interact with it. -->\r\n\r\n![Screenshot_20201123-094806](https://user-images.githubusercontent.com/108437/99943362-773d6a00-2d71-11eb-8b53-e739c724e6e6.png)\r\n\r\n\n", "hints_text": "I suggest we don't work on this.    Without subscribing to a podcast, it's difficult to manage that 'dangling' episode in the app without the data structures behind the 'parent', which is the podcast. \r\n\r\nFor example: for the episode that you download, we have to deal with the 'Open Podcast' menu because it has no where to go.\r\n\r\nI suggest you 'share the episode' with your friend so they can use their email as a bookmarking feature\nNow that support for virtual podcast from local folder is going to become possible maybe it could be used to allow this : \r\n- create a preview folder if it doesn't already exist and add it as a virtual podcast\r\n- download the episode and put it in the preview local folder\r\n\r\nLocal folder for this would really be handy and I think could remove a lot of problem which were making this hard to do?\nWhile that would work, it's not really good UX. Users could then not press the \"open podcast\" button to hear more from the same publishers. Also, deleting the downloaded file would also delete the listening status. In general, to store listening status, we always need the feed as well. I don't think we should add this as a half-working feature. (the reason why we can not really store state of individual episodes without a subscription is that AntennaPod is decentralized without a server that knows all episodes of all podcasts. You can read more about that on the forum: https://forum.antennapod.org/t/newbie-questions/84/2)\r\n\r\nThe easiest option is (as @tonytamsf wrote) to share the link to the episode file. In AntennaPod 2.1, you can add the downloads folder as a \"virtual\" podcast to have it directly in AntennaPod.\r\n\r\n---\r\n\r\nWhy don't you just subscribe to the podcast and unsubscribe again when no longer interested? The number of clicks to delete a whole subscription is not much higher than the number of clicks to delete a download.\nYou can also just preview an episode without subscribing to it.\r\nI vote that we close this issue @keunes ?\nTo be honest I find the use-case very relevant: it would be great if you could share a particular episode with a friend who could listen to it at a later point. Indeed temporarily subscribing is a workaround, but it doesn't feel great as a user (you have to remember to delete the feed afterwards, a cognitive burden).\n\nI realise it's currently technically hardly possible to cater for this use-case elegantly, but I would opt to keep this feature request open.\nAnother idea to manage this :  \r\n- wait for group folders to be implemented\r\n- have a \"no subscription\" folder\r\n- let user download episode without subscribing (instead of previewing) and add it to the queue\r\n- behind the scenes subscribe to podcast, put it in \"no subscription\" folder\r\n- make \"no subscription\" folder and podcasts in it invisible to user\r\n- remove invisible subscriptions if there is no longer any related episodes in queue or in favorites\r\n- like for normal subscriptions user can go to podcast screen from episode or player. When viewing podcast screen a subscribe button should be added so user can permanently subscribe. (Doing so, move subscription outside of \"no subscription\" folder)\r\n\r\nPros : \r\n- user can access to podcast normally from player or from episodes (but he won't be able to see it in subscriptions in lateral menu or in subscriptions screen)\r\n- all information from podcast is available and accessible to AntennaPod like any other podcast\r\n- It becomes easy for user to permanently subscribe\r\n- apart from invisible group folder everything is the same\r\n\r\nCons : \r\nI fear that it could be complicated to manage an invisible folder group \u2639\ufe0f\n@keunes thanks for this user centric approach. There is no rush for this feature. \n> behind the scenes subscribe to podcast, put it in \"no subscription\" folder\r\n\r\nYeah, I think that is the only good option we have. Would mean a lot of work, though (hide in episodes list, etc). Also, what happens if someone goes to the podcast page and downloads another episode of that podcast without subscribing? Do we delete the subscription only when no episode is marked as favorite? This feature sounds like it could lead to pretty big discussions about the behavior and quite a lot of confused users\nYes removing podcast should only happen when there is no more downloaded episode or episode in favorites.\r\nReally all would be like any other podcasts for the user except he wouldn't be able to see it in subscriptions screen or in subscriptions list. As all others interaction will be exactly the same I don't think it will cause any confusion.\n> what happens if someone goes to the podcast page and downloads another episode of that podcast without subscribing?\r\n\r\nEither nothing special (episode gets added, nothing else changes), or - probably better - a dialog is shown saying that they're currently not subscribed and adding more episodes is not possible, offering to 'subscribe' (i.e. remove the 'not subscribed' tag).\nThis issue has been mentioned on **AntennaPod Forum**. There might be relevant details there:\n\nhttps://forum.antennapod.org/t/is-there-a-way-to-download-podcasts-from-within-antennapod-without-subscribing/456/2\n\nThis issue has been mentioned on **AntennaPod Forum**. There might be relevant details there:\n\nhttps://forum.antennapod.org/t/ability-to-download-queue-episodes-from-non-subscribed-podcast/691/2\n\nThis issue has been mentioned on **AntennaPod Forum**. There might be relevant details there:\n\nhttps://forum.antennapod.org/t/downloading-just-one-episode-of-a-podcast/153/7\n\nPlay store review in favour of this:\r\n\r\n[1](https://play.google.com/apps/publish?account=8008695526664634386#ReviewDetailsPlace:p=de.danoeh.antennapod&reviewid=gp:AOqpTOGmhirt-hw7-qwI6tNJ-UCLP3d0MMM8W7-bFNLP9wkA0PU6WGseoG-KnDQkuGGn7FZBKFarZr8PF0kaQvY)\r\n\r\n> Browsing through podcasts that you have not yet subscribed to is very cumbersome. You would first have to subscribe to a podcast in order to watch the episodes normally and listen to them normally without this strange \"rehearsal\". Pictures / logos of the podcasts are only displayed if you have subscribed. So not to be used for me. 2 stars because it is open source..\r\n\r\n[2](https://play.google.com/apps/publish?account=8008695526664634386#ReviewDetailsPlace:p=de.danoeh.antennapod&reviewid=gp:AOqpTOEcI_r2mtnsYsffAapPd9oNJx5s0vh4wdcoJszMUOhk1uYNjAYvfIPG2W1-NZwy_8iexwvaropY2JTEt4s)\r\n\r\n> If I search for a podcast I see a list of the episodes but it won't let me sample one it seems like I have to subscribe first that doesn't work for me.\r\n\r\n[3](https://play.google.com/apps/publish?account=8008695526664634386#ReviewDetailsPlace:p=de.danoeh.antennapod&reviewid=5fdaaa83-a0ec-492f-9e1a-e0a40183bec2)\r\n\r\n> Would be nice to have backups via Google account and single episode download without subbing, but otherwise really nice..\r\n\r\n[4](https://play.google.com/apps/publish?account=8008695526664634386#ReviewDetailsPlace:p=de.danoeh.antennapod&reviewid=fc78c156-b31b-4b81-bacb-ad276556336b)\r\n\r\n> Could be perfect but missing a crucial feature; download episode(s) without having to subscribe to the whole podcast first...So annoying, why??.\r\n\r\n[5](https://play.google.com/console/u/0/developers/8008695526664634386/app/4974638472012894302/user-feedback/review-details?reviewId=e5c79032-84ea-468d-b282-229a15264c0b&corpus=PUBLIC_REVIEWS)\r\n\r\n> Good podcast app. Only issue is that it's unclear how to listen to podcasts that I'm not subscribed to.\r\n\r\n[6](https://play.google.com/console/u/0/developers/8008695526664634386/app/4974638472012894302/user-feedback/review-details?reviewId=17fdf663-5922-451d-b74a-e019431e7082&corpus=PUBLIC_REVIEWS)\r\n> I switched over to find a replacement for Google podcasts. tried several apps this one seems the most intuitive for Google Podcast users. I wish the queue was a little more prominent and I am still confused about how to download single episodes when not subscribed to a podcast. glad to have a new podcast player.\nI really think that the only thing needed is triggering an invisible subscription for the user when he is adding an episode.\r\n\r\nPodcast wouldn't show in subscriptions list but could be accessed through added episodes.\r\nUnsubscribing should be automatic when there is no more episode in queue or starred / in favorites.\r\n\r\n-> this way there would be minimum difference for AntennaPod and for user it would be as if subscribing for only an episode is not necessary\r\n\n**Requested in #5643: ability to open a specific episode when it is shared (especially between AntennaPod users). Possible solutions are discussed there. Ideally support for this is implemented together with this issue.**\nThis issue has been mentioned on **AntennaPod Forum**. There might be relevant details there:\n\nhttps://forum.antennapod.org/t/add-episode-from-podcasts-without-subscribing/1271/4\n\nI recently started using this app and came across this issue, but I found a decent work-around. It is possible to subscribe to a podcast, download a single episode, and turn auto-refreshing off in the settings. I think that's good enough and similar to what other podcast applications do, what do you think of adding a shortcut for doing this?\nYeah, I think that's what the solution for this issue will look like. Internally, subscribe to it normally but disable auto-refreshing and put it in a folder called \"not subscribed\".\nThis issue has been mentioned on **AntennaPod Forum**. There might be relevant details there:\n\nhttps://forum.antennapod.org/t/user-must-be-able-to-listen-to-the-podcast-without-subscribing/1853/2\n", "created_at": "2024-04-14T15:01:06Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 7096, "instance_id": "AntennaPod__AntennaPod-7096", "issue_numbers": ["4795"], "base_commit": "e9b3cc34fe211ab3b03c30c6c483078b99ba7561", "patch": "diff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/AutomaticDeletionPreferencesFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/AutomaticDeletionPreferencesFragment.java\nnew file mode 100644\nindex 0000000000..8c7608b6bc\n--- /dev/null\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/AutomaticDeletionPreferencesFragment.java\n@@ -0,0 +1,96 @@\n+package de.danoeh.antennapod.ui.screen.preferences;\n+\n+import android.content.res.Resources;\n+import android.os.Bundle;\n+import androidx.preference.ListPreference;\n+import androidx.preference.PreferenceFragmentCompat;\n+import androidx.preference.TwoStatePreference;\n+import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.storage.preferences.UserPreferences;\n+\n+\n+public class AutomaticDeletionPreferencesFragment extends PreferenceFragmentCompat {\n+    private static final String PREF_AUTO_DELETE_LOCAL = \"prefAutoDeleteLocal\";\n+    private boolean blockAutoDeleteLocal = true;\n+\n+    @Override\n+    public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {\n+        addPreferencesFromResource(R.xml.preferences_auto_deletion);\n+        setupScreen();\n+        buildEpisodeCleanupPreference();\n+        checkItemVisibility(UserPreferences.isAutoDelete());\n+    }\n+\n+    @Override\n+    public void onStart() {\n+        super.onStart();\n+        ((PreferenceActivity) getActivity()).getSupportActionBar().setTitle(R.string.pref_auto_delete_title);\n+    }\n+\n+    private void checkItemVisibility(boolean autoDeleteEnabled) {\n+        findPreference(UserPreferences.PREF_FAVORITE_KEEPS_EPISODE).setEnabled(autoDeleteEnabled);\n+        findPreference(PREF_AUTO_DELETE_LOCAL).setEnabled(autoDeleteEnabled);\n+    }\n+\n+    private void setupScreen() {\n+        if (!UserPreferences.isEnableAutodownload()) {\n+            findPreference(UserPreferences.PREF_EPISODE_CLEANUP).setEnabled(false);\n+            findPreference(UserPreferences.PREF_EPISODE_CLEANUP).setSummary(R.string.auto_download_disabled_globally);\n+        }\n+        findPreference(PREF_AUTO_DELETE_LOCAL).setOnPreferenceChangeListener((preference, newValue) -> {\n+            if (blockAutoDeleteLocal && newValue == Boolean.TRUE) {\n+                showAutoDeleteEnableDialog();\n+                return false;\n+            } else {\n+                return true;\n+            }\n+        });\n+        findPreference(UserPreferences.PREF_AUTO_DELETE).setOnPreferenceChangeListener((preference, newValue) -> {\n+            if (newValue instanceof Boolean) {\n+                checkItemVisibility((Boolean) newValue);\n+            }\n+            return true;\n+        });\n+    }\n+\n+    private void showAutoDeleteEnableDialog() {\n+        new MaterialAlertDialogBuilder(requireContext())\n+                .setMessage(R.string.pref_auto_local_delete_dialog_body)\n+                .setPositiveButton(R.string.yes, (dialog, which) -> {\n+                    blockAutoDeleteLocal = false;\n+                    ((TwoStatePreference) findPreference(PREF_AUTO_DELETE_LOCAL)).setChecked(true);\n+                    blockAutoDeleteLocal = true;\n+                })\n+                .setNegativeButton(R.string.cancel_label, null)\n+                .show();\n+    }\n+\n+\n+    private void buildEpisodeCleanupPreference() {\n+        final Resources res = getActivity().getResources();\n+\n+        ListPreference pref = findPreference(UserPreferences.PREF_EPISODE_CLEANUP);\n+        String[] values = res.getStringArray(\n+                de.danoeh.antennapod.ui.preferences.R.array.episode_cleanup_values);\n+        String[] entries = new String[values.length];\n+        for (int x = 0; x < values.length; x++) {\n+            int v = Integer.parseInt(values[x]);\n+            if (v == UserPreferences.EPISODE_CLEANUP_EXCEPT_FAVORITE) {\n+                entries[x] =  res.getString(R.string.episode_cleanup_except_favorite_removal);\n+            } else if (v == UserPreferences.EPISODE_CLEANUP_QUEUE) {\n+                entries[x] = res.getString(R.string.episode_cleanup_queue_removal);\n+            } else if (v == UserPreferences.EPISODE_CLEANUP_NULL) {\n+                entries[x] = res.getString(R.string.episode_cleanup_never);\n+            } else if (v == 0) {\n+                entries[x] = res.getString(R.string.episode_cleanup_after_listening);\n+            } else if (v > 0 && v < 24) {\n+                entries[x] = res.getQuantityString(R.plurals.episode_cleanup_hours_after_listening, v, v);\n+            } else {\n+                int numDays = v / 24; // assume underlying value will be NOT fraction of days, e.g., 36 (hours)\n+                entries[x] = res.getQuantityString(R.plurals.episode_cleanup_days_after_listening, numDays, numDays);\n+            }\n+        }\n+        pref.setEntries(entries);\n+    }\n+}\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/DownloadsPreferencesFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/DownloadsPreferencesFragment.java\nindex fad8c69868..3af3a0248e 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/DownloadsPreferencesFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/DownloadsPreferencesFragment.java\n@@ -2,16 +2,12 @@\n \n import android.content.SharedPreferences;\n import android.os.Bundle;\n-\n import androidx.preference.PreferenceFragmentCompat;\n import androidx.preference.PreferenceManager;\n-import androidx.preference.TwoStatePreference;\n-\n-import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.net.download.serviceinterface.FeedUpdateManager;\n-import de.danoeh.antennapod.ui.preferences.screen.downloads.ChooseDataFolderDialog;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n+import de.danoeh.antennapod.ui.preferences.screen.downloads.ChooseDataFolderDialog;\n \n import java.io.File;\n \n@@ -19,12 +15,10 @@\n public class DownloadsPreferencesFragment extends PreferenceFragmentCompat\n         implements SharedPreferences.OnSharedPreferenceChangeListener {\n     private static final String PREF_SCREEN_AUTODL = \"prefAutoDownloadSettings\";\n-    private static final String PREF_AUTO_DELETE_LOCAL = \"prefAutoDeleteLocal\";\n+    private static final String PREF_SCREEN_AUTO_DELETE = \"prefAutoDeleteScreen\";\n     private static final String PREF_PROXY = \"prefProxy\";\n     private static final String PREF_CHOOSE_DATA_DIR = \"prefChooseDataDir\";\n \n-    private boolean blockAutoDeleteLocal = true;\n-\n     @Override\n     public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {\n         addPreferencesFromResource(R.xml.preferences_downloads);\n@@ -55,6 +49,10 @@ private void setupNetworkScreen() {\n             ((PreferenceActivity) getActivity()).openScreen(R.xml.preferences_autodownload);\n             return true;\n         });\n+        findPreference(PREF_SCREEN_AUTO_DELETE).setOnPreferenceClickListener(preference -> {\n+            ((PreferenceActivity) getActivity()).openScreen(R.xml.preferences_auto_deletion);\n+            return true;\n+        });\n         // validate and set correct value: number of downloads between 1 and 50 (inclusive)\n         findPreference(PREF_PROXY).setOnPreferenceClickListener(preference -> {\n             ProxyDialog dialog = new ProxyDialog(getActivity());\n@@ -68,14 +66,6 @@ private void setupNetworkScreen() {\n             });\n             return true;\n         });\n-        findPreference(PREF_AUTO_DELETE_LOCAL).setOnPreferenceChangeListener((preference, newValue) -> {\n-            if (blockAutoDeleteLocal && newValue == Boolean.TRUE) {\n-                showAutoDeleteEnableDialog();\n-                return false;\n-            } else {\n-                return true;\n-            }\n-        });\n     }\n \n     private void setDataFolderText() {\n@@ -91,16 +81,4 @@ public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, Strin\n             FeedUpdateManager.getInstance().restartUpdateAlarm(getContext(), true);\n         }\n     }\n-\n-    private void showAutoDeleteEnableDialog() {\n-        new MaterialAlertDialogBuilder(requireContext())\n-                .setMessage(R.string.pref_auto_local_delete_dialog_body)\n-                .setPositiveButton(R.string.yes, (dialog, which) -> {\n-                    blockAutoDeleteLocal = false;\n-                    ((TwoStatePreference) findPreference(PREF_AUTO_DELETE_LOCAL)).setChecked(true);\n-                    blockAutoDeleteLocal = true;\n-                })\n-                .setNegativeButton(R.string.cancel_label, null)\n-                .show();\n-    }\n }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/PreferenceActivity.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/PreferenceActivity.java\nindex e82c2c0843..b083bda5db 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/PreferenceActivity.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/PreferenceActivity.java\n@@ -83,6 +83,8 @@ private PreferenceFragmentCompat getPreferenceScreen(int screen) {\n             prefFragment = new NotificationPreferencesFragment();\n         } else if (screen == R.xml.preferences_swipe) {\n             prefFragment = new SwipePreferencesFragment();\n+        } else if (screen == R.xml.preferences_auto_deletion) {\n+            prefFragment = new AutomaticDeletionPreferencesFragment();\n         }\n         return prefFragment;\n     }\n@@ -106,6 +108,8 @@ public static int getTitleOfPage(int preferences) {\n             return R.string.feed_settings_label;\n         } else if (preferences == R.xml.preferences_swipe) {\n             return R.string.swipeactions_label;\n+        } else if (preferences == R.xml.preferences_auto_deletion) {\n+            return R.string.pref_auto_delete_title;\n         }\n         return R.string.settings_label;\n     }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/subscriptions/FeedMultiSelectActionHandler.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/subscriptions/FeedMultiSelectActionHandler.java\nindex f2c89f12fd..7f2d96ed4e 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/subscriptions/FeedMultiSelectActionHandler.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/subscriptions/FeedMultiSelectActionHandler.java\n@@ -96,7 +96,7 @@ private void playbackSpeedPrefHandler() {\n \n     private void autoDeleteEpisodesPrefHandler() {\n         PreferenceListDialog preferenceListDialog = new PreferenceListDialog(activity,\n-                activity.getString(R.string.auto_delete_label));\n+                activity.getString(R.string.pref_auto_delete_playback_title));\n         String[] items = activity.getResources().getStringArray(R.array.spnAutoDeleteItems);\n         preferenceListDialog.openDialog(items);\n         preferenceListDialog.setOnPreferenceChangedListener(which -> {\ndiff --git a/app/src/main/res/menu/nav_feed_action_speeddial.xml b/app/src/main/res/menu/nav_feed_action_speeddial.xml\nindex 250d12bc2a..ce2453ab60 100644\n--- a/app/src/main/res/menu/nav_feed_action_speeddial.xml\n+++ b/app/src/main/res/menu/nav_feed_action_speeddial.xml\n@@ -23,7 +23,7 @@\n     <item\n         android:id=\"@+id/autoDeleteDownload\"\n         android:menuCategory=\"container\"\n-        android:title=\"@string/auto_delete_label\"\n+        android:title=\"@string/pref_auto_delete_playback_title\"\n         android:icon=\"@drawable/ic_delete_auto\"/>\n     <item\n         android:id=\"@+id/playback_speed\"\ndiff --git a/app/src/main/res/xml/feed_settings.xml b/app/src/main/res/xml/feed_settings.xml\nindex 11e7132a59..6425baff74 100644\n--- a/app/src/main/res/xml/feed_settings.xml\n+++ b/app/src/main/res/xml/feed_settings.xml\n@@ -46,7 +46,7 @@\n         android:icon=\"@drawable/ic_delete\"\n         android:key=\"autoDelete\"\n         android:summary=\"@string/global_default\"\n-        android:title=\"@string/auto_delete_label\" />\n+        android:title=\"@string/pref_auto_delete_playback_title\" />\n \n     <de.danoeh.antennapod.ui.screen.feed.preferences.VolumeAdaptationPreference\n         android:defaultValue=\"off\"\ndiff --git a/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java b/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\nindex 9e7333a2ec..f68fa77a71 100644\n--- a/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\n+++ b/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\n@@ -80,8 +80,8 @@ public abstract class UserPreferences {\n     public static final String PREF_HARDWARE_PREVIOUS_BUTTON = \"prefHardwarePreviousButton\";\n     public static final String PREF_FOLLOW_QUEUE = \"prefFollowQueue\";\n     public static final String PREF_SKIP_KEEPS_EPISODE = \"prefSkipKeepsEpisode\";\n-    private static final String PREF_FAVORITE_KEEPS_EPISODE = \"prefFavoriteKeepsEpisode\";\n-    private static final String PREF_AUTO_DELETE = \"prefAutoDelete\";\n+    public static final String PREF_FAVORITE_KEEPS_EPISODE = \"prefFavoriteKeepsEpisode\";\n+    public static final String PREF_AUTO_DELETE = \"prefAutoDelete\";\n     private static final String PREF_AUTO_DELETE_LOCAL = \"prefAutoDeleteLocal\";\n     public static final String PREF_SMART_MARK_AS_PLAYED_SECS = \"prefSmartMarkAsPlayedSecs\";\n     private static final String PREF_PLAYBACK_SPEED_ARRAY = \"prefPlaybackSpeedArray\";\ndiff --git a/ui/i18n/src/main/res/values/strings.xml b/ui/i18n/src/main/res/values/strings.xml\nindex 6a42387799..11acdf6766 100644\n--- a/ui/i18n/src/main/res/values/strings.xml\n+++ b/ui/i18n/src/main/res/values/strings.xml\n@@ -127,7 +127,6 @@\n     <string name=\"close_label\">Close</string>\n     <string name=\"retry_label\">Retry</string>\n     <string name=\"auto_download_label\">Include in auto downloads</string>\n-    <string name=\"auto_delete_label\">Auto delete episode</string>\n     <string name=\"feed_volume_adapdation\">Volume adaptation</string>\n     <string name=\"feed_volume_adaptation_summary\">Turn volume for episodes of this podcast up or down: %1$s</string>\n     <string name=\"feed_volume_reduction_off\">No adaption</string>\n@@ -385,7 +384,7 @@\n     <string name=\"preference_search_hint\">Search\u2026</string>\n     <string name=\"preference_search_no_results\">No results</string>\n     <string name=\"preference_search_clear_history\">Clear history</string>\n-    <string name=\"pref_episode_cleanup_title\">Episode cleanup</string>\n+    <string name=\"pref_episode_cleanup_title\">Delete before auto download</string>\n     <string name=\"pref_episode_cleanup_summary\">Episodes that should be eligible for removal if Auto Download needs space for new episodes</string>\n     <string name=\"pref_pauseOnDisconnect_sum\">Pause playback when headphones or bluetooth are disconnected</string>\n     <string name=\"pref_unpauseOnHeadsetReconnect_sum\">Resume playback when the headphones are reconnected</string>\n@@ -399,8 +398,10 @@\n     <string name=\"button_action_skip_episode\">Skip episode</string>\n     <string name=\"button_action_restart_episode\">Restart episode</string>\n     <string name=\"pref_followQueue_sum\">Jump to next queue item when playback completes</string>\n-    <string name=\"pref_auto_delete_sum\">Delete episode when playback completes</string>\n-    <string name=\"pref_auto_delete_title\">Auto delete</string>\n+    <string name=\"pref_auto_delete_playback_sum\">Delete episode when playback completes</string>\n+    <string name=\"pref_auto_delete_playback_title\">Delete after playing</string>\n+    <string name=\"pref_auto_delete_title\">Automatic deletion</string>\n+    <string name=\"pref_auto_delete_sum\">Delete episodes after playing or when automatic download needs space</string>\n     <string name=\"pref_auto_local_delete_title\">Auto delete from local folders</string>\n     <string name=\"pref_auto_local_delete_sum\">Include local folders in Auto delete functionality</string>\n     <string name=\"pref_auto_local_delete_dialog_body\">Note that for local folders this will remove episodes from AntennaPod and delete their media files from your device storage. They cannot be downloaded again through AntennaPod. Enable auto delete?</string>\n@@ -455,8 +456,8 @@\n     <string name=\"pref_autodl_wifi_filter_sum\">Allow automatic download only for selected Wi-Fi networks.</string>\n     <string name=\"pref_automatic_download_on_battery_title\">Download when not charging</string>\n     <string name=\"pref_automatic_download_on_battery_sum\">Allow automatic download when the battery is not charging</string>\n-    <string name=\"pref_episode_cache_title\">Episode cache</string>\n-    <string name=\"pref_episode_cache_summary\">Total number of downloaded episodes cached on the device. Automatic download will be suspended if this number is reached.</string>\n+    <string name=\"pref_episode_cache_title\">Episode limit</string>\n+    <string name=\"pref_episode_cache_summary\">Automatic download is stopped if this number is reached</string>\n     <string name=\"pref_episode_cover_title\">Use episode cover</string>\n     <string name=\"pref_episode_cover_summary\">Use the episode specific cover in lists whenever available. If unchecked, the app will always use the podcast cover image.</string>\n     <string name=\"pref_show_remain_time_title\">Show remaining time</string>\ndiff --git a/ui/preferences/src/main/java/de/danoeh/antennapod/ui/preferences/screen/AutoDownloadPreferencesFragment.java b/ui/preferences/src/main/java/de/danoeh/antennapod/ui/preferences/screen/AutoDownloadPreferencesFragment.java\nindex 7c0c3ed4c7..1f0fbfbebe 100644\n--- a/ui/preferences/src/main/java/de/danoeh/antennapod/ui/preferences/screen/AutoDownloadPreferencesFragment.java\n+++ b/ui/preferences/src/main/java/de/danoeh/antennapod/ui/preferences/screen/AutoDownloadPreferencesFragment.java\n@@ -3,7 +3,6 @@\n import android.annotation.SuppressLint;\n import android.app.Activity;\n import android.content.Context;\n-import android.content.res.Resources;\n import android.net.wifi.WifiConfiguration;\n import android.net.wifi.WifiManager;\n import android.os.Build;\n@@ -11,7 +10,6 @@\n import android.util.Log;\n import androidx.appcompat.app.AppCompatActivity;\n import androidx.preference.CheckBoxPreference;\n-import androidx.preference.ListPreference;\n import androidx.preference.Preference;\n import androidx.preference.PreferenceFragmentCompat;\n import androidx.preference.PreferenceScreen;\n@@ -35,7 +33,6 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {\n         setupAutoDownloadScreen();\n         buildAutodownloadSelectedNetworksPreference();\n         setSelectedNetworksEnabled(UserPreferences.isEnableAutodownloadWifiFilter());\n-        buildEpisodeCleanupPreference();\n     }\n \n     @Override\n@@ -78,7 +75,6 @@ private void checkAutodownloadItemVisibility(boolean autoDownload) {\n         findPreference(UserPreferences.PREF_EPISODE_CACHE_SIZE).setEnabled(autoDownload);\n         findPreference(UserPreferences.PREF_ENABLE_AUTODL_ON_BATTERY).setEnabled(autoDownload);\n         findPreference(UserPreferences.PREF_ENABLE_AUTODL_WIFI_FILTER).setEnabled(autoDownload);\n-        findPreference(UserPreferences.PREF_EPISODE_CLEANUP).setEnabled(autoDownload);\n         setSelectedNetworksEnabled(autoDownload && UserPreferences.isEnableAutodownloadWifiFilter());\n     }\n \n@@ -165,33 +161,6 @@ private void clearAutodownloadSelectedNetworsPreference() {\n         }\n     }\n \n-    private void buildEpisodeCleanupPreference() {\n-        final Resources res = getActivity().getResources();\n-\n-        ListPreference pref = findPreference(UserPreferences.PREF_EPISODE_CLEANUP);\n-        String[] values = res.getStringArray(\n-                R.array.episode_cleanup_values);\n-        String[] entries = new String[values.length];\n-        for (int x = 0; x < values.length; x++) {\n-            int v = Integer.parseInt(values[x]);\n-            if (v == UserPreferences.EPISODE_CLEANUP_EXCEPT_FAVORITE) {\n-                entries[x] =  res.getString(R.string.episode_cleanup_except_favorite_removal);\n-            } else if (v == UserPreferences.EPISODE_CLEANUP_QUEUE) {\n-                entries[x] = res.getString(R.string.episode_cleanup_queue_removal);\n-            } else if (v == UserPreferences.EPISODE_CLEANUP_NULL){\n-                entries[x] = res.getString(R.string.episode_cleanup_never);\n-            } else if (v == 0) {\n-                entries[x] = res.getString(R.string.episode_cleanup_after_listening);\n-            } else if (v > 0 && v < 24) {\n-                entries[x] = res.getQuantityString(R.plurals.episode_cleanup_hours_after_listening, v, v);\n-            } else {\n-                int numDays = v / 24; // assume underlying value will be NOT fraction of days, e.g., 36 (hours)\n-                entries[x] = res.getQuantityString(R.plurals.episode_cleanup_days_after_listening, numDays, numDays);\n-            }\n-        }\n-        pref.setEntries(entries);\n-    }\n-\n     private void setSelectedNetworksEnabled(boolean b) {\n         if (selectedNetworks != null) {\n             for (Preference p : selectedNetworks) {\ndiff --git a/ui/preferences/src/main/res/xml/preferences_auto_deletion.xml b/ui/preferences/src/main/res/xml/preferences_auto_deletion.xml\nnew file mode 100644\nindex 0000000000..057ce55174\n--- /dev/null\n+++ b/ui/preferences/src/main/res/xml/preferences_auto_deletion.xml\n@@ -0,0 +1,31 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<PreferenceScreen\n+        xmlns:android=\"http://schemas.android.com/apk/res/android\">\n+\n+    <SwitchPreferenceCompat\n+        android:defaultValue=\"false\"\n+        android:enabled=\"true\"\n+        android:key=\"prefAutoDelete\"\n+        android:summary=\"@string/pref_auto_delete_playback_sum\"\n+        android:title=\"@string/pref_auto_delete_playback_title\"/>\n+    <SwitchPreferenceCompat\n+        android:defaultValue=\"false\"\n+        android:enabled=\"true\"\n+        android:key=\"prefAutoDeleteLocal\"\n+        android:summary=\"@string/pref_auto_local_delete_sum\"\n+        android:title=\"@string/pref_auto_local_delete_title\"/>\n+    <SwitchPreferenceCompat\n+        android:defaultValue=\"true\"\n+        android:enabled=\"true\"\n+        android:key=\"prefFavoriteKeepsEpisode\"\n+        android:summary=\"@string/pref_favorite_keeps_episodes_sum\"\n+        android:title=\"@string/pref_favorite_keeps_episodes_title\"/>\n+    <de.danoeh.antennapod.ui.preferences.preference.MaterialListPreference\n+        android:defaultValue=\"-1\"\n+        android:entries=\"@array/episode_cleanup_entries\"\n+        android:key=\"prefEpisodeCleanup\"\n+        android:title=\"@string/pref_episode_cleanup_title\"\n+        android:summary=\"@string/pref_episode_cleanup_summary\"\n+        android:entryValues=\"@array/episode_cleanup_values\"/>\n+\n+</PreferenceScreen>\ndiff --git a/ui/preferences/src/main/res/xml/preferences_autodownload.xml b/ui/preferences/src/main/res/xml/preferences_autodownload.xml\nindex 339ddc9af2..3ababbf1dd 100644\n--- a/ui/preferences/src/main/res/xml/preferences_autodownload.xml\n+++ b/ui/preferences/src/main/res/xml/preferences_autodownload.xml\n@@ -15,13 +15,6 @@\n             android:title=\"@string/pref_episode_cache_title\"\n             android:summary=\"@string/pref_episode_cache_summary\"\n             android:entryValues=\"@array/episode_cache_size_values\"/>\n-    <de.danoeh.antennapod.ui.preferences.preference.MaterialListPreference\n-            android:defaultValue=\"-1\"\n-            android:entries=\"@array/episode_cleanup_entries\"\n-            android:key=\"prefEpisodeCleanup\"\n-            android:title=\"@string/pref_episode_cleanup_title\"\n-            android:summary=\"@string/pref_episode_cleanup_summary\"\n-            android:entryValues=\"@array/episode_cleanup_values\"/>\n     <SwitchPreferenceCompat\n             android:key=\"prefEnableAutoDownloadOnBattery\"\n             android:title=\"@string/pref_automatic_download_on_battery_title\"\ndiff --git a/ui/preferences/src/main/res/xml/preferences_downloads.xml b/ui/preferences/src/main/res/xml/preferences_downloads.xml\nindex 8a0c2efbe0..3dc08b9172 100644\n--- a/ui/preferences/src/main/res/xml/preferences_downloads.xml\n+++ b/ui/preferences/src/main/res/xml/preferences_downloads.xml\n@@ -27,24 +27,10 @@\n             android:key=\"prefAutoDownloadSettings\"\n             android:title=\"@string/pref_automatic_download_title\"\n             search:ignore=\"true\" />\n-        <SwitchPreferenceCompat\n-            android:defaultValue=\"false\"\n-            android:enabled=\"true\"\n-            android:key=\"prefAutoDelete\"\n+        <Preference\n+            android:key=\"prefAutoDeleteScreen\"\n             android:summary=\"@string/pref_auto_delete_sum\"\n             android:title=\"@string/pref_auto_delete_title\"/>\n-        <SwitchPreferenceCompat\n-            android:defaultValue=\"false\"\n-            android:enabled=\"true\"\n-            android:key=\"prefAutoDeleteLocal\"\n-            android:summary=\"@string/pref_auto_local_delete_sum\"\n-            android:title=\"@string/pref_auto_local_delete_title\"/>\n-        <SwitchPreferenceCompat\n-            android:defaultValue=\"true\"\n-            android:enabled=\"true\"\n-            android:key=\"prefFavoriteKeepsEpisode\"\n-            android:summary=\"@string/pref_favorite_keeps_episodes_sum\"\n-            android:title=\"@string/pref_favorite_keeps_episodes_title\"/>\n         <SwitchPreferenceCompat\n             android:defaultValue=\"false\"\n             android:enabled=\"true\"\n", "test_patch": "diff --git a/app/src/androidTest/java/de/test/antennapod/ui/FeedSettingsTest.java b/app/src/androidTest/java/de/test/antennapod/ui/FeedSettingsTest.java\nindex 187c9e16da..c34ab19c09 100644\n--- a/app/src/androidTest/java/de/test/antennapod/ui/FeedSettingsTest.java\n+++ b/app/src/androidTest/java/de/test/antennapod/ui/FeedSettingsTest.java\n@@ -70,7 +70,7 @@ public void testClickFeedSettings() {\n         clickPreference(R.string.pref_feed_skip);\n         onView(withText(R.string.cancel_label)).perform(click());\n \n-        clickPreference(R.string.auto_delete_label);\n+        clickPreference(R.string.pref_auto_delete_playback_title);\n         onView(withText(R.string.cancel_label)).perform(click());\n \n         clickPreference(R.string.feed_volume_adapdation);\ndiff --git a/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java b/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\nindex 93d9fe1290..3e6267ac40 100644\n--- a/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\n+++ b/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\n@@ -173,11 +173,12 @@ public void testContinuousPlayback() {\n     @Test\n     public void testAutoDelete() {\n         clickPreference(R.string.downloads_pref);\n-        final boolean autoDelete = UserPreferences.isAutoDelete();\n         onView(withText(R.string.pref_auto_delete_title)).perform(click());\n+        final boolean autoDelete = UserPreferences.isAutoDelete();\n+        onView(withText(R.string.pref_auto_delete_playback_title)).perform(click());\n         Awaitility.await().atMost(1000, MILLISECONDS)\n                 .until(() -> autoDelete != UserPreferences.isAutoDelete());\n-        onView(withText(R.string.pref_auto_delete_title)).perform(click());\n+        onView(withText(R.string.pref_auto_delete_playback_title)).perform(click());\n         Awaitility.await().atMost(1000, MILLISECONDS)\n                 .until(() -> autoDelete == UserPreferences.isAutoDelete());\n     }\n@@ -185,8 +186,10 @@ public void testAutoDelete() {\n     @Test\n     public void testAutoDeleteLocal() {\n         clickPreference(R.string.downloads_pref);\n-        final boolean initialAutoDelete = UserPreferences.isAutoDeleteLocal();\n-        assertFalse(initialAutoDelete);\n+        onView(withText(R.string.pref_auto_delete_title)).perform(click());\n+        onView(withText(R.string.pref_auto_delete_playback_title)).perform(click());\n+        assertTrue(UserPreferences.isAutoDelete());\n+        assertFalse(UserPreferences.isAutoDeleteLocal());\n \n         onView(withText(R.string.pref_auto_local_delete_title)).perform(click());\n         onView(withText(R.string.yes)).perform(click());\n@@ -289,7 +292,7 @@ public void testAutomaticDownload() {\n     @Test\n     public void testEpisodeCleanupFavoriteOnly() {\n         clickPreference(R.string.downloads_pref);\n-        onView(withText(R.string.pref_automatic_download_title)).perform(click());\n+        onView(withText(R.string.pref_auto_delete_title)).perform(click());\n         onView(withText(R.string.pref_episode_cleanup_title)).perform(click());\n         onView(withId(R.id.select_dialog_listview)).perform(swipeDown());\n         onView(withText(R.string.episode_cleanup_except_favorite_removal)).perform(click());\n@@ -300,7 +303,7 @@ public void testEpisodeCleanupFavoriteOnly() {\n     @Test\n     public void testEpisodeCleanupQueueOnly() {\n         clickPreference(R.string.downloads_pref);\n-        onView(withText(R.string.pref_automatic_download_title)).perform(click());\n+        onView(withText(R.string.pref_auto_delete_title)).perform(click());\n         onView(withText(R.string.pref_episode_cleanup_title)).perform(click());\n         onView(withId(R.id.select_dialog_listview)).perform(swipeDown());\n         onView(withText(R.string.episode_cleanup_queue_removal)).perform(click());\n@@ -311,7 +314,7 @@ public void testEpisodeCleanupQueueOnly() {\n     @Test\n     public void testEpisodeCleanupNeverAlg() {\n         clickPreference(R.string.downloads_pref);\n-        onView(withText(R.string.pref_automatic_download_title)).perform(click());\n+        onView(withText(R.string.pref_auto_delete_title)).perform(click());\n         onView(withText(R.string.pref_episode_cleanup_title)).perform(click());\n         onView(withId(R.id.select_dialog_listview)).perform(swipeUp());\n         onView(withText(R.string.episode_cleanup_never)).perform(click());\n@@ -322,7 +325,7 @@ public void testEpisodeCleanupNeverAlg() {\n     @Test\n     public void testEpisodeCleanupClassic() {\n         clickPreference(R.string.downloads_pref);\n-        onView(withText(R.string.pref_automatic_download_title)).perform(click());\n+        onView(withText(R.string.pref_auto_delete_title)).perform(click());\n         onView(withText(R.string.pref_episode_cleanup_title)).perform(click());\n         onView(withText(R.string.episode_cleanup_after_listening)).perform(click());\n         Awaitility.await().atMost(1000, MILLISECONDS)\n@@ -339,7 +342,7 @@ public void testEpisodeCleanupClassic() {\n     @Test\n     public void testEpisodeCleanupNumDays() {\n         clickPreference(R.string.downloads_pref);\n-        clickPreference(R.string.pref_automatic_download_title);\n+        onView(withText(R.string.pref_auto_delete_title)).perform(click());\n         clickPreference(R.string.pref_episode_cleanup_title);\n         String search = res.getQuantityString(R.plurals.episode_cleanup_days_after_listening, 3, 3);\n         onView(withText(search)).perform(scrollTo());\n", "problem_statement": "Improve usability of episode cache / automatic cleanup\n# Checklist\r\n<!-- Place an x in the boxes to tick them: [x] -->\r\n\r\n- [x] I have used the search function to see if someone else has already submitted the same feature request.\r\n- [x] I will only create one feature request per issue.\r\n- [x] I will describe the problem with as much detail as possible.\r\n\r\n# System info\r\n\r\n**App version**: 2.1.1\r\n<!-- The latest version may be different depending on your device. You can find the version in AntennaPod's settings. -->\r\n\r\n**App source**: Google Play\r\n<!-- Please delete irrelevant answer or fill in the blank -->\r\n\r\n# Enhancement description\r\n\r\n**Problem you may be having, or feature you want**: the Episode cache linked to the automatic downloads is useful, but can lead to confusion, as is clear from [this conversation on Twitter](https://twitter.com/tjmcgrew/status/1341939976230080512). We should better guide users in this, and make the feature easier to understand.\r\n<!-- Give a brief explanation about the problem that may currently exist -->\r\n\r\n**Suggested solution**:\r\n<!-- Describe how your requested feature solves this problem. Try to be as specific as possible. Please not only explain what the feature does, but also how. -->\r\n* Rename 'episode cache' to 'Episode storage limit' or 'Episode download limit' (or something like that). 'Cache' is used for two different things in the app, and a rather technical term.\r\n* Show a pop-up to the user when the episode limit is reached for the first time. (Or do we already do this?). The pop-up text showing after hitting the icon in the menu should get the same text. It should read something like:\r\n**Episode storage limit reached**\r\nAntennaPod has download the maximum number of episodes on your device. In the settings you can:\r\n  * increase the limit (under Automatic Download)\r\n  * enable Episode Cleanup (under Automatic Download)\r\n  * enable Auto Delete (under Storage)\r\n* Make the episode limit universal - i.e. not only for automatic but also manual downloads. It could work in a similar fashion as downloading over mobile network, i.e. show a warning when the maximum is reached and let user override when downloading manually.\r\n* Move the episode limit setting under 'Storage', or (if the above isn't implemented) add there a reference to the setting. Storage is where I first checked when replying on Twitter; it's hard to find it currently (even though it makes sense it is under Automatic Downloads).\r\n\r\nRelated to #2990\n", "hints_text": "I think a similar discussion is currently going on in #2495. In general, all the issues of the \"Rework automatic deletion\" milestone are pretty similar.\nThere's a link indeed, but from quickly scanning that issue, it seems more about functional changes to the mechanisms. This issue I feel is more about relatively quick UX fixes. Since the Rework automatic deletion milestone is a rather big one that probably wont be implemented any time soon, at least fixing point 1, 2 & 4 listed here in the next point release would be great.\n> Rename 'episode cache' to 'Episode storage limit' or 'Episode download limit' (or something like that).\r\n\r\n:+1:\r\n\r\n> Move the episode limit setting under 'Storage'\r\n\r\nI would rather wait until the auto delete things are reworked and then create a new settings item for automation.", "created_at": "2024-04-14T09:43:16Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 7060, "instance_id": "AntennaPod__AntennaPod-7060", "issue_numbers": ["4661"], "base_commit": "2143ab135182434911d4554a8ef08115eaa0d2d0", "patch": "diff --git a/app/build.gradle b/app/build.gradle\nindex 449488f587..b96b966778 100644\n--- a/app/build.gradle\n+++ b/app/build.gradle\n@@ -62,7 +62,6 @@ android {\n }\n \n dependencies {\n-    implementation project(\":core\")\n     implementation project(\":event\")\n     implementation project(':model')\n     implementation project(':net:common')\n@@ -91,6 +90,7 @@ dependencies {\n     implementation project(':ui:statistics')\n     implementation project(':net:sync:service-interface')\n     implementation project(':playback:service')\n+    implementation project(':ui:chapters')\n \n     annotationProcessor \"androidx.annotation:annotation:$annotationVersion\"\n     implementation \"androidx.appcompat:appcompat:$appcompatVersion\"\ndiff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml\nindex 3d608133fd..81b809c898 100644\n--- a/app/src/main/AndroidManifest.xml\n+++ b/app/src/main/AndroidManifest.xml\n@@ -4,12 +4,15 @@\n     android:installLocation=\"auto\">\n \n     <uses-permission android:name=\"android.permission.INTERNET\"/>\n-    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"\n-        tools:ignore=\"ScopedStorage\" />\n+    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" tools:ignore=\"ScopedStorage\" />\n     <uses-permission android:name=\"android.permission.WAKE_LOCK\"/>\n     <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\"/>\n     <uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\"/>\n     <uses-permission android:name=\"android.permission.POST_NOTIFICATIONS\"/>\n+    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\n+    <uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" />\n+    <uses-permission android:name=\"android.permission.BLUETOOTH\" />\n+    <uses-permission android:name=\"android.permission.VIBRATE\" />\n \n     <supports-screens\n         android:anyDensity=\"true\"\ndiff --git a/core/src/main/assets/shownotes-style.css b/app/src/main/assets/shownotes-style.css\nsimilarity index 100%\nrename from core/src/main/assets/shownotes-style.css\nrename to app/src/main/assets/shownotes-style.css\ndiff --git a/app/src/main/java/de/danoeh/antennapod/actionbutton/VisitWebsiteActionButton.java b/app/src/main/java/de/danoeh/antennapod/actionbutton/VisitWebsiteActionButton.java\nindex dbe937c140..1c781fee0e 100644\n--- a/app/src/main/java/de/danoeh/antennapod/actionbutton/VisitWebsiteActionButton.java\n+++ b/app/src/main/java/de/danoeh/antennapod/actionbutton/VisitWebsiteActionButton.java\n@@ -6,7 +6,7 @@\n import androidx.annotation.StringRes;\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.model.feed.FeedItem;\n-import de.danoeh.antennapod.core.util.IntentUtils;\n+import de.danoeh.antennapod.ui.common.IntentUtils;\n \n public class VisitWebsiteActionButton extends ItemActionButton {\n \ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/cleaner/ShownotesCleaner.java b/app/src/main/java/de/danoeh/antennapod/ui/cleaner/ShownotesCleaner.java\nindex 57f91e35c9..03ce01d5e4 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/cleaner/ShownotesCleaner.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/cleaner/ShownotesCleaner.java\n@@ -22,7 +22,7 @@\n import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n-import de.danoeh.antennapod.core.R;\n+import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.ui.common.Converter;\n \n /**\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodeItemListAdapter.java b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodeItemListAdapter.java\nindex cb026240a8..34f4739536 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodeItemListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodeItemListAdapter.java\n@@ -16,7 +16,6 @@\n \n import de.danoeh.antennapod.ui.SelectableAdapter;\n import de.danoeh.antennapod.ui.common.ThemeUtils;\n-import org.apache.commons.lang3.ArrayUtils;\n \n import java.lang.ref.WeakReference;\n import java.util.ArrayList;\n@@ -25,7 +24,6 @@\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n import de.danoeh.antennapod.model.feed.FeedItem;\n-import de.danoeh.antennapod.core.util.FeedItemUtil;\n import de.danoeh.antennapod.ui.screen.episode.ItemPagerFragment;\n \n /**\n@@ -90,9 +88,7 @@ public final void onBindViewHolder(EpisodeItemViewHolder holder, int pos) {\n         holder.itemView.setOnClickListener(v -> {\n             MainActivity activity = mainActivityRef.get();\n             if (activity != null && !inActionMode()) {\n-                long[] ids = FeedItemUtil.getIds(episodes);\n-                int position = ArrayUtils.indexOf(ids, item.getId());\n-                activity.loadChildFragment(ItemPagerFragment.newInstance(ids, position));\n+                activity.loadChildFragment(ItemPagerFragment.newInstance(episodes, item));\n             } else {\n                 toggleSelection(holder.getBindingAdapterPosition());\n             }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodesListFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodesListFragment.java\nindex 054183f7c2..90f7cf1e53 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodesListFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/EpisodesListFragment.java\n@@ -36,9 +36,8 @@\n \n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n-import de.danoeh.antennapod.core.util.ConfirmationDialog;\n+import de.danoeh.antennapod.ui.common.ConfirmationDialog;\n import de.danoeh.antennapod.ui.MenuItemUtils;\n-import de.danoeh.antennapod.core.util.FeedItemUtil;\n import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.event.FeedItemEvent;\n import de.danoeh.antennapod.event.FeedListUpdateEvent;\n@@ -334,7 +333,7 @@ public void onEndSelectMode() {\n     public void onEventMainThread(FeedItemEvent event) {\n         Log.d(TAG, \"onEventMainThread() called with: \" + \"event = [\" + event + \"]\");\n         for (FeedItem item : event.items) {\n-            int pos = FeedItemUtil.indexOfItemWithId(episodes, item.getId());\n+            int pos = FeedItemEvent.indexOfItemWithId(episodes, item.getId());\n             if (pos >= 0) {\n                 episodes.remove(pos);\n                 if (getFilter().matches(item)) {\n@@ -378,7 +377,7 @@ public void onKeyUp(KeyEvent event) {\n     @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\n     public void onEventMainThread(EpisodeDownloadEvent event) {\n         for (String downloadUrl : event.getUrls()) {\n-            int pos = FeedItemUtil.indexOfItemWithDownloadUrl(episodes, downloadUrl);\n+            int pos = EpisodeDownloadEvent.indexOfItemWithDownloadUrl(episodes, downloadUrl);\n             if (pos >= 0) {\n                 listAdapter.notifyItemChangedCompat(pos);\n             }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/FeedItemMenuHandler.java b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/FeedItemMenuHandler.java\nindex 12b455d1f8..55f865ef65 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/FeedItemMenuHandler.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/FeedItemMenuHandler.java\n@@ -18,12 +18,10 @@\n import de.danoeh.antennapod.activity.MainActivity;\n import de.danoeh.antennapod.net.sync.serviceinterface.SynchronizationQueueSink;\n import de.danoeh.antennapod.storage.preferences.PlaybackPreferences;\n-import de.danoeh.antennapod.core.util.FeedUtil;\n import de.danoeh.antennapod.playback.service.PlaybackServiceInterface;\n import de.danoeh.antennapod.storage.database.DBWriter;\n import de.danoeh.antennapod.storage.preferences.SynchronizationSettings;\n-import de.danoeh.antennapod.core.util.FeedItemUtil;\n-import de.danoeh.antennapod.core.util.IntentUtils;\n+import de.danoeh.antennapod.ui.common.IntentUtils;\n import de.danoeh.antennapod.playback.service.PlaybackStatus;\n import de.danoeh.antennapod.ui.share.ShareUtils;\n import de.danoeh.antennapod.ui.share.ShareDialog;\n@@ -198,7 +196,7 @@ public static boolean onMenuItemClicked(@NonNull Fragment fragment, int menuItem\n             }\n             DBWriter.markItemPlayed(selectedItem, FeedItem.UNPLAYED, true);\n         } else if (menuItemId == R.id.visit_website_item) {\n-            IntentUtils.openInBrowser(context, FeedItemUtil.getLinkWithFallback(selectedItem));\n+            IntentUtils.openInBrowser(context, selectedItem.getLinkWithFallback());\n         } else if (menuItemId == R.id.share_item) {\n             ShareDialog shareDialog = ShareDialog.newInstance(selectedItem);\n             shareDialog.show((fragment.getActivity().getSupportFragmentManager()), \"ShareEpisodeDialog\");\n@@ -234,7 +232,8 @@ public static void markReadWithUndo(@NonNull Fragment fragment, FeedItem item,\n             if (media == null) {\n                 return;\n             }\n-            boolean shouldAutoDelete = FeedUtil.shouldAutoDeleteItemsOnThatFeed(item.getFeed());\n+            boolean shouldAutoDelete = UserPreferences.isAutoDelete()\n+                    && (!item.getFeed().isLocalFeed() || UserPreferences.isAutoDeleteLocal());\n             int smartMarkAsPlayedSecs = UserPreferences.getSmartMarkAsPlayedSecs();\n             boolean almostEnded = media.getDuration() > 0\n                     && media.getPosition() >= media.getDuration() - smartMarkAsPlayedSecs * 1000;\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/HorizontalItemListAdapter.java b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/HorizontalItemListAdapter.java\nindex f40851ec2b..d4407bf865 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/HorizontalItemListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/HorizontalItemListAdapter.java\n@@ -9,10 +9,8 @@\n import androidx.recyclerview.widget.RecyclerView;\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n-import de.danoeh.antennapod.core.util.FeedItemUtil;\n import de.danoeh.antennapod.ui.screen.episode.ItemPagerFragment;\n import de.danoeh.antennapod.model.feed.FeedItem;\n-import org.apache.commons.lang3.ArrayUtils;\n \n import java.lang.ref.WeakReference;\n import java.util.ArrayList;\n@@ -68,9 +66,7 @@ public void onBindViewHolder(@NonNull HorizontalItemViewHolder holder, int posit\n         holder.card.setOnClickListener(v -> {\n             MainActivity activity = mainActivityRef.get();\n             if (activity != null) {\n-                long[] ids = FeedItemUtil.getIds(data);\n-                int clickPosition = ArrayUtils.indexOf(ids, item.getId());\n-                activity.loadChildFragment(ItemPagerFragment.newInstance(ids, clickPosition));\n+                activity.loadChildFragment(ItemPagerFragment.newInstance(data, item));\n             }\n         });\n     }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/MoreContentListFooterUtil.java b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/MoreContentListFooterUtil.java\nindex fe9ce71f02..d120e5943c 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/MoreContentListFooterUtil.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/episodeslist/MoreContentListFooterUtil.java\n@@ -3,8 +3,7 @@\n import android.view.View;\n import android.widget.ImageView;\n import android.widget.ProgressBar;\n-\n-import de.danoeh.antennapod.core.R;\n+import de.danoeh.antennapod.R;\n \n /**\n  * Utility methods for the more_content_list_footer layout.\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/PlaybackHistoryFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/PlaybackHistoryFragment.java\nindex 4efdf38a3c..a02f86bd21 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/PlaybackHistoryFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/PlaybackHistoryFragment.java\n@@ -8,7 +8,7 @@\n import android.view.ViewGroup;\n import androidx.annotation.NonNull;\n import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.core.util.ConfirmationDialog;\n+import de.danoeh.antennapod.ui.common.ConfirmationDialog;\n import de.danoeh.antennapod.storage.database.DBReader;\n import de.danoeh.antennapod.storage.database.DBWriter;\n import de.danoeh.antennapod.event.playback.PlaybackHistoryEvent;\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/SearchFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/SearchFragment.java\nindex 8e21117b3d..85d837a511 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/SearchFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/SearchFragment.java\n@@ -40,7 +40,6 @@\n import de.danoeh.antennapod.ui.episodeslist.EpisodeMultiSelectActionHandler;\n import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.model.feed.FeedItem;\n-import de.danoeh.antennapod.core.util.FeedItemUtil;\n import de.danoeh.antennapod.ui.episodeslist.FeedItemMenuHandler;\n import de.danoeh.antennapod.net.discovery.CombinedSearcher;\n import de.danoeh.antennapod.storage.database.DBReader;\n@@ -327,7 +326,7 @@ public void onEventMainThread(FeedItemEvent event) {\n         }\n         for (int i = 0, size = event.items.size(); i < size; i++) {\n             FeedItem item = event.items.get(i);\n-            int pos = FeedItemUtil.indexOfItemWithId(results, item.getId());\n+            int pos = FeedItemEvent.indexOfItemWithId(results, item.getId());\n             if (pos >= 0) {\n                 results.remove(pos);\n                 results.add(pos, item);\n@@ -342,7 +341,7 @@ public void onEventMainThread(EpisodeDownloadEvent event) {\n             return;\n         }\n         for (String downloadUrl : event.getUrls()) {\n-            int pos = FeedItemUtil.indexOfItemWithDownloadUrl(results, downloadUrl);\n+            int pos = EpisodeDownloadEvent.indexOfItemWithDownloadUrl(results, downloadUrl);\n             if (pos >= 0) {\n                 adapter.notifyItemChangedCompat(pos);\n             }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/chapter/ChaptersFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/chapter/ChaptersFragment.java\nindex f1dcbf415d..8fea6e209e 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/chapter/ChaptersFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/chapter/ChaptersFragment.java\n@@ -19,13 +19,13 @@\n import androidx.recyclerview.widget.RecyclerView;\n import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.core.util.ChapterUtils;\n import de.danoeh.antennapod.event.playback.PlaybackPositionEvent;\n import de.danoeh.antennapod.model.feed.Chapter;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n import de.danoeh.antennapod.model.playback.Playable;\n import de.danoeh.antennapod.playback.base.PlayerStatus;\n import de.danoeh.antennapod.playback.service.PlaybackController;\n+import de.danoeh.antennapod.ui.chapters.ChapterUtils;\n import io.reactivex.Maybe;\n import io.reactivex.android.schedulers.AndroidSchedulers;\n import io.reactivex.disposables.Disposable;\n@@ -130,7 +130,7 @@ private int getCurrentChapter(Playable media) {\n         if (controller == null) {\n             return -1;\n         }\n-        return ChapterUtils.getCurrentChapterIndex(media, controller.getPosition());\n+        return Chapter.getAfterPosition(media.getChapters(), controller.getPosition());\n     }\n \n     private void loadMediaInfo(boolean forceRefresh) {\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/chapter/ChaptersListAdapter.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/chapter/ChaptersListAdapter.java\nindex 33e55a7e20..bf84b7bd73 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/chapter/ChaptersListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/chapter/ChaptersListAdapter.java\n@@ -19,7 +19,7 @@\n import de.danoeh.antennapod.model.feed.Chapter;\n import de.danoeh.antennapod.ui.common.Converter;\n import de.danoeh.antennapod.model.feed.EmbeddedChapterImage;\n-import de.danoeh.antennapod.core.util.IntentUtils;\n+import de.danoeh.antennapod.ui.common.IntentUtils;\n import de.danoeh.antennapod.model.playback.Playable;\n import de.danoeh.antennapod.ui.common.CircularProgressBar;\n \ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/download/CompletedDownloadsFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/download/CompletedDownloadsFragment.java\nindex 15be1e2307..260f3e6a03 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/download/CompletedDownloadsFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/download/CompletedDownloadsFragment.java\n@@ -23,7 +23,6 @@\n import de.danoeh.antennapod.ui.screen.SearchFragment;\n import de.danoeh.antennapod.net.download.serviceinterface.FeedUpdateManager;\n import de.danoeh.antennapod.storage.database.DBReader;\n-import de.danoeh.antennapod.core.util.FeedItemUtil;\n import de.danoeh.antennapod.ui.screen.feed.ItemSortDialog;\n import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.event.FeedItemEvent;\n@@ -209,7 +208,7 @@ public void onEventMainThread(EpisodeDownloadEvent event) {\n             return; // Refreshed anyway\n         }\n         for (String downloadUrl : event.getUrls()) {\n-            int pos = FeedItemUtil.indexOfItemWithDownloadUrl(items, downloadUrl);\n+            int pos = EpisodeDownloadEvent.indexOfItemWithDownloadUrl(items, downloadUrl);\n             if (pos >= 0) {\n                 adapter.notifyItemChangedCompat(pos);\n             }\n@@ -249,7 +248,7 @@ public void onEventMainThread(FeedItemEvent event) {\n         }\n         for (int i = 0, size = event.items.size(); i < size; i++) {\n             FeedItem item = event.items.get(i);\n-            int pos = FeedItemUtil.indexOfItemWithId(items, item.getId());\n+            int pos = FeedItemEvent.indexOfItemWithId(items, item.getId());\n             if (pos >= 0) {\n                 items.remove(pos);\n                 if (item.getMedia().isDownloaded()) {\n@@ -305,7 +304,7 @@ private void loadItems() {\n                 return downloadedItems;\n             }\n             for (String url : runningDownloads) {\n-                if (FeedItemUtil.indexOfItemWithDownloadUrl(downloadedItems, url) != -1) {\n+                if (EpisodeDownloadEvent.indexOfItemWithDownloadUrl(downloadedItems, url) != -1) {\n                     continue; // Already in list\n                 }\n                 mediaUrls.add(url);\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/download/DownloadErrorLabel.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/download/DownloadErrorLabel.java\nindex e5eedd54b9..7940146dbd 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/download/DownloadErrorLabel.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/download/DownloadErrorLabel.java\n@@ -1,8 +1,8 @@\n package de.danoeh.antennapod.ui.screen.download;\n \n import androidx.annotation.StringRes;\n-import de.danoeh.antennapod.core.BuildConfig;\n-import de.danoeh.antennapod.core.R;\n+import de.danoeh.antennapod.BuildConfig;\n+import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.model.download.DownloadError;\n \n /**\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/drawer/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/drawer/NavDrawerFragment.java\nindex 98690e0cf9..b6580575ab 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/drawer/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/drawer/NavDrawerFragment.java\n@@ -55,7 +55,7 @@\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n import de.danoeh.antennapod.ui.screen.preferences.PreferenceActivity;\n-import de.danoeh.antennapod.core.util.ConfirmationDialog;\n+import de.danoeh.antennapod.ui.common.ConfirmationDialog;\n import de.danoeh.antennapod.ui.MenuItemUtils;\n import de.danoeh.antennapod.storage.database.DBReader;\n import de.danoeh.antennapod.storage.database.DBWriter;\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/episode/ItemPagerFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/episode/ItemPagerFragment.java\nindex 5240665874..e7f3456175 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/episode/ItemPagerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/episode/ItemPagerFragment.java\n@@ -29,6 +29,8 @@\n import io.reactivex.disposables.Disposable;\n import io.reactivex.schedulers.Schedulers;\n \n+import java.util.List;\n+\n /**\n  * Displays information about a list of FeedItems.\n  */\n@@ -41,15 +43,21 @@ public class ItemPagerFragment extends Fragment implements MaterialToolbar.OnMen\n     /**\n      * Creates a new instance of an ItemPagerFragment.\n      *\n-     * @param feeditems   The IDs of the FeedItems that belong to the same list\n-     * @param feedItemPos The position of the FeedItem that is currently shown\n      * @return The ItemFragment instance\n      */\n-    public static ItemPagerFragment newInstance(long[] feeditems, int feedItemPos) {\n+    public static ItemPagerFragment newInstance(List<FeedItem> allItems, FeedItem currentItem) {\n+        int position = 0;\n+        long[] ids = new long[allItems.size()];\n+        for (int i = 0; i < allItems.size(); i++) {\n+            ids[i] = allItems.get(i).getId();\n+            if (ids[i] == currentItem.getId()) {\n+                position = i;\n+            }\n+        }\n         ItemPagerFragment fragment = new ItemPagerFragment();\n         Bundle args = new Bundle();\n-        args.putLongArray(ARG_FEEDITEMS, feeditems);\n-        args.putInt(ARG_FEEDITEM_POS, Math.max(0, feedItemPos));\n+        args.putLongArray(ARG_FEEDITEMS, ids);\n+        args.putInt(ARG_FEEDITEM_POS, position);\n         fragment.setArguments(args);\n         return fragment;\n     }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedInfoFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedInfoFragment.java\nindex 3e7fd3cdc9..929a68ffff 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedInfoFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedInfoFragment.java\n@@ -37,7 +37,7 @@\n import de.danoeh.antennapod.ui.TransitionEffect;\n import de.danoeh.antennapod.storage.database.DBReader;\n import de.danoeh.antennapod.storage.database.FeedDatabaseWriter;\n-import de.danoeh.antennapod.core.util.IntentUtils;\n+import de.danoeh.antennapod.ui.common.IntentUtils;\n import de.danoeh.antennapod.ui.share.ShareUtils;\n import de.danoeh.antennapod.ui.cleaner.HtmlToPlainText;\n import de.danoeh.antennapod.model.feed.Feed;\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedItemFilterGroup.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedItemFilterGroup.java\nindex 5cb0f36fd9..b19d680daf 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedItemFilterGroup.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedItemFilterGroup.java\n@@ -1,6 +1,6 @@\n package de.danoeh.antennapod.ui.screen.feed;\n \n-import de.danoeh.antennapod.core.R;\n+import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.model.feed.FeedItemFilter;\n \n public enum FeedItemFilterGroup {\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedItemlistFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedItemlistFragment.java\nindex 7743f1cd9d..b4a2556d1d 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedItemlistFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/FeedItemlistFragment.java\n@@ -50,8 +50,7 @@\n import de.danoeh.antennapod.storage.database.DBReader;\n import de.danoeh.antennapod.storage.database.DBWriter;\n import de.danoeh.antennapod.storage.database.FeedItemPermutors;\n-import de.danoeh.antennapod.core.util.FeedItemUtil;\n-import de.danoeh.antennapod.core.util.IntentUtils;\n+import de.danoeh.antennapod.ui.common.IntentUtils;\n import de.danoeh.antennapod.ui.share.ShareUtils;\n import de.danoeh.antennapod.ui.episodeslist.MoreContentListFooterUtil;\n import de.danoeh.antennapod.databinding.FeedItemListFragmentBinding;\n@@ -321,8 +320,7 @@ public boolean onContextItemSelected(@NonNull MenuItem item) {\n     @Override\n     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n         MainActivity activity = (MainActivity) getActivity();\n-        long[] ids = FeedItemUtil.getIds(feed.getItems());\n-        activity.loadChildFragment(ItemPagerFragment.newInstance(ids, position));\n+        activity.loadChildFragment(ItemPagerFragment.newInstance(feed.getItems(), feed.getItems().get(position)));\n     }\n \n     @Subscribe(threadMode = ThreadMode.MAIN)\n@@ -341,7 +339,7 @@ public void onEventMainThread(FeedItemEvent event) {\n         }\n         for (int i = 0, size = event.items.size(); i < size; i++) {\n             FeedItem item = event.items.get(i);\n-            int pos = FeedItemUtil.indexOfItemWithId(feed.getItems(), item.getId());\n+            int pos = FeedItemEvent.indexOfItemWithId(feed.getItems(), item.getId());\n             if (pos >= 0) {\n                 feed.getItems().remove(pos);\n                 feed.getItems().add(pos, item);\n@@ -356,7 +354,7 @@ public void onEventMainThread(EpisodeDownloadEvent event) {\n             return;\n         }\n         for (String downloadUrl : event.getUrls()) {\n-            int pos = FeedItemUtil.indexOfItemWithDownloadUrl(feed.getItems(), downloadUrl);\n+            int pos = EpisodeDownloadEvent.indexOfItemWithDownloadUrl(feed.getItems(), downloadUrl);\n             if (pos >= 0) {\n                 adapter.notifyItemChangedCompat(pos);\n             }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/RemoveFeedDialog.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/RemoveFeedDialog.java\nindex 415948a818..52bb36867c 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/RemoveFeedDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/RemoveFeedDialog.java\n@@ -11,7 +11,7 @@\n import java.util.List;\n \n import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.core.util.ConfirmationDialog;\n+import de.danoeh.antennapod.ui.common.ConfirmationDialog;\n import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.storage.database.DBWriter;\n import io.reactivex.Completable;\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/RenameFeedDialog.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/RenameFeedDialog.java\nindex 4bc63f732e..a2c2caaaff 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/RenameFeedDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/feed/RenameFeedDialog.java\n@@ -54,8 +54,8 @@ public void show() {\n                         renameTag(newTitle);\n                     }\n                 })\n-                .setNeutralButton(de.danoeh.antennapod.core.R.string.reset, null)\n-                .setNegativeButton(de.danoeh.antennapod.core.R.string.cancel_label, null)\n+                .setNeutralButton(R.string.reset, null)\n+                .setNegativeButton(R.string.cancel_label, null)\n                 .show();\n \n         // To prevent cancelling the dialog on button click\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/EpisodesSurpriseSection.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/EpisodesSurpriseSection.java\nindex 451a0aedc2..09f060f814 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/EpisodesSurpriseSection.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/EpisodesSurpriseSection.java\n@@ -15,7 +15,6 @@\n import de.danoeh.antennapod.ui.episodeslist.HorizontalItemListAdapter;\n import de.danoeh.antennapod.ui.MenuItemUtils;\n import de.danoeh.antennapod.storage.database.DBReader;\n-import de.danoeh.antennapod.core.util.FeedItemUtil;\n import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.event.FeedItemEvent;\n import de.danoeh.antennapod.event.PlayerStatusEvent;\n@@ -105,7 +104,7 @@ public void onEventMainThread(FeedItemEvent event) {\n         Log.d(TAG, \"onEventMainThread() called with: \" + \"event = [\" + event + \"]\");\n         for (int i = 0, size = event.items.size(); i < size; i++) {\n             FeedItem item = event.items.get(i);\n-            int pos = FeedItemUtil.indexOfItemWithId(episodes, item.getId());\n+            int pos = FeedItemEvent.indexOfItemWithId(episodes, item.getId());\n             if (pos >= 0) {\n                 episodes.remove(pos);\n                 episodes.add(pos, item);\n@@ -117,7 +116,7 @@ public void onEventMainThread(FeedItemEvent event) {\n     @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\n     public void onEventMainThread(EpisodeDownloadEvent event) {\n         for (String downloadUrl : event.getUrls()) {\n-            int pos = FeedItemUtil.indexOfItemWithDownloadUrl(episodes, downloadUrl);\n+            int pos = EpisodeDownloadEvent.indexOfItemWithDownloadUrl(episodes, downloadUrl);\n             if (pos >= 0) {\n                 listAdapter.notifyItemChangedCompat(pos);\n             }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/InboxSection.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/InboxSection.java\nindex de6f6bef4f..d30fa85bce 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/InboxSection.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/InboxSection.java\n@@ -16,7 +16,6 @@\n import de.danoeh.antennapod.ui.episodeslist.EpisodeItemListAdapter;\n import de.danoeh.antennapod.ui.MenuItemUtils;\n import de.danoeh.antennapod.storage.database.DBReader;\n-import de.danoeh.antennapod.core.util.FeedItemUtil;\n import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.event.FeedItemEvent;\n import de.danoeh.antennapod.event.FeedListUpdateEvent;\n@@ -99,7 +98,7 @@ public void onFeedListChanged(FeedListUpdateEvent event) {\n     @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\n     public void onEventMainThread(EpisodeDownloadEvent event) {\n         for (String downloadUrl : event.getUrls()) {\n-            int pos = FeedItemUtil.indexOfItemWithDownloadUrl(items, downloadUrl);\n+            int pos = EpisodeDownloadEvent.indexOfItemWithDownloadUrl(items, downloadUrl);\n             if (pos >= 0) {\n                 adapter.notifyItemChangedCompat(pos);\n             }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/QueueSection.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/QueueSection.java\nindex 57d896ae9e..7909924209 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/QueueSection.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/home/sections/QueueSection.java\n@@ -15,7 +15,6 @@\n import de.danoeh.antennapod.ui.episodeslist.HorizontalItemListAdapter;\n import de.danoeh.antennapod.ui.MenuItemUtils;\n import de.danoeh.antennapod.storage.database.DBReader;\n-import de.danoeh.antennapod.core.util.FeedItemUtil;\n import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.event.FeedItemEvent;\n import de.danoeh.antennapod.event.PlayerStatusEvent;\n@@ -92,7 +91,7 @@ public void onEventMainThread(FeedItemEvent event) {\n         }\n         for (int i = 0, size = event.items.size(); i < size; i++) {\n             FeedItem item = event.items.get(i);\n-            int pos = FeedItemUtil.indexOfItemWithId(queue, item.getId());\n+            int pos = FeedItemEvent.indexOfItemWithId(queue, item.getId());\n             if (pos >= 0) {\n                 queue.remove(pos);\n                 queue.add(pos, item);\n@@ -104,7 +103,7 @@ public void onEventMainThread(FeedItemEvent event) {\n     @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\n     public void onEventMainThread(EpisodeDownloadEvent event) {\n         for (String downloadUrl : event.getUrls()) {\n-            int pos = FeedItemUtil.indexOfItemWithDownloadUrl(queue, downloadUrl);\n+            int pos = EpisodeDownloadEvent.indexOfItemWithDownloadUrl(queue, downloadUrl);\n             if (pos >= 0) {\n                 listAdapter.notifyItemChangedCompat(pos);\n             }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/onlinefeedview/OnlineFeedViewActivity.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/onlinefeedview/OnlineFeedViewActivity.java\nindex 42050e7184..799366ecb3 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/onlinefeedview/OnlineFeedViewActivity.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/onlinefeedview/OnlineFeedViewActivity.java\n@@ -54,7 +54,7 @@\n import de.danoeh.antennapod.parser.feed.FeedHandler;\n import de.danoeh.antennapod.parser.feed.FeedHandlerResult;\n import de.danoeh.antennapod.model.download.DownloadError;\n-import de.danoeh.antennapod.core.util.IntentUtils;\n+import de.danoeh.antennapod.ui.common.IntentUtils;\n import de.danoeh.antennapod.net.common.UrlChecker;\n import de.danoeh.antennapod.ui.cleaner.HtmlToPlainText;\n import de.danoeh.antennapod.databinding.OnlinefeedviewActivityBinding;\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/AudioPlayerFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/AudioPlayerFragment.java\nindex 5e1f5c818d..e66ed6d3ea 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/AudioPlayerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/AudioPlayerFragment.java\n@@ -27,6 +27,7 @@\n \n import de.danoeh.antennapod.playback.service.PlaybackController;\n import de.danoeh.antennapod.ui.appstartintent.MediaButtonStarter;\n+import de.danoeh.antennapod.ui.chapters.ChapterUtils;\n import de.danoeh.antennapod.ui.episodes.PlaybackSpeedUtils;\n import de.danoeh.antennapod.ui.episodes.TimeSpeedConverter;\n import de.danoeh.antennapod.ui.screen.playback.MediaPlayerErrorDialog;\n@@ -43,7 +44,6 @@\n \n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n-import de.danoeh.antennapod.core.util.ChapterUtils;\n import de.danoeh.antennapod.ui.common.Converter;\n import de.danoeh.antennapod.ui.screen.feed.preferences.SkipPreferenceDialog;\n import de.danoeh.antennapod.event.FavoritesEvent;\n@@ -360,7 +360,7 @@ public void updatePosition(PlaybackPositionEvent event) {\n         int currentPosition = converter.convert(event.getPosition());\n         int duration = converter.convert(event.getDuration());\n         int remainingTime = converter.convert(Math.max(event.getDuration() - event.getPosition(), 0));\n-        currentChapterIndex = ChapterUtils.getCurrentChapterIndex(controller.getMedia(), currentPosition);\n+        currentChapterIndex = Chapter.getAfterPosition(controller.getMedia().getChapters(), currentPosition);\n         Log.d(TAG, \"currentPosition \" + Converter.getDurationStringLong(currentPosition));\n         if (currentPosition == Playable.INVALID_TIME || duration == Playable.INVALID_TIME) {\n             Log.w(TAG, \"Could not react to position observer update because of invalid time\");\n@@ -406,7 +406,7 @@ public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n             float prog = progress / ((float) seekBar.getMax());\n             TimeSpeedConverter converter = new TimeSpeedConverter(controller.getCurrentPlaybackSpeedMultiplier());\n             int position = converter.convert((int) (prog * controller.getDuration()));\n-            int newChapterIndex = ChapterUtils.getCurrentChapterIndex(controller.getMedia(), position);\n+            int newChapterIndex = Chapter.getAfterPosition(controller.getMedia().getChapters(), position);\n             if (newChapterIndex > -1) {\n                 if (!sbPosition.isPressed() && currentChapterIndex != newChapterIndex) {\n                     currentChapterIndex = newChapterIndex;\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/CoverFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/CoverFragment.java\nindex 05e6f3d6cc..57794b4109 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/CoverFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/audio/CoverFragment.java\n@@ -32,7 +32,7 @@\n import com.google.android.material.snackbar.Snackbar;\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n-import de.danoeh.antennapod.core.util.ChapterUtils;\n+import de.danoeh.antennapod.ui.chapters.ChapterUtils;\n import de.danoeh.antennapod.ui.screen.chapter.ChaptersFragment;\n import de.danoeh.antennapod.playback.service.PlaybackController;\n import de.danoeh.antennapod.ui.common.DateFormatter;\n@@ -160,7 +160,7 @@ public void onAnimationEnd(Animator animation) {\n         });\n         \n         displayedChapterIndex = -1;\n-        refreshChapterData(ChapterUtils.getCurrentChapterIndex(media, media.getPosition())); //calls displayCoverImage\n+        refreshChapterData(Chapter.getAfterPosition(media.getChapters(), media.getPosition()));\n         updateChapterControlVisibility();\n     }\n \n@@ -261,7 +261,7 @@ public void onStop() {\n \n     @Subscribe(threadMode = ThreadMode.MAIN)\n     public void onEventMainThread(PlaybackPositionEvent event) {\n-        int newChapterIndex = ChapterUtils.getCurrentChapterIndex(media, event.getPosition());\n+        int newChapterIndex = Chapter.getAfterPosition(media.getChapters(), event.getPosition());\n         if (newChapterIndex > -1 && newChapterIndex != displayedChapterIndex) {\n             refreshChapterData(newChapterIndex);\n         }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/video/VideoplayerActivity.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/video/VideoplayerActivity.java\nindex 2a0746f542..d5289d8d24 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/video/VideoplayerActivity.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/playback/video/VideoplayerActivity.java\n@@ -48,8 +48,7 @@\n import de.danoeh.antennapod.storage.database.DBReader;\n import de.danoeh.antennapod.storage.database.DBWriter;\n import de.danoeh.antennapod.ui.common.Converter;\n-import de.danoeh.antennapod.core.util.FeedItemUtil;\n-import de.danoeh.antennapod.core.util.IntentUtils;\n+import de.danoeh.antennapod.ui.common.IntentUtils;\n import de.danoeh.antennapod.ui.share.ShareUtils;\n import de.danoeh.antennapod.databinding.VideoplayerActivityBinding;\n import de.danoeh.antennapod.ui.share.ShareDialog;\n@@ -636,7 +635,7 @@ private static String getWebsiteLinkWithFallback(Playable media) {\n         } else if (StringUtils.isNotBlank(media.getWebsiteLink())) {\n             return media.getWebsiteLink();\n         } else if (media instanceof FeedMedia) {\n-            return FeedItemUtil.getLinkWithFallback(((FeedMedia) media).getItem());\n+            return (((FeedMedia) media).getItem()).getLinkWithFallback();\n         }\n         return null;\n     }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/BugReportActivity.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/BugReportActivity.java\nindex b4a5218eeb..5e9de47036 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/BugReportActivity.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/BugReportActivity.java\n@@ -25,7 +25,7 @@\n import de.danoeh.antennapod.CrashReportWriter;\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n-import de.danoeh.antennapod.core.util.IntentUtils;\n+import de.danoeh.antennapod.ui.common.IntentUtils;\n import org.apache.commons.io.IOUtils;\n \n import java.io.File;\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/MainPreferencesFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/MainPreferencesFragment.java\nindex 40a9dd6051..7c036974b5 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/MainPreferencesFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/preferences/MainPreferencesFragment.java\n@@ -13,7 +13,7 @@\n import com.bytehamster.lib.preferencesearch.SearchPreference;\n \n import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.core.util.IntentUtils;\n+import de.danoeh.antennapod.ui.common.IntentUtils;\n import de.danoeh.antennapod.ui.preferences.screen.about.AboutFragment;\n \n public class MainPreferencesFragment extends PreferenceFragmentCompat {\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/queue/QueueFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/queue/QueueFragment.java\nindex 31fedda1d8..471d4f17db 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/queue/QueueFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/queue/QueueFragment.java\n@@ -40,12 +40,11 @@\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n import de.danoeh.antennapod.ui.episodeslist.EpisodeItemListAdapter;\n-import de.danoeh.antennapod.core.util.ConfirmationDialog;\n+import de.danoeh.antennapod.ui.common.ConfirmationDialog;\n import de.danoeh.antennapod.ui.MenuItemUtils;\n import de.danoeh.antennapod.storage.database.DBReader;\n import de.danoeh.antennapod.storage.database.DBWriter;\n import de.danoeh.antennapod.ui.common.Converter;\n-import de.danoeh.antennapod.core.util.FeedItemUtil;\n import de.danoeh.antennapod.ui.screen.feed.ItemSortDialog;\n import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.event.FeedItemEvent;\n@@ -150,7 +149,7 @@ public void onEventMainThread(QueueEvent event) {\n                 break;\n             case REMOVED:\n             case IRREVERSIBLE_REMOVED:\n-                int position = FeedItemUtil.indexOfItemWithId(queue, event.item.getId());\n+                int position = FeedItemEvent.indexOfItemWithId(queue, event.item.getId());\n                 queue.remove(position);\n                 recyclerAdapter.notifyItemRemoved(position);\n                 break;\n@@ -178,7 +177,7 @@ public void onEventMainThread(FeedItemEvent event) {\n         }\n         for (int i = 0, size = event.items.size(); i < size; i++) {\n             FeedItem item = event.items.get(i);\n-            int pos = FeedItemUtil.indexOfItemWithId(queue, item.getId());\n+            int pos = FeedItemEvent.indexOfItemWithId(queue, item.getId());\n             if (pos >= 0) {\n                 queue.remove(pos);\n                 queue.add(pos, item);\n@@ -194,7 +193,7 @@ public void onEventMainThread(EpisodeDownloadEvent event) {\n             return;\n         }\n         for (String downloadUrl : event.getUrls()) {\n-            int pos = FeedItemUtil.indexOfItemWithDownloadUrl(queue, downloadUrl);\n+            int pos = EpisodeDownloadEvent.indexOfItemWithDownloadUrl(queue, downloadUrl);\n             if (pos >= 0) {\n                 recyclerAdapter.notifyItemChangedCompat(pos);\n             }\n@@ -357,7 +356,7 @@ public boolean onContextItemSelected(MenuItem item) {\n             return super.onContextItemSelected(item);\n         }\n \n-        int position = FeedItemUtil.indexOfItemWithId(queue, selectedItem.getId());\n+        int position = FeedItemEvent.indexOfItemWithId(queue, selectedItem.getId());\n         if (position < 0) {\n             Log.i(TAG, \"Selected item no longer exist, ignoring selection\");\n             return super.onContextItemSelected(item);\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/rating/RatingDialogFragment.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/rating/RatingDialogFragment.java\nindex 9adf885b1e..f0dedb13ee 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/rating/RatingDialogFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/rating/RatingDialogFragment.java\n@@ -12,7 +12,7 @@\n import androidx.fragment.app.DialogFragment;\n import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.core.util.IntentUtils;\n+import de.danoeh.antennapod.ui.common.IntentUtils;\n import de.danoeh.antennapod.databinding.RatingDialogBinding;\n import de.danoeh.antennapod.ui.common.DateFormatter;\n \ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/rating/RatingDialogManager.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/rating/RatingDialogManager.java\nindex edba0ec833..89a984e42c 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/rating/RatingDialogManager.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/rating/RatingDialogManager.java\n@@ -7,7 +7,7 @@\n \n import android.util.Log;\n import androidx.fragment.app.FragmentActivity;\n-import de.danoeh.antennapod.core.BuildConfig;\n+import de.danoeh.antennapod.BuildConfig;\n import de.danoeh.antennapod.storage.database.DBReader;\n import de.danoeh.antennapod.storage.database.StatisticsItem;\n import io.reactivex.Observable;\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/subscriptions/FeedMenuHandler.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/subscriptions/FeedMenuHandler.java\nindex e1e9f22870..f5761020c9 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/subscriptions/FeedMenuHandler.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/subscriptions/FeedMenuHandler.java\n@@ -7,7 +7,7 @@\n import androidx.annotation.NonNull;\n import androidx.fragment.app.Fragment;\n import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.core.util.ConfirmationDialog;\n+import de.danoeh.antennapod.ui.common.ConfirmationDialog;\n import de.danoeh.antennapod.storage.database.DBWriter;\n import de.danoeh.antennapod.ui.screen.feed.RemoveFeedDialog;\n import de.danoeh.antennapod.ui.screen.feed.RenameFeedDialog;\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/screen/subscriptions/SubscriptionsFilterGroup.java b/app/src/main/java/de/danoeh/antennapod/ui/screen/subscriptions/SubscriptionsFilterGroup.java\nindex 41dce16f07..d952d610ff 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/screen/subscriptions/SubscriptionsFilterGroup.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/screen/subscriptions/SubscriptionsFilterGroup.java\n@@ -1,6 +1,6 @@\n package de.danoeh.antennapod.ui.screen.subscriptions;\n \n-import de.danoeh.antennapod.core.R;\n+import de.danoeh.antennapod.R;\n \n public enum SubscriptionsFilterGroup {\n     COUNTER_GREATER_ZERO(new ItemProperties(R.string.subscriptions_counter_greater_zero, \"counter_greater_zero\")),\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/share/ShareUtils.java b/app/src/main/java/de/danoeh/antennapod/ui/share/ShareUtils.java\nindex 77d5f43052..7b685f8bc8 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/share/ShareUtils.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/share/ShareUtils.java\n@@ -9,12 +9,11 @@\n import androidx.core.app.ShareCompat;\n import androidx.core.content.FileProvider;\n \n-import de.danoeh.antennapod.core.util.FeedItemUtil;\n import de.danoeh.antennapod.ui.common.Converter;\n import java.io.File;\n import java.net.URLEncoder;\n \n-import de.danoeh.antennapod.core.R;\n+import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n@@ -46,7 +45,7 @@ public static void shareFeedLink(Context context, Feed feed) {\n     }\n \n     public static boolean hasLinkToShare(FeedItem item) {\n-        return FeedItemUtil.getLinkWithFallback(item) != null;\n+        return item.getLinkWithFallback() != null;\n     }\n \n     public static void shareMediaDownloadLink(Context context, FeedMedia media) {\n@@ -64,7 +63,7 @@ public static void shareFeedItemLinkWithDownloadLink(Context context, FeedItem i\n \n         if (hasLinkToShare(item)) {\n             text +=  \"\\n\\n\" + context.getResources().getString(R.string.share_dialog_episode_website_label) + \": \";\n-            text += FeedItemUtil.getLinkWithFallback(item);\n+            text += item.getLinkWithFallback();\n         }\n \n         if (item.getMedia() != null && item.getMedia().getDownloadUrl() != null) {\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/view/ShownotesWebView.java b/app/src/main/java/de/danoeh/antennapod/ui/view/ShownotesWebView.java\nindex 67a659418f..ae8654e830 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/view/ShownotesWebView.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/view/ShownotesWebView.java\n@@ -26,7 +26,7 @@\n import de.danoeh.antennapod.activity.MainActivity;\n import de.danoeh.antennapod.ui.MenuItemUtils;\n import de.danoeh.antennapod.ui.common.Converter;\n-import de.danoeh.antennapod.core.util.IntentUtils;\n+import de.danoeh.antennapod.ui.common.IntentUtils;\n import de.danoeh.antennapod.net.common.NetworkUtils;\n import de.danoeh.antennapod.ui.share.ShareUtils;\n import de.danoeh.antennapod.ui.cleaner.ShownotesCleaner;\ndiff --git a/core/src/main/res/drawable-anydpi-v26/ic_shortcut_feed.xml b/app/src/main/res/drawable-anydpi-v26/ic_shortcut_feed.xml\nsimilarity index 100%\nrename from core/src/main/res/drawable-anydpi-v26/ic_shortcut_feed.xml\nrename to app/src/main/res/drawable-anydpi-v26/ic_shortcut_feed.xml\ndiff --git a/core/src/main/res/drawable-anydpi-v26/ic_shortcut_playlist.xml b/app/src/main/res/drawable-anydpi-v26/ic_shortcut_playlist.xml\nsimilarity index 100%\nrename from core/src/main/res/drawable-anydpi-v26/ic_shortcut_playlist.xml\nrename to app/src/main/res/drawable-anydpi-v26/ic_shortcut_playlist.xml\ndiff --git a/core/src/main/res/drawable-anydpi-v26/ic_shortcut_refresh.xml b/app/src/main/res/drawable-anydpi-v26/ic_shortcut_refresh.xml\nsimilarity index 100%\nrename from core/src/main/res/drawable-anydpi-v26/ic_shortcut_refresh.xml\nrename to app/src/main/res/drawable-anydpi-v26/ic_shortcut_refresh.xml\ndiff --git a/core/src/main/res/drawable-anydpi-v26/ic_shortcut_subscriptions.xml b/app/src/main/res/drawable-anydpi-v26/ic_shortcut_subscriptions.xml\nsimilarity index 100%\nrename from core/src/main/res/drawable-anydpi-v26/ic_shortcut_subscriptions.xml\nrename to app/src/main/res/drawable-anydpi-v26/ic_shortcut_subscriptions.xml\ndiff --git a/core/src/main/res/drawable/ic_shortcut_feed.xml b/app/src/main/res/drawable/ic_shortcut_feed.xml\nsimilarity index 100%\nrename from core/src/main/res/drawable/ic_shortcut_feed.xml\nrename to app/src/main/res/drawable/ic_shortcut_feed.xml\ndiff --git a/core/src/main/res/drawable/ic_shortcut_playlist.xml b/app/src/main/res/drawable/ic_shortcut_playlist.xml\nsimilarity index 100%\nrename from core/src/main/res/drawable/ic_shortcut_playlist.xml\nrename to app/src/main/res/drawable/ic_shortcut_playlist.xml\ndiff --git a/core/src/main/res/drawable/ic_shortcut_refresh.xml b/app/src/main/res/drawable/ic_shortcut_refresh.xml\nsimilarity index 100%\nrename from core/src/main/res/drawable/ic_shortcut_refresh.xml\nrename to app/src/main/res/drawable/ic_shortcut_refresh.xml\ndiff --git a/core/src/main/res/drawable/ic_shortcut_subscriptions.xml b/app/src/main/res/drawable/ic_shortcut_subscriptions.xml\nsimilarity index 100%\nrename from core/src/main/res/drawable/ic_shortcut_subscriptions.xml\nrename to app/src/main/res/drawable/ic_shortcut_subscriptions.xml\ndiff --git a/core/src/main/res/layout/more_content_list_footer.xml b/app/src/main/res/layout/more_content_list_footer.xml\nsimilarity index 100%\nrename from core/src/main/res/layout/more_content_list_footer.xml\nrename to app/src/main/res/layout/more_content_list_footer.xml\ndiff --git a/core/src/main/res/layout/popup_bubble_view.xml b/app/src/main/res/layout/popup_bubble_view.xml\nsimilarity index 100%\nrename from core/src/main/res/layout/popup_bubble_view.xml\nrename to app/src/main/res/layout/popup_bubble_view.xml\ndiff --git a/core/src/main/res/values/ids.xml b/app/src/main/res/values/ids.xml\nsimilarity index 100%\nrename from core/src/main/res/values/ids.xml\nrename to app/src/main/res/values/ids.xml\ndiff --git a/core/.gitignore b/core/.gitignore\ndeleted file mode 100644\nindex 796b96d1c4..0000000000\n--- a/core/.gitignore\n+++ /dev/null\n@@ -1,1 +0,0 @@\n-/build\ndiff --git a/core/build.gradle b/core/build.gradle\ndeleted file mode 100644\nindex ad0ad1e3b0..0000000000\n--- a/core/build.gradle\n+++ /dev/null\n@@ -1,65 +0,0 @@\n-plugins {\n-    id(\"com.android.library\")\n-}\n-apply from: \"../common.gradle\"\n-apply from: \"../playFlavor.gradle\"\n-\n-android {\n-    namespace \"de.danoeh.antennapod.core\"\n-\n-    lint {\n-        disable \"InvalidPeriodicWorkRequestInterval\", \"ObsoleteLintCustomCheck\", \"DefaultLocale\", \"UnusedAttribute\",\n-                \"ParcelClassLoader\", \"CheckResult\", \"TrustAllX509TrustManager\",\n-                \"StaticFieldLeak\", \"IconDensities\", \"IconDuplicates\", \"UnsafeOptInUsageError\"\n-    }\n-\n-    defaultConfig {\n-        javaCompileOptions {\n-            annotationProcessorOptions {\n-                arguments = [eventBusIndex: 'de.danoeh.antennapod.core.ApCoreEventBusIndex']\n-            }\n-        }\n-    }\n-}\n-\n-dependencies {\n-    implementation project(':model')\n-    implementation project(':net:common')\n-    implementation project(':net:download:service-interface')\n-    implementation project(':parser:feed')\n-    implementation project(':parser:media')\n-    implementation project(':storage:preferences')\n-    implementation project(':storage:database')\n-    implementation project(':ui:common')\n-\n-    annotationProcessor \"androidx.annotation:annotation:$annotationVersion\"\n-    implementation \"androidx.appcompat:appcompat:$appcompatVersion\"\n-    implementation \"androidx.core:core:$coreVersion\"\n-    implementation 'androidx.documentfile:documentfile:1.0.1'\n-    implementation \"androidx.fragment:fragment:$fragmentVersion\"\n-    implementation \"androidx.preference:preference:$preferenceVersion\"\n-    implementation \"androidx.work:work-runtime:$workManagerVersion\"\n-    implementation \"com.google.android.material:material:$googleMaterialVersion\"\n-\n-    implementation \"org.apache.commons:commons-lang3:$commonslangVersion\"\n-    implementation \"commons-io:commons-io:$commonsioVersion\"\n-    implementation \"org.jsoup:jsoup:$jsoupVersion\"\n-    implementation \"com.github.bumptech.glide:glide:$glideVersion\"\n-    implementation \"com.github.bumptech.glide:okhttp3-integration:$glideVersion@aar\"\n-    implementation \"com.squareup.okhttp3:okhttp:$okhttpVersion\"\n-    implementation \"com.squareup.okhttp3:okhttp-urlconnection:$okhttpVersion\"\n-    implementation \"org.greenrobot:eventbus:$eventbusVersion\"\n-    annotationProcessor \"org.greenrobot:eventbus-annotation-processor:$eventbusVersion\"\n-    implementation \"io.reactivex.rxjava2:rxandroid:$rxAndroidVersion\"\n-    implementation \"io.reactivex.rxjava2:rxjava:$rxJavaVersion\"\n-\n-    testImplementation \"androidx.test:core:$testCoreVersion\"\n-    testImplementation \"org.awaitility:awaitility:$awaitilityVersion\"\n-    testImplementation \"junit:junit:$junitVersion\"\n-    testImplementation \"org.mockito:mockito-core:$mockitoVersion\"\n-    testImplementation \"org.robolectric:robolectric:$robolectricVersion\"\n-    testImplementation 'javax.inject:javax.inject:1'\n-    androidTestImplementation \"androidx.test.espresso:espresso-core:$espressoVersion\"\n-    androidTestImplementation \"androidx.test:runner:$runnerVersion\"\n-    androidTestImplementation \"androidx.test:rules:$rulesVersion\"\n-}\ndiff --git a/core/lint.xml b/core/lint.xml\ndeleted file mode 100644\nindex f3cb248102..0000000000\n--- a/core/lint.xml\n+++ /dev/null\n@@ -1,7 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<lint>\n-    <issue id=\"VectorPath\">\n-        <ignore path=\"res/drawable/ic_settings.xml\" />\n-        <ignore path=\"res/drawable/ic_settings_white.xml\" />\n-    </issue>\n-</lint>\ndiff --git a/core/src/main/AndroidManifest.xml b/core/src/main/AndroidManifest.xml\ndeleted file mode 100644\nindex 73c47d6368..0000000000\n--- a/core/src/main/AndroidManifest.xml\n+++ /dev/null\n@@ -1,15 +0,0 @@\n-<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-    xmlns:tools=\"http://schemas.android.com/tools\">\n-\n-    <uses-permission android:name=\"android.permission.INTERNET\" />\n-    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"\n-        tools:ignore=\"ScopedStorage\" />\n-    <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\n-    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n-    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\n-    <uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" />\n-    <uses-permission android:name=\"android.permission.BLUETOOTH\" />\n-    <uses-permission android:name=\"android.permission.VIBRATE\" />\n-    <uses-permission android:name=\"android.permission.POST_NOTIFICATIONS\" />\n-\n-</manifest>\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/util/FeedItemUtil.java b/core/src/main/java/de/danoeh/antennapod/core/util/FeedItemUtil.java\ndeleted file mode 100644\nindex db8a335765..0000000000\n--- a/core/src/main/java/de/danoeh/antennapod/core/util/FeedItemUtil.java\n+++ /dev/null\n@@ -1,69 +0,0 @@\n-package de.danoeh.antennapod.core.util;\n-\n-import androidx.annotation.NonNull;\n-\n-import org.apache.commons.lang3.StringUtils;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-import de.danoeh.antennapod.model.feed.FeedItem;\n-\n-public class FeedItemUtil {\n-    private FeedItemUtil(){}\n-\n-    public static int indexOfItemWithId(List<FeedItem> items, long id) {\n-        for(int i=0; i < items.size(); i++) {\n-            FeedItem item = items.get(i);\n-            if(item != null && item.getId() == id) {\n-                return i;\n-            }\n-        }\n-        return -1;\n-    }\n-\n-    public static int indexOfItemWithDownloadUrl(List<FeedItem> items, String downloadUrl) {\n-        for (int i = 0; i < items.size(); i++) {\n-            FeedItem item = items.get(i);\n-            if (item != null && item.getMedia() != null && item.getMedia().getDownloadUrl().equals(downloadUrl)) {\n-                return i;\n-            }\n-        }\n-        return -1;\n-    }\n-\n-    public static long[] getIds(List<FeedItem> items) {\n-        if(items == null || items.size() == 0) {\n-            return new long[0];\n-        }\n-        long[] result = new long[items.size()];\n-        for(int i=0; i < items.size(); i++) {\n-            result[i] = items.get(i).getId();\n-        }\n-        return result;\n-    }\n-\n-    @NonNull\n-    public static List<Long> getIdList(List<? extends FeedItem> items) {\n-        List<Long> result = new ArrayList<>();\n-        for (FeedItem item : items) {\n-            result.add(item.getId());\n-        }\n-        return result;\n-    }\n-\n-    /**\n-     * Get the link for the feed item for the purpose of Share. It fallbacks to\n-     * use the feed's link if the named feed item has no link.\n-     */\n-    public static String getLinkWithFallback(FeedItem item) {\n-        if (item == null) {\n-            return null;\n-        } else if (StringUtils.isNotBlank(item.getLink())) {\n-            return item.getLink();\n-        } else if (StringUtils.isNotBlank(item.getFeed().getLink())) {\n-            return item.getFeed().getLink();\n-        }\n-        return null;\n-    }\n-}\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/util/FeedUtil.java b/core/src/main/java/de/danoeh/antennapod/core/util/FeedUtil.java\ndeleted file mode 100644\nindex 201207816d..0000000000\n--- a/core/src/main/java/de/danoeh/antennapod/core/util/FeedUtil.java\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-package de.danoeh.antennapod.core.util;\n-\n-import de.danoeh.antennapod.model.feed.Feed;\n-import de.danoeh.antennapod.storage.preferences.UserPreferences;\n-\n-public abstract class FeedUtil {\n-    public static boolean shouldAutoDeleteItemsOnThatFeed(Feed feed) {\n-        if (!UserPreferences.isAutoDelete()) {\n-            return false;\n-        }\n-        return !feed.isLocalFeed() || UserPreferences.isAutoDeleteLocal();\n-    }\n-}\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/util/StorageUtils.java b/core/src/main/java/de/danoeh/antennapod/core/util/StorageUtils.java\ndeleted file mode 100644\nindex eed9fcf372..0000000000\n--- a/core/src/main/java/de/danoeh/antennapod/core/util/StorageUtils.java\n+++ /dev/null\n@@ -1,42 +0,0 @@\n-package de.danoeh.antennapod.core.util;\n-\n-import android.os.StatFs;\n-import de.danoeh.antennapod.storage.preferences.UserPreferences;\n-\n-import java.io.File;\n-\n-/**\n- * Utility functions for handling storage errors\n- */\n-public class StorageUtils {\n-    private StorageUtils(){}\n-\n-    /**\n-     * Get the number of free bytes that are available on the external storage.\n-     */\n-    public static long getFreeSpaceAvailable() {\n-        File dataFolder = UserPreferences.getDataFolder(null);\n-        if (dataFolder != null) {\n-            return getFreeSpaceAvailable(dataFolder.getAbsolutePath());\n-        } else {\n-            return 0;\n-        }\n-    }\n-\n-    /**\n-     * Get the number of free bytes that are available on the external storage.\n-     */\n-    public static long getFreeSpaceAvailable(String path) {\n-        StatFs stat = new StatFs(path);\n-        long availableBlocks = stat.getAvailableBlocksLong();\n-        long blockSize = stat.getBlockSizeLong();\n-        return availableBlocks * blockSize;\n-    }\n-\n-    public static long getTotalSpaceAvailable(String path) {\n-        StatFs stat = new StatFs(path);\n-        long blockCount = stat.getBlockCountLong();\n-        long blockSize = stat.getBlockSizeLong();\n-        return blockCount * blockSize;\n-    }\n-}\ndiff --git a/event/src/main/java/de/danoeh/antennapod/event/EpisodeDownloadEvent.java b/event/src/main/java/de/danoeh/antennapod/event/EpisodeDownloadEvent.java\nindex c9790d18a7..28cbc234c5 100644\n--- a/event/src/main/java/de/danoeh/antennapod/event/EpisodeDownloadEvent.java\n+++ b/event/src/main/java/de/danoeh/antennapod/event/EpisodeDownloadEvent.java\n@@ -1,7 +1,9 @@\n package de.danoeh.antennapod.event;\n \n import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.feed.FeedItem;\n \n+import java.util.List;\n import java.util.Map;\n import java.util.Set;\n \n@@ -15,4 +17,14 @@ public EpisodeDownloadEvent(Map<String, DownloadStatus> map) {\n     public Set<String> getUrls() {\n         return map.keySet();\n     }\n+\n+    public static int indexOfItemWithDownloadUrl(List<FeedItem> items, String downloadUrl) {\n+        for (int i = 0; i < items.size(); i++) {\n+            FeedItem item = items.get(i);\n+            if (item != null && item.getMedia() != null && item.getMedia().getDownloadUrl().equals(downloadUrl)) {\n+                return i;\n+            }\n+        }\n+        return -1;\n+    }\n }\ndiff --git a/event/src/main/java/de/danoeh/antennapod/event/FeedItemEvent.java b/event/src/main/java/de/danoeh/antennapod/event/FeedItemEvent.java\nindex 125d113d69..e217649710 100644\n--- a/event/src/main/java/de/danoeh/antennapod/event/FeedItemEvent.java\n+++ b/event/src/main/java/de/danoeh/antennapod/event/FeedItemEvent.java\n@@ -22,4 +22,14 @@ public static FeedItemEvent updated(List<FeedItem> items) {\n     public static FeedItemEvent updated(FeedItem... items) {\n         return new FeedItemEvent(Arrays.asList(items));\n     }\n+\n+    public static int indexOfItemWithId(List<FeedItem> items, long id) {\n+        for (int i = 0; i < items.size(); i++) {\n+            FeedItem item = items.get(i);\n+            if (item != null && item.getId() == id) {\n+                return i;\n+            }\n+        }\n+        return -1;\n+    }\n }\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/Chapter.java b/model/src/main/java/de/danoeh/antennapod/model/feed/Chapter.java\nindex 3f4116f9cf..3683a2a444 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/feed/Chapter.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/Chapter.java\n@@ -1,5 +1,7 @@\n package de.danoeh.antennapod.model.feed;\n \n+import java.util.List;\n+\n public class Chapter {\n     private long id;\n     /** Defines starting point in milliseconds. */\n@@ -74,4 +76,16 @@ public long getId() {\n     public void setId(long id) {\n         this.id = id;\n     }\n+\n+    public static int getAfterPosition(List<Chapter> chapters, int playbackPosition) {\n+        if (chapters == null || chapters.isEmpty()) {\n+            return -1;\n+        }\n+        for (int i = 0; i < chapters.size(); i++) {\n+            if (chapters.get(i).getStart() > playbackPosition) {\n+                return i - 1;\n+            }\n+        }\n+        return chapters.size() - 1;\n+    }\n }\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java b/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java\nindex 9cc71eb1da..df4cc8f9cb 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java\n@@ -3,6 +3,7 @@\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.builder.ToStringBuilder;\n import org.apache.commons.lang3.builder.ToStringStyle;\n \n@@ -205,6 +206,19 @@ public String getLink() {\n         return link;\n     }\n \n+    /**\n+     * Get the link for the feed item for the purpose of Share.\n+     * It falls backs to the feed's link if the item has no link.\n+     */\n+    public String getLinkWithFallback() {\n+        if (StringUtils.isNotBlank(link)) {\n+            return link;\n+        } else if (StringUtils.isNotBlank(getFeed().getLink())) {\n+            return getFeed().getLink();\n+        }\n+        return null;\n+    }\n+\n     public void setLink(String link) {\n         this.link = link;\n     }\ndiff --git a/net/download/service/build.gradle b/net/download/service/build.gradle\nindex 789fb3aef9..f74550c054 100644\n--- a/net/download/service/build.gradle\n+++ b/net/download/service/build.gradle\n@@ -10,7 +10,6 @@ android {\n }\n \n dependencies {\n-    implementation project(\":core\")\n     implementation project(':event')\n     implementation project(':model')\n     implementation project(':net:common')\n@@ -23,6 +22,7 @@ dependencies {\n     implementation project(':ui:notifications')\n     implementation project(':storage:preferences')\n     implementation project(':ui:app-start-intent')\n+    implementation project(':ui:chapters')\n \n     annotationProcessor \"androidx.annotation:annotation:$annotationVersion\"\n     implementation \"androidx.core:core:$coreVersion\"\ndiff --git a/net/download/service/src/main/AndroidManifest.xml b/net/download/service/src/main/AndroidManifest.xml\nindex 89b6823e55..0a14000100 100644\n--- a/net/download/service/src/main/AndroidManifest.xml\n+++ b/net/download/service/src/main/AndroidManifest.xml\n@@ -7,7 +7,6 @@\n \n     <application\n         android:allowBackup=\"true\"\n-        android:icon=\"@mipmap/ic_launcher\"\n         android:supportsRtl=\"true\">\n \n         <receiver android:name=\".feed.FeedUpdateReceiver\"\ndiff --git a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/MediaDownloadedHandler.java b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/MediaDownloadedHandler.java\nindex dd930c62fd..6ed16aa809 100644\n--- a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/MediaDownloadedHandler.java\n+++ b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/episode/MediaDownloadedHandler.java\n@@ -8,6 +8,7 @@\n \n import de.danoeh.antennapod.model.MediaMetadataRetrieverCompat;\n import de.danoeh.antennapod.net.sync.serviceinterface.SynchronizationQueueSink;\n+import de.danoeh.antennapod.ui.chapters.ChapterUtils;\n import org.greenrobot.eventbus.EventBus;\n \n import java.io.File;\n@@ -19,7 +20,6 @@\n import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.storage.database.DBReader;\n import de.danoeh.antennapod.storage.database.DBWriter;\n-import de.danoeh.antennapod.core.util.ChapterUtils;\n import de.danoeh.antennapod.model.download.DownloadError;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedMedia;\ndiff --git a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/FeedUpdateManagerImpl.java b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/FeedUpdateManagerImpl.java\nindex ae9b255648..2ce5f7006e 100644\n--- a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/FeedUpdateManagerImpl.java\n+++ b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/FeedUpdateManagerImpl.java\n@@ -14,10 +14,10 @@\n import androidx.work.PeriodicWorkRequest;\n import androidx.work.WorkManager;\n import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n-import de.danoeh.antennapod.core.R;\n import de.danoeh.antennapod.net.common.NetworkUtils;\n import de.danoeh.antennapod.event.MessageEvent;\n import de.danoeh.antennapod.model.feed.Feed;\n+import de.danoeh.antennapod.net.download.service.R;\n import de.danoeh.antennapod.net.download.serviceinterface.FeedUpdateManager;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n import org.greenrobot.eventbus.EventBus;\ndiff --git a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/remote/HttpDownloader.java b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/remote/HttpDownloader.java\nindex f3c3e657c6..2e983d88e5 100644\n--- a/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/remote/HttpDownloader.java\n+++ b/net/download/service/src/main/java/de/danoeh/antennapod/net/download/service/feed/remote/HttpDownloader.java\n@@ -1,5 +1,6 @@\n package de.danoeh.antennapod.net.download.service.feed.remote;\n \n+import android.os.StatFs;\n import androidx.annotation.NonNull;\n import android.text.TextUtils;\n import android.util.Log;\n@@ -9,6 +10,7 @@\n import de.danoeh.antennapod.model.download.DownloadRequest;\n import de.danoeh.antennapod.net.common.AntennapodHttpClient;\n import de.danoeh.antennapod.net.download.service.R;\n+import de.danoeh.antennapod.storage.preferences.UserPreferences;\n import okhttp3.CacheControl;\n import okhttp3.internal.http.StatusLine;\n import org.apache.commons.io.IOUtils;\n@@ -30,7 +32,6 @@\n import de.danoeh.antennapod.model.feed.FeedMedia;\n import de.danoeh.antennapod.parser.feed.util.DateUtils;\n import de.danoeh.antennapod.model.download.DownloadError;\n-import de.danoeh.antennapod.core.util.StorageUtils;\n import de.danoeh.antennapod.net.common.UriUtil;\n import okhttp3.OkHttpClient;\n import okhttp3.Protocol;\n@@ -148,7 +149,7 @@ && isContentTypeTextAndSmallerThan100kb(response)) {\n                 request.setSize(DownloadResult.SIZE_UNKNOWN);\n             }\n \n-            long freeSpace = StorageUtils.getFreeSpaceAvailable();\n+            long freeSpace = getFreeSpaceAvailable();\n             Log.d(TAG, \"Free space is \" + freeSpace);\n             if (request.getSize() != DownloadResult.SIZE_UNKNOWN && request.getSize() > freeSpace) {\n                 onFail(DownloadError.ERROR_NOT_ENOUGH_SPACE, null);\n@@ -297,6 +298,18 @@ private void checkIfRedirect(Response response) {\n         }\n     }\n \n+    private static long getFreeSpaceAvailable() {\n+        File dataFolder = UserPreferences.getDataFolder(null);\n+        if (dataFolder != null) {\n+            StatFs stat = new StatFs(dataFolder.getAbsolutePath());\n+            long availableBlocks = stat.getAvailableBlocksLong();\n+            long blockSize = stat.getBlockSizeLong();\n+            return availableBlocks * blockSize;\n+        } else {\n+            return 0;\n+        }\n+    }\n+\n     private void onSuccess() {\n         Log.d(TAG, \"Download was successful\");\n         result.setSuccessful();\ndiff --git a/parser/feed/src/main/java/de/danoeh/antennapod/parser/feed/util/DateUtils.java b/parser/feed/src/main/java/de/danoeh/antennapod/parser/feed/util/DateUtils.java\nindex 4d9f689051..dbddb44b04 100644\n--- a/parser/feed/src/main/java/de/danoeh/antennapod/parser/feed/util/DateUtils.java\n+++ b/parser/feed/src/main/java/de/danoeh/antennapod/parser/feed/util/DateUtils.java\n@@ -1,7 +1,5 @@\n package de.danoeh.antennapod.parser.feed.util;\n \n-import android.util.Log;\n-\n import androidx.annotation.Nullable;\n import org.apache.commons.lang3.StringUtils;\n \n@@ -16,7 +14,6 @@\n  * Parses several date formats.\n  */\n public abstract class DateUtils {\n-    private static final String TAG = \"DateUtils\";\n     private static final TimeZone TIME_ZONE_GMT = TimeZone.getTimeZone(\"GMT\");\n     private static final ThreadLocal<SimpleDateFormat> RFC822_DATE_FORMAT = new ThreadLocal<>() {\n         @Override\n@@ -117,8 +114,8 @@ public static Date parse(final String input) {\n                 if (result != null && pos.getIndex() == date.length()) {\n                     return result;\n                 }\n-            } catch (Exception e) {\n-                Log.e(TAG, Log.getStackTraceString(e));\n+            } catch (Exception ignored) {\n+                // Ignore\n             }\n         }\n \n@@ -127,7 +124,7 @@ public static Date parse(final String input) {\n             return parse(date.substring(date.indexOf(',') + 1));\n         }\n \n-        Log.d(TAG, \"Could not parse date string \\\"\" + input + \"\\\" [\" + date + \"]\");\n+        System.out.println(\"Could not parse date string \\\"\" + input + \"\\\" [\" + date + \"]\");\n         return null;\n     }\n \ndiff --git a/playback/service/build.gradle b/playback/service/build.gradle\nindex b8c47df8e7..219565696b 100644\n--- a/playback/service/build.gradle\n+++ b/playback/service/build.gradle\n@@ -9,7 +9,6 @@ android {\n }\n \n dependencies {\n-    implementation project(':core')\n     implementation project(':event')\n     implementation project(':model')\n     implementation project(':net:common')\n@@ -24,6 +23,7 @@ dependencies {\n     implementation project(':ui:i18n')\n     implementation project(':ui:notifications')\n     implementation project(':ui:widget')\n+    implementation project(':ui:chapters')\n \n     annotationProcessor \"androidx.annotation:annotation:$annotationVersion\"\n     implementation \"androidx.core:core:$coreVersion\"\ndiff --git a/playback/service/src/main/java/de/danoeh/antennapod/playback/service/PlaybackService.java b/playback/service/src/main/java/de/danoeh/antennapod/playback/service/PlaybackService.java\nindex dfcb67e51d..8932a36d24 100644\n--- a/playback/service/src/main/java/de/danoeh/antennapod/playback/service/PlaybackService.java\n+++ b/playback/service/src/main/java/de/danoeh/antennapod/playback/service/PlaybackService.java\n@@ -77,9 +77,7 @@\n import de.danoeh.antennapod.storage.database.DBReader;\n import de.danoeh.antennapod.storage.database.DBWriter;\n import de.danoeh.antennapod.playback.service.internal.PlaybackServiceTaskManager.SleepTimer;\n-import de.danoeh.antennapod.core.util.ChapterUtils;\n-import de.danoeh.antennapod.core.util.FeedUtil;\n-import de.danoeh.antennapod.core.util.IntentUtils;\n+import de.danoeh.antennapod.ui.common.IntentUtils;\n import de.danoeh.antennapod.net.common.NetworkUtils;\n import de.danoeh.antennapod.event.MessageEvent;\n import de.danoeh.antennapod.event.PlayerErrorEvent;\n@@ -1147,9 +1145,10 @@ private void onPostPlayback(final Playable playable, boolean ended, boolean skip\n                 // Delete episode if enabled\n                 FeedPreferences.AutoDeleteAction action =\n                         item.getFeed().getPreferences().getCurrentAutoDelete();\n+                boolean autoDeleteEnabledGlobally = UserPreferences.isAutoDelete()\n+                        && (!item.getFeed().isLocalFeed() || UserPreferences.isAutoDeleteLocal());\n                 boolean shouldAutoDelete = action == FeedPreferences.AutoDeleteAction.ALWAYS\n-                        || (action == FeedPreferences.AutoDeleteAction.GLOBAL\n-                                && FeedUtil.shouldAutoDeleteItemsOnThatFeed(item.getFeed()));\n+                        || (action == FeedPreferences.AutoDeleteAction.GLOBAL && autoDeleteEnabledGlobally);\n                 if (shouldAutoDelete && (!item.isTagged(FeedItem.TAG_FAVORITE)\n                         || !UserPreferences.shouldFavoriteKeepEpisode())) {\n                     DBWriter.deleteFeedMediaOfItem(PlaybackService.this, media);\n@@ -1889,8 +1888,7 @@ public void onNextChapter() {\n                 return;\n             }\n \n-            int nextChapter = ChapterUtils.getCurrentChapterIndex(\n-                    mediaPlayer.getPlayable(), mediaPlayer.getPosition()) + 1;\n+            int nextChapter = Chapter.getAfterPosition(chapters, mediaPlayer.getPosition()) + 1;\n \n             if (chapters.size() < nextChapter + 1) {\n                 // We are on the last chapter, just fallback to the next episode\ndiff --git a/playback/service/src/main/java/de/danoeh/antennapod/playback/service/internal/PlaybackServiceTaskManager.java b/playback/service/src/main/java/de/danoeh/antennapod/playback/service/internal/PlaybackServiceTaskManager.java\nindex 71e68c8737..e21499bbab 100644\n--- a/playback/service/src/main/java/de/danoeh/antennapod/playback/service/internal/PlaybackServiceTaskManager.java\n+++ b/playback/service/src/main/java/de/danoeh/antennapod/playback/service/internal/PlaybackServiceTaskManager.java\n@@ -9,7 +9,7 @@\n \n import de.danoeh.antennapod.event.playback.SleepTimerUpdatedEvent;\n import de.danoeh.antennapod.storage.preferences.SleepTimerPreferences;\n-import de.danoeh.antennapod.core.util.ChapterUtils;\n+import de.danoeh.antennapod.ui.chapters.ChapterUtils;\n import de.danoeh.antennapod.ui.widget.WidgetUpdater;\n import io.reactivex.disposables.Disposable;\n import org.greenrobot.eventbus.EventBus;\ndiff --git a/scripts/makeRelease.sh b/scripts/makeRelease.sh\nindex 34c79f319b..7cf6286e94 100644\n--- a/scripts/makeRelease.sh\n+++ b/scripts/makeRelease.sh\n@@ -1,4 +1,4 @@\n #!/bin/sh\n \n-curl -s https://raw.githubusercontent.com/AntennaPod/antennapod.github.io/master/_config.yml | yq -r \".languages[]\" > ./app/src/main/assets/website-languages.txt\n+curl -s https://raw.githubusercontent.com/AntennaPod/antennapod.github.io/master/_config.yml | yq -r \".languages[]\" > ./ui/common/src/main/assets/website-languages.txt\n python ./createContributors.py\ndiff --git a/settings.gradle b/settings.gradle\nindex 111eb3e88f..184df07f2e 100644\n--- a/settings.gradle\n+++ b/settings.gradle\n@@ -16,7 +16,6 @@ dependencyResolutionManagement {\n }\n \n include ':app'\n-include ':core'\n include ':event'\n include ':model'\n \n@@ -42,6 +41,7 @@ include ':storage:importexport'\n include ':storage:preferences'\n \n include ':ui:app-start-intent'\n+include ':ui:chapters'\n include ':ui:common'\n include ':ui:discovery'\n include ':ui:echo'\ndiff --git a/storage/database/build.gradle b/storage/database/build.gradle\nindex a78afbf791..60b57828a6 100644\n--- a/storage/database/build.gradle\n+++ b/storage/database/build.gradle\n@@ -30,6 +30,7 @@ dependencies {\n     implementation \"com.google.guava:guava:31.0.1-android\"\n     implementation \"org.apache.commons:commons-lang3:$commonslangVersion\"\n \n+    testImplementation project(':parser:feed')\n     testImplementation \"junit:junit:$junitVersion\"\n     testImplementation \"androidx.test:core:$testCoreVersion\"\n     testImplementation \"org.robolectric:robolectric:$robolectricVersion\"\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/util/ReleaseScheduleGuesser.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/ReleaseScheduleGuesser.java\nsimilarity index 99%\nrename from core/src/main/java/de/danoeh/antennapod/core/util/ReleaseScheduleGuesser.java\nrename to storage/database/src/main/java/de/danoeh/antennapod/storage/database/ReleaseScheduleGuesser.java\nindex 580cf41646..3ee4e5b1d9 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/util/ReleaseScheduleGuesser.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/ReleaseScheduleGuesser.java\n@@ -1,4 +1,4 @@\n-package de.danoeh.antennapod.core.util;\n+package de.danoeh.antennapod.storage.database;\n \n import java.util.ArrayList;\n import java.util.Arrays;\ndiff --git a/ui/chapters/README.md b/ui/chapters/README.md\nnew file mode 100644\nindex 0000000000..68136b4369\n--- /dev/null\n+++ b/ui/chapters/README.md\n@@ -0,0 +1,3 @@\n+# :ui:chapters\n+\n+This module provides chapter loading and merging for display, but not the actual UI to display them.\ndiff --git a/ui/chapters/build.gradle b/ui/chapters/build.gradle\nnew file mode 100644\nindex 0000000000..a3cb1b6779\n--- /dev/null\n+++ b/ui/chapters/build.gradle\n@@ -0,0 +1,21 @@\n+plugins {\n+    id(\"com.android.library\")\n+}\n+apply from: \"../../common.gradle\"\n+apply from: \"../../playFlavor.gradle\"\n+\n+android {\n+    namespace \"de.danoeh.antennapod.ui.chapters\"\n+}\n+\n+dependencies {\n+    implementation project(':model')\n+    implementation project(':net:common')\n+    implementation project(':parser:media')\n+    implementation project(':parser:feed')\n+    implementation project(':storage:database')\n+\n+    annotationProcessor \"androidx.annotation:annotation:$annotationVersion\"\n+    implementation \"commons-io:commons-io:$commonsioVersion\"\n+    implementation \"com.squareup.okhttp3:okhttp:$okhttpVersion\"\n+}\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/util/ChapterMerger.java b/ui/chapters/src/main/java/de/danoeh/antennapod/ui/chapters/ChapterMerger.java\nsimilarity index 98%\nrename from core/src/main/java/de/danoeh/antennapod/core/util/ChapterMerger.java\nrename to ui/chapters/src/main/java/de/danoeh/antennapod/ui/chapters/ChapterMerger.java\nindex 794b2322d6..7ec11b5668 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/util/ChapterMerger.java\n+++ b/ui/chapters/src/main/java/de/danoeh/antennapod/ui/chapters/ChapterMerger.java\n@@ -1,4 +1,4 @@\n-package de.danoeh.antennapod.core.util;\n+package de.danoeh.antennapod.ui.chapters;\n \n import android.text.TextUtils;\n import android.util.Log;\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/util/ChapterUtils.java b/ui/chapters/src/main/java/de/danoeh/antennapod/ui/chapters/ChapterUtils.java\nsimilarity index 94%\nrename from core/src/main/java/de/danoeh/antennapod/core/util/ChapterUtils.java\nrename to ui/chapters/src/main/java/de/danoeh/antennapod/ui/chapters/ChapterUtils.java\nindex b32b05236b..5554890ed0 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/util/ChapterUtils.java\n+++ b/ui/chapters/src/main/java/de/danoeh/antennapod/ui/chapters/ChapterUtils.java\n@@ -1,4 +1,4 @@\n-package de.danoeh.antennapod.core.util;\n+package de.danoeh.antennapod.ui.chapters;\n \n import android.content.ContentResolver;\n import android.content.Context;\n@@ -41,19 +41,6 @@ public class ChapterUtils {\n     private ChapterUtils() {\n     }\n \n-    public static int getCurrentChapterIndex(Playable media, int position) {\n-        if (media == null || media.getChapters() == null || media.getChapters().size() == 0) {\n-            return -1;\n-        }\n-        List<Chapter> chapters = media.getChapters();\n-        for (int i = 0; i < chapters.size(); i++) {\n-            if (chapters.get(i).getStart() > position) {\n-                return i - 1;\n-            }\n-        }\n-        return chapters.size() - 1;\n-    }\n-\n     public static void loadChapters(Playable playable, Context context, boolean forceRefresh) {\n         if (playable.getChapters() != null && !forceRefresh) {\n             // Already loaded\ndiff --git a/ui/common/build.gradle b/ui/common/build.gradle\nindex 1325761d3d..f2916593a5 100644\n--- a/ui/common/build.gradle\n+++ b/ui/common/build.gradle\n@@ -16,6 +16,8 @@ dependencies {\n     implementation \"androidx.viewpager2:viewpager2:$viewPager2Version\"\n     implementation \"com.google.android.material:material:$googleMaterialVersion\"\n     implementation \"androidx.core:core-splashscreen:1.0.0\"\n+    implementation \"org.apache.commons:commons-lang3:$commonslangVersion\"\n+    implementation \"commons-io:commons-io:$commonsioVersion\"\n \n     testImplementation \"junit:junit:$junitVersion\"\n }\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/util/ConfirmationDialog.java b/ui/common/src/main/java/de/danoeh/antennapod/ui/common/ConfirmationDialog.java\nsimilarity index 95%\nrename from core/src/main/java/de/danoeh/antennapod/core/util/ConfirmationDialog.java\nrename to ui/common/src/main/java/de/danoeh/antennapod/ui/common/ConfirmationDialog.java\nindex ff5e56f5d5..8acedc7d34 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/util/ConfirmationDialog.java\n+++ b/ui/common/src/main/java/de/danoeh/antennapod/ui/common/ConfirmationDialog.java\n@@ -1,4 +1,4 @@\n-package de.danoeh.antennapod.core.util;\n+package de.danoeh.antennapod.ui.common;\n \n import android.content.Context;\n import android.content.DialogInterface;\n@@ -6,8 +6,6 @@\n import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n import android.util.Log;\n \n-import de.danoeh.antennapod.core.R;\n-\n /**\n  * Creates an AlertDialog which asks the user to confirm something. Other\n  * classes can handle events like confirmation or cancellation.\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/util/IntentUtils.java b/ui/common/src/main/java/de/danoeh/antennapod/ui/common/IntentUtils.java\nsimilarity index 96%\nrename from core/src/main/java/de/danoeh/antennapod/core/util/IntentUtils.java\nrename to ui/common/src/main/java/de/danoeh/antennapod/ui/common/IntentUtils.java\nindex 8b30b4eace..26c703e7b8 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/util/IntentUtils.java\n+++ b/ui/common/src/main/java/de/danoeh/antennapod/ui/common/IntentUtils.java\n@@ -1,4 +1,4 @@\n-package de.danoeh.antennapod.core.util;\n+package de.danoeh.antennapod.ui.common;\n \n import android.content.ActivityNotFoundException;\n import android.content.Context;\n@@ -8,7 +8,6 @@\n import android.net.Uri;\n import android.util.Log;\n import android.widget.Toast;\n-import de.danoeh.antennapod.core.R;\n import org.apache.commons.io.IOUtils;\n import org.apache.commons.lang3.ArrayUtils;\n \n@@ -52,7 +51,6 @@ public static void openInBrowser(Context context, String url) {\n         }\n     }\n \n-\n     public static String getLocalizedWebsiteLink(Context context) {\n         try (InputStream is = context.getAssets().open(\"website-languages.txt\")) {\n             String[] languages = IOUtils.toString(is, StandardCharsets.UTF_8.name()).split(\"\\n\");\ndiff --git a/core/src/main/res/drawable/bg_blue_gradient.xml b/ui/common/src/main/res/drawable/bg_blue_gradient.xml\nsimilarity index 100%\nrename from core/src/main/res/drawable/bg_blue_gradient.xml\nrename to ui/common/src/main/res/drawable/bg_blue_gradient.xml\ndiff --git a/core/src/main/res/drawable/bg_circle.xml b/ui/common/src/main/res/drawable/bg_circle.xml\nsimilarity index 100%\nrename from core/src/main/res/drawable/bg_circle.xml\nrename to ui/common/src/main/res/drawable/bg_circle.xml\ndiff --git a/core/src/main/res/drawable/bg_drawer_item.xml b/ui/common/src/main/res/drawable/bg_drawer_item.xml\nsimilarity index 100%\nrename from core/src/main/res/drawable/bg_drawer_item.xml\nrename to ui/common/src/main/res/drawable/bg_drawer_item.xml\ndiff --git a/core/src/main/res/drawable/bg_gradient.xml b/ui/common/src/main/res/drawable/bg_gradient.xml\nsimilarity index 100%\nrename from core/src/main/res/drawable/bg_gradient.xml\nrename to ui/common/src/main/res/drawable/bg_gradient.xml\ndiff --git a/core/src/main/res/drawable/bg_pill.xml b/ui/common/src/main/res/drawable/bg_pill.xml\nsimilarity index 100%\nrename from core/src/main/res/drawable/bg_pill.xml\nrename to ui/common/src/main/res/drawable/bg_pill.xml\ndiff --git a/core/src/main/res/drawable/bg_rounded_corners.xml b/ui/common/src/main/res/drawable/bg_rounded_corners.xml\nsimilarity index 100%\nrename from core/src/main/res/drawable/bg_rounded_corners.xml\nrename to ui/common/src/main/res/drawable/bg_rounded_corners.xml\ndiff --git a/ui/preferences/src/main/assets/website-languages.txt b/ui/common/website-languages.txt\nsimilarity index 100%\nrename from ui/preferences/src/main/assets/website-languages.txt\nrename to ui/common/website-languages.txt\ndiff --git a/ui/preferences/build.gradle b/ui/preferences/build.gradle\nindex a777b43327..eb595da584 100644\n--- a/ui/preferences/build.gradle\n+++ b/ui/preferences/build.gradle\n@@ -23,7 +23,6 @@ android {\n }\n \n dependencies {\n-    implementation project(\":core\")\n     implementation project(\":event\")\n     implementation project(\":net:common\")\n     implementation project(\":net:sync:model\")\ndiff --git a/ui/preferences/src/main/java/de/danoeh/antennapod/ui/preferences/screen/about/AboutFragment.java b/ui/preferences/src/main/java/de/danoeh/antennapod/ui/preferences/screen/about/AboutFragment.java\nindex ad956ed717..3e30b44dd8 100644\n--- a/ui/preferences/src/main/java/de/danoeh/antennapod/ui/preferences/screen/about/AboutFragment.java\n+++ b/ui/preferences/src/main/java/de/danoeh/antennapod/ui/preferences/screen/about/AboutFragment.java\n@@ -10,7 +10,7 @@\n import androidx.appcompat.app.AppCompatActivity;\n import androidx.preference.PreferenceFragmentCompat;\n import com.google.android.material.snackbar.Snackbar;\n-import de.danoeh.antennapod.core.util.IntentUtils;\n+import de.danoeh.antennapod.ui.common.IntentUtils;\n import de.danoeh.antennapod.ui.preferences.BuildConfig;\n import de.danoeh.antennapod.ui.preferences.R;\n \ndiff --git a/ui/preferences/src/main/java/de/danoeh/antennapod/ui/preferences/screen/about/LicensesFragment.java b/ui/preferences/src/main/java/de/danoeh/antennapod/ui/preferences/screen/about/LicensesFragment.java\nindex 85badcefcf..1a60d03ce8 100644\n--- a/ui/preferences/src/main/java/de/danoeh/antennapod/ui/preferences/screen/about/LicensesFragment.java\n+++ b/ui/preferences/src/main/java/de/danoeh/antennapod/ui/preferences/screen/about/LicensesFragment.java\n@@ -9,7 +9,7 @@\n import androidx.appcompat.app.AppCompatActivity;\n import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n import androidx.fragment.app.ListFragment;\n-import de.danoeh.antennapod.core.util.IntentUtils;\n+import de.danoeh.antennapod.ui.common.IntentUtils;\n import de.danoeh.antennapod.ui.preferences.R;\n import io.reactivex.Single;\n import io.reactivex.SingleOnSubscribe;\ndiff --git a/ui/preferences/src/main/java/de/danoeh/antennapod/ui/preferences/screen/downloads/DataFolderAdapter.java b/ui/preferences/src/main/java/de/danoeh/antennapod/ui/preferences/screen/downloads/DataFolderAdapter.java\nindex bd6a75503e..99f63156c2 100644\n--- a/ui/preferences/src/main/java/de/danoeh/antennapod/ui/preferences/screen/downloads/DataFolderAdapter.java\n+++ b/ui/preferences/src/main/java/de/danoeh/antennapod/ui/preferences/screen/downloads/DataFolderAdapter.java\n@@ -1,6 +1,7 @@\n package de.danoeh.antennapod.ui.preferences.screen.downloads;\n \n import android.content.Context;\n+import android.os.StatFs;\n import android.text.format.Formatter;\n import android.view.LayoutInflater;\n import android.view.View;\n@@ -12,7 +13,6 @@\n import androidx.core.util.Consumer;\n import androidx.recyclerview.widget.RecyclerView;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n-import de.danoeh.antennapod.core.util.StorageUtils;\n import de.danoeh.antennapod.ui.preferences.R;\n \n import java.io.File;\n@@ -125,11 +125,17 @@ String getFullPath() {\n         }\n \n         long getAvailableSpace() {\n-            return StorageUtils.getFreeSpaceAvailable(path);\n+            StatFs stat = new StatFs(path);\n+            long availableBlocks = stat.getAvailableBlocksLong();\n+            long blockSize = stat.getBlockSizeLong();\n+            return availableBlocks * blockSize;\n         }\n \n         long getTotalSpace() {\n-            return StorageUtils.getTotalSpaceAvailable(path);\n+            StatFs stat = new StatFs(path);\n+            long blockCount = stat.getBlockCountLong();\n+            long blockSize = stat.getBlockSizeLong();\n+            return blockCount * blockSize;\n         }\n \n         int getUsagePercentage() {\ndiff --git a/core/src/main/res/values/arrays.xml b/ui/preferences/src/main/res/values/arrays.xml\nsimilarity index 100%\nrename from core/src/main/res/values/arrays.xml\nrename to ui/preferences/src/main/res/values/arrays.xml\ndiff --git a/core/src/main/res/values/keycodes.xml b/ui/preferences/src/main/res/values/keycodes.xml\nsimilarity index 100%\nrename from core/src/main/res/values/keycodes.xml\nrename to ui/preferences/src/main/res/values/keycodes.xml\ndiff --git a/ui/statistics/build.gradle b/ui/statistics/build.gradle\nindex 1e33a0f0a0..be86665a79 100644\n--- a/ui/statistics/build.gradle\n+++ b/ui/statistics/build.gradle\n@@ -9,7 +9,6 @@ android {\n }\n \n dependencies {\n-    implementation project(\":core\")\n     implementation project(\":event\")\n     implementation project(\":model\")\n     implementation project(':storage:database')\ndiff --git a/ui/statistics/src/main/java/de/danoeh/antennapod/ui/statistics/StatisticsFragment.java b/ui/statistics/src/main/java/de/danoeh/antennapod/ui/statistics/StatisticsFragment.java\nindex a2f9e81460..74a0eaa5f2 100644\n--- a/ui/statistics/src/main/java/de/danoeh/antennapod/ui/statistics/StatisticsFragment.java\n+++ b/ui/statistics/src/main/java/de/danoeh/antennapod/ui/statistics/StatisticsFragment.java\n@@ -18,7 +18,7 @@\n \n import com.google.android.material.tabs.TabLayout;\n import com.google.android.material.tabs.TabLayoutMediator;\n-import de.danoeh.antennapod.core.util.ConfirmationDialog;\n+import de.danoeh.antennapod.ui.common.ConfirmationDialog;\n import de.danoeh.antennapod.storage.database.DBWriter;\n import de.danoeh.antennapod.event.StatisticsEvent;\n import de.danoeh.antennapod.ui.common.PagedToolbarFragment;\ndiff --git a/ui/statistics/src/main/java/de/danoeh/antennapod/ui/statistics/feed/FeedStatisticsFragment.java b/ui/statistics/src/main/java/de/danoeh/antennapod/ui/statistics/feed/FeedStatisticsFragment.java\nindex 6a9e807402..aacd1294d5 100644\n--- a/ui/statistics/src/main/java/de/danoeh/antennapod/ui/statistics/feed/FeedStatisticsFragment.java\n+++ b/ui/statistics/src/main/java/de/danoeh/antennapod/ui/statistics/feed/FeedStatisticsFragment.java\n@@ -13,7 +13,7 @@\n import de.danoeh.antennapod.storage.database.StatisticsItem;\n import de.danoeh.antennapod.ui.common.Converter;\n import de.danoeh.antennapod.ui.common.DateFormatter;\n-import de.danoeh.antennapod.core.util.ReleaseScheduleGuesser;\n+import de.danoeh.antennapod.storage.database.ReleaseScheduleGuesser;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedItemFilter;\n import de.danoeh.antennapod.model.feed.SortOrder;\n", "test_patch": "diff --git a/core/src/test/java/android/util/Log.java b/core/src/test/java/android/util/Log.java\ndeleted file mode 100644\nindex a65bc80fad..0000000000\n--- a/core/src/test/java/android/util/Log.java\n+++ /dev/null\n@@ -1,246 +0,0 @@\n-package android.util;\n-\n-import java.io.PrintWriter;\n-import java.io.StringWriter;\n-\n-/**\n- * A stub for {@link android.util.Log} to be used in unit tests.\n- *\n- * It outputs the log statements to standard error.\n- */\n-public final class Log {\n-\n-    /**\n-     * Priority constant for the println method; use Log.v.\n-     */\n-    public static final int VERBOSE = 2;\n-\n-    /**\n-     * Priority constant for the println method; use Log.d.\n-     */\n-    public static final int DEBUG = 3;\n-\n-    /**\n-     * Priority constant for the println method; use Log.i.\n-     */\n-    public static final int INFO = 4;\n-\n-    /**\n-     * Priority constant for the println method; use Log.w.\n-     */\n-    public static final int WARN = 5;\n-\n-    /**\n-     * Priority constant for the println method; use Log.e.\n-     */\n-    public static final int ERROR = 6;\n-\n-    /**\n-     * Priority constant for the println method.\n-     */\n-    public static final int ASSERT = 7;\n-\n-    private Log() {\n-    }\n-\n-    /**\n-     * Send a {@link #VERBOSE} log message.\n-     * @param tag Used to identify the source of a log message.  It usually identifies\n-     *        the class or activity where the log call occurs.\n-     * @param msg The message you would like logged.\n-     */\n-    public static int v(String tag, String msg) {\n-        return println_native(LOG_ID_MAIN, VERBOSE, tag, msg);\n-    }\n-\n-    /**\n-     * Send a {@link #VERBOSE} log message and log the exception.\n-     * @param tag Used to identify the source of a log message.  It usually identifies\n-     *        the class or activity where the log call occurs.\n-     * @param msg The message you would like logged.\n-     * @param tr An exception to log\n-     */\n-    public static int v(String tag, String msg, Throwable tr) {\n-        return printlns(LOG_ID_MAIN, VERBOSE, tag, msg, tr);\n-    }\n-\n-    /**\n-     * Send a {@link #DEBUG} log message.\n-     * @param tag Used to identify the source of a log message.  It usually identifies\n-     *        the class or activity where the log call occurs.\n-     * @param msg The message you would like logged.\n-     */\n-    public static int d(String tag, String msg) {\n-        return println_native(LOG_ID_MAIN, DEBUG, tag, msg);\n-    }\n-\n-    /**\n-     * Send a {@link #DEBUG} log message and log the exception.\n-     * @param tag Used to identify the source of a log message.  It usually identifies\n-     *        the class or activity where the log call occurs.\n-     * @param msg The message you would like logged.\n-     * @param tr An exception to log\n-     */\n-    public static int d(String tag, String msg, Throwable tr) {\n-        return printlns(LOG_ID_MAIN, DEBUG, tag, msg, tr);\n-    }\n-\n-    /**\n-     * Send an {@link #INFO} log message.\n-     * @param tag Used to identify the source of a log message.  It usually identifies\n-     *        the class or activity where the log call occurs.\n-     * @param msg The message you would like logged.\n-     */\n-    public static int i(String tag, String msg) {\n-        return println_native(LOG_ID_MAIN, INFO, tag, msg);\n-    }\n-\n-    /**\n-     * Send a {@link #INFO} log message and log the exception.\n-     * @param tag Used to identify the source of a log message.  It usually identifies\n-     *        the class or activity where the log call occurs.\n-     * @param msg The message you would like logged.\n-     * @param tr An exception to log\n-     */\n-    public static int i(String tag, String msg, Throwable tr) {\n-        return printlns(LOG_ID_MAIN, INFO, tag, msg, tr);\n-    }\n-\n-    /**\n-     * Send a {@link #WARN} log message.\n-     * @param tag Used to identify the source of a log message.  It usually identifies\n-     *        the class or activity where the log call occurs.\n-     * @param msg The message you would like logged.\n-     */\n-    public static int w(String tag, String msg) {\n-        return println_native(LOG_ID_MAIN, WARN, tag, msg);\n-    }\n-\n-    /**\n-     * Send a {@link #WARN} log message and log the exception.\n-     * @param tag Used to identify the source of a log message.  It usually identifies\n-     *        the class or activity where the log call occurs.\n-     * @param msg The message you would like logged.\n-     * @param tr An exception to log\n-     */\n-    public static int w(String tag, String msg, Throwable tr) {\n-        return printlns(LOG_ID_MAIN, WARN, tag, msg, tr);\n-    }\n-\n-    /**\n-     * Checks to see whether or not a log for the specified tag is loggable at the specified level.\n-     *\n-     * @return true in all cases (for unit test environment)\n-     */\n-    public static boolean isLoggable(String tag, int level) {\n-        return true;\n-    }\n-\n-    /*\n-     * Send a {@link #WARN} log message and log the exception.\n-     * @param tag Used to identify the source of a log message.  It usually identifies\n-     *        the class or activity where the log call occurs.\n-     * @param tr An exception to log\n-     */\n-    public static int w(String tag, Throwable tr) {\n-        return printlns(LOG_ID_MAIN, WARN, tag, \"\", tr);\n-    }\n-\n-    /**\n-     * Send an {@link #ERROR} log message.\n-     * @param tag Used to identify the source of a log message.  It usually identifies\n-     *        the class or activity where the log call occurs.\n-     * @param msg The message you would like logged.\n-     */\n-    public static int e(String tag, String msg) {\n-        return println_native(LOG_ID_MAIN, ERROR, tag, msg);\n-    }\n-\n-    /**\n-     * Send a {@link #ERROR} log message and log the exception.\n-     * @param tag Used to identify the source of a log message.  It usually identifies\n-     *        the class or activity where the log call occurs.\n-     * @param msg The message you would like logged.\n-     * @param tr An exception to log\n-     */\n-    public static int e(String tag, String msg, Throwable tr) {\n-        return printlns(LOG_ID_MAIN, ERROR, tag, msg, tr);\n-    }\n-\n-    /**\n-     * What a Terrible Failure: Report a condition that should never happen.\n-     * The error will always be logged at level ASSERT with the call stack.\n-     * Depending on system configuration, a report may be added to the\n-     * {@link android.os.DropBoxManager} and/or the process may be terminated\n-     * immediately with an error dialog.\n-     * @param tag Used to identify the source of a log message.\n-     * @param msg The message you would like logged.\n-     */\n-    public static int wtf(String tag, String msg) {\n-        return wtf(LOG_ID_MAIN, tag, msg, null, false, false);\n-    }\n-\n-    /**\n-     * Like {@link #wtf(String, String)}, but also writes to the log the full\n-     * call stack.\n-     * @hide\n-     */\n-    public static int wtfStack(String tag, String msg) {\n-        return wtf(LOG_ID_MAIN, tag, msg, null, true, false);\n-    }\n-\n-    /**\n-     * What a Terrible Failure: Report an exception that should never happen.\n-     * Similar to {@link #wtf(String, String)}, with an exception to log.\n-     * @param tag Used to identify the source of a log message.\n-     * @param tr An exception to log.\n-     */\n-    public static int wtf(String tag, Throwable tr) {\n-        return wtf(LOG_ID_MAIN, tag, tr.getMessage(), tr, false, false);\n-    }\n-\n-    /**\n-     * What a Terrible Failure: Report an exception that should never happen.\n-     * Similar to {@link #wtf(String, Throwable)}, with a message as well.\n-     * @param tag Used to identify the source of a log message.\n-     * @param msg The message you would like logged.\n-     * @param tr An exception to log.  May be null.\n-     */\n-    public static int wtf(String tag, String msg, Throwable tr) {\n-        return wtf(LOG_ID_MAIN, tag, msg, tr, false, false);\n-    }\n-\n-    /**\n-     * Priority Constant for wtf.\n-     * Added for this custom Log implementation, not in android sources.\n-     */\n-    private static final int WTF = 8;\n-\n-    static int wtf(int logId, String tag, String msg, Throwable tr, boolean localStack,\n-                   boolean system) {\n-        return printlns(LOG_ID_MAIN, WTF, tag, msg, tr);\n-    }\n-\n-    private static final int LOG_ID_MAIN = 0;\n-\n-    private static final String[] PRIORITY_ABBREV = { \"0\", \"1\", \"V\", \"D\", \"I\", \"W\", \"E\", \"A\", \"WTF\" };\n-\n-    private static int println_native(int bufID, int priority, String tag, String msg) {\n-        String res = PRIORITY_ABBREV[priority] + \"/\" + tag + \" \" + msg + System.lineSeparator();\n-        System.err.print(res);\n-        return res.length();\n-    }\n-\n-    private static int printlns(int bufID, int priority, String tag, String msg,\n-                               Throwable tr) {\n-        StringWriter trSW = new StringWriter();\n-        if (tr != null) {\n-            trSW.append(\" , Exception: \");\n-            PrintWriter trPW = new PrintWriter(trSW);\n-            tr.printStackTrace(trPW);\n-            trPW.flush();\n-        }\n-        return println_native(bufID, priority, tag, msg + trSW.toString());\n-    }\n-\n-}\ndiff --git a/core/src/test/java/de/danoeh/antennapod/core/util/FeedItemUtilTest.java b/model/src/test/java/de/danoeh/antennapod/model/feed/FeedItemFallbackLinkTest.java\nsimilarity index 53%\nrename from core/src/test/java/de/danoeh/antennapod/core/util/FeedItemUtilTest.java\nrename to model/src/test/java/de/danoeh/antennapod/model/feed/FeedItemFallbackLinkTest.java\nindex df9617ab44..c0ea222e44 100644\n--- a/core/src/test/java/de/danoeh/antennapod/core/util/FeedItemUtilTest.java\n+++ b/model/src/test/java/de/danoeh/antennapod/model/feed/FeedItemFallbackLinkTest.java\n@@ -1,23 +1,18 @@\n-package de.danoeh.antennapod.core.util;\n+package de.danoeh.antennapod.model.feed;\n \n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.junit.runners.Parameterized;\n import org.junit.runners.Parameterized.Parameters;\n \n-import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.Collections;\n-import java.util.List;\n-\n-import de.danoeh.antennapod.model.feed.Feed;\n-import de.danoeh.antennapod.model.feed.FeedItem;\n \n import static org.junit.Assert.assertEquals;\n \n @RunWith(Parameterized.class)\n-public class FeedItemUtilTest {\n+public class FeedItemFallbackLinkTest {\n     private static final String FEED_LINK = \"http://example.com\";\n     private static final String ITEM_LINK = \"http://example.com/feedItem1\";\n \n@@ -39,57 +34,16 @@ public static Collection<Object[]> data() {\n         });\n     }\n \n-    public FeedItemUtilTest(String msg, String feedLink, String itemLink, String expected) {\n+    public FeedItemFallbackLinkTest(String msg, String feedLink, String itemLink, String expected) {\n         this.msg = msg;\n         this.feedLink = feedLink;\n         this.itemLink = itemLink;\n         this.expected = expected;\n     }\n \n-\n-    // Test the getIds() method\n-    @Test\n-    public void testGetIds() {\n-        List<FeedItem> feedItemsList = new ArrayList<FeedItem>(5);\n-        List<Integer> idList = new ArrayList<Integer>();\n-\n-        idList.add(980);\n-        idList.add(324);\n-        idList.add(226);\n-        idList.add(164);\n-        idList.add(854);\n-\n-        for (int i = 0; i < 5; i++) {\n-            FeedItem item = createFeedItem(feedLink, itemLink);\n-            item.setId(idList.get(i));\n-            feedItemsList.add(item);\n-        }\n-\n-        long[] actual = FeedItemUtil.getIds(feedItemsList);\n-\n-        // covers edge case for getIds() method\n-        List<FeedItem> emptyList = new ArrayList<FeedItem>();\n-        long[] testEmptyList = FeedItemUtil.getIds(emptyList);\n-        assertEquals(msg, 0, testEmptyList.length);\n-        assertEquals(msg, 980, actual[0]);\n-        assertEquals(msg, 324, actual[1]);\n-        assertEquals(msg, 226, actual[2]);\n-        assertEquals(msg, 164, actual[3]);\n-        assertEquals(msg, 854, actual[4]);\n-\n-    }\n-\n-    // Tests the Null value for getLinkWithFallback() method\n-    @Test\n-    public void testLinkWithFallbackNullValue() {\n-        String actual = FeedItemUtil.getLinkWithFallback(null);\n-        assertEquals(msg, null, actual);\n-    }\n-\n-\n     @Test\n     public void testLinkWithFallback() {\n-        String actual = FeedItemUtil.getLinkWithFallback(createFeedItem(feedLink, itemLink));\n+        String actual = createFeedItem(feedLink, itemLink).getLinkWithFallback();\n         assertEquals(msg, expected, actual);\n     }\n \ndiff --git a/net/download/service/src/test/java/de/danoeh/antennapod/net/download/service/episode/autodownload/DbWriterTest.java b/net/download/service/src/test/java/de/danoeh/antennapod/net/download/service/episode/autodownload/DbWriterTest.java\nindex 38d3e5dd0d..ccb822a916 100644\n--- a/net/download/service/src/test/java/de/danoeh/antennapod/net/download/service/episode/autodownload/DbWriterTest.java\n+++ b/net/download/service/src/test/java/de/danoeh/antennapod/net/download/service/episode/autodownload/DbWriterTest.java\n@@ -36,7 +36,6 @@\n import de.danoeh.antennapod.model.feed.FeedMedia;\n import de.danoeh.antennapod.storage.preferences.PlaybackPreferences;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n-import de.danoeh.antennapod.core.util.FeedItemUtil;\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n@@ -610,17 +609,12 @@ public void testAddQueueItemMultipleItems() throws Exception {\n         Cursor cursor = adapter.getQueueIDCursor();\n         assertTrue(cursor.moveToFirst());\n         assertEquals(numItems, cursor.getCount());\n-        List<Long> expectedIds;\n-        expectedIds = FeedItemUtil.getIdList(feed.getItems());\n-        List<Long> actualIds = new ArrayList<>();\n         for (int i = 0; i < numItems; i++) {\n             assertTrue(cursor.moveToPosition(i));\n-            actualIds.add(cursor.getLong(0));\n+            assertEquals(feed.getItems().get(i).getId(), cursor.getLong(0));\n         }\n         cursor.close();\n         adapter.close();\n-        assertEquals(\"Bulk add to queue: result order should be the same as the order given\",\n-                expectedIds, actualIds);\n     }\n \n     @Test\ndiff --git a/core/src/test/java/de/danoeh/antennapod/core/util/ReleaseScheduleGuesserRealWorldTest.java b/storage/database/src/test/java/de/danoeh/antennapod/storage/database/ReleaseScheduleGuesserRealWorldTest.java\nsimilarity index 93%\nrename from core/src/test/java/de/danoeh/antennapod/core/util/ReleaseScheduleGuesserRealWorldTest.java\nrename to storage/database/src/test/java/de/danoeh/antennapod/storage/database/ReleaseScheduleGuesserRealWorldTest.java\nindex dd3cd763b8..3bcdb21aa4 100644\n--- a/core/src/test/java/de/danoeh/antennapod/core/util/ReleaseScheduleGuesserRealWorldTest.java\n+++ b/storage/database/src/test/java/de/danoeh/antennapod/storage/database/ReleaseScheduleGuesserRealWorldTest.java\n@@ -1,4 +1,4 @@\n-package de.danoeh.antennapod.core.util;\n+package de.danoeh.antennapod.storage.database;\n \n import de.danoeh.antennapod.parser.feed.util.DateUtils;\n import org.apache.commons.io.IOUtils;\n@@ -73,9 +73,12 @@ public void testRealWorld() throws Exception {\n \n             final boolean is3hoursClose = Math.abs(dateActual.getTime() - guess.nextExpectedDate.getTime())\n                     < 3 * ReleaseScheduleGuesser.ONE_HOUR;\n-            System.out.println(lineNr + \" guessed: \" + DATE_FORMAT.format(guess.nextExpectedDate)\n-                    + \", actual: \" + DATE_FORMAT.format(dateActual)\n-                    + \" \" + guess.schedule.name() + (is3hoursClose ? \" \u2714\" : \"\"));\n+            //noinspection ConstantValue\n+            if (false) {\n+                System.out.println(lineNr + \" guessed: \" + DATE_FORMAT.format(guess.nextExpectedDate)\n+                        + \", actual: \" + DATE_FORMAT.format(dateActual)\n+                        + \" \" + guess.schedule.name() + (is3hoursClose ? \" \u2714\" : \"\"));\n+            }\n             long deltaTime = dateActual.getTime() - guess.nextExpectedDate.getTime();\n             int histogramClass = (int) Math.max(0, Math.min(100, deltaTime / ReleaseScheduleGuesser.ONE_HOUR + 50));\n             histogram[histogramClass]++;\ndiff --git a/core/src/test/java/de/danoeh/antennapod/core/util/ReleaseScheduleGuesserTest.java b/storage/database/src/test/java/de/danoeh/antennapod/storage/database/ReleaseScheduleGuesserTest.java\nsimilarity index 94%\nrename from core/src/test/java/de/danoeh/antennapod/core/util/ReleaseScheduleGuesserTest.java\nrename to storage/database/src/test/java/de/danoeh/antennapod/storage/database/ReleaseScheduleGuesserTest.java\nindex aaad125c97..92fcbbea01 100644\n--- a/core/src/test/java/de/danoeh/antennapod/core/util/ReleaseScheduleGuesserTest.java\n+++ b/storage/database/src/test/java/de/danoeh/antennapod/storage/database/ReleaseScheduleGuesserTest.java\n@@ -1,4 +1,4 @@\n-package de.danoeh.antennapod.core.util;\n+package de.danoeh.antennapod.storage.database;\n \n import org.junit.Test;\n \n@@ -8,10 +8,10 @@\n import java.util.Date;\n import java.util.Locale;\n \n-import static de.danoeh.antennapod.core.util.ReleaseScheduleGuesser.ONE_DAY;\n-import static de.danoeh.antennapod.core.util.ReleaseScheduleGuesser.ONE_HOUR;\n-import static de.danoeh.antennapod.core.util.ReleaseScheduleGuesser.ONE_MINUTE;\n-import static de.danoeh.antennapod.core.util.ReleaseScheduleGuesser.performGuess;\n+import static de.danoeh.antennapod.storage.database.ReleaseScheduleGuesser.ONE_DAY;\n+import static de.danoeh.antennapod.storage.database.ReleaseScheduleGuesser.ONE_HOUR;\n+import static de.danoeh.antennapod.storage.database.ReleaseScheduleGuesser.ONE_MINUTE;\n+import static de.danoeh.antennapod.storage.database.ReleaseScheduleGuesser.performGuess;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n \ndiff --git a/core/src/test/resources/release_dates.csv b/storage/database/src/test/resources/release_dates.csv\nsimilarity index 100%\nrename from core/src/test/resources/release_dates.csv\nrename to storage/database/src/test/resources/release_dates.csv\ndiff --git a/core/src/test/resources/release_dates.sh b/storage/database/src/test/resources/release_dates.sh\nold mode 100755\nnew mode 100644\nsimilarity index 100%\nrename from core/src/test/resources/release_dates.sh\nrename to storage/database/src/test/resources/release_dates.sh\n", "problem_statement": "Modularize code to improve testability\n# Checklist\r\n<!-- Place an x in the boxes to tick them: [x] -->\r\n\r\n- [x] I have used the search function to see if someone else has already submitted the same feature request.\r\n- [x] I will only create one feature request per issue.\r\n- [x] I will describe the problem with as much detail as possible.\r\n\r\n# System info\r\n\r\n**App version**: 2.0.3\r\n<!-- The latest version may be different depending on your device. You can find the version in AntennaPod's settings. -->\r\n\r\n**App source**: not relevant\r\n<!-- Please delete irrelevant answer or fill in the blank -->\r\n\r\n# Feature description\r\n\r\n**Problem you may be having, or feature you want**:\r\n<!-- Give a brief explanation about the problem that may currently exist -->\r\n\r\nWhile investigating in #4569 to provide more unit tests I realized that the source code is very hard to unit test because it heavily uses static fields, static methods, and the package dependencies are very cyclic, see chart below.\r\n\r\n**Suggested solution**:\r\n<!-- Describe how your requested feature solves this problem. Try to be as specific as possible. Please not only explain what the feature does, but also how. -->\r\n\r\nTo improve testability the code would need some refactoring: The package structure should be acyclic, coupling between packages should be as low as possible.\r\n\r\n1. Do you think it is realistic to do refactoring step by step to make the code more testable via unit tests?\r\n2. Is it a desirable goal to improve testability as it might require a lot of effort, or are you almost happy with the (unit and integration) tests we have so far and spend the time mainly on new features?\r\n\r\n**Screenshots / Drawings / Technical details**:\r\n<!-- If your request is about (or includes) changing or extending the UI, describe what the UI would look like and how the user would interact with it. -->\r\n\r\nAntennaPod currently has about 54 kLOC in more than 480 Java classes.\r\n\r\nJava package dependency graph:\r\n(only shows packages starting with `de.danoeh.antennapod`, same color = same package depth)\r\n\r\n![graph](https://user-images.githubusercontent.com/46045854/98408256-28a18780-2071-11eb-9098-03bedabb6273.png)\r\n\n", "hints_text": "> The package structure should be acyclic, coupling between packages should be as low as possible.\r\n\r\n100% agree. AntennaPod's code base has historically grown. Even model objects like the \"FeedItem\" class perform database queries. The code is a real mess in many places. Over the past 3 years, I have reworked quite a few monsterous classes but it is still far from being a good code structure.\r\n\r\nThanks for generating the dependency graph. It's even worse than what I thought. There hardly is any package that is not inside a cycle.\r\n\r\n> are you almost happy with the (unit and integration) tests we have so far and spend the time mainly on new features?\r\n\r\nI spend most of my time fixing bugs. Then new features. If there is still time left, I maybe do some code cleanup. I'm definitely not happy about the code structure, though. And I would probably have to spend less time doing bug fixes if the code had more tests.\r\n\r\nA long-term goal would be to be able to separate the code base into multiple gradle modules (model, feed parser, media file parser, etc). I don't like the type of commits that touch everything at once because it creates conflicts in PRs and clutters the git history. So I think it would be best to start gradually and try to break some of the cycles. If one part (eg. the model) is completely free of dependencies, the files can be moved to a new gradle module (without code changes). I hope that this procedure then avoids completely breaking `git bisect`, which I use pretty much during bug fixing. Using gradle modules ensures that the graph stays acyclic because you simply can't access other gradle modules without thinking about it explicitly.\r\n\r\nI am also wondering if the package structure in AntennaPod should be changed generally. Currently, classes are sorted by type (adapters, fragments, etc). Maybe it would be more clear if we sorted them by their use within the app (audio player: fragment + views + adapters. Queue: fragment + adapter, ...). The separation into `app` and `core` module has lead to quite a number of strange constructs with static variables, too. The core module was once used to allow creating white-labeled apps but that time is long gone.\r\n\r\nIf you are interested in helping to make the code structure more clean, that would be really appreciated!\nI think rewriting it from scratch is far more efficient than breaking intertwined package cycles (if it's possible at all), in my experience.\nThat's what K-9 mail is doing since more than 2 years (and it is still not finished). In that time, their rating dropped significantly because users think that the project is abandoned. Also considering the fact that Google seems to rank apps based on their update behavior, a rewrite from scratch is not a path I want to go. We need to compete with commercial platforms that currently destroy the open podcast ecosystem instead of spending our time rewriting for the next 2 years.\nAfter a rough review of the packages I can imagine to structure the AntennaPod software architecture in the following way:\r\n\r\n![modules-refactoring](https://user-images.githubusercontent.com/46045854/99196982-c131b900-278f-11eb-9d42-a5cb0daa13be.png)\r\n\r\n**Module :app**\r\nResponsible for user interaction. Keeps all the packages it has now.\r\n\r\n**Module :feed**\r\nProvides an API for the :app module to read and modify feeds. Most of the non-ui business logic will be located here, mainly covers the current package `de.danoeh.antennapod.core.feed`.\r\n\r\n**Module :eventbus**\r\nProvides the EventBus (`org.greenrobot.eventbus.EventBus`), wraps the required access methods via non-static variables and methods.\r\n\r\n**Module :storage**\r\nProvides access to the feed data base, preferences and export/import. Mainly covers the current packages\r\n- `de.danoeh.antennapod.core.export`\r\n- `de.danoeh.antennapod.core.preferences`\r\n- `de.danoeh.antennapod.core.storage`\r\n\r\n**Module :communication**\r\nResponsible for all external communication, e.g. downloading feed data, synchronization with gpodder.net. Mainly covers the current packages\r\n- `de.danoeh.antennapod.core.service.download`\r\n- `de.danoeh.antennapod.core.ssl`\r\n- `de.danoeh.antennapod.core.sync`\r\n\r\nI suggest to start with the base modules `:eventbus`, `:storage:`, and `:communication`. First, we add a new module and then refactor all usages step by step. Important requirements are to allow only downward dependencies, no upward dependencies, and to avoid static variables and methods to provide a good testability via unit tests without the usage of `mockStatic` and other dirty hacks.\r\n\r\nAny comments on the approach? Anything else we should consider?\r\n\r\nShall we use Gradle modules to ensure only allowed dependencies? A more lightweight approach could be to check package dependencies via unit tests with e.g. [JDepend](https://github.com/clarkware/jdepend).\nI think we should first try to separate a \"model\" module (Feed, FeedItem, Chapter). Then it should be possible to move feed parsing and chapter parsing to their own modules (both depending on the model). I have not compared your graph with your suggested module structure in more detail yet but I think even with your structure, we need a \"model\" module.\r\n\r\n> Module :communication\r\n\r\nThis one could be hard to separate. It displays notifications which link to the main pages of the app. Not sure how that could be achieved if it does not have access to the main page. Child classes in the app module?\r\n\r\n> Shall we use Gradle modules to ensure only allowed dependencies?\r\n\r\nI think gradle modules would be nice.\n> I think we should first try to separate a \"model\" module (Feed, FeedItem, Chapter).\r\n\r\nA common data model is a very popular approach. But I want to emphasize a significant disadvantage: Most fields are kept optional (i.e. they can be null or empty) what makes the usage of the model error prone und complicated. So the model is like a superset of the fields required for several method calls. I collected some examples in AntennaPod:\r\n\r\n* The methods `DBReader.getFeedList()` and `DBTasks.searchFeeds()` return a list of `Feed` objects with an empty `feed.items` list.\r\n* The method `DBReader.loadDescriptionOfFeedItem(FeedItem item)` fills the fields `item.description` and `item.contentEncoded` which are `null` for all other method calls.\r\n* Whenever the methods `DownloadRequester.downloadFeed(..., Feed feed, ...)` and `DownloadRequester.createRequest(FeedFile feed, ...)` are called, almost all fields in `feed` are `null` except the field `download_url` and a few others.\r\n* The method `FeedHandler.parseFeed(Feed feed)` only uses the fields `download_url`, `file_url`, `type`, and `language` (only 4 of 23 fields).\r\n\r\nAlternatively, a more slim approach could be to let every module provide its own model that only covers the fields supported by its API. For example, the classes `SyncService` and `GpodnetService` provide their own model classes in their `model` sub packages and thus perfectly fit to their API. If necessary, code using two modules needs to have some glue code to convert data from one model to another model.\r\n\r\nWhat do you prefer?\r\n\r\n>> Module :communication\r\n\r\n> This one could be hard to separate. It displays notifications which link to the main pages of the app. Not sure how that could be achieved if it does not have access to the main page. Child classes in the app module?\r\n\r\nI can imagine to use the `EventBus` to display notifications, this would technically uncouple the UI from the business logic in that case. But I haven't checked the details in that cases.\r\n\r\n> I think gradle modules would be nice.\r\n\r\n:+1:\nRefactoring that code is really good idea. I would create at least 10 modules. One module should contain only few packages and every package should contain only few classes. Networking, persistence, view, event handling, model, utility, parsers etc.\r\n\r\nI encourage to consider using libraries like Lombok which reduce boilerplate. I never used [Android Jetpack](https://developer.android.com/jetpack/getting-started) but its worth looking into.\r\n\r\nThere are also tools for automatic code refactoring, some built in Android Studio. That will iterate through classes and refactor them. \r\n\r\nUnrelated question, probably to @ByteHamster , is it common practice in android development to use internal android package name to put implemented classes in? For ex. `com.google.android.material.bottomsheet.ViewPagerBottomSheetBehavior` .\nI suggest we roll up our sleeves and tackle changes to the code to make testing easier instead of talking about it.\n\nI would expect any of those PRs to add a test for each refactoring.\n\nCould we close this issue and get to work on it?\ud83d\ude01\n> Unrelated question, probably to @ByteHamster , is it common practice in android development to use internal android package name to put implemented classes in? For ex. com.google.android.material.bottomsheet.ViewPagerBottomSheetBehavior .\r\n\r\nThat's not a common practice but a hack to make it possible to extend a protected class\nSorry for the late reply @damoasda.\r\n\r\n> Alternatively, a more slim approach could be to let every module provide its own model that only covers the fields supported by its API.\r\n\r\nMost modules need access to the `Feed`, `FeedItem`, etc classes. I don't think those should be duplicated and converted for every single module. So I think as a first step, those could be separated (see also #4842). If that is done, we can already create modules for quite a few parts of the app (chapter parser, feed parser, OPML export, sync, maybe even database handling).\nMany parts of the app need to start the main activity with different parameters (eg. widget, playback service, download service, sync). Any idea how to do that while still de-coupling the code? Currently, we use a ton of static variables in `ClientConfig` [that are then set from the app module](https://github.com/AntennaPod/AntennaPod/blob/3f31764f58bdb8aab9182f3aa960ed827df42b9c/app/src/main/java/de/danoeh/antennapod/config/ClientConfigurator.java) but that is not really pretty.\nThat's the most difficult part of de-coupling the code. The class `ClientConfig` contains a collection of global references that might be dissolved in different steps:\r\n\r\n1) **`ClientConfig.applicationCallbacks`** is used to provide the `Context` reference and to return a new `StorageErrorActivity` intent. Possible solution:\r\n-- Hand over the `Context` reference as an additional parameter in the corresponding helper methods.\r\n-- Move the method `applicationCallbacks.getStorageErrorActivity()` body into the method `StorageUtils.checkStorageAvailability()` as it is the only place that uses the method.\r\n\r\n2) **`ClientConfig.downloadServiceCallbacks`** provides helper methods for the `DownloadService`.\r\nPossible solution: Move `DownloadService` to app module.\r\n\r\n3) **`ClientConfig.playbackServiceCallbacks`** provides a single method getPlayerActivityIntent() that is used by the `PlaybackService`.\r\nPossible solution: Move `PlaybackService` to app module.\r\n\r\n4) **`ClientConfig.automaticDownloadAlgorithm`** is only used by `DBTasks.autodownloadUndownloadedItems()` which is called by `DownloadService`, `DBWriter`, `ConnectivityActionReceiver`, and `PowerConnectionReceiver`. As both, the implementation and its usage are in  the `core` module, it should be easy to get rid of the field `ClientConfig.automaticDownloadAlgorithm`.\r\n\r\n5) **`ClientConfig.castCallbacks`** is only used by `CastManager` for the \"play\" flavour to access a fragment.\r\nPossible solution: Move `CastManager` to app module.\nI had another idea for how to start the main activity (eg from DownloadService) that could work without moving all services to the same module. We could create an `intents` module that can send a specific intent. The intent is then picked up and interpreted by the main activity. I will try to come up with a proof-of-concept.\nVery interesting. That sounds similar to the `EventBus` that could be an alternative.\nEventBus only works when the app is already started but the idea is pretty much the same, yeah :)\nI just tried to come up with a more detailed module structure. Looks a lot more cluttered than yours but I think it could be good to make it more detailed, so that the code is as decoupled as possible. (click to enlarge)\r\n\r\n![modules](https://user-images.githubusercontent.com/5811634/131211095-7c38abec-09c8-4101-a929-23b6194a17a2.png)\r\n\r\nWhat do you think?\r\n\r\nEdit: Green modules are already done.\nWow, that's awesome! The graph is acyclic, the services are separated, and also the UI is split into several logic units.\r\n\r\nMaybe we will identify more module candidates like \":storage:export\" during the refactoring work or we will merge two modules again because the dependencies are too hard to dissolve. But that's fully ok and a concession to practice. :smile:\r\n\r\nI'd be happy to start with your modularization approach.\nOkay, nice :) Now that the `:app-start-intent` module is separated, we have to deal with the model module. Without that module, most others cannot be modularized. @widlok already started working on this in #4842 but the PR got a bit too big to handle. So I suggest to start with small steps and multiple individual PRs before actually creating the module. Some ideas for small chunks of work that could be done in individual PRs:\r\n\r\n- [x] Remove `Cursor` related code from the model, as it is database specific\r\n- [x] Decouple loading shownotes (I think this should be done after #3974 is merged)\r\n- [x] Decouple loading chapter marks\r\n- [x] Decouple saving FeedPreferences\r\n- [x] `loadMetadata` in FeedMedia\r\n- [x] `saveCurrentPosition` should be performed outside the model\r\n\r\nOnce all of that is done, I think we can move some model classes to their own module\nJust in case you run into problems in Android Studio where the modules are not displayed in the correct subfolders, try closing AS, then deleting `AntennaPod/.idea/modules.xml` and `AntennaPod/.idea/modules/*`. Took me a while to figure this out.\n@ByteHamster Hi, I would like to offer my help in the refactoring efforts. \r\nLet me know where I can start. \r\nFor now, I have a few suggestions I thought i'd throw out there. \r\n1. Have designated developer be resposnbile for their own module(s).\r\n2. I would like to be assigned to work on storage or may eveentbus.\r\n\n> I would like to offer my help in the refactoring efforts.\r\n\r\nAwesome!\r\n\r\n> I would like to be assigned to work on storage or may eveentbus.\r\n\r\nFirst, we need to uncouple the model from the rest of the code. When that is done, we can start to do other modules (see https://github.com/AntennaPod/AntennaPod/issues/4661#issuecomment-778614258). If you want to do a PR like #4968 (but for another class), that would be great.\r\n\r\nAbout EventBus: I think we should change some of the events. Currently, every page in the app basically receives every event. I would love if it could be simplified to fewer events but that needs some more thinking to still be efficient and flexible. Maybe event subclasses could help in case that's supported by EventBus. Anyway, the model needs to be changed first :)\n@ByteHamster Awesome! I'll get to it as soon as possible. Also, it seem you introduced some lint errors when you push a commit for #5108. It would be great if we can resolve this and finally merge this. That would be one less PR to have to think about. \nDecoupling the model module will finally be done in #5129 :)\nThis issue has been mentioned on **AntennaPod Forum**. There might be relevant details there:\n\nhttps://forum.antennapod.org/t/antennapod-2-3-0-release-notes/1047/1\n\n@damoasda What tool did you use to generate the dependency graph?\nI used [Graphviz](https://graphviz.org/).\nAnd how did you analyze the code to get a Graphviz file?\nI think I used the JDK tool jdeps. I found a note calling a command like this:\r\n`jdeps --no-recursive -verbose:package --regex ^de.danoeh.antennapod..* --dot-output . core`\nThanks! So what I ended up doing was to run these commands\r\n\r\n```\r\n./gradlew assembleDebug\r\nfind -name \"*.class\" | xargs /usr/lib/jvm/default/bin/jdeps --dot-output __dependencies\r\ncp __dependencies/summary.dot dependencies.dot\r\nrm -r __dependencies\r\nsed -i 's/\\$[^\\.]*\\././g' dependencies.dot # Replaces inner classes with top class\r\n```\r\n\r\nThen I used `gephi` to (manually, repeatedly) remove nodes that have `indegree==0` or `outdegree==0`. This leaves us with a quite small number of 31 classes that are strongly connected. Once these dependencies are decoupled, the classes can be \"peeled\" to different modules without any dependency cycles.\r\n\r\nA first decoupling of bloated utility classes (#6176) reduces the number of problematic classes down to only 19. The strongly connected classes give a quite nice overview about what needs to be done here.\r\n\r\n![screenshot_233437](https://user-images.githubusercontent.com/5811634/199615526-46dcc074-6f42-47ff-ad14-8adf40ab9afa.png)\nMaking some more progress in #6176. We are down to 11 problematic classes.\r\n\r\n![screenshot_232435](https://user-images.githubusercontent.com/5811634/199845990-340c2bb4-7f16-47c6-b7d1-561a58eb06b4.png)\r\n\r\nNow it gets kind of hard, though. We have a ton of real dependencies here. Not just bloated utility classes. For example, the Synchronization feature needs access to the database to store the new state. At the same time, the database needs access to the sync service to upload possible changes.\r\n\r\nMaybe we need to hide some classes behind an interface and then keep a reference to an actual implementation somewhere.That's not totally elegant, though. For the sync service, that should work rather easily, at least.\nWhen this is done, we can create nice module graphs for developer documentation using this gradle plugin: https://github.com/iurysza/module-graph/tree/main\nThe `core` module still does too many things but it is getting there...\r\n\r\n![grafik](https://github.com/AntennaPod/AntennaPod/assets/5811634/3f584416-6992-47b5-8e23-19faa0f7850e)\r\n", "created_at": "2024-04-04T21:23:17Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 7011, "instance_id": "AntennaPod__AntennaPod-7011", "issue_numbers": ["7007"], "base_commit": "27aa5cba96299dd14569f8a5f6da60bb88352d60", "patch": "diff --git a/app/build.gradle b/app/build.gradle\nindex d0958cd17f..559e36a3ff 100644\n--- a/app/build.gradle\n+++ b/app/build.gradle\n@@ -125,9 +125,6 @@ dependencies {\n     implementation 'com.github.skydoves:balloon:1.5.3'\n     implementation 'com.github.xabaras:RecyclerViewSwipeDecorator:1.3'\n \n-    // Non-free dependencies:\n-    playImplementation \"com.google.android.play:review:2.0.1\"\n-\n     androidTestImplementation \"org.awaitility:awaitility:$awaitilityVersion\"\n     androidTestImplementation 'com.nanohttpd:nanohttpd:2.1.1'\n     androidTestImplementation \"androidx.test.espresso:espresso-core:$espressoVersion\"\ndiff --git a/app/src/free/java/de/danoeh/antennapod/dialog/RatingDialog.java b/app/src/free/java/de/danoeh/antennapod/dialog/RatingDialog.java\ndeleted file mode 100644\nindex ec470eee62..0000000000\n--- a/app/src/free/java/de/danoeh/antennapod/dialog/RatingDialog.java\n+++ /dev/null\n@@ -1,13 +0,0 @@\n-package de.danoeh.antennapod.dialog;\n-\n-import android.content.Context;\n-import androidx.annotation.VisibleForTesting;\n-\n-public class RatingDialog {\n-    public static void init(Context context) {}\n-\n-    public static void check() {}\n-\n-    @VisibleForTesting\n-    public static void saveRated() {}\n-}\n\\ No newline at end of file\ndiff --git a/app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java b/app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java\nindex d38d4e3ad6..3c867b88c2 100644\n--- a/app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java\n+++ b/app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java\n@@ -39,7 +39,7 @@\n import de.danoeh.antennapod.ui.common.ThemeSwitcher;\n import de.danoeh.antennapod.core.sync.queue.SynchronizationQueueSink;\n import de.danoeh.antennapod.core.util.download.FeedUpdateManager;\n-import de.danoeh.antennapod.dialog.RatingDialog;\n+import de.danoeh.antennapod.dialog.rating.RatingDialogManager;\n import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.event.FeedUpdateRunningEvent;\n import de.danoeh.antennapod.event.MessageEvent;\n@@ -496,14 +496,13 @@ protected void onRestoreInstanceState(Bundle savedInstanceState) {\n     public void onStart() {\n         super.onStart();\n         EventBus.getDefault().register(this);\n-        RatingDialog.init(this);\n+        new RatingDialogManager(this).showIfNeeded();\n     }\n \n     @Override\n     protected void onResume() {\n         super.onResume();\n         handleNavIntent();\n-        RatingDialog.check();\n \n         if (lastTheme != ThemeSwitcher.getNoTitleTheme(this)) {\n             finish();\ndiff --git a/app/src/main/java/de/danoeh/antennapod/dialog/rating/RatingDialogFragment.java b/app/src/main/java/de/danoeh/antennapod/dialog/rating/RatingDialogFragment.java\nnew file mode 100644\nindex 0000000000..4e9da8b9a1\n--- /dev/null\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/rating/RatingDialogFragment.java\n@@ -0,0 +1,79 @@\n+package de.danoeh.antennapod.dialog.rating;\n+\n+import android.app.Dialog;\n+import android.content.DialogInterface;\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.core.text.HtmlCompat;\n+import androidx.fragment.app.DialogFragment;\n+import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.core.util.IntentUtils;\n+import de.danoeh.antennapod.databinding.RatingDialogBinding;\n+import de.danoeh.antennapod.ui.common.DateFormatter;\n+\n+import java.util.Date;\n+\n+public class RatingDialogFragment extends DialogFragment {\n+    private static final String EXTRA_TOTAL_TIME = \"totalTime\";\n+    private static final String EXTRA_OLDEST_DATE = \"oldestDate\";\n+\n+    public static RatingDialogFragment newInstance(long totalTime, long oldestDate) {\n+        RatingDialogFragment fragment = new RatingDialogFragment();\n+        Bundle arguments = new Bundle();\n+        arguments.putLong(EXTRA_TOTAL_TIME, totalTime);\n+        arguments.putLong(EXTRA_OLDEST_DATE, oldestDate);\n+        fragment.setArguments(arguments);\n+        return fragment;\n+    }\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+        return new MaterialAlertDialogBuilder(getContext())\n+                .setView(onCreateView(getLayoutInflater(), null, savedInstanceState))\n+                .create();\n+    }\n+\n+    @Nullable\n+    @Override\n+    public View onCreateView(@NonNull LayoutInflater inflater,\n+                             @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n+        RatingDialogBinding viewBinding = RatingDialogBinding.inflate(inflater);\n+        long totalTime = getArguments().getLong(EXTRA_TOTAL_TIME, 0);\n+        long oldestDate = getArguments().getLong(EXTRA_OLDEST_DATE, 0);\n+\n+        viewBinding.headerLabel.setText(HtmlCompat.fromHtml(getString(R.string.rating_tagline,\n+                DateFormatter.formatAbbrev(getContext(), new Date(oldestDate)),\n+                \"<br/><b><big><big><big><big><big>\", totalTime / 3600L,\n+                \"</big></big></big></big></big></b><br/>\"), HtmlCompat.FROM_HTML_MODE_LEGACY));\n+        viewBinding.neverAgainButton.setOnClickListener(v -> {\n+            new RatingDialogManager(getActivity()).saveRated();\n+            dismiss();\n+        });\n+        viewBinding.showLaterButton.setOnClickListener(v -> {\n+            new RatingDialogManager(getActivity()).resetStartDate();\n+            dismiss();\n+        });\n+        viewBinding.rateButton.setOnClickListener(v -> {\n+            IntentUtils.openInBrowser(getContext(),\n+                    \"https://play.google.com/store/apps/details?id=de.danoeh.antennapod\");\n+            new RatingDialogManager(getActivity()).saveRated();\n+        });\n+        viewBinding.contibuteButton.setOnClickListener(v -> {\n+            IntentUtils.openInBrowser(getContext(), IntentUtils.getLocalizedWebsiteLink(getContext()) + \"/contribute/\");\n+            new RatingDialogManager(getActivity()).saveRated();\n+        });\n+        return viewBinding.getRoot();\n+    }\n+\n+    @Override\n+    public void onCancel(@NonNull DialogInterface dialog) {\n+        super.onCancel(dialog);\n+        new RatingDialogManager(getActivity()).resetStartDate();\n+    }\n+}\ndiff --git a/app/src/main/java/de/danoeh/antennapod/dialog/rating/RatingDialogManager.java b/app/src/main/java/de/danoeh/antennapod/dialog/rating/RatingDialogManager.java\nnew file mode 100644\nindex 0000000000..ffa67cc2ee\n--- /dev/null\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/rating/RatingDialogManager.java\n@@ -0,0 +1,94 @@\n+package de.danoeh.antennapod.dialog.rating;\n+\n+import android.content.Context;\n+import android.content.SharedPreferences;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+import android.util.Log;\n+import androidx.fragment.app.FragmentActivity;\n+import de.danoeh.antennapod.core.BuildConfig;\n+import de.danoeh.antennapod.core.storage.DBReader;\n+import de.danoeh.antennapod.core.storage.StatisticsItem;\n+import io.reactivex.Observable;\n+import io.reactivex.android.schedulers.AndroidSchedulers;\n+import io.reactivex.disposables.Disposable;\n+import io.reactivex.schedulers.Schedulers;\n+import kotlin.Pair;\n+\n+public class RatingDialogManager {\n+    private static final int AFTER_DAYS = 20;\n+    private static final String TAG = \"RatingDialog\";\n+    private static final String PREFS_NAME = \"RatingPrefs\";\n+    private static final String KEY_RATED = \"KEY_WAS_RATED\";\n+    private static final String KEY_FIRST_START_DATE = \"KEY_FIRST_HIT_DATE\";\n+\n+    private final SharedPreferences preferences;\n+    private final FragmentActivity fragmentActivity;\n+    private Disposable disposable;\n+\n+    public RatingDialogManager(FragmentActivity activity) {\n+        this.fragmentActivity = activity;\n+        preferences = activity.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);\n+    }\n+\n+    public void showIfNeeded() {\n+        //noinspection ConstantConditions\n+        if (isRated() || BuildConfig.DEBUG || \"free\".equals(BuildConfig.FLAVOR)) {\n+            return;\n+        } else if (!enoughTimeSinceInstall()) {\n+            return;\n+        }\n+\n+        if (disposable != null) {\n+            disposable.dispose();\n+        }\n+        disposable = Observable.fromCallable(\n+                () -> {\n+                    DBReader.StatisticsResult statisticsData = DBReader.getStatistics(false, 0, Long.MAX_VALUE);\n+                    long totalTime = 0;\n+                    for (StatisticsItem item : statisticsData.feedTime) {\n+                        totalTime += item.timePlayed;\n+                    }\n+                    return new Pair<>(totalTime, statisticsData.oldestDate);\n+                })\n+                .subscribeOn(Schedulers.io())\n+                .observeOn(AndroidSchedulers.mainThread())\n+                .subscribe(result -> {\n+                    long totalTime = result.getFirst();\n+                    long oldestDate = result.getSecond();\n+                    if (totalTime < TimeUnit.SECONDS.convert(15, TimeUnit.HOURS)) {\n+                        return;\n+                    } else if (oldestDate > System.currentTimeMillis()\n+                            - TimeUnit.MILLISECONDS.convert(AFTER_DAYS, TimeUnit.DAYS)) {\n+                        return; // In case the app was opened but nothing was played\n+                    }\n+                    RatingDialogFragment.newInstance(result.getFirst(), result.getSecond())\n+                            .show(fragmentActivity.getSupportFragmentManager(), TAG);\n+                }, error -> Log.e(TAG, Log.getStackTraceString(error)));\n+    }\n+\n+    private boolean isRated() {\n+        return preferences.getBoolean(KEY_RATED, false);\n+    }\n+\n+    public void saveRated() {\n+        preferences.edit().putBoolean(KEY_RATED, true).apply();\n+    }\n+\n+    public void resetStartDate() {\n+        preferences.edit().putLong(KEY_FIRST_START_DATE, System.currentTimeMillis()).apply();\n+    }\n+\n+    private boolean enoughTimeSinceInstall() {\n+        if (preferences.getLong(KEY_FIRST_START_DATE, 0) == 0) {\n+            resetStartDate();\n+            return false;\n+        }\n+        long now = System.currentTimeMillis();\n+        long firstDate = preferences.getLong(KEY_FIRST_START_DATE, now);\n+        long diff = now - firstDate;\n+        long diffDays = TimeUnit.DAYS.convert(diff, TimeUnit.MILLISECONDS);\n+        return diffDays >= AFTER_DAYS;\n+    }\n+}\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/preferences/MainPreferencesFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/preferences/MainPreferencesFragment.java\nindex 4d73132473..bf30700bf8 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/preferences/MainPreferencesFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/preferences/MainPreferencesFragment.java\n@@ -17,13 +17,6 @@\n import de.danoeh.antennapod.activity.PreferenceActivity;\n import de.danoeh.antennapod.core.util.IntentUtils;\n import de.danoeh.antennapod.fragment.preferences.about.AboutFragment;\n-import org.apache.commons.io.IOUtils;\n-import org.apache.commons.lang3.ArrayUtils;\n-\n-import java.io.IOException;\n-import java.io.InputStream;\n-import java.nio.charset.StandardCharsets;\n-import java.util.Locale;\n \n public class MainPreferencesFragment extends PreferenceFragmentCompat {\n \n@@ -113,7 +106,8 @@ private void setupMainScreen() {\n                 }\n         );\n         findPreference(PREF_DOCUMENTATION).setOnPreferenceClickListener(preference -> {\n-            IntentUtils.openInBrowser(getContext(), getLocalizedWebsiteLink() + \"/documentation/\");\n+            IntentUtils.openInBrowser(getContext(),\n+                    IntentUtils.getLocalizedWebsiteLink(getContext()) + \"/documentation/\");\n             return true;\n         });\n         findPreference(PREF_VIEW_FORUM).setOnPreferenceClickListener(preference -> {\n@@ -121,7 +115,8 @@ private void setupMainScreen() {\n             return true;\n         });\n         findPreference(PREF_CONTRIBUTE).setOnPreferenceClickListener(preference -> {\n-            IntentUtils.openInBrowser(getContext(), getLocalizedWebsiteLink() + \"/contribute/\");\n+            IntentUtils.openInBrowser(getContext(),\n+                    IntentUtils.getLocalizedWebsiteLink(getContext()) + \"/contribute/\");\n             return true;\n         });\n         findPreference(PREF_SEND_BUG_REPORT).setOnPreferenceClickListener(preference -> {\n@@ -130,20 +125,6 @@ private void setupMainScreen() {\n         });\n     }\n \n-    private String getLocalizedWebsiteLink() {\n-        try (InputStream is = getContext().getAssets().open(\"website-languages.txt\")) {\n-            String[] languages = IOUtils.toString(is, StandardCharsets.UTF_8.name()).split(\"\\n\");\n-            String deviceLanguage = Locale.getDefault().getLanguage();\n-            if (ArrayUtils.contains(languages, deviceLanguage) && !\"en\".equals(deviceLanguage)) {\n-                return \"https://antennapod.org/\" + deviceLanguage;\n-            } else {\n-                return \"https://antennapod.org\";\n-            }\n-        } catch (IOException e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n-\n     private void setupSearch() {\n         SearchPreference searchPreference = findPreference(\"searchPreference\");\n         SearchConfiguration config = searchPreference.getSearchConfiguration();\ndiff --git a/app/src/main/res/layout/rating_dialog.xml b/app/src/main/res/layout/rating_dialog.xml\nnew file mode 100644\nindex 0000000000..c8f3c980b9\n--- /dev/null\n+++ b/app/src/main/res/layout/rating_dialog.xml\n@@ -0,0 +1,100 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<ScrollView\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:orientation=\"vertical\"\n+    android:clipToPadding=\"false\"\n+    android:paddingBottom=\"32dp\">\n+\n+    <LinearLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:orientation=\"vertical\">\n+\n+        <LinearLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:background=\"@drawable/bg_blue_gradient\"\n+            android:orientation=\"horizontal\"\n+            android:paddingVertical=\"32dp\"\n+            android:paddingHorizontal=\"16dp\">\n+\n+            <ImageView\n+                android:layout_width=\"56dp\"\n+                android:layout_height=\"56dp\"\n+                android:layout_gravity=\"center_vertical\"\n+                android:layout_marginLeft=\"8dp\"\n+                android:layout_marginStart=\"8dp\"\n+                android:importantForAccessibility=\"no\"\n+                android:src=\"@drawable/logo_monochrome\" />\n+\n+            <TextView\n+                android:id=\"@+id/headerLabel\"\n+                android:layout_width=\"0dp\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginLeft=\"16dp\"\n+                android:layout_marginStart=\"16dp\"\n+                android:textColor=\"#fff\"\n+                android:layout_weight=\"1\" />\n+\n+        </LinearLayout>\n+\n+        <TextView\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:text=\"@string/rating_volunteers_label\"\n+            android:layout_marginHorizontal=\"32dp\"\n+            android:layout_marginVertical=\"16dp\"\n+            android:textColor=\"?colorOnBackground\" />\n+\n+        <Button\n+            android:id=\"@+id/rateButton\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginHorizontal=\"32dp\"\n+            android:text=\"@string/rating_rate\"\n+            android:layout_gravity=\"right|end\"\n+            style=\"@style/Widget.Material3.Button.OutlinedButton\" />\n+\n+        <TextView\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:text=\"@string/rating_contribute_label\"\n+            android:layout_marginHorizontal=\"32dp\"\n+            android:layout_marginVertical=\"16dp\"\n+            android:textColor=\"?colorOnBackground\" />\n+\n+        <Button\n+            android:id=\"@+id/contibuteButton\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginHorizontal=\"32dp\"\n+            android:text=\"@string/rating_contribute_button\"\n+            android:layout_gravity=\"right|end\"\n+            style=\"@style/Widget.Material3.Button.OutlinedButton\" />\n+\n+        <Button\n+            android:id=\"@+id/showLaterButton\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginHorizontal=\"32dp\"\n+            android:layout_marginTop=\"8dp\"\n+            android:text=\"@string/rating_later\"\n+            android:layout_gravity=\"right|end\"\n+            android:gravity=\"right|end\"\n+            style=\"@style/Widget.Material3.Button.TextButton\" />\n+\n+        <Button\n+            android:id=\"@+id/neverAgainButton\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_marginHorizontal=\"32dp\"\n+            android:text=\"@string/checkbox_do_not_show_again\"\n+            android:layout_gravity=\"right|end\"\n+            android:gravity=\"right|end\"\n+            style=\"@style/Widget.Material3.Button.TextButton\" />\n+\n+    </LinearLayout>\n+\n+</ScrollView>\ndiff --git a/app/src/play/java/de/danoeh/antennapod/dialog/RatingDialog.java b/app/src/play/java/de/danoeh/antennapod/dialog/RatingDialog.java\ndeleted file mode 100644\nindex c38ae26595..0000000000\n--- a/app/src/play/java/de/danoeh/antennapod/dialog/RatingDialog.java\n+++ /dev/null\n@@ -1,123 +0,0 @@\n-package de.danoeh.antennapod.dialog;\n-\n-import android.app.Activity;\n-\n-import android.content.Context;\n-import android.content.SharedPreferences;\n-\n-import androidx.annotation.VisibleForTesting;\n-import android.util.Log;\n-\n-import java.lang.ref.WeakReference;\n-import java.util.concurrent.TimeUnit;\n-\n-import com.google.android.gms.tasks.Task;\n-import com.google.android.play.core.review.ReviewInfo;\n-import com.google.android.play.core.review.ReviewManager;\n-import com.google.android.play.core.review.ReviewManagerFactory;\n-\n-import de.danoeh.antennapod.BuildConfig;\n-\n-public class RatingDialog {\n-\n-    private RatingDialog() {\n-    }\n-\n-    private static final String TAG = RatingDialog.class.getSimpleName();\n-    private static final int AFTER_DAYS = 14;\n-\n-    private static WeakReference<Context> mContext;\n-    private static SharedPreferences mPreferences;\n-\n-    private static final String PREFS_NAME = \"RatingPrefs\";\n-    private static final String KEY_RATED = \"KEY_WAS_RATED\";\n-    private static final String KEY_FIRST_START_DATE = \"KEY_FIRST_HIT_DATE\";\n-    private static final String KEY_NUMBER_OF_REVIEWS = \"NUMBER_OF_REVIEW_ATTEMPTS\";\n-\n-    public static void init(Context context) {\n-        mContext = new WeakReference<>(context);\n-        mPreferences = context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);\n-\n-        long firstDate = mPreferences.getLong(KEY_FIRST_START_DATE, 0);\n-        if (firstDate == 0) {\n-            resetStartDate();\n-        }\n-    }\n-\n-    public static void check() {\n-        if (shouldShow()) {\n-            try {\n-                showInAppReview();\n-            } catch (Exception e) {\n-                Log.e(TAG, Log.getStackTraceString(e));\n-            }\n-        }\n-    }\n-\n-    private static void showInAppReview() {\n-        Context context = mContext.get();\n-        if (context == null) {\n-            return;\n-        }\n-\n-        ReviewManager manager = ReviewManagerFactory.create(context);\n-        Task<ReviewInfo> request = manager.requestReviewFlow();\n-\n-        request.addOnCompleteListener(task -> {\n-            if (task.isSuccessful()) {\n-                ReviewInfo reviewInfo = task.getResult();\n-                Task<Void> flow = manager.launchReviewFlow((Activity) context, reviewInfo);\n-                flow.addOnCompleteListener(task1 -> {\n-                    int previousAttempts = mPreferences.getInt(KEY_NUMBER_OF_REVIEWS, 0);\n-                    if (previousAttempts >= 3) {\n-                        saveRated();\n-                    } else {\n-                        resetStartDate();\n-                        mPreferences\n-                                .edit()\n-                                .putInt(KEY_NUMBER_OF_REVIEWS, previousAttempts + 1)\n-                                .apply();\n-                    }\n-                    Log.i(\"ReviewDialog\", \"Successfully finished in-app review\");\n-                })\n-                        .addOnFailureListener(error -> {\n-                            Log.i(\"ReviewDialog\", \"failed in reviewing process\");\n-                        });\n-            }\n-        })\n-                .addOnFailureListener(error -> {\n-                    Log.i(\"ReviewDialog\",  \"failed to get in-app review request\");\n-                });\n-    }\n-\n-    private static boolean rated() {\n-        return mPreferences.getBoolean(KEY_RATED, false);\n-    }\n-\n-    @VisibleForTesting\n-    public static void saveRated() {\n-        mPreferences\n-                .edit()\n-                .putBoolean(KEY_RATED, true)\n-                .apply();\n-    }\n-\n-    private static void resetStartDate() {\n-        mPreferences\n-                .edit()\n-                .putLong(KEY_FIRST_START_DATE, System.currentTimeMillis())\n-                .apply();\n-    }\n-\n-    private static boolean shouldShow() {\n-        if (rated() || BuildConfig.DEBUG) {\n-            return false;\n-        }\n-\n-        long now = System.currentTimeMillis();\n-        long firstDate = mPreferences.getLong(KEY_FIRST_START_DATE, now);\n-        long diff = now - firstDate;\n-        long diffDays = TimeUnit.DAYS.convert(diff, TimeUnit.MILLISECONDS);\n-        return diffDays >= AFTER_DAYS;\n-    }\n-}\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/util/IntentUtils.java b/core/src/main/java/de/danoeh/antennapod/core/util/IntentUtils.java\nindex 959a3e574c..8b30b4eace 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/util/IntentUtils.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/util/IntentUtils.java\n@@ -9,8 +9,14 @@\n import android.util.Log;\n import android.widget.Toast;\n import de.danoeh.antennapod.core.R;\n+import org.apache.commons.io.IOUtils;\n+import org.apache.commons.lang3.ArrayUtils;\n \n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n import java.util.List;\n+import java.util.Locale;\n \n public class IntentUtils {\n     private static final String TAG = \"IntentUtils\";\n@@ -45,4 +51,19 @@ public static void openInBrowser(Context context, String url) {\n             Log.e(TAG, Log.getStackTraceString(e));\n         }\n     }\n+\n+\n+    public static String getLocalizedWebsiteLink(Context context) {\n+        try (InputStream is = context.getAssets().open(\"website-languages.txt\")) {\n+            String[] languages = IOUtils.toString(is, StandardCharsets.UTF_8.name()).split(\"\\n\");\n+            String deviceLanguage = Locale.getDefault().getLanguage();\n+            if (ArrayUtils.contains(languages, deviceLanguage) && !\"en\".equals(deviceLanguage)) {\n+                return \"https://antennapod.org/\" + deviceLanguage;\n+            } else {\n+                return \"https://antennapod.org\";\n+            }\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n+    }\n }\ndiff --git a/ui/echo/src/main/res/drawable-nodpi/logo_monochrome.png b/ui/common/src/main/res/drawable-nodpi/logo_monochrome.png\nsimilarity index 100%\nrename from ui/echo/src/main/res/drawable-nodpi/logo_monochrome.png\nrename to ui/common/src/main/res/drawable-nodpi/logo_monochrome.png\ndiff --git a/ui/i18n/src/main/res/values/strings.xml b/ui/i18n/src/main/res/values/strings.xml\nindex 6da3e554fc..44cf707b57 100644\n--- a/ui/i18n/src/main/res/values/strings.xml\n+++ b/ui/i18n/src/main/res/values/strings.xml\n@@ -672,6 +672,14 @@\n     <string name=\"pref_pausePlaybackForFocusLoss_sum\">Pause playback instead of lowering volume when another app wants to play sounds</string>\n     <string name=\"pref_pausePlaybackForFocusLoss_title\">Pause for interruptions</string>\n \n+    <!-- Rating dialog -->\n+    <string name=\"rating_tagline\">Since %1$s, you played %2$s%3$d%4$s hours of podcasts.</string>\n+    <string name=\"rating_contribute_label\">Want to join? Whether you want to translate, support, design or code, we would be happy to have you!</string>\n+    <string name=\"rating_contribute_button\">Discover ways to contribute</string>\n+    <string name=\"rating_volunteers_label\">AntennaPod is developed by volunteers in our free time. We would be happy if you appreciated our work by leaving a nice rating.</string>\n+    <string name=\"rating_rate\">Rate AntennaPod</string>\n+    <string name=\"rating_later\">Later</string>\n+\n     <!-- Online feed view -->\n     <string name=\"subscribe_label\">Subscribe</string>\n     <string name=\"subscribing_label\">Subscribing&#8230;</string>\n", "test_patch": "diff --git a/app/src/androidTest/java/de/test/antennapod/EspressoTestUtils.java b/app/src/androidTest/java/de/test/antennapod/EspressoTestUtils.java\nindex a7575862b1..f0e0a69962 100644\n--- a/app/src/androidTest/java/de/test/antennapod/EspressoTestUtils.java\n+++ b/app/src/androidTest/java/de/test/antennapod/EspressoTestUtils.java\n@@ -25,7 +25,6 @@\n import de.danoeh.antennapod.activity.MainActivity;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n import de.danoeh.antennapod.core.service.playback.PlaybackService;\n-import de.danoeh.antennapod.dialog.RatingDialog;\n import de.danoeh.antennapod.fragment.NavDrawerFragment;\n import org.awaitility.Awaitility;\n import org.awaitility.core.ConditionTimeoutException;\n@@ -166,9 +165,6 @@ public static void clearPreferences() {\n                 .edit()\n                 .putString(UserPreferences.PREF_UPDATE_INTERVAL, \"0\")\n                 .commit();\n-\n-        RatingDialog.init(InstrumentationRegistry.getInstrumentation().getTargetContext());\n-        RatingDialog.saveRated();\n     }\n \n     public static void setLaunchScreen(String tag) {\n", "problem_statement": "Further delay the displaying of the review popup\n### Checklist\n\n- [X] I have used the search function for [**OPEN**](https://github.com/AntennaPod/AntennaPod/issues) issues to see if someone else has already submitted the same feature request.\n- [X] I have **also** used the search function for [**CLOSED**](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue+is%3Aclosed) issues to see if the feature was already implemented and is just waiting to be released, or if the feature was rejected.\n- [X] I will describe the problem with as much detail as possible.\n- [X] This request contains only one single feature, **not** a list of multiple (related) features.\n\n### App version\n\n3.3.0\n\n### Where did you get the app from\n\nGoogle Play\n\n### Problem you may be having, or feature you want\n\nFor several users, the pop-up requesting review is shown too quickly.\n\n### Suggested solution\n\nFurther delay showing the pop-up requesting a review from 14 to 30 days after the app was used the first time.\r\nAdded benefit: users who don't use AntennaPod anymore and who left in the meantime, won't see the pop-up.\n\n### Screenshots / Drawings / Technical details\n\n_No response_\n", "hints_text": "", "created_at": "2024-03-20T22:15:24Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 6852, "instance_id": "AntennaPod__AntennaPod-6852", "issue_numbers": ["4935"], "base_commit": "fc696428ec3693616c5cb375bea2fdd265abb0a0", "patch": "diff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java b/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java\nindex 3ff9589f18..d98d61243b 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java\n@@ -49,6 +49,7 @@ public class FeedItem extends FeedComponent implements Serializable {\n     private String podcastIndexTranscriptUrl;\n     private String podcastIndexTranscriptType;\n     private String podcastIndexTranscriptText;\n+    private Transcript transcript;\n \n     private int state;\n     public static final int NEW = -1;\n@@ -494,6 +495,14 @@ public void updateTranscriptPreferredFormat(String type, String url) {\n         }\n     }\n \n+    public Transcript getTranscript() {\n+        return transcript;\n+    }\n+\n+    public void setTranscript(Transcript t) {\n+        transcript = t;\n+    }\n+\n     public String getPodcastIndexTranscriptText() {\n         return podcastIndexTranscriptText;\n     }\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/Transcript.java b/model/src/main/java/de/danoeh/antennapod/model/feed/Transcript.java\nnew file mode 100644\nindex 0000000000..da01c0e58c\n--- /dev/null\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/Transcript.java\n@@ -0,0 +1,28 @@\n+package de.danoeh.antennapod.model.feed;\n+\n+import java.util.Map;\n+import java.util.TreeMap;\n+\n+public class Transcript {\n+\n+    private final TreeMap<Long, TranscriptSegment> segmentsMap = new TreeMap<>();\n+\n+    public void addSegment(TranscriptSegment segment) {\n+        segmentsMap.put(segment.getStartTime(), segment);\n+    }\n+\n+    public TranscriptSegment getSegmentAtTime(long time) {\n+        if (segmentsMap.floorEntry(time) == null) {\n+            return null;\n+        }\n+        return segmentsMap.floorEntry(time).getValue();\n+    }\n+\n+    public int getSegmentCount() {\n+        return segmentsMap.size();\n+    }\n+\n+    public Map.Entry<Long, TranscriptSegment> getEntryAfterTime(long time) {\n+        return segmentsMap.ceilingEntry(time);\n+    }\n+}\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/TranscriptSegment.java b/model/src/main/java/de/danoeh/antennapod/model/feed/TranscriptSegment.java\nnew file mode 100644\nindex 0000000000..0101bb8ed5\n--- /dev/null\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/TranscriptSegment.java\n@@ -0,0 +1,31 @@\n+package de.danoeh.antennapod.model.feed;\n+\n+public class TranscriptSegment {\n+    private final long startTime;\n+    private final long endTime;\n+    private final String words;\n+    private final String speaker;\n+\n+    public TranscriptSegment(long start, long end, String w, String s) {\n+        startTime = start;\n+        endTime = end;\n+        words = w;\n+        speaker = s;\n+    }\n+\n+    public long getStartTime() {\n+        return startTime;\n+    }\n+\n+    public long getEndTime() {\n+        return endTime;\n+    }\n+\n+    public String getWords() {\n+        return words;\n+    }\n+\n+    public String getSpeaker() {\n+        return speaker;\n+    }\n+}\n\\ No newline at end of file\ndiff --git a/parser/transcript/README.md b/parser/transcript/README.md\nnew file mode 100644\nindex 0000000000..a6ca616125\n--- /dev/null\n+++ b/parser/transcript/README.md\n@@ -0,0 +1,3 @@\n+# :parser:transcript\n+\n+This module provides parsing for transcripts\ndiff --git a/parser/transcript/build.gradle b/parser/transcript/build.gradle\nnew file mode 100644\nindex 0000000000..122c740250\n--- /dev/null\n+++ b/parser/transcript/build.gradle\n@@ -0,0 +1,23 @@\n+plugins {\n+    id(\"com.android.library\")\n+}\n+apply from: \"../../common.gradle\"\n+\n+android {\n+    namespace \"de.danoeh.antennapod.parser.transcript\"\n+}\n+\n+dependencies {\n+    implementation project(':model')\n+\n+    annotationProcessor \"androidx.annotation:annotation:$annotationVersion\"\n+\n+    implementation \"androidx.core:core:$coreVersion\"\n+\n+    implementation \"org.apache.commons:commons-lang3:$commonslangVersion\"\n+    implementation \"commons-io:commons-io:$commonsioVersion\"\n+    implementation \"org.jsoup:jsoup:$jsoupVersion\"\n+\n+    testImplementation \"junit:junit:$junitVersion\"\n+    testImplementation \"org.robolectric:robolectric:$robolectricVersion\"\n+}\ndiff --git a/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/JsonTranscriptParser.java b/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/JsonTranscriptParser.java\nnew file mode 100644\nindex 0000000000..78f3bf9c85\n--- /dev/null\n+++ b/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/JsonTranscriptParser.java\n@@ -0,0 +1,65 @@\n+package de.danoeh.antennapod.parser.transcript;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.json.JSONArray;\n+import org.json.JSONObject;\n+import org.jsoup.internal.StringUtil;\n+\n+import de.danoeh.antennapod.model.feed.Transcript;\n+import de.danoeh.antennapod.model.feed.TranscriptSegment;\n+\n+public class JsonTranscriptParser {\n+    public static Transcript parse(String jsonStr) {\n+        try {\n+            Transcript transcript = new Transcript();\n+            long startTime = -1L;\n+            long endTime = -1L;\n+            long segmentStartTime = -1L;\n+            long duration = 0L;\n+            String speaker = \"\";\n+            String segmentBody = \"\";\n+            JSONObject obj = new JSONObject(jsonStr);\n+            JSONArray objSegments = obj.getJSONArray(\"segments\");\n+\n+            for (int i = 0; i < objSegments.length(); i++) {\n+                JSONObject jsonObject = objSegments.getJSONObject(i);\n+                startTime = Double.valueOf(jsonObject.optDouble(\"startTime\", -1) * 1000L).longValue();\n+                endTime = Double.valueOf(jsonObject.optDouble(\"endTime\", -1) * 1000L).longValue();\n+                if (startTime < 0 || endTime < 0) {\n+                    continue;\n+                }\n+                if (segmentStartTime == -1L) {\n+                    segmentStartTime = startTime;\n+                }\n+                duration += endTime - startTime;\n+\n+                speaker = jsonObject.optString(\"speaker\");\n+                String body = jsonObject.optString(\"body\");\n+                segmentBody += body + \" \";\n+\n+                if (duration >= TranscriptParser.MIN_SPAN) {\n+                    segmentBody = StringUtils.trim(segmentBody);\n+                    transcript.addSegment(new TranscriptSegment(segmentStartTime, endTime, segmentBody, speaker));\n+                    duration = 0L;\n+                    segmentBody = \"\";\n+                    segmentStartTime = -1L;\n+                }\n+            }\n+\n+            if (!StringUtil.isBlank(segmentBody)) {\n+                segmentBody = StringUtils.trim(segmentBody);\n+                transcript.addSegment(new TranscriptSegment(segmentStartTime, endTime, segmentBody, speaker));\n+            }\n+\n+            if (transcript.getSegmentCount() > 0) {\n+                return transcript;\n+            } else {\n+                return null;\n+            }\n+\n+        } catch (org.json.JSONException e) {\n+            e.printStackTrace();\n+        }\n+        return null;\n+    }\n+}\ndiff --git a/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/SrtTranscriptParser.java b/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/SrtTranscriptParser.java\nnew file mode 100644\nindex 0000000000..098dadd994\n--- /dev/null\n+++ b/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/SrtTranscriptParser.java\n@@ -0,0 +1,118 @@\n+package de.danoeh.antennapod.parser.transcript;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.jsoup.internal.StringUtil;\n+\n+import java.util.Arrays;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import de.danoeh.antennapod.model.feed.Transcript;\n+import de.danoeh.antennapod.model.feed.TranscriptSegment;\n+\n+public class SrtTranscriptParser {\n+    private static final Pattern TIMECODE_PATTERN = Pattern.compile(\"^([0-9]{2}):([0-9]{2}):([0-9]{2}),([0-9]{3})$\");\n+\n+    public static Transcript parse(String str) {\n+        if (StringUtils.isBlank(str)) {\n+            return null;\n+        }\n+        str = str.replaceAll(\"\\r\\n\", \"\\n\");\n+\n+        Transcript transcript = new Transcript();\n+        List<String> lines = Arrays.asList(str.split(\"\\n\"));\n+        Iterator<String> iter = lines.iterator();\n+        String speaker = \"\";\n+        StringBuilder body = new StringBuilder();\n+        String line;\n+        String segmentBody = \"\";\n+        long startTimecode = -1L;\n+        long spanStartTimecode = -1L;\n+        long endTimecode = -1L;\n+        long duration = 0L;\n+\n+        while (iter.hasNext()) {\n+            line = iter.next();\n+\n+            if (line.isEmpty()) {\n+                continue;\n+            }\n+\n+            if (line.contains(\"-->\")) {\n+                String[] timecodes = line.split(\"-->\");\n+                if (timecodes.length < 2) {\n+                    continue;\n+                }\n+                startTimecode = parseTimecode(timecodes[0].trim());\n+                endTimecode = parseTimecode(timecodes[1].trim());\n+                if (startTimecode == -1 || endTimecode == -1) {\n+                    continue;\n+                }\n+\n+                if (spanStartTimecode == -1) {\n+                    spanStartTimecode = startTimecode;\n+                }\n+                duration += endTimecode - startTimecode;\n+                do {\n+                    line = iter.next();\n+                    if (StringUtil.isBlank(line)) {\n+                        break;\n+                    }\n+                    body.append(line.strip());\n+                    body.append(\" \");\n+                } while (iter.hasNext());\n+            }\n+\n+            if (body.indexOf(\":\") != -1) {\n+                String [] parts = body.toString().trim().split(\":\");\n+                if (parts.length < 2) {\n+                    continue;\n+                }\n+                speaker = parts[0];\n+                body = new StringBuilder(parts[1].strip());\n+            }\n+            if (!StringUtil.isBlank(body.toString())) {\n+                segmentBody += \" \" + body;\n+                segmentBody = StringUtils.trim(segmentBody);\n+                if (duration >= TranscriptParser.MIN_SPAN && endTimecode > spanStartTimecode) {\n+                    transcript.addSegment(new TranscriptSegment(spanStartTimecode,\n+                            endTimecode,\n+                            segmentBody,\n+                            speaker));\n+                    duration = 0L;\n+                    spanStartTimecode = -1L;\n+                    segmentBody = \"\";\n+                }\n+                body = new StringBuilder();\n+            }\n+        }\n+\n+        if (!StringUtil.isBlank(segmentBody) && endTimecode > spanStartTimecode) {\n+            segmentBody = StringUtils.trim(segmentBody);\n+            transcript.addSegment(new TranscriptSegment(spanStartTimecode,\n+                    endTimecode,\n+                    segmentBody,\n+                    speaker));\n+        }\n+        if (transcript.getSegmentCount() > 0) {\n+            return transcript;\n+        } else {\n+            return null;\n+        }\n+    }\n+\n+    // Time format 00:00:00,000\n+    static long parseTimecode(String timecode) {\n+        Matcher matcher = TIMECODE_PATTERN.matcher(timecode);\n+        if (!matcher.matches()) {\n+            return -1;\n+        }\n+        long hours = Integer.parseInt(matcher.group(1));\n+        long minutes = Integer.parseInt(matcher.group(2));\n+        long seconds = Integer.parseInt(matcher.group(3));\n+        long milliseconds = Integer.parseInt(matcher.group(4));\n+        return (hours * 60 * 60 * 1000) + (minutes * 60 * 1000) + (seconds * 1000) + milliseconds;\n+    }\n+}\ndiff --git a/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/TranscriptParser.java b/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/TranscriptParser.java\nnew file mode 100644\nindex 0000000000..0a4025d96f\n--- /dev/null\n+++ b/parser/transcript/src/main/java/de/danoeh/antennapod/parser/transcript/TranscriptParser.java\n@@ -0,0 +1,24 @@\n+package de.danoeh.antennapod.parser.transcript;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+import de.danoeh.antennapod.model.feed.Transcript;\n+\n+public class TranscriptParser {\n+    static final long MIN_SPAN = 1000L; // merge short segments together to form a span of 1 second\n+\n+    public static Transcript parse(String str, String type) {\n+        if (str == null || StringUtils.isBlank(str)) {\n+            return null;\n+        }\n+\n+        if (\"application/json\".equals(type)) {\n+            return JsonTranscriptParser.parse(str);\n+        }\n+\n+        if (\"application/srt\".equals(type) || \"application/srr\".equals(type) || \"application/x-subrip\".equals(type)) {\n+            return SrtTranscriptParser.parse(str);\n+        }\n+        return null;\n+    }\n+}\ndiff --git a/settings.gradle b/settings.gradle\nindex 3111771e8e..5b7b03d96f 100644\n--- a/settings.gradle\n+++ b/settings.gradle\n@@ -12,6 +12,7 @@ include ':net:sync:model'\n \n include ':parser:feed'\n include ':parser:media'\n+include ':parser:transcript'\n \n include ':playback:base'\n include ':playback:cast'\n", "test_patch": "diff --git a/parser/transcript/src/test/java/de/danoeh/antennapod/parser/transcript/JsonTranscriptParserTest.java b/parser/transcript/src/test/java/de/danoeh/antennapod/parser/transcript/JsonTranscriptParserTest.java\nnew file mode 100644\nindex 0000000000..48996f492c\n--- /dev/null\n+++ b/parser/transcript/src/test/java/de/danoeh/antennapod/parser/transcript/JsonTranscriptParserTest.java\n@@ -0,0 +1,84 @@\n+package de.danoeh.antennapod.parser.transcript;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.robolectric.RobolectricTestRunner;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n+\n+import de.danoeh.antennapod.model.feed.Transcript;\n+\n+@RunWith(RobolectricTestRunner.class)\n+public class JsonTranscriptParserTest {\n+    private static String jsonStr = \"{'version': '1.0.0', \"\n+            + \"'segments': [ \"\n+            + \"{ 'speaker' : 'John Doe', 'startTime': 0.8, 'endTime': 1.9, 'body': 'And' },\"\n+            + \"{ 'speaker' : 'Sally Green', 'startTime': 1.91, 'endTime': 2.8, 'body': 'this merges' },\"\n+            + \"{ 'startTime': 2.9, 'endTime': 3.4, 'body': 'the' },\"\n+            + \"{ 'startTime': 3.5, 'endTime': 3.6, 'body': 'person' }]}\";\n+\n+    @Test\n+    public void testParseJson() {\n+        Transcript result = JsonTranscriptParser.parse(jsonStr);\n+\n+        assertEquals(result.getSegmentAtTime(0L), null);\n+        assertEquals(result.getSegmentAtTime(800L).getSpeaker(), \"John Doe\");\n+        assertEquals(result.getSegmentAtTime(800L).getStartTime(), 800L);\n+        assertEquals(result.getSegmentAtTime(800L).getEndTime(), 1900L);\n+        assertEquals(1910L, (long) result.getEntryAfterTime(1800L).getKey());\n+        // 2 segments get merged into at least 1 second\n+        assertEquals(\"this merges the\", result.getEntryAfterTime(1800L).getValue().getWords());\n+    }\n+\n+    @Test\n+    public void testParse() {\n+        String type = \"application/json\";\n+        Transcript result = TranscriptParser.parse(jsonStr, type);\n+        // There isn't a segment at 900L, so go backwards and get the segment at 800L\n+        assertEquals(result.getSegmentAtTime(900L).getSpeaker(), \"John Doe\");\n+        assertEquals(result.getSegmentAtTime(930L).getWords(), \"And\");\n+\n+        // blank string\n+        String blankStr = \"\";\n+        result = TranscriptParser.parse(blankStr, type);\n+        assertEquals(result, null);\n+\n+        result = TranscriptParser.parse(null, type);\n+        assertEquals(result, null);\n+\n+        // All blank lines\n+        String allNewlinesStr = \"\\r\\n\\r\\n\\r\\n\\r\\n\";\n+        result = TranscriptParser.parse(allNewlinesStr, type);\n+        assertEquals(result, null);\n+\n+        // segments is missing\n+        String jsonStrBad1 = \"{'version': '1.0.0', \"\n+                + \"'segmentsX': [ \"\n+                + \"{ 'speaker' : 'John Doe', 'startTime': 0.8, 'endTime': 1.9, 'body': 'And' },\"\n+                + \"{ 'startTime': 2.9, 'endTime': 3.4, 'body': 'the' },\"\n+                + \"{ 'startTime': 3.5, 'endTime': 3.6, 'body': 'person' }]}\";\n+        result = TranscriptParser.parse(jsonStrBad1, type);\n+        assertEquals(result, null);\n+\n+        // invalid time formatting\n+        String jsonStrBad2 = \"{'version': '1.0.0', \"\n+                + \"'segments': [ \"\n+                + \"{ 'speaker' : 'XJohn Doe', 'startTime': stringTime, 'endTime': stringTime, 'body': 'And' },\"\n+                + \"{ 'XstartTime': 2.9, 'XendTime': 3.4, 'body': 'the' },\"\n+                + \"{ 'startTime': '-2.9', 'endTime': '-3.4', 'body': 'the' },\"\n+                + \"{ 'startTime': 'bad_time', 'endTime': '-3.4', 'body': 'the' }]}\";\n+        result = TranscriptParser.parse(jsonStrBad2, type);\n+        assertNull(result);\n+\n+        // Just plain text\n+        String strBad3 = \"John Doe: Promoting your podcast in a new\\n\\n\"\n+                + \"way. The latest from PogNews.\";\n+        result = TranscriptParser.parse(strBad3, type);\n+        assertNull(result);\n+\n+        // passing the wrong type\n+        type = \"application/srt\";\n+        result = TranscriptParser.parse(jsonStr, type);\n+        assertEquals(result, null);\n+    }\n+}\ndiff --git a/parser/transcript/src/test/java/de/danoeh/antennapod/parser/transcript/SrtTranscriptParserTest.java b/parser/transcript/src/test/java/de/danoeh/antennapod/parser/transcript/SrtTranscriptParserTest.java\nnew file mode 100644\nindex 0000000000..f7854c5bf2\n--- /dev/null\n+++ b/parser/transcript/src/test/java/de/danoeh/antennapod/parser/transcript/SrtTranscriptParserTest.java\n@@ -0,0 +1,93 @@\n+package de.danoeh.antennapod.parser.transcript;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.robolectric.RobolectricTestRunner;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n+import de.danoeh.antennapod.model.feed.Transcript;\n+\n+@RunWith(RobolectricTestRunner.class)\n+public class SrtTranscriptParserTest {\n+    private static String srtStr = \"1\\n\"\n+            + \"00:00:00,000 --> 00:00:02,730\\n\"\n+            + \"John Doe: Promoting your podcast in a new\\n\\n\"\n+            + \"2\\n\"\n+            + \"00:00:02,730 --> 00:00:04,600\\n\"\n+            + \"way. The latest from PogNews.\\n\\n\"\n+            + \"00:00:04,730 --> 00:00:05,600\\n\"\n+            + \"way. The latest from PogNews.\";\n+\n+    @Test\n+    public void testParseSrt() {\n+        Transcript result = SrtTranscriptParser.parse(srtStr);\n+\n+        assertEquals(result.getSegmentAtTime(0L).getWords(), \"Promoting your podcast in a new\");\n+        assertEquals(result.getSegmentAtTime(0L).getSpeaker(), \"John Doe\");\n+        assertEquals(result.getSegmentAtTime(0L).getStartTime(), 0L);\n+        assertEquals(result.getSegmentAtTime(0L).getEndTime(), 2730L);\n+        assertEquals((long) result.getEntryAfterTime(1000L).getKey(), 2730L);\n+        assertEquals(result.getEntryAfterTime(1000L).getValue().getWords(), \"way. The latest from PogNews.\");\n+    }\n+\n+    @Test\n+    public void testParse() {\n+        String type = \"application/srr\";\n+        Transcript result;\n+\n+        result = TranscriptParser.parse(srtStr, type);\n+        // There isn't a segment at 800L, so go backwards and get the segment at 0L\n+        assertEquals(result.getSegmentAtTime(800L).getWords(), \"Promoting your podcast in a new\");\n+\n+        result = TranscriptParser.parse(null, type);\n+        assertEquals(result, null);\n+\n+        // blank string\n+        String blankStr = \"\";\n+        result = TranscriptParser.parse(blankStr, type);\n+        assertNull(result);\n+\n+        // All empty lines\n+        String allNewlinesStr = \"\\r\\n\\r\\n\\r\\n\\r\\n\";\n+        result = TranscriptParser.parse(allNewlinesStr, type);\n+        assertEquals(result, null);\n+\n+        // first segment has invalid time formatting, so the entire segment will be thrown out\n+        String srtStrBad1 = \"00:0000,000 --> 00:00:02,730\\n\"\n+                + \"John Doe: Promoting your podcast in a new\\n\\n\"\n+                + \"2\\n\"\n+                + \"00:00:02,730 --> 00:00:04,600\\n\"\n+                + \"way. The latest from PogNews.\";\n+        result = TranscriptParser.parse(srtStrBad1, type);\n+        assertEquals(result.getSegmentAtTime(2730L).getWords(), \"way. The latest from PogNews.\");\n+\n+        // first segment has invalid time in end time, 2nd segment has invalid time in both start time and end time\n+        String srtStrBad2 = \"00:00:00,000 --> 00:0002,730\\n\"\n+                + \"Jane Doe: Promoting your podcast in a new\\n\\n\"\n+                + \"2\\n\"\n+                + \"badstarttime --> badendtime\\n\"\n+                + \"way. The latest from PogNews.\\n\"\n+                + \"badstarttime -->\\n\"\n+                + \"Jane Doe says something\\n\"\n+                + \"00:00:00,000 --> 00:00:02,730\\n\"\n+                + \"Jane Doe:\";\n+        result = TranscriptParser.parse(srtStrBad2, type);\n+        assertNull(result);\n+\n+        // Just plain text\n+        String strBad3 = \"John Doe: Promoting your podcast in a new\\n\\n\"\n+                + \"way. The latest from PogNews.\";\n+        result = TranscriptParser.parse(strBad3, type);\n+        assertNull(result);\n+\n+        // passing the wrong type\n+        type = \"application/json\";\n+        result = TranscriptParser.parse(srtStr, type);\n+        assertEquals(result, null);\n+\n+        type = \"unknown\";\n+        result = TranscriptParser.parse(srtStr, type);\n+        assertEquals(result, null);\n+    }\n+}\n+\n", "problem_statement": "Support for podcast:transcript tag\n# Checklist\r\n<!-- Place an x in the boxes to tick them: [x] -->\r\n\r\n- [x] I have used the search function to see if someone else has already submitted the same feature request.\r\n- [x] I will only create one feature request per issue.\r\n- [x] I will describe the problem with as much detail as possible\r\n\r\n# Feature description\r\nSome podcasts include text transcript using `podcast:transcipt`\r\n\r\n**Suggested solution**:\r\nDisplay transcript and sync it with the audio.\r\n\r\nMeeting notes from Nov 2nd, 2023 https://github.com/AntennaPod/AntennaPod/issues/4935#issuecomment-1791614891\r\n\n", "hints_text": "@keunes or @ByteHamster please assign to me, since I have the podcastindex namespace parsing done in #4933, I could tackle `podcast:transcript`\nI have a a few suggestions for transcript related features I think  would be great to include in AntennaPod (originally mentioned in https://github.com/AntennaPod/AntennaPod/issues/5002):\r\n\r\n1. Optionally including timestamps when copying from the trancsript. This would be helpful when using a noteapp to write down interesting segments from the podcast as it makes it easier to go back to the podcast an relisten to the particular segment.\r\n2.  Having the transcript autoscroll as the episode is playing, so when switching to the transcript tab, the text is in the same position as the audio. This would facilitate notetaking while listening.\r\n3. Searching the transcript. I am referring to searching within a single transcript , which would make it easier to find interesting segments (which in turn could be navigated to if combined with the below item).\r\n4. Using the transcript for seeking in the audio (clicking sentences to jump to that position).\r\n\r\nThere are currently at least two podcast apps on iOS that provide some of these features, but none on Android as far as I know. Those apps are https://podcast9.com/ and https://www.airr.io/. They are labeling themselves as more educational / productive alternatives to regular podcast apps and their main value proposition is the ability to interact with and remember what you listen to as well as easily share your favorite bits with others.\r\n\r\nA future item to consider which might be out of scope currently is to automatically create transcripts for episodes that don't provide it, e.g. using the live transcribe feature on phones where it is available.\nNice ideas \ud83d\udc4d My guess would be that # 4 wouldn't be too difficult. But for the others I guess we (the app) would need to receive the timestamps with the transcript I think - as I reckon it's not feasible for AP to automatically match the text with the audio. Do you know if transcripts typically have such timestamps?\nThanks @keunes ! I am not very experienced with podcast data and metadata, but I looked around a bit and it seems like at least some transcripts provide this. The [example used on the podcastindex API docs](https://podcastindex-org.github.io/docs-api/#get-/episodes/byid) page includes this segment:\r\n\r\n```json\r\ntranscriptUrl: \"https://mp3s.nashownotes.com/NA-1322-Captions.srt\"\r\n```\r\n\r\nThat srt file includes timestamps which look like this:\r\n\r\n```srt\r\n1\r\n00:00:00,000 --> 00:00:05,340\r\nPull my mask over my nose. Adam\r\nCurry John C Dvorak, Thursday,\r\n\r\n2\r\n00:00:05,340 --> 00:00:09,030\r\nFebruary 18 2021. This is your\r\naward winning media\r\n\r\n3\r\n00:00:09,030 --> 00:00:13,380\r\nassassination Episode 13. This\r\nis no agenda.\r\n\r\n...\r\n```\r\n\r\nI am not sure how common it is, but at least it exists.\r\n\r\nA complimentary approach that is less robust but does not rely on external data could be to match the relative position of sentences in the transcript with the relative time of the audio file (when no timestamps are available). Even if this was only able to generate precision to the minute, I think it would be helpful for most items I mentioned above. For some, like the scrolling text, it would probably perform quite well since so much of the transcript would be shown on the screen that the matched position does not have to be exact. It would probably benefit from calculating the relative audio position without silences (I noted that there is already an option in AP to skip these when listening).\r\n\nI like to add an idea mentioned in the issue above: **hide empty tabs** - that could be empty transcripts and especially nonexistent chapters, if only one tab remains the tablayout itself should probably be hidden.\r\n\r\nI think thats a sensible solution, to not crowd the AudioPlayer with empty tabs and require to user to swipe a thousand times to get to the desired tab, makes the UX clearer :)\n@tonytamsf Any idea how to implement the data store? Downloading all transcripts of all episodes could result in a huge amount of text to be stored. We already have the problem that the database is pretty big. I think it would be better to only store the URLs and then load the transcript when actually viewing the transcript page in AntennaPod. We could enable caching with okhttp to reduce the number of web requests. \n> @tonytamsf Any idea how to implement the data store? Downloading all transcripts of all episodes could result in a huge amount of text to be stored. We already have the problem that the database is pretty big. I think it would be better to only store the URLs and then load the transcript when actually viewing the transcript page in AntennaPod. We could enable caching with okhttp to reduce the number of web requests.\r\n\r\nI like your idea, there is no need to store transcription.  Depending on the user, they may not want to be downloading transcript using mobile data, so we might have to get user consent to use mobile to download transcript.\nWhy not storing transcript on file text on device? Same way episodes are stored. They would be removed along with episodes and it would allow to make them available like episodes are.\r\n\r\nEdit :\r\nAnd it won't clutter database except maybe to put a flag to know there is transcript downloaded. I am not sure it's even needed as all logics would be parallel to what is done for downloaded episodes.\nSounds like a good idea. When streaming, users need a data connection anyways. When downloading, we can download the transcripts, too. :+1:\n> Why not storing transcript on file text on device?\n\nI'm just wondering: this wouldn't hinder 'processing' the info (esp. timestamps, for # 4 in OP).\n\n> When downloading, we can download the transcripts, too\n\nJust to throw an idea out: couldn't this be done, but then in the db? As in, download & store in db when episode is downloaded; remove from dB when file is deleted? (Don't know if this would have any actual benefit, see above).\nI don't think storing and using text files would cause any problem : it is what video player does with srt files for subtitles.\nStoring it in the database but only for downloaded episodes should work :) Then we don't need to store the file path, we can just store the transcript directly.\nDon't know if you saw how Podverse implemented transcript with search. For reference there is a video of what they did : https://twitter.com/Podverse/status/1413642917760184325?s=19\r\n\r\nIMHO about their screen : \r\n- I would prefer timecode on left side and with a smaller font and using grey as text color. So time code would be there but won't distract your eyes when reading transcription\r\n- I wouldn't separate block like they did. It's like there is an empty line beetween each segment which is annoying when reading\nThanks for sharing that @Matth7878!\r\n\r\n> I would prefer timecode on left side and with a smaller font and using grey as text color\r\n\r\nFully agree\r\n\r\n> I wouldn't separate block like they did\r\n\r\nI understand your point, but we can't really merge sentences that are separated into two blocks I think:\r\n* we don't know where we can stitch parts together, and where a hard enter should be kept (in the interface). If there's no whitespace, it might still be complicated to read:\r\n![Schermafdruk van 2021-07-11 10-45-14](https://user-images.githubusercontent.com/11229646/125188759-38432280-e235-11eb-89f0-e0ce24a2ffff.png)\r\n* if we do stitch together the sentences, there might be a situation where one line on the screen covers three lines in the transcript file. Then we can only display the first timestamp, which can be problematic in some cases (e.g. when there is a line with `[silence]` that takes a minute - you wouldn't be able to jump to the bit after the silence).\r\n\nLet me take a stab at getting the podcast:transcript tag to download and stored.  Then we can work on the UI on the next step\n> Let me take a stab at getting the podcast:transcript tag to download and stored. Then we can work on the UI on the next step\r\n\r\nSorry I have been taking a break from AntennaPod.  I'm un-assigning myself until I get back\n\r\n> Sorry I have been taking a break from AntennaPod. I'm un-assigning myself until I get back\r\n\r\nI'm back with my beloved AP app. I'll start working on downloading the transcript\nAny thoughts about the support of all 4 content types in the `<podcast:transcript>` tag?\r\n\r\nSpec: https://github.com/Podcastindex-org/podcast-namespace/blob/main/transcripts/transcripts.md\r\n\r\n* HTML - this format has no or limited timecode - I recommend that we ignore this\r\n* JSON - Much more flexible - we should fully support this, I'm searching for sample podcast that use this format (not seeing it yet)\r\n* SRT - great for video or audio, max number of lines 2, max chars 32 - I recommend we support this fully\r\n* WebVTT - for HTML on the web, I recommend we don't support this\r\n\r\nExample: https://podnews.net/rss\r\n\r\n```\r\n<podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.vtt\" type=\"text/vtt\" />\r\n<podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.srt\" type=\"application/srt\" />\r\n<podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.txt\" type=\"text/plain\" />\r\n<podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.srt\" type=\"application/x-subrip\" rel=\"captions\" />\r\n```\r\n\r\nIt looks like Podnews also provides `text/pain` which is not in the Podcast 2.0 spec\r\n\r\n@jamescridland I am a loyal listener of Podnews, is there a reason you don't have JSON version of `podcast:transcript`?  \r\n\r\nExample: Podcasting 2.0 https://feeds.podcastindex.org/pc20.xml\r\n\r\nIt uses the SRT format \r\n`<podcast:transcript url=\"https://mp3s.nashownotes.com/PC20-125-Captions.srt\" type=\"application/srt\" rel=\"captions\"/>`\n@ByteHamster - do you have objections if I pull in this code to parse SRT files? https://github.com/gusthavosouza/SRTParser.\r\n\r\nI'm contacting the author about the missing license file his source code.\r\n\r\nIf you prefer I write my parser, I could do that.  It's not that hard.  Before I embark, I wanted to hear your opinion.\n> HTML - this format has no or limited timecode - I recommend that we ignore this\n\nAgreed.\n\nSupporting JSON & SRT is quite nice already.\n@tonytamsf I can't generate JSON transcripts - whisper.cpp is what I use, and it doesn't make them.\r\n\r\nI agree that supporting all four is redundant, and would agree with your suggestion to cease support for VTT. VTT seems to have been chosen because of support from libraries; but it seems to me that we are offering too many formats here for sensible support. It's not complicated to make an SRT using the same tools as that might make a VTT.\r\n\r\n(Edited) I was under the impression that support for HTML was as a simple link to a full web page with a transcript. This doesn't appear to be the case, and I believe that we should also remove this. So, we end up with (in preference order):\r\n\r\n1. JSON files for word-by-word closed-captioning, editing, etc.\r\n2. SRT files for closed-captioning (max 32 char length)\r\n\r\n(I shall also go and remove the TXT format from the Podnews feed; but will keep the VTT file there).\n> Any thoughts about the support of all 4 content types in the `<podcast:transcript>` tag?\r\n> \r\n> Spec: https://github.com/Podcastindex-org/podcast-namespace/blob/main/transcripts/transcripts.md\r\n> \r\n> * HTML - this format has no or limited timecode - I recommend that we ignore this\r\n> * JSON - Much more flexible - we should fully support this, I'm searching for sample podcast that use this format (not seeing it yet)\r\n> * SRT - great for video or audio, max number of lines 2, max chars 32 - I recommend we support this fully\r\n> * WebVTT - for HTML on the web, I recommend we don't support this\r\n> \r\n> Example: https://podnews.net/rss\r\n> \r\n> ```\r\n> <podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.vtt\" type=\"text/vtt\" />\r\n> <podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.srt\" type=\"application/srt\" />\r\n> <podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.txt\" type=\"text/plain\" />\r\n> <podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.srt\" type=\"application/x-subrip\" rel=\"captions\" />\r\n> ```\r\n> \r\n> It looks like Podnews also provides `text/pain` which is not in the Podcast 2.0 spec\r\n> \r\n> @jamescridland I am a loyal listener of Podnews, is there a reason you don't have JSON version of `podcast:transcript`?\r\n> \r\n> Example: Podcasting 2.0 https://feeds.podcastindex.org/pc20.xml\r\n> \r\n> It uses the SRT format `<podcast:transcript url=\"https://mp3s.nashownotes.com/PC20-125-Captions.srt\" type=\"application/srt\" rel=\"captions\"/>`\r\n\r\n@tonytamsf, @jamescridland, `text/plain` is mentioned [here](https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#transcript) but not [here](https://github.com/Podcastindex-org/podcast-namespace/blob/main/transcripts/transcripts.md).\nI don't get this removing supported formats business.  VTT is the only format supported natively by browsers, and like SRT+ in many ways but a proper w3c standard.  If some of the first apps to take a stab at implementing don't support all formats, that's on them (and will improve with time) - no need to penalize everyone else by removing valuable stuff from the spec.  We should encourage the server side to push as much signal out to the world as they can.\n> I don't get this removing supported formats business. VTT is the only format supported natively by browsers\r\n\r\nNote that this issue is about support for the transcript tag in AntennaPod. First I thought that HTML was pointless, but I see now that it has a (different) use case - outside of the scope of this issue.\r\n\r\nMaybe let's create a separate issue in the PC namespace repo about this wider (PC namespace) topic.\nAh, sorry - followed a clickbaity link from [podnews](https://podnews.net/update/size-matters), and thought this was referring to the spec itself!\r\n\r\n> [Should we drop support for VTT and even HTML file support](https://github.com/AntennaPod/AntennaPod/issues/4935#issuecomment-1465273529?utm_source=podnews.net&utm_medium=web&utm_campaign=podnews.net:2023-03-13) for the podcast:transcript tag?\r\n\n> do you have objections if I pull in this code to parse SRT files? https://github.com/gusthavosouza/SRTParser.\r\n\r\nIf the license allows that, it should be okay. Probably needs some changes, though, because we only want English comments and maybe don't need all the features.\n> because we only want English comments\r\n\r\nDo we? With 'comments' do you refer to the actual transcripts (subtitles)? If a user has their device in French and there are transcripts/subtitles available in French, why not use that instead.\r\n\r\nSide note on implementation: I would be in favour of storing the transcript 'on drive' for downloaded episodes. As we've discussed for chapters, it's probably too big for in the database, and retrieving it only on playtime causes issues like #6062.\nThis issue has been mentioned on **AntennaPod Forum**. There might be relevant details there:\n\nhttps://forum.antennapod.org/t/podcast-subtitles/3365/4\n\n@keunes - I'm done with the data parsing for JSON and working on the SRT format now for `<podcast:transcript>`.  After I'm done with the data storage, I would like some mockups on how transcription would work in the AP app.\r\n\r\n1. How does transcription display while an episode is being played?  Does it by default hover as an overlay and users can click on the words to jump into a full timecode view?\r\n2. In the timecode full transcription view, I assume the user can scroll back and forward to view the transcription and tap on a timecode to jump into the audio?  Would each word highlight to follow along the audio?\r\n3. The user can copy and paste any portion transcript?\r\n4. Without the overlay of the words, can users jump to view the transcript before listening, how would that work?\r\n5. Propose Phase 2 : Can users search the transcripts in one episode, across all episodes and subscriptions?\nYeey. That's great news @tonytamsf!\n\nLet me try to reply to some of your questions:\n\n> How does transcription display while an episode is being played? Does it by default hover as an overlay and users can click on the words to jump into a full timecode view?\n\nBy default this 'live subtitling' should be enabled/visible in the full player, for discoverability (there are not yet many feeds with this tag, so we want to show it when it's available). It should be possible via a setting in the UI section to disable this. (I expect that someone at some point will ask to make this a setting at podcast level, e.g. to only turn it on for their language learning, but let's see.)\n\nWe'll need a mock-up for this. We can probably take inspiration from some of the other apps who have enabled this already. To make it work nicely, we might have to make some design/UI changes.\n\n> In the timecode full transcription view, I assume the user can scroll back and forward to view the transcription and tap on a timecode to jump into the audio?\n\nYes. We'll need a mock-up for this.\n\n> Would each word highlight to follow along the audio?\n\nDepends. It's not always possible at word-level. E.g. SRT/VTT does not \u2013 here I think we should highlight each fragment.\n\nIn any case, I think the highlighting should be quite subtle (and I'm wondering if it's acceptable if e.g. highlight colour is not visible to visually impaired/does not comply with accessibility standards). We'll need a mock-up for this.\n\nhttps://github.com/Podcastindex-org/podcast-namespace/blob/main/transcripts/transcripts.md\n\n(~~Which transcript file types do you support at thi point?~~ I see it's SRT and JSON.)\n\n>  The user can copy and paste any portion transcript?\n\nYes.\n\n> Without the overlay of the words, can users jump to view the transcript before listening, how would that work?\n\nYes, this should be possible. I made a proposal a long time ago here, following user feedback on a beta version: https://forum.antennapod.org/t/user-feedback-swipe-navigation-from-player-screen-2-3-beta/1119\n\nIt's probably a lot of work to implement, bit I still stand behind the UX concept.\n\n(As a back-up, there should probably be an entry in the overflow menu.)\n\n> Propose Phase 2 : Can users search the transcripts in one episode, across all episodes and subscriptions?\n\nThat would be cool indeed. Certainly *within* the current episode (e.g. to find the section where they talk about X). Global search is an entirely separate thing.\n> I made a proposal a long time ago here... It's probably a lot of work to implement, bit I still stand behind the UX concept. (As a back-up, there should probably be an entry in the overflow menu.)\r\n\r\nThat's outside the scope of this PR (and would need some discussion). For now, I would do the overflow button. There is enough to discuss about the subtitles dialog/page itself\nI have a working PR that can parse, scroll through the transcript while following the audio.   Feel free to download a test version and give some feedback. \r\n I use `Podnews Daily` to do my test https://github.com/AntennaPod/AntennaPod/pull/6710\r\n\r\nUnfortunately, after sampling podcasts that I am subscribed to, the state of the transcript format is still not super well supported.  Here is a sample of of 104 feeds\r\n\r\n# Podcasts sampling\r\n- Roblox Tech Talk - `text/plain` https://share.transistor.fm/s/39ce510f/transcript.txt\r\n   -  parsable with timecoees\r\n-  Dev Interrupted - `text/html` https://feeds.buzzsprout.com/1422892/10190284/transcript\r\n   - not parsable\r\n- The Method - json & 'text/html' https://feeds.buzzsprout.com/1859927/9638130/transcript\r\n   - html not parsable\r\n   - json is fine https://feeds.buzzsprout.com/1859927/9638130/transcript.json\r\n   - (only 2 episode)\r\n- Radical Candor - `application/x-subrip` https://freepodcasttranscription.com/transcription/5e6070b67882e784d6b5baf4b19976bb717f1115.srt\r\n   - parsable\r\n- Indie Bites - `text/plain` https://share.transistor.fm/s/6cdce2f8/transcript.txt (no timecodes)\r\n  - not parsable\r\n- The Golden Hour - `text/html` https://www.podcastone.com/episode/Someones-Getting-Tased--The-Golden-Hour-51-w/-Brendan-Schaub-Erik-Griffin--Chris-DElia?view=transcript\r\n   - not parsable\nHi, really exciting times for AntennaPod and Podcsting in general. I've been doing some research about the use of transcript in the Podcasting 2.0 namespace.\r\n- I've found that even these mime types being equivalent `text/srt` `application/srt` `application/x-subrip` most player don't support all 3, so in in a \"test\" feed I declare all for the same file. \r\n- SRT is the most used format, then JSON, VTT and TXT (but these are usually full transcripts, not subtitle with parsable timecodes)\r\n\r\nIn case is useful, I have a feed with different options of redirect/hosting with different formats and mime-types if you want to test different edge cases, as discussed here : https://github.com/podverse/podverse-web/issues/1168#issuecomment-1695231077\r\nProbably the redirect / hosting part is no problem here as that part was for testing CORS in different web players. (Gitlab Pages works best with web players than Archive if something is interested)\r\n\r\n```\r\nEpisode 16\r\nOp3+ archive.org + vtt only\r\n\r\nEpisode 15\r\nOp3+ gitlab + vtt only\r\n\r\nEpisode 09\r\nOp3 + gitlab + vtt\r\nOp3 + archive + srt\r\n\r\nEpisode 08 (without OP3)\r\nGitlab + vtt\r\nArchive + srt\r\n\r\nEpisode Episode 00\r\nOp3 + gitlab + vtt/srt\r\n\r\nAll others\r\nOP3 + archive + vtt/srt\r\n```\r\nA problem that I've found with some player, in case you want to take it into account, is that if there is first a transcript tag with a file that doesn't work, some player won't try the next tag that would work.\r\n\r\nFeed:\r\nhttps://kdeexpress.gitlab.io/feed\r\n\r\n**TL;NR**\r\n\r\nI would prioritize SRT parsing, then JSON and if there is no much trouble VTT given the similarities with SRT. \r\nFor `text/html` and `text/plain` I would either show a new screen with all the text just assuming that is the full transcript to read or just offer a link to be open in the web browser.\nI'd jump in here and say two things:\r\n\r\nThe accurate stat is [contained here](https://stats.podcastindex.org/hourly_counts.json) - which at the time of writing is: \r\n\r\n>    \"feedsWithTranscripts\": 38,255\r\n>    \"episodesWithTranscripts\": 1,379,606\r\n\r\nThere's obviously a chicken and egg scenario with support. If AntennaPod supports transcripts, it would be a significant benefit to podcasting as a whole, but also to the uptake of this feature. But you'll get considerable promotion when this is launched. (I will, as one guarantee, give you a headline story in Podnews.)\r\n\r\nSecondly; might I suggest you ideally support these in this format:\r\n\r\n1. JSON - this is accurate to the word level, and allows [this kind of highlighted transcript](https://www.steno.fm/show/9b024349-ccf0-5f69-a609-6b82873eab3c/episode/aHR0cHM6Ly9wb2RuZXdzLm5ldC91cGRhdGUvZ2Vuei1mYXN0ZXN0LWdyb3dpbmc=), where the individual word being said is highlighted on screen. That also allows you to lay out closed-captions in a very bespoke way - allowing you to properly wordwrap them. It also allows more features in future like clipping, where you could highlight a word or sentence, and have the app specifically clip that accurately.\r\n\r\n2. SRT - these are accurate to about 32 characters, and therefore the timing isn't as perfect as it could be. [It works like this](https://www.steno.fm/show/917393e3-1b1e-5cef-ace4-edaa54e1f810/episode/YTQ2OWE5ZmQtMzVlOC00MDNhLWIzMDUtZGEyNmU3MDE1ZjBh). \r\n\r\nI'd, frankly, not support TXT or HTML unless you really want to - my suspicion is that these are relatively poorly supported anyway. But it doesn't seem like a heavy lift to simply open these in a webview. (I'm also very unclear if anyone is using VTT.)\r\n\r\nI hope that helps a bit!\n> If AntennaPod supports transcripts\r\n\r\nThanks for chipping in @jamescridland - one of our contributors is already working on this functionality. Hope we can coordinate re your coverage when it gets released. :-)\r\n\r\n> JSON \u2026 That also allows you to lay out closed-captions in a very bespoke way - allowing you to properly wordwrap them\r\n\r\nSee, that's what I was thinking. But I'm also wondering: how. Let's say it is at word level, how do you wrap that into the traditional two lines neatly? Starting from the first word (with its time stamp) and fill up the two lines until the screen is full, and take the end-time of the last word as the end-time for these two lines? Do you 'hard break' when there's a comma, or a period? What about speaker changes?\r\n\r\nI feel that SRT - given that it's the provider's responsibility to make it work with the character limit - often will provide a more logical view (even if less accurate).\r\n\r\nEither way - I'm very happy that both SRT & JSON already can be fetched and parsed \ud83d\ude00\nThank you @jamescridland for the details, it is helpful.\n\nWhat would be helpful for me when I am implementing the transcript feature is to look at other Android apps that are supporting the transcript tag.  Do you recommend an app that has implemented this feature well and taken advantage of the JSON word level time code? \n[Podverse](https://github.com/podverse) could be a reference. [The web displays](https://podverse.fm/es/episode/hazS_hcJz) 1 word per line :-1: , but the mobile (-rn repo) app shows the full sentence :+1: . So I assume it's using a word level JSON.\r\nIn the Android app each line on sentences is a placeholder for the audio timestamps, not exactly a word by word. [Steno.fm](https://www.steno.fm/show/396d9ae0-da7e-5557-b894-b606231fa3ea/episode/QnV6enNwcm91dC0xMzgwNjg5Nw==) is 1 by 1, but I don't think it's open source :-1: \r\n\r\n![imagen](https://github.com/AntennaPod/AntennaPod/assets/2069735/ae51a17b-13b0-4928-934c-9c49b2156130)\r\n![imagen](https://github.com/AntennaPod/AntennaPod/assets/2069735/2d31a517-72df-4b48-9da9-00c957dc6f04)\r\n\n> What would be helpful for me when I am implementing the transcript feature is to look at other Android apps that are supporting the transcript tag.\n\n@tonytamsf Sorry for the silence on my end. I've been doing a comparative analysis of all the We/Android apps that support the transcript tag and will at some point this weekend share a couple of nice examples.\nHello,\r\n\r\nI've thought and designed a bit more over the weekend. Please find below some recordings of (web) apps that I particularly liked, and a link to some mock-ups I made.\r\n\r\nInspiration\r\n---\r\nI tested all Android & web-[apps listed on the Podcast Index website](https://podcastindex.org/apps?appTypes=podcast+player&elements=Transcript) that support the Transcript tag and are accessible without log-in. I always checked  episode [1601 - \"Unkool & The Gang\"](https://podcastindex.org/podcast/41504?episode=15754728488) of No agenda. It has [this SRT captions file](https://mp3s.nashownotes.com/NA-1601-Captions.srt). Here is [the podcast's RSS feed](https://feeds.noagendaassets.com/noagenda.xml).\r\n\r\n### Podfriend **\r\nCool because: has nicely designed subtitles, with different colours, and speaker images.\r\n\r\nhttps://github.com/AntennaPod/AntennaPod/assets/11229646/aa6d70d0-77d6-42dd-9d5a-ec7557145dd6\r\n\r\n### Steno **\r\ncool because: grouping of source content into blocks per speaker, highlighting background of actively playing blocks as well as selected block (when paused or searching)\r\n[Try for yourself](https://www.steno.fm/show/856cd618-7f34-57ea-9b84-3600f1f65e7f/episode/aHR0cDovLzE2MDEubm9hZ2VuZGFub3Rlcy5jb20=) - my recording is too big for GitHub.\r\n\r\n### Podfans *\r\ncool because: has up/down arrows in search bar, nice design of timestamps (thin + lighter colour - should try that in my mock-ups too, althgouh they only seem to use mm:ss, not hh)\r\n![Screenshot from 2023-10-29 23-16-03 podfans](https://github.com/AntennaPod/AntennaPod/assets/11229646/e94b019e-d7ba-4824-8c67-de9c5a9459a0)\r\n\r\n### Fountain *\r\ncool because: has a little (i) icon with info about the transcript timings - noting they \"might not be accurate if the podcaster has dynamic ads.\" --> not in mock-ups yet\r\n![Screenshot from 2023-10-29 23-09-47 Fountain](https://github.com/AntennaPod/AntennaPod/assets/11229646/007f0bdd-4fe6-40af-8100-a4cac7b4c1af)\r\n\r\n### Anytime Player *\r\ncool because: has 'follow transcript' toggle, the way scrolling position follows active block\r\n![Screenshot from 2023-10-29 23-13-14 anytime player](https://github.com/AntennaPod/AntennaPod/assets/11229646/350b356a-f936-4b2f-8a55-20c0aae2038d)\r\n\r\n### Podcast Addict\r\ncool because: has option in the player settings to (de)activate subtitles\r\n\r\nMock-up & general considerations\r\n---\r\n\r\nPlease find here the mock-ups I have so far: https://design.penpot.app/#/view/e357a320-7535-11eb-8a88-eb0147e048f5?page-id=eae2ba44-fe23-80be-8003-5736fde8c987&section=interactions&index=0&share-id=b509ea44-7222-80be-8003-5db588cbed16\r\n\r\nSome notes:\r\n* Several apps leverage speaker indication (either name + colon in SRT, or as metadata in JSON). It would be really neat if we can do that too. \r\n  * Steno 'collates' blocks - [Nathan explained how](https://mastodon.social/@keunes/111305523569815424).\r\n  * Podfriend & Anytime Player somehow connect speaker info from the subtitles with info from the `person` tags within the item (episode)\r\n```\r\n<podcast:person href=\"http://curry.com/\" img=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Adam_Curry_2016.jpg/440px-Adam_Curry_2016.jpg\" group=\"cast\" role=\"host\">Adam Curry</podcast:person>\r\n<podcast:person href=\"http://dvorak.org/blog\" img=\"https://speaking.com/wp-content/uploads/2018/09/John-Dvorak.jpg\" group=\"cast\" role=\"host\">John C Dvorak</podcast:person>\r\n```\r\n* I think we'll have to first identify if we have or can extract speakers, and adjust the design of the player & transcript screens for it. Yet maybe speaker indication (especially on the player screen) might be out of scope for now.\r\n* I kept the playback controls visible on purpose - I think it's handy to be able to pause and rewind when viewing the transcript.\r\n\r\n_The first set of screens you'll see are  in case there are speakers extracted/known, which can be displayed on the player screen. Followed by some screens where this is not the case. There's also some other details. Maybe it's best if we have a call @tonytamsf & @ByteHamster to see what's feasible for now._\n@keunes Thanks for the great research and screen casts of other players.   I can try to join the next community call about this topic if finding time is difficult \nWe'll be meeting to discuss the mock-ups Thursday 2 November at 21:00 CET, over at https://meet.antennapod.org/transcripts. Anyone interested in this UX review is welcome to join.\nAs discussed and agreed during the meeting:\r\n* implement as full-screen dialog (https://m3.material.io/components/dialogs/overview)\r\n* what to do with landscape player view? For now, easy implementation on the right-hand side.\r\n* store transcript SRT/JSON in filesystem\r\n* if there's word-level JSON without speaker:\r\n  * collate text blocks\r\n    * Sentence-based (using periods & question marks)\r\n    * If long pause, start new block\r\n    * If long single block without period, then break it up after x (30?) seconds\r\n  * combine highlighting in blocks of min. 1 second (e.g. 2 words) to avoid words being skipped due to 1-second refresh rate.\r\n\r\nDesign change to do:\r\n* tap on CC in player, open transcript dialog\r\n* setting to show/hide closed caption (TBC if in player settings or only in global>UI settings)\r\n\r\nIn separate PRs:\r\n* playback controls in transcript view\r\n* option to reach transcript from ep. detail page; show 'can't jump to postion' warning\r\n* Search in transcript\r\n* Speaker tag (parse & store; display in ep. details; display speaker photo in player screen)\nWe will be targeting the `transcript` branch on Github for this work.  Starting with PR https://github.com/AntennaPod/AntennaPod/pull/6739\nI have a test build of how we can display transcripts in 2 lines of text on the player screen.\n\nIt works for JSON (word by word) or SRT (a few seconds of text).\n\nThe way I am able to nicely display the transcript is as follows\n\n- join up segments of text at least one second, most json segments are less than 1 second\n- string together N segments and display them on the two lines of TextView, which has support for ellipses \n- when I detect an ellipse in the TexView, which means words are cut off at the end, start trimming words from the end until the display does not have ellipses. \n- move the words that have been ellipsed to the next segment, and  trimming a little more to get some buffer\n- calculate a reasonable (percentage of words trimmed) new start time of the next segment \n- display the text sync to the position of the audio\n- move to the next segment\n\n@keunes I would like to give this test build to you and maybe just one of two others (maybe @jamescridland ) to test out against different podcasts which have transcripts to make sure the algorithm works. I would like to do this before the code reviews because that will take many weeks while we can fine tune how transcripts will function in the UI.  \n\nnote: detecting words will be difficult with languages like Chinese and Arabic\n@keunes - I have a test build of the transcript functionality in the 3rd PR, it will display 2 lines of transcript in the player screen.  When you have time, please check out it.  If you wanted more podcasts that have the transcript tag to see the variety of how folks format their transcripts, I have crawl all 4 million podcasts from podcastindex.org found the [15233 urls](https://github.com/tonytamsf/podcastindex_data/blob/main/data/transcripts.podcasts.txt) of the podcasts which have at least one podcast:transcript tag\r\n\r\n- PR 3 https://github.com/tonytamsf/AntennaPod/pull/6/checks\r\n- Artifact https://github.com/AntennaPod/AntennaPod/suites/17875428651/artifacts/1026186509", "created_at": "2024-01-02T17:47:24Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 6808, "instance_id": "AntennaPod__AntennaPod-6808", "issue_numbers": ["6802"], "base_commit": "58081fe5bf7d9ad28f089cf10b2c17bfcfc8bbc7", "patch": "diff --git a/app/src/main/java/de/danoeh/antennapod/preferences/VolumeAdaptationPreference.java b/app/src/main/java/de/danoeh/antennapod/preferences/VolumeAdaptationPreference.java\nnew file mode 100644\nindex 0000000000..584b7d90ec\n--- /dev/null\n+++ b/app/src/main/java/de/danoeh/antennapod/preferences/VolumeAdaptationPreference.java\n@@ -0,0 +1,27 @@\n+package de.danoeh.antennapod.preferences;\n+\n+import android.content.Context;\n+import android.util.AttributeSet;\n+\n+import java.util.Arrays;\n+\n+import de.danoeh.antennapod.model.feed.VolumeAdaptionSetting;\n+\n+public class VolumeAdaptationPreference extends MaterialListPreference {\n+    public VolumeAdaptationPreference(Context context) {\n+        super(context);\n+    }\n+\n+    public VolumeAdaptationPreference(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+    }\n+\n+    @Override\n+    public CharSequence[] getEntries() {\n+        if (VolumeAdaptionSetting.isBoostSupported()) {\n+            return super.getEntries();\n+        } else {\n+            return Arrays.copyOfRange(super.getEntries(), 0, 3);\n+        }\n+    }\n+}\ndiff --git a/app/src/main/res/xml/feed_settings.xml b/app/src/main/res/xml/feed_settings.xml\nindex fb9e2e4254..b322217ad8 100644\n--- a/app/src/main/res/xml/feed_settings.xml\n+++ b/app/src/main/res/xml/feed_settings.xml\n@@ -48,7 +48,7 @@\n         android:summary=\"@string/global_default\"\n         android:title=\"@string/auto_delete_label\" />\n \n-    <de.danoeh.antennapod.preferences.MaterialListPreference\n+    <de.danoeh.antennapod.preferences.VolumeAdaptationPreference\n         android:defaultValue=\"off\"\n         android:entries=\"@array/spnVolumeAdaptationItems\"\n         android:entryValues=\"@array/spnVolumeAdaptationValues\"\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/ExoPlayerWrapper.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/ExoPlayerWrapper.java\nindex 79cd97fd28..1900ed7f23 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/ExoPlayerWrapper.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/ExoPlayerWrapper.java\n@@ -7,6 +7,7 @@\n import android.util.Log;\n import android.view.SurfaceHolder;\n import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n import androidx.core.util.Consumer;\n import com.google.android.exoplayer2.C;\n import com.google.android.exoplayer2.DefaultLoadControl;\n@@ -37,6 +38,7 @@\n import com.google.android.exoplayer2.upstream.HttpDataSource;\n import de.danoeh.antennapod.core.ClientConfig;\n import de.danoeh.antennapod.core.R;\n+import de.danoeh.antennapod.model.feed.VolumeAdaptionSetting;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n import de.danoeh.antennapod.core.service.download.AntennapodHttpClient;\n import de.danoeh.antennapod.core.service.download.HttpCredentialEncoder;\n@@ -69,7 +71,8 @@ public class ExoPlayerWrapper {\n     private PlaybackParameters playbackParameters;\n     private DefaultTrackSelector trackSelector;\n \n-    private LoudnessEnhancer loudnessEnhancer;\n+    @Nullable\n+    private LoudnessEnhancer loudnessEnhancer = null;\n \n     ExoPlayerWrapper(Context context) {\n         this.context = context;\n@@ -247,11 +250,15 @@ public void setPlaybackParams(float speed, boolean skipSilence) {\n     public void setVolume(float v, float v1) {\n         if (v > 1) {\n             exoPlayer.setVolume(1f);\n-            loudnessEnhancer.setEnabled(true);\n-            loudnessEnhancer.setTargetGain((int) (1000 * (v - 1)));\n+            if (loudnessEnhancer != null) {\n+                loudnessEnhancer.setEnabled(true);\n+                loudnessEnhancer.setTargetGain((int) (1000 * (v - 1)));\n+            }\n         } else {\n             exoPlayer.setVolume(v);\n-            loudnessEnhancer.setEnabled(false);\n+            if (loudnessEnhancer != null) {\n+                loudnessEnhancer.setEnabled(false);\n+            }\n         }\n     }\n \n@@ -354,6 +361,10 @@ void setOnBufferingUpdateListener(Consumer<Integer> bufferingUpdateListener) {\n     }\n \n     private void initLoudnessEnhancer(int audioStreamId) {\n+        if (!VolumeAdaptionSetting.isBoostSupported()) {\n+            return;\n+        }\n+\n         LoudnessEnhancer newEnhancer = new LoudnessEnhancer(audioStreamId);\n         LoudnessEnhancer oldEnhancer = this.loudnessEnhancer;\n         if (oldEnhancer != null) {\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/VolumeAdaptionSetting.java b/model/src/main/java/de/danoeh/antennapod/model/feed/VolumeAdaptionSetting.java\nindex e71c5ad363..a9b1089f2b 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/feed/VolumeAdaptionSetting.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/VolumeAdaptionSetting.java\n@@ -1,5 +1,10 @@\n package de.danoeh.antennapod.model.feed;\n \n+import android.media.audiofx.AudioEffect;\n+\n+import androidx.annotation.Nullable;\n+import androidx.annotation.VisibleForTesting;\n+\n public enum VolumeAdaptionSetting {\n     OFF(0, 1.0f),\n     LIGHT_REDUCTION(1, 0.5f),\n@@ -32,4 +37,29 @@ public int toInteger() {\n     public float getAdaptionFactor() {\n         return adaptionFactor;\n     }\n+\n+    @Nullable\n+    private static Boolean boostSupported = null;\n+\n+    public static boolean isBoostSupported() {\n+        if (boostSupported != null) {\n+            return boostSupported;\n+        }\n+        final AudioEffect.Descriptor[] audioEffects = AudioEffect.queryEffects();\n+        if (audioEffects != null) {\n+            for (AudioEffect.Descriptor effect : audioEffects) {\n+                if (effect.type.equals(AudioEffect.EFFECT_TYPE_LOUDNESS_ENHANCER)) {\n+                    boostSupported = true;\n+                    return boostSupported;\n+                }\n+            }\n+        }\n+        boostSupported = false;\n+        return boostSupported;\n+    }\n+\n+    @VisibleForTesting\n+    public static void setBoostSupported(@Nullable Boolean boostSupported) {\n+        VolumeAdaptionSetting.boostSupported = boostSupported;\n+    }\n }\n", "test_patch": "diff --git a/core/src/test/java/de/danoeh/antennapod/core/feed/VolumeAdaptionSettingTest.java b/core/src/test/java/de/danoeh/antennapod/core/feed/VolumeAdaptionSettingTest.java\nindex 30767bdc88..966351a5e4 100644\n--- a/core/src/test/java/de/danoeh/antennapod/core/feed/VolumeAdaptionSettingTest.java\n+++ b/core/src/test/java/de/danoeh/antennapod/core/feed/VolumeAdaptionSettingTest.java\n@@ -1,6 +1,9 @@\n package de.danoeh.antennapod.core.feed;\n \n import de.danoeh.antennapod.model.feed.VolumeAdaptionSetting;\n+\n+import org.junit.After;\n+import org.junit.Before;\n import org.junit.Test;\n \n import static org.hamcrest.Matchers.equalTo;\n@@ -11,6 +14,16 @@\n \n public class VolumeAdaptionSettingTest {\n \n+    @Before\n+    public void setUp() throws Exception {\n+        VolumeAdaptionSetting.setBoostSupported(false);\n+    }\n+\n+    @After\n+    public void tearDown() throws Exception {\n+        VolumeAdaptionSetting.setBoostSupported(null);\n+    }\n+\n     @Test\n     public void mapOffToInteger() {\n         VolumeAdaptionSetting setting = VolumeAdaptionSetting.OFF;\n", "problem_statement": "Media wont play in Version 3.2.0 (3020095)\n### Checklist\r\n\r\n- [X] I have used the search function for [**OPEN**](https://github.com/AntennaPod/AntennaPod/issues) issues to see if someone else has already submitted the same bug report.\r\n- [X] I have **also** used the search function for [**CLOSED**](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue+is%3Aclosed) issues to see if the problem is already solved and just waiting to be released.\r\n- [X] I will describe the problem with as much detail as possible.\r\n- [X] If the bug only to occurs with a certain podcast, I will include the URL of that podcast.\r\n\r\n### App version\r\n\r\n3.2.0\r\n\r\n### Where did you get the app from\r\n\r\nF-Droid\r\n\r\n### Android version\r\n\r\n13 PixelExperience_topaz-13.0-20230714-1432-UNOFFICIAL\r\n\r\n### Device model\r\n\r\nRemi Note 12 4G\r\n\r\n### First occurred\r\n\r\nabout a week ago\r\n\r\n### Steps to reproduce\r\n\r\ninstall version 3.2.0\r\n\r\n### Expected behaviour\r\n\r\nmedia should play\r\n\r\n### Current behaviour\r\n\r\nmedia does not play neither downloaded nor stream, the player doesn't come up when clicking play. it works perfectly in 3.1.2 and below.\r\n\r\n### Logs\r\n\r\nI already downgraded back to 3.1.2 so I can't export the logs but I have this from logfox:\r\n\n```\r\n1702289036.344 10231  8418  8418 D ExternalPlayerFragment: Loading media info\r\n1702289036.348 10231  8418  8418 D QueueFragment: loadItems()\r\n1702289036.348 10231  8418 12216 D DBReader: getQueue() called\r\n1702289036.348 10231  8418 12216 D DBReader: getQueue()\r\n1702289036.350 10231  8418 12216 D DBReader: getFavoriteIDList() called\r\n1702289036.351 10231  8418 12216 D DBReader: getQueueIDList() called\r\n1702289036.352 10231  8418 12216 D DBReader: Extracting Feedlist\r\n1702289036.352 10231  8418  8418 D MainActivity: handleNavIntent()\r\n1702289036.352 10231  8418  8418 D NavDrawerFragment: getLastNavFragment() -> QueueFragment\r\n1702289036.353 10231  8418 12383 D DBReader: getNavDrawerData() called with:\r\n1702289036.363 10231  8418  9893 E OpenGLRenderer: Unable to match the desired swap behavior.\r\n1702289036.410 10231  8418 12383 D DBReader: getRecentlyPublishedEpisodes() called with: offset=0, limit=2147483647\r\n1702289036.549 10231  8418 12383 D DBReader: getFavoriteIDList() called\r\n1702289036.550 10231  8418 12383 D DBReader: getQueueIDList() called\r\n1702289036.551 10231  8418 12383 D DBReader: Extracting Feedlist\r\n1702289036.559 10231  8418  8418 D NavDrawerFragment: getLastNavFragment() -> QueueFragment\r\n1702289036.560 10231  8418  8418 D NavDrawerFragment: getLastNavFragment() -> QueueFragment\r\n1702289036.560 10231  8418  8418 D NavDrawerFragment: getLastNavFragment() -> QueueFragment\r\n1702289036.560 10231  8418  8418 D NavDrawerFragment: getLastNavFragment() -> QueueFragment\r\n1702289036.561 10231  8418  8418 D NavDrawerFragment: getLastNavFragment() -> QueueFragment\r\n1702289036.561 10231  8418  8418 D NavDrawerFragment: getLastNavFragment() -> QueueFragment\r\n1702289036.561 10231  8418  8418 D NavDrawerFragment: getLastNavFragment() -> QueueFragment\r\n1702289036.562 10231  8418  8418 D NavDrawerFragment: getLastNavFragment() -> QueueFragment\r\n1702289037.765 10231  8418  8418 D PlaybackService: Service created.\r\n1702289037.774 10231  8418  8418 D PlaybackController: Trying to connect to service\r\n1702289037.776 10231  8418  8418 D PlaybackController: Result for service binding: true\r\n1702289037.778 10231  8418  8418 D PlaybackController: Trying to connect to service\r\n1702289037.779 10231  8418  8418 D PlaybackController: Result for service binding: true\r\n1702289037.779 10231  8418  8418 D ExternalPlayerFragment: Loading media info\r\n1702289037.779 10231  8418  8418 D PlaybackService: OnStartCommand called\r\n1702289037.780 10231  8418  8418 D PlaybackSrvState: startForeground\r\n1702289037.783 10231  8418  8418 D PlaybackService: Received onBind event\r\n1702289037.783 10231  8418 12383 D DBReader: getFeedItem() called with: itemId = [1570]\r\n1702289037.783 10231  8418 12383 D DBReader: Loading feeditem with id 1570\r\n1702289037.783 10231  8418 12383 D DBReader: getFavoriteIDList() called\r\n1702289037.784 10231  8418 12383 D DBReader: getQueueIDList() called\r\n1702289037.784 10231  8418 12383 D DBReader: Extracting Feedlist\r\n1702289037.785 10231  8418  8418 D PlaybackController: Trying to connect to service\r\n1702289037.786 10231  8418  8418 D PlaybackController: Result for service binding: true\r\n1702289037.786 10231  8418  8418 D PlaybackController: Trying to connect to service\r\n1702289037.787 10231  8418  8418 D PlaybackController: Result for service binding: true\r\n1702289037.787 10231  8418  8418 D PlaybackController: Querying service info\r\n1702289037.787 10231  8418  8418 D PlaybackController: status: STOPPED\r\n1702289037.787 10231  8418  8418 D PlaybackController: Connection to Service established\r\n1702289037.787 10231  8418  8418 D PlaybackController: Querying service info\r\n1702289037.787 10231  8418  8418 D PlaybackController: status: STOPPED\r\n1702289037.787 10231  8418  8418 D ExternalPlayerFragment: Loading media info\r\n1702289037.787 10231  8418  8418 D PlaybackController: Connection to Service established\r\n1702289037.795 10231  8418  8418 D LclPlaybackSvcMPlayer: playMediaObject(...)\r\n1702289037.808 10231  8418  8418 I ExoPlayerImpl: Init 4a66ac [ExoPlayerLib/2.14.2] [tapas, 23021RAAEG, Xiaomi, 33]\r\n1702289037.813 10231  8418  8418 E AudioEffect: set(): AudioFlinger could not create effect fe3199be-aed0-413f-87bb-11260eb63cf1 / ec7178ec-e5e1-4432-a3f4-4657e6795210, status: -2\r\n1702289037.813 10231  8418  8418 E AudioEffects-JNI: AudioEffect initCheck failed -3\r\n1702289037.813 10231  8418  8418 E AudioEffect-JAVA: Error code -3 when initializing AudioEffect.\r\n1702289037.813 10231  8418  8418 W System.err: java.lang.RuntimeException: Cannot initialize effect engine for type: fe3199be-aed0-413f-87bb-11260eb63cf1 Error: -3\r\n1702289037.813 10231  8418  8418 W System.err: \tat android.media.audiofx.AudioEffect.<init>(AudioEffect.java:543)\r\n1702289037.813 10231  8418  8418 W System.err: \tat android.media.audiofx.AudioEffect.<init>(AudioEffect.java:501)\r\n1702289037.813 10231  8418  8418 W System.err: \tat android.media.audiofx.AudioEffect.<init>(AudioEffect.java:475)\r\n1702289037.814 10231  8418  8418 W System.err: \tat android.media.audiofx.LoudnessEnhancer.<init>(LoudnessEnhancer.java:80)\r\n1702289037.814 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.ExoPlayerWrapper.initLoudnessEnhancer(ExoPlayerWrapper.java:357)\r\n1702289037.814 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.ExoPlayerWrapper.createPlayer(ExoPlayerWrapper.java:146)\r\n1702289037.814 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.ExoPlayerWrapper.<init>(ExoPlayerWrapper.java:76)\r\n1702289037.814 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.LocalPSMP.createMediaPlayer(LocalPSMP.java:587)\r\n1702289037.814 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.LocalPSMP.playMediaObject(LocalPSMP.java:158)\r\n1702289037.814 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.LocalPSMP.playMediaObject(LocalPSMP.java:113)\r\n1702289037.814 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService.startPlaying(PlaybackService.java:741)\r\n1702289037.814 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService.lambda$onStartCommand$6(PlaybackService.java:526)\r\n1702289037.814 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService.$r8$lambda$mOCf9qqsskaQGmxsaI_m2ZmJO2w(PlaybackService.java:0)\r\n1702289037.814 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService$$ExternalSyntheticLambda6.accept(R8$$SyntheticClass:0)\r\n1702289037.814 10231  8418  8418 W System.err: \tat io.reactivex.internal.observers.LambdaObserver.onNext(LambdaObserver.java:63)\r\n1702289037.814 10231  8418  8418 W System.err: \tat io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver.drainNormal(ObservableObserveOn.java:201)\r\n1702289037.814 10231  8418  8418 W System.err: \tat io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver.run(ObservableObserveOn.java:255)\r\n1702289037.814 10231  8418  8418 W System.err: \tat io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable.run(HandlerScheduler.java:124)\r\n1702289037.814 10231  8418  8418 W System.err: \tat android.os.Handler.handleCallback(Handler.java:942)\r\n1702289037.814 10231  8418  8418 W System.err: \tat android.os.Handler.dispatchMessage(Handler.java:99)\r\n1702289037.814 10231  8418  8418 W System.err: \tat android.os.Looper.loopOnce(Looper.java:201)\r\n1702289037.814 10231  8418  8418 W System.err: \tat android.os.Looper.loop(Looper.java:288)\r\n1702289037.814 10231  8418  8418 W System.err: \tat android.app.ActivityThread.main(ActivityThread.java:7959)\r\n1702289037.814 10231  8418  8418 W System.err: \tat java.lang.reflect.Method.invoke(Native Method)\r\n1702289037.814 10231  8418  8418 W System.err: \tat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:548)\r\n1702289037.814 10231  8418  8418 W System.err: \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:942)\r\n1702289037.814 10231  8418  8418 D PlaybackService: Playable was not found. Stopping service.\r\n1702289037.814 10231  8418  8418 W System.err: java.lang.RuntimeException: Cannot initialize effect engine for type: fe3199be-aed0-413f-87bb-11260eb63cf1 Error: -3\r\n1702289037.814 10231  8418  8418 W System.err: \tat android.media.audiofx.AudioEffect.<init>(AudioEffect.java:543)\r\n1702289037.814 10231  8418  8418 W System.err: \tat android.media.audiofx.AudioEffect.<init>(AudioEffect.java:501)\r\n1702289037.814 10231  8418  8418 W System.err: \tat android.media.audiofx.AudioEffect.<init>(AudioEffect.java:475)\r\n1702289037.814 10231  8418  8418 W System.err: \tat android.media.audiofx.LoudnessEnhancer.<init>(LoudnessEnhancer.java:80)\r\n1702289037.814 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.ExoPlayerWrapper.initLoudnessEnhancer(ExoPlayerWrapper.java:357)\r\n1702289037.814 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.ExoPlayerWrapper.createPlayer(ExoPlayerWrapper.java:146)\r\n1702289037.814 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.ExoPlayerWrapper.<init>(ExoPlayerWrapper.java:76)\r\n1702289037.815 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.LocalPSMP.createMediaPlayer(LocalPSMP.java:587)\r\n1702289037.815 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.LocalPSMP.playMediaObject(LocalPSMP.java:158)\r\n1702289037.815 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.LocalPSMP.playMediaObject(LocalPSMP.java:113)\r\n1702289037.815 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService.startPlaying(PlaybackService.java:741)\r\n1702289037.815 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService.lambda$onStartCommand$6(PlaybackService.java:526)\r\n1702289037.815 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService.$r8$lambda$mOCf9qqsskaQGmxsaI_m2ZmJO2w(PlaybackService.java:0)\r\n1702289037.815 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService$$ExternalSyntheticLambda6.accept(R8$$SyntheticClass:0)\r\n1702289037.815 10231  8418  8418 W System.err: \tat io.reactivex.internal.observers.LambdaObserver.onNext(LambdaObserver.java:63)\r\n1702289037.815 10231  8418  8418 W System.err: \tat io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver.drainNormal(ObservableObserveOn.java:201)\r\n1702289037.815 10231  8418  8418 W System.err: \tat io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver.run(ObservableObserveOn.java:255)\r\n1702289037.815 10231  8418  8418 W System.err: \tat io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable.run(HandlerScheduler.java:124)\r\n1702289037.815 10231  8418  8418 W System.err: \tat android.os.Handler.handleCallback(Handler.java:942)\r\n1702289037.815 10231  8418  8418 W System.err: \tat android.os.Handler.dispatchMessage(Handler.java:99)\r\n1702289037.815 10231  8418  8418 W System.err: \tat android.os.Looper.loopOnce(Looper.java:201)\r\n1702289037.815 10231  8418  8418 W System.err: \tat android.os.Looper.loop(Looper.java:288)\r\n1702289037.815 10231  8418  8418 W System.err: \tat android.app.ActivityThread.main(ActivityThread.java:7959)\r\n1702289037.815 10231  8418  8418 W System.err: \tat java.lang.reflect.Method.invoke(Native Method)\r\n1702289037.815 10231  8418  8418 W System.err: \tat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:548)\r\n1702289037.815 10231  8418  8418 W System.err: \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:942)\r\n1702289037.815 10231  8418  8418 D PlaybackSrvState: stopService\r\n1702289037.815 10231  8418  8418 D PlaybackSrvState: stopForeground\r\n1702289037.821 10231  8418  8418 D PlaybackController: Disconnected from Service\r\n1702289037.821 10231  8418  8418 D PlaybackController: Disconnected from Service\r\n1702289037.821 10231  8418  8418 D PlaybackService: Received onUnbind event\r\n1702289037.821 10231  8418  8418 D PlaybackService: Service is about to be destroyed\r\n1702289037.821 10231  8418  8418 D PlaybackSrvState: stopForeground\r\n1702289039.176 10231  8418  8418 D PlaybackService: Service created.\r\n1702289039.188 10231  8418  8418 D PlaybackController: Trying to connect to service\r\n1702289039.189 10231  8418  8418 D PlaybackController: Result for service binding: true\r\n1702289039.189 10231  8418  8418 D PlaybackController: Trying to connect to service\r\n1702289039.190 10231  8418  8418 D PlaybackController: Result for service binding: true\r\n1702289039.190 10231  8418  8418 D PlaybackService: OnStartCommand called\r\n1702289039.191 10231  8418  8418 D PlaybackSrvState: startForeground\r\n1702289039.194 10231  8418  8418 D PlaybackService: Received onBind event\r\n1702289039.200 10231  8418  8418 D PlaybackController: Trying to connect to service\r\n1702289039.201 10231  8418  8418 D PlaybackController: Result for service binding: true\r\n1702289039.201 10231  8418  8418 D PlaybackController: Trying to connect to service\r\n1702289039.202 10231  8418  8418 D PlaybackController: Result for service binding: true\r\n1702289039.202 10231  8418  8418 D PlaybackController: Querying service info\r\n1702289039.202 10231  8418  8418 D PlaybackController: status: STOPPED\r\n1702289039.202 10231  8418  8418 D PlaybackController: Connection to Service established\r\n1702289039.202 10231  8418  8418 D PlaybackController: Querying service info\r\n1702289039.202 10231  8418  8418 D PlaybackController: status: STOPPED\r\n1702289039.202 10231  8418  8418 D ExternalPlayerFragment: Loading media info\r\n1702289039.202 10231  8418 12230 D DBReader: getFeedItem() called with: itemId = [1570]\r\n1702289039.202 10231  8418  8418 D PlaybackController: Connection to Service established\r\n1702289039.202 10231  8418 12230 D DBReader: Loading feeditem with id 1570\r\n1702289039.203 10231  8418 12230 D DBReader: getFavoriteIDList() called\r\n1702289039.204 10231  8418 12230 D DBReader: getQueueIDList() called\r\n1702289039.204 10231  8418 12230 D DBReader: Extracting Feedlist\r\n1702289039.215 10231  8418  8418 D LclPlaybackSvcMPlayer: playMediaObject(...)\r\n1702289039.219 10231  8418  8418 I ExoPlayerImpl: Init c5ceaba [ExoPlayerLib/2.14.2] [tapas, 23021RAAEG, Xiaomi, 33]\r\n1702289039.223 10231  8418  8418 E AudioEffect: set(): AudioFlinger could not create effect fe3199be-aed0-413f-87bb-11260eb63cf1 / ec7178ec-e5e1-4432-a3f4-4657e6795210, status: -2\r\n1702289039.224 10231  8418  8418 E AudioEffects-JNI: AudioEffect initCheck failed -3\r\n1702289039.224 10231  8418  8418 E AudioEffect-JAVA: Error code -3 when initializing AudioEffect.\r\n1702289039.224 10231  8418  8418 W System.err: java.lang.RuntimeException: Cannot initialize effect engine for type: fe3199be-aed0-413f-87bb-11260eb63cf1 Error: -3\r\n1702289039.224 10231  8418  8418 W System.err: \tat android.media.audiofx.AudioEffect.<init>(AudioEffect.java:543)\r\n1702289039.224 10231  8418  8418 W System.err: \tat android.media.audiofx.AudioEffect.<init>(AudioEffect.java:501)\r\n1702289039.224 10231  8418  8418 W System.err: \tat android.media.audiofx.AudioEffect.<init>(AudioEffect.java:475)\r\n1702289039.224 10231  8418  8418 W System.err: \tat android.media.audiofx.LoudnessEnhancer.<init>(LoudnessEnhancer.java:80)\r\n1702289039.224 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.ExoPlayerWrapper.initLoudnessEnhancer(ExoPlayerWrapper.java:357)\r\n1702289039.224 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.ExoPlayerWrapper.createPlayer(ExoPlayerWrapper.java:146)\r\n1702289039.224 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.ExoPlayerWrapper.<init>(ExoPlayerWrapper.java:76)\r\n1702289039.224 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.LocalPSMP.createMediaPlayer(LocalPSMP.java:587)\r\n1702289039.224 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.LocalPSMP.playMediaObject(LocalPSMP.java:158)\r\n1702289039.224 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.LocalPSMP.playMediaObject(LocalPSMP.java:113)\r\n1702289039.224 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService.startPlaying(PlaybackService.java:741)\r\n1702289039.224 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService.lambda$onStartCommand$6(PlaybackService.java:526)\r\n1702289039.224 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService.$r8$lambda$mOCf9qqsskaQGmxsaI_m2ZmJO2w(PlaybackService.java:0)\r\n1702289039.224 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService$$ExternalSyntheticLambda6.accept(R8$$SyntheticClass:0)\r\n1702289039.224 10231  8418  8418 W System.err: \tat io.reactivex.internal.observers.LambdaObserver.onNext(LambdaObserver.java:63)\r\n1702289039.224 10231  8418  8418 W System.err: \tat io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver.drainNormal(ObservableObserveOn.java:201)\r\n1702289039.224 10231  8418  8418 W System.err: \tat io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver.run(ObservableObserveOn.java:255)\r\n1702289039.224 10231  8418  8418 W System.err: \tat io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable.run(HandlerScheduler.java:124)\r\n1702289039.224 10231  8418  8418 W System.err: \tat android.os.Handler.handleCallback(Handler.java:942)\r\n1702289039.224 10231  8418  8418 W System.err: \tat android.os.Handler.dispatchMessage(Handler.java:99)\r\n1702289039.224 10231  8418  8418 W System.err: \tat android.os.Looper.loopOnce(Looper.java:201)\r\n1702289039.224 10231  8418  8418 W System.err: \tat android.os.Looper.loop(Looper.java:288)\r\n1702289039.224 10231  8418  8418 W System.err: \tat android.app.ActivityThread.main(ActivityThread.java:7959)\r\n1702289039.224 10231  8418  8418 W System.err: \tat java.lang.reflect.Method.invoke(Native Method)\r\n1702289039.224 10231  8418  8418 W System.err: \tat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:548)\r\n1702289039.224 10231  8418  8418 W System.err: \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:942)\r\n1702289039.224 10231  8418  8418 D PlaybackService: Playable was not found. Stopping service.\r\n1702289039.225 10231  8418  8418 W System.err: java.lang.RuntimeException: Cannot initialize effect engine for type: fe3199be-aed0-413f-87bb-11260eb63cf1 Error: -3\r\n1702289039.225 10231  8418  8418 W System.err: \tat android.media.audiofx.AudioEffect.<init>(AudioEffect.java:543)\r\n1702289039.225 10231  8418  8418 W System.err: \tat android.media.audiofx.AudioEffect.<init>(AudioEffect.java:501)\r\n1702289039.225 10231  8418  8418 W System.err: \tat android.media.audiofx.AudioEffect.<init>(AudioEffect.java:475)\r\n1702289039.225 10231  8418  8418 W System.err: \tat android.media.audiofx.LoudnessEnhancer.<init>(LoudnessEnhancer.java:80)\r\n1702289039.225 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.ExoPlayerWrapper.initLoudnessEnhancer(ExoPlayerWrapper.java:357)\r\n1702289039.225 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.ExoPlayerWrapper.createPlayer(ExoPlayerWrapper.java:146)\r\n1702289039.225 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.ExoPlayerWrapper.<init>(ExoPlayerWrapper.java:76)\r\n1702289039.225 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.LocalPSMP.createMediaPlayer(LocalPSMP.java:587)\r\n1702289039.225 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.LocalPSMP.playMediaObject(LocalPSMP.java:158)\r\n1702289039.225 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.LocalPSMP.playMediaObject(LocalPSMP.java:113)\r\n1702289039.225 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService.startPlaying(PlaybackService.java:741)\r\n1702289039.225 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService.lambda$onStartCommand$6(PlaybackService.java:526)\r\n1702289039.225 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService.$r8$lambda$mOCf9qqsskaQGmxsaI_m2ZmJO2w(PlaybackService.java:0)\r\n1702289039.225 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService$$ExternalSyntheticLambda6.accept(R8$$SyntheticClass:0)\r\n1702289039.225 10231  8418  8418 W System.err: \tat io.reactivex.internal.observers.LambdaObserver.onNext(LambdaObserver.java:63)\r\n1702289039.225 10231  8418  8418 W System.err: \tat io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver.drainNormal(ObservableObserveOn.java:201)\r\n1702289039.225 10231  8418  8418 W System.err: \tat io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver.run(ObservableObserveOn.java:255)\r\n1702289039.225 10231  8418  8418 W System.err: \tat io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable.run(HandlerScheduler.java:124)\r\n1702289039.225 10231  8418  8418 W System.err: \tat android.os.Handler.handleCallback(Handler.java:942)\r\n1702289039.225 10231  8418  8418 W System.err: \tat android.os.Handler.dispatchMessage(Handler.java:99)\r\n1702289039.225 10231  8418  8418 W System.err: \tat android.os.Looper.loopOnce(Looper.java:201)\r\n1702289039.225 10231  8418  8418 W System.err: \tat android.os.Looper.loop(Looper.java:288)\r\n1702289039.225 10231  8418  8418 W System.err: \tat android.app.ActivityThread.main(ActivityThread.java:7959)\r\n1702289039.225 10231  8418  8418 W System.err: \tat java.lang.reflect.Method.invoke(Native Method)\r\n1702289039.225 10231  8418  8418 W System.err: \tat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:548)\r\n1702289039.225 10231  8418  8418 W System.err: \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:942)\r\n1702289039.225 10231  8418  8418 D PlaybackSrvState: stopService\r\n1702289039.225 10231  8418  8418 D PlaybackSrvState: stopForeground\r\n1702289039.227 10231  8418  8418 D PlaybackController: Disconnected from Service\r\n1702289039.227 10231  8418  8418 D PlaybackController: Disconnected from Service\r\n1702289039.227 10231  8418  8418 D PlaybackService: Received onUnbind event\r\n1702289039.228 10231  8418  8418 D PlaybackService: Service is about to be destroyed\r\n1702289039.228 10231  8418  8418 D PlaybackSrvState: stopForeground\r\n1702289040.348 10231  8418  8418 D PlaybackService: Service created.\r\n1702289040.362 10231  8418  8418 D PlaybackController: Trying to connect to service\r\n1702289040.363 10231  8418  8418 D PlaybackController: Result for service binding: true\r\n1702289040.363 10231  8418  8418 D PlaybackController: Trying to connect to service\r\n1702289040.364 10231  8418  8418 D PlaybackController: Result for service binding: true\r\n1702289040.365 10231  8418  8418 D PlaybackService: OnStartCommand called\r\n1702289040.365 10231  8418  8418 D PlaybackSrvState: startForeground\r\n1702289040.368 10231  8418 12216 D DBReader: getFeedItem() called with: itemId = [1570]\r\n1702289040.368 10231  8418 12216 D DBReader: Loading feeditem with id 1570\r\n1702289040.369 10231  8418  8418 D PlaybackService: Received onBind event\r\n1702289040.370 10231  8418 12216 D DBReader: getFavoriteIDList() called\r\n1702289040.371 10231  8418 12216 D DBReader: getQueueIDList() called\r\n1702289040.371 10231  8418 12216 D DBReader: Extracting Feedlist\r\n1702289040.376 10231  8418  8418 D PlaybackController: Trying to connect to service\r\n1702289040.378 10231  8418  8418 D PlaybackController: Result for service binding: true\r\n1702289040.378 10231  8418  8418 D PlaybackController: Querying service info\r\n1702289040.378 10231  8418  8418 D PlaybackController: status: STOPPED\r\n1702289040.378 10231  8418  8418 D PlaybackController: Connection to Service established\r\n1702289040.378 10231  8418  8418 D PlaybackController: Trying to connect to service\r\n1702289040.379 10231  8418  8418 D PlaybackController: Result for service binding: true\r\n1702289040.379 10231  8418  8418 D PlaybackController: Querying service info\r\n1702289040.380 10231  8418  8418 D PlaybackController: status: STOPPED\r\n1702289040.380 10231  8418  8418 D ExternalPlayerFragment: Loading media info\r\n1702289040.380 10231  8418  8418 D PlaybackController: Connection to Service established\r\n1702289040.380 10231  8418  8418 D LclPlaybackSvcMPlayer: playMediaObject(...)\r\n1702289040.390 10231  8418  8418 I ExoPlayerImpl: Init c03e75b [ExoPlayerLib/2.14.2] [tapas, 23021RAAEG, Xiaomi, 33]\r\n1702289040.394 10231  8418  8418 E AudioEffect: set(): AudioFlinger could not create effect fe3199be-aed0-413f-87bb-11260eb63cf1 / ec7178ec-e5e1-4432-a3f4-4657e6795210, status: -2\r\n1702289040.394 10231  8418  8418 E AudioEffects-JNI: AudioEffect initCheck failed -3\r\n1702289040.394 10231  8418  8418 E AudioEffect-JAVA: Error code -3 when initializing AudioEffect.\r\n1702289040.394 10231  8418  8418 W System.err: java.lang.RuntimeException: Cannot initialize effect engine for type: fe3199be-aed0-413f-87bb-11260eb63cf1 Error: -3\r\n1702289040.394 10231  8418  8418 W System.err: \tat android.media.audiofx.AudioEffect.<init>(AudioEffect.java:543)\r\n1702289040.394 10231  8418  8418 W System.err: \tat android.media.audiofx.AudioEffect.<init>(AudioEffect.java:501)\r\n1702289040.394 10231  8418  8418 W System.err: \tat android.media.audiofx.AudioEffect.<init>(AudioEffect.java:475)\r\n1702289040.394 10231  8418  8418 W System.err: \tat android.media.audiofx.LoudnessEnhancer.<init>(LoudnessEnhancer.java:80)\r\n1702289040.394 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.ExoPlayerWrapper.initLoudnessEnhancer(ExoPlayerWrapper.java:357)\r\n1702289040.394 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.ExoPlayerWrapper.createPlayer(ExoPlayerWrapper.java:146)\r\n1702289040.394 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.ExoPlayerWrapper.<init>(ExoPlayerWrapper.java:76)\r\n1702289040.394 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.LocalPSMP.createMediaPlayer(LocalPSMP.java:587)\r\n1702289040.394 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.LocalPSMP.playMediaObject(LocalPSMP.java:158)\r\n1702289040.394 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.LocalPSMP.playMediaObject(LocalPSMP.java:113)\r\n1702289040.394 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService.startPlaying(PlaybackService.java:741)\r\n1702289040.394 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService.lambda$onStartCommand$6(PlaybackService.java:526)\r\n1702289040.395 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService.$r8$lambda$mOCf9qqsskaQGmxsaI_m2ZmJO2w(PlaybackService.java:0)\r\n1702289040.395 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService$$ExternalSyntheticLambda6.accept(R8$$SyntheticClass:0)\r\n1702289040.395 10231  8418  8418 W System.err: \tat io.reactivex.internal.observers.LambdaObserver.onNext(LambdaObserver.java:63)\r\n1702289040.395 10231  8418  8418 W System.err: \tat io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver.drainNormal(ObservableObserveOn.java:201)\r\n1702289040.395 10231  8418  8418 W System.err: \tat io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver.run(ObservableObserveOn.java:255)\r\n1702289040.395 10231  8418  8418 W System.err: \tat io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable.run(HandlerScheduler.java:124)\r\n1702289040.395 10231  8418  8418 W System.err: \tat android.os.Handler.handleCallback(Handler.java:942)\r\n1702289040.395 10231  8418  8418 W System.err: \tat android.os.Handler.dispatchMessage(Handler.java:99)\r\n1702289040.395 10231  8418  8418 W System.err: \tat android.os.Looper.loopOnce(Looper.java:201)\r\n1702289040.395 10231  8418  8418 W System.err: \tat android.os.Looper.loop(Looper.java:288)\r\n1702289040.395 10231  8418  8418 W System.err: \tat android.app.ActivityThread.main(ActivityThread.java:7959)\r\n1702289040.395 10231  8418  8418 W System.err: \tat java.lang.reflect.Method.invoke(Native Method)\r\n1702289040.395 10231  8418  8418 W System.err: \tat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:548)\r\n1702289040.395 10231  8418  8418 W System.err: \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:942)\r\n1702289040.395 10231  8418  8418 D PlaybackService: Playable was not found. Stopping service.\r\n1702289040.395 10231  8418  8418 W System.err: java.lang.RuntimeException: Cannot initialize effect engine for type: fe3199be-aed0-413f-87bb-11260eb63cf1 Error: -3\r\n1702289040.395 10231  8418  8418 W System.err: \tat android.media.audiofx.AudioEffect.<init>(AudioEffect.java:543)\r\n1702289040.395 10231  8418  8418 W System.err: \tat android.media.audiofx.AudioEffect.<init>(AudioEffect.java:501)\r\n1702289040.395 10231  8418  8418 W System.err: \tat android.media.audiofx.AudioEffect.<init>(AudioEffect.java:475)\r\n1702289040.395 10231  8418  8418 W System.err: \tat android.media.audiofx.LoudnessEnhancer.<init>(LoudnessEnhancer.java:80)\r\n1702289040.395 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.ExoPlayerWrapper.initLoudnessEnhancer(ExoPlayerWrapper.java:357)\r\n1702289040.395 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.ExoPlayerWrapper.createPlayer(ExoPlayerWrapper.java:146)\r\n1702289040.395 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.ExoPlayerWrapper.<init>(ExoPlayerWrapper.java:76)\r\n1702289040.395 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.LocalPSMP.createMediaPlayer(LocalPSMP.java:587)\r\n1702289040.395 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.LocalPSMP.playMediaObject(LocalPSMP.java:158)\r\n1702289040.395 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.LocalPSMP.playMediaObject(LocalPSMP.java:113)\r\n1702289040.395 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService.startPlaying(PlaybackService.java:741)\r\n1702289040.395 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService.lambda$onStartCommand$6(PlaybackService.java:526)\r\n1702289040.395 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService.$r8$lambda$mOCf9qqsskaQGmxsaI_m2ZmJO2w(PlaybackService.java:0)\r\n1702289040.395 10231  8418  8418 W System.err: \tat de.danoeh.antennapod.core.service.playback.PlaybackService$$ExternalSyntheticLambda6.accept(R8$$SyntheticClass:0)\r\n1702289040.395 10231  8418  8418 W System.err: \tat io.reactivex.internal.observers.LambdaObserver.onNext(LambdaObserver.java:63)\r\n1702289040.395 10231  8418  8418 W System.err: \tat io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver.drainNormal(ObservableObserveOn.java:201)\r\n1702289040.395 10231  8418  8418 W System.err: \tat io.reactivex.internal.operators.observable.ObservableObserveOn$ObserveOnObserver.run(ObservableObserveOn.java:255)\r\n1702289040.395 10231  8418  8418 W System.err: \tat io.reactivex.android.schedulers.HandlerScheduler$ScheduledRunnable.run(HandlerScheduler.java:124)\r\n1702289040.395 10231  8418  8418 W System.err: \tat android.os.Handler.handleCallback(Handler.java:942)\r\n1702289040.395 10231  8418  8418 W System.err: \tat android.os.Handler.dispatchMessage(Handler.java:99)\r\n1702289040.395 10231  8418  8418 W System.err: \tat android.os.Looper.loopOnce(Looper.java:201)\r\n1702289040.395 10231  8418  8418 W System.err: \tat android.os.Looper.loop(Looper.java:288)\r\n1702289040.395 10231  8418  8418 W System.err: \tat android.app.ActivityThread.main(ActivityThread.java:7959)\r\n1702289040.395 10231  8418  8418 W System.err: \tat java.lang.reflect.Method.invoke(Native Method)\r\n1702289040.395 10231  8418  8418 W System.err: \tat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:548)\r\n1702289040.395 10231  8418  8418 W System.err: \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:942)\r\n1702289040.395 10231  8418  8418 D PlaybackSrvState: stopService\r\n1702289040.395 10231  8418  8418 D PlaybackSrvState: stopForeground\r\n1702289040.398 10231  8418  8418 D PlaybackController: Disconnected from Service\r\n1702289040.398 10231  8418  8418 D PlaybackController: Disconnected from Service\r\n1702289040.398 10231  8418  8418 D PlaybackService: Received onUnbind event\r\n1702289040.398 10231  8418  8418 D PlaybackService: Service is about to be destroyed\r\n1702289040.398 10231  8418  8418 D PlaybackSrvState: stopForeground\r\n1702289041.529 10231  8418  8418 D PlaybackController: Releasing PlaybackController\r\n1702289041.533 10231  8418  8418 D PlaybackController: Releasing PlaybackController\n```\n", "hints_text": "Ping @matejdro\nMy guess is that this device does not support the audio boost effect?\r\n\r\nFrom what I can read , we can query the effects via `android.media.audiofx.AudioEffect.queryEffects` and if there is not UUID of `android.media.audiofx.AudioEffect#EFFECT_TYPE_LOUDNESS_ENHANCER` in there, disable it in ExoPlayerWrapper and hide setting from settings (or disable it with a note saying \"Not supported on your device\"?).\r\n\r\nIt might also be worth try catching the whole thing just in case and log the exceptions somewhere.\r\n\r\nI can try doing a PR for this, but I'm not sure if I can do it within couple of days.", "created_at": "2023-12-13T07:36:26Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 6739, "instance_id": "AntennaPod__AntennaPod-6739", "issue_numbers": ["4935"], "base_commit": "2c3fb5610a98d80db25b85fdf0607bfc2b6216fc", "patch": "diff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java b/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java\nindex a8570ea4e6..a614204807 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/FeedItem.java\n@@ -1,8 +1,10 @@\n package de.danoeh.antennapod.model.feed;\n \n+import android.util.Log;\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n \n+import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.builder.ToStringBuilder;\n import org.apache.commons.lang3.builder.ToStringStyle;\n \n@@ -20,6 +22,8 @@\n  */\n public class FeedItem extends FeedComponent implements Serializable {\n \n+    public static String TAG = \"FeedItem\";\n+\n     /** tag that indicates this item is in the queue */\n     public static final String TAG_QUEUE = \"Queue\";\n     /** tag that indicates this item is in favorites */\n@@ -42,6 +46,8 @@ public class FeedItem extends FeedComponent implements Serializable {\n     private transient Feed feed;\n     private long feedId;\n     private String podcastIndexChapterUrl;\n+    private String podcastIndexTranscriptUrl;\n+    private String podcastIndexTranscriptType;\n \n     private int state;\n     public static final int NEW = -1;\n@@ -82,7 +88,8 @@ public FeedItem() {\n      * */\n     public FeedItem(long id, String title, String link, Date pubDate, String paymentLink, long feedId,\n                     boolean hasChapters, String imageUrl, int state,\n-                    String itemIdentifier, long autoDownload, String podcastIndexChapterUrl) {\n+                    String itemIdentifier, long autoDownload, String podcastIndexChapterUrl,\n+                    String transcriptType, String transcriptUrl) {\n         this.id = id;\n         this.title = title;\n         this.link = link;\n@@ -95,6 +102,10 @@ public FeedItem(long id, String title, String link, Date pubDate, String payment\n         this.itemIdentifier = itemIdentifier;\n         this.autoDownload = autoDownload;\n         this.podcastIndexChapterUrl = podcastIndexChapterUrl;\n+        if (transcriptUrl != null) {\n+            this.podcastIndexTranscriptUrl = transcriptUrl;\n+            this.podcastIndexTranscriptType = transcriptType;\n+        }\n     }\n \n     /**\n@@ -162,6 +173,9 @@ public void updateFromOther(FeedItem other) {\n         if (other.podcastIndexChapterUrl != null) {\n             podcastIndexChapterUrl = other.podcastIndexChapterUrl;\n         }\n+        if (other.getPodcastIndexTranscriptUrl() != null) {\n+            podcastIndexTranscriptUrl = other.podcastIndexTranscriptUrl;\n+        }\n     }\n \n     /**\n@@ -440,6 +454,45 @@ public void setPodcastIndexChapterUrl(String url) {\n         podcastIndexChapterUrl = url;\n     }\n \n+    public void setPodcastIndexTranscriptUrl(String type, String url) {\n+        updateTranscriptPreferredFormat(type, url);\n+    }\n+\n+    public String getPodcastIndexTranscriptUrl() {\n+        return podcastIndexTranscriptUrl;\n+    }\n+\n+    public String getPodcastIndexTranscriptType() {\n+        return podcastIndexTranscriptType;\n+    }\n+\n+    public void updateTranscriptPreferredFormat(String type, String url) {\n+        if (StringUtils.isEmpty(type) || StringUtils.isEmpty(url)) {\n+            return;\n+        }\n+\n+        String canonicalSrr = \"application/srr\";\n+        String jsonType = \"application/json\";\n+\n+        switch (type) {\n+            case \"application/json\":\n+                podcastIndexTranscriptUrl = url;\n+                podcastIndexTranscriptType = type;\n+                break;\n+            case \"application/srr\":\n+            case \"application/srt\":\n+            case \"application/x-subrip\":\n+                if (podcastIndexTranscriptUrl == null || !podcastIndexTranscriptType.equals(jsonType)) {\n+                    podcastIndexTranscriptUrl = url;\n+                    podcastIndexTranscriptType = canonicalSrr;\n+                }\n+                break;\n+            default:\n+                Log.d(TAG, \"Invalid format for transcript \" + type);\n+                break;\n+        }\n+    }\n+\n     @NonNull\n     @Override\n     public String toString() {\ndiff --git a/parser/feed/src/main/java/de/danoeh/antennapod/parser/feed/namespace/PodcastIndex.java b/parser/feed/src/main/java/de/danoeh/antennapod/parser/feed/namespace/PodcastIndex.java\nindex 1f543a5ae5..dd11fb4e7b 100644\n--- a/parser/feed/src/main/java/de/danoeh/antennapod/parser/feed/namespace/PodcastIndex.java\n+++ b/parser/feed/src/main/java/de/danoeh/antennapod/parser/feed/namespace/PodcastIndex.java\n@@ -14,6 +14,8 @@ public class PodcastIndex extends Namespace {\n     private static final String URL = \"url\";\n     private static final String FUNDING = \"funding\";\n     private static final String CHAPTERS = \"chapters\";\n+    private static final String TRANSCRIPT = \"transcript\";\n+    private static final String TYPE = \"type\";\n \n     @Override\n     public SyndElement handleElementStart(String localName, HandlerState state,\n@@ -28,6 +30,12 @@ public SyndElement handleElementStart(String localName, HandlerState state,\n             if (!TextUtils.isEmpty(href)) {\n                 state.getCurrentItem().setPodcastIndexChapterUrl(href);\n             }\n+        } else if (TRANSCRIPT.equals(localName)) {\n+            String href = attributes.getValue(URL);\n+            String type = attributes.getValue(TYPE);\n+            if (!TextUtils.isEmpty(href) && !TextUtils.isEmpty(type)) {\n+                state.getCurrentItem().setPodcastIndexTranscriptUrl(type, href);\n+            }\n         }\n         return new SyndElement(localName, this);\n     }\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBUpgrader.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBUpgrader.java\nindex e4a1f5a3dd..bde74948f5 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBUpgrader.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/DBUpgrader.java\n@@ -334,6 +334,12 @@ static void upgrade(final SQLiteDatabase db, final int oldVersion, final int new\n             db.execSQL(\"ALTER TABLE \" + PodDBAdapter.TABLE_NAME_FEEDS\n                     + \" ADD COLUMN \" + PodDBAdapter.KEY_NEW_EPISODES_ACTION + \" INTEGER DEFAULT 0\");\n         }\n+        if (oldVersion < 3030000) {\n+            db.execSQL(\"ALTER TABLE \" + PodDBAdapter.TABLE_NAME_FEED_ITEMS\n+                    + \" ADD COLUMN \" + PodDBAdapter.KEY_PODCASTINDEX_TRANSCRIPT_URL + \" TEXT\");\n+            db.execSQL(\"ALTER TABLE \" + PodDBAdapter.TABLE_NAME_FEED_ITEMS\n+                    + \" ADD COLUMN \" + PodDBAdapter.KEY_PODCASTINDEX_TRANSCRIPT_TYPE + \" TEXT\");\n+        }\n     }\n \n }\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\nindex 21f12e2230..3140fdd0ea 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\n@@ -52,7 +52,7 @@ public class PodDBAdapter {\n \n     private static final String TAG = \"PodDBAdapter\";\n     public static final String DATABASE_NAME = \"Antennapod.db\";\n-    public static final int VERSION = 3010000;\n+    public static final int VERSION = 3030000;\n \n     /**\n      * Maximum number of arguments for IN-operator.\n@@ -120,6 +120,8 @@ public class PodDBAdapter {\n     public static final String KEY_EPISODE_NOTIFICATION = \"episode_notification\";\n     public static final String KEY_NEW_EPISODES_ACTION = \"new_episodes_action\";\n     public static final String KEY_PODCASTINDEX_CHAPTER_URL = \"podcastindex_chapter_url\";\n+    public static final String KEY_PODCASTINDEX_TRANSCRIPT_URL = \"podcastindex_transcript_url\";\n+    public static final String KEY_PODCASTINDEX_TRANSCRIPT_TYPE = \"podcastindex_transcript_type\";\n \n     // Table names\n     public static final String TABLE_NAME_FEEDS = \"Feeds\";\n@@ -172,7 +174,9 @@ public class PodDBAdapter {\n             + KEY_HAS_CHAPTERS + \" INTEGER,\" + KEY_ITEM_IDENTIFIER + \" TEXT,\"\n             + KEY_IMAGE_URL + \" TEXT,\"\n             + KEY_AUTO_DOWNLOAD_ATTEMPTS + \" INTEGER,\"\n-            + KEY_PODCASTINDEX_CHAPTER_URL + \" TEXT)\";\n+            + KEY_PODCASTINDEX_CHAPTER_URL + \" TEXT,\"\n+            + KEY_PODCASTINDEX_TRANSCRIPT_TYPE + \" TEXT,\"\n+            + KEY_PODCASTINDEX_TRANSCRIPT_URL + \" TEXT\" + \")\";\n \n     private static final String CREATE_TABLE_FEED_MEDIA = \"CREATE TABLE \"\n             + TABLE_NAME_FEED_MEDIA + \" (\" + TABLE_PRIMARY_KEY + KEY_DURATION\n@@ -260,7 +264,9 @@ public class PodDBAdapter {\n             + TABLE_NAME_FEED_ITEMS + \".\" + KEY_ITEM_IDENTIFIER + \", \"\n             + TABLE_NAME_FEED_ITEMS + \".\" + KEY_IMAGE_URL + \", \"\n             + TABLE_NAME_FEED_ITEMS + \".\" + KEY_AUTO_DOWNLOAD_ATTEMPTS + \", \"\n-            + TABLE_NAME_FEED_ITEMS + \".\" + KEY_PODCASTINDEX_CHAPTER_URL;\n+            + TABLE_NAME_FEED_ITEMS + \".\" + KEY_PODCASTINDEX_CHAPTER_URL + \", \"\n+            + TABLE_NAME_FEED_ITEMS + \".\" + KEY_PODCASTINDEX_TRANSCRIPT_TYPE + \", \"\n+            + TABLE_NAME_FEED_ITEMS + \".\" + KEY_PODCASTINDEX_TRANSCRIPT_URL;\n \n     private static final String KEYS_FEED_MEDIA =\n             TABLE_NAME_FEED_MEDIA + \".\" + KEY_ID + \" AS \" + SELECT_KEY_MEDIA_ID + \", \"\n@@ -656,6 +662,14 @@ private long updateOrInsertFeedItem(FeedItem item, boolean saveFeed) {\n         values.put(KEY_IMAGE_URL, item.getImageUrl());\n         values.put(KEY_PODCASTINDEX_CHAPTER_URL, item.getPodcastIndexChapterUrl());\n \n+        // We only store one transcript url, we prefer JSON if it exists\n+        String type = item.getPodcastIndexTranscriptType();\n+        String url = item.getPodcastIndexTranscriptUrl();\n+        if (url != null) {\n+            values.put(KEY_PODCASTINDEX_TRANSCRIPT_TYPE, type);\n+            values.put(KEY_PODCASTINDEX_TRANSCRIPT_URL, url);\n+        }\n+\n         if (item.getId() == 0) {\n             item.setId(db.insert(TABLE_NAME_FEED_ITEMS, null, values));\n         } else {\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemCursorMapper.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemCursorMapper.java\nindex fcf51e31ec..c4e271eb23 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemCursorMapper.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemCursorMapper.java\n@@ -28,6 +28,9 @@ public static FeedItem convert(@NonNull Cursor cursor) {\n         int indexAutoDownload = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_AUTO_DOWNLOAD_ATTEMPTS);\n         int indexImageUrl = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_IMAGE_URL);\n         int indexPodcastIndexChapterUrl = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_PODCASTINDEX_CHAPTER_URL);\n+        int indexPodcastIndexTranscriptUrl = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_PODCASTINDEX_TRANSCRIPT_URL);\n+        int indexPodcastIndexTranscriptType = cursor.getColumnIndexOrThrow(\n+                PodDBAdapter.KEY_PODCASTINDEX_TRANSCRIPT_TYPE);\n \n         long id = cursor.getInt(indexId);\n         String title = cursor.getString(indexTitle);\n@@ -41,8 +44,11 @@ public static FeedItem convert(@NonNull Cursor cursor) {\n         long autoDownload = cursor.getLong(indexAutoDownload);\n         String imageUrl = cursor.getString(indexImageUrl);\n         String podcastIndexChapterUrl = cursor.getString(indexPodcastIndexChapterUrl);\n+        String podcastIndexTranscriptUrl = cursor.getString(indexPodcastIndexTranscriptUrl);\n+        String podcastIndexTranscriptType = cursor.getString(indexPodcastIndexTranscriptType);\n \n         return new FeedItem(id, title, link, pubDate, paymentLink, feedId,\n-                hasChapters, imageUrl, state, itemIdentifier, autoDownload, podcastIndexChapterUrl);\n+                hasChapters, imageUrl, state, itemIdentifier, autoDownload, podcastIndexChapterUrl,\n+                podcastIndexTranscriptType, podcastIndexTranscriptUrl);\n     }\n }\n", "test_patch": "diff --git a/parser/feed/src/test/java/de/danoeh/antennapod/parser/feed/element/namespace/RssParserTest.java b/parser/feed/src/test/java/de/danoeh/antennapod/parser/feed/element/namespace/RssParserTest.java\nindex 88ac5c7314..4ce8911e92 100644\n--- a/parser/feed/src/test/java/de/danoeh/antennapod/parser/feed/element/namespace/RssParserTest.java\n+++ b/parser/feed/src/test/java/de/danoeh/antennapod/parser/feed/element/namespace/RssParserTest.java\n@@ -97,6 +97,14 @@ public void testMultipleFundingTags() throws Exception {\n         assertEquals(\"https://example.com/funding3\", feed.getPaymentLinks().get(2).url);\n     }\n \n+    @Test\n+    public void testPodcastIndexTranscript() throws Exception {\n+        File feedFile = FeedParserTestHelper.getFeedFile(\"feed-rss-testPodcastIndexTranscript.xml\");\n+        Feed feed = FeedParserTestHelper.runFeedParser(feedFile);\n+        assertEquals(\"https://podnews.net/audio/podnews231011.mp3.json\", feed.getItems().get(0).getPodcastIndexTranscriptUrl());\n+        assertEquals(\"application/json\", feed.getItems().get(0).getPodcastIndexTranscriptType());\n+    }\n+\n     @Test\n     public void testUnsupportedElements() throws Exception {\n         File feedFile = FeedParserTestHelper.getFeedFile(\"feed-rss-testUnsupportedElements.xml\");\ndiff --git a/parser/feed/src/test/resources/feed-rss-testPodcastIndexTranscript.xml b/parser/feed/src/test/resources/feed-rss-testPodcastIndexTranscript.xml\nnew file mode 100644\nindex 0000000000..f972ee2076\n--- /dev/null\n+++ b/parser/feed/src/test/resources/feed-rss-testPodcastIndexTranscript.xml\n@@ -0,0 +1,13 @@\n+<?xml version='1.0' encoding='UTF-8' ?>\n+<rss version=\"2.0\" xmlns:podcast=\"https://podcastindex.org/namespace/1.0\">\n+    <channel>\n+        <title>title</title>\n+        <item>\n+            <title>Podcasts in YouTube make it to the UK</title>\n+            <link>https://podnews.net/update/youtube-podcasts-uk</link>\n+            <pubDate>Tue, 10 Oct 2023 08:46:31 +0000</pubDate>\n+            <podcast:transcript url=\"https://podnews.net/audio/podnews231011.mp3.json\" type=\"application/json\" />\n+            <podcast:transcript url=\"https://podnews.net/audio/podnews231011.mp3.srt\" type=\"application/srt\" />\n+        </item>\n+    </channel>\n+</rss>\n", "problem_statement": "Support for podcast:transcript tag\n# Checklist\r\n<!-- Place an x in the boxes to tick them: [x] -->\r\n\r\n- [x] I have used the search function to see if someone else has already submitted the same feature request.\r\n- [x] I will only create one feature request per issue.\r\n- [x] I will describe the problem with as much detail as possible\r\n\r\n# Feature description\r\nSome podcasts include text transcript using `podcast:transcipt`\r\n\r\n**Suggested solution**:\r\nDisplay transcript and sync it with the audio.\r\n\r\nMeeting notes from Nov 2nd, 2023 https://github.com/AntennaPod/AntennaPod/issues/4935#issuecomment-1791614891\r\n\n", "hints_text": "@keunes or @ByteHamster please assign to me, since I have the podcastindex namespace parsing done in #4933, I could tackle `podcast:transcript`\nI have a a few suggestions for transcript related features I think  would be great to include in AntennaPod (originally mentioned in https://github.com/AntennaPod/AntennaPod/issues/5002):\r\n\r\n1. Optionally including timestamps when copying from the trancsript. This would be helpful when using a noteapp to write down interesting segments from the podcast as it makes it easier to go back to the podcast an relisten to the particular segment.\r\n2.  Having the transcript autoscroll as the episode is playing, so when switching to the transcript tab, the text is in the same position as the audio. This would facilitate notetaking while listening.\r\n3. Searching the transcript. I am referring to searching within a single transcript , which would make it easier to find interesting segments (which in turn could be navigated to if combined with the below item).\r\n4. Using the transcript for seeking in the audio (clicking sentences to jump to that position).\r\n\r\nThere are currently at least two podcast apps on iOS that provide some of these features, but none on Android as far as I know. Those apps are https://podcast9.com/ and https://www.airr.io/. They are labeling themselves as more educational / productive alternatives to regular podcast apps and their main value proposition is the ability to interact with and remember what you listen to as well as easily share your favorite bits with others.\r\n\r\nA future item to consider which might be out of scope currently is to automatically create transcripts for episodes that don't provide it, e.g. using the live transcribe feature on phones where it is available.\nNice ideas \ud83d\udc4d My guess would be that # 4 wouldn't be too difficult. But for the others I guess we (the app) would need to receive the timestamps with the transcript I think - as I reckon it's not feasible for AP to automatically match the text with the audio. Do you know if transcripts typically have such timestamps?\nThanks @keunes ! I am not very experienced with podcast data and metadata, but I looked around a bit and it seems like at least some transcripts provide this. The [example used on the podcastindex API docs](https://podcastindex-org.github.io/docs-api/#get-/episodes/byid) page includes this segment:\r\n\r\n```json\r\ntranscriptUrl: \"https://mp3s.nashownotes.com/NA-1322-Captions.srt\"\r\n```\r\n\r\nThat srt file includes timestamps which look like this:\r\n\r\n```srt\r\n1\r\n00:00:00,000 --> 00:00:05,340\r\nPull my mask over my nose. Adam\r\nCurry John C Dvorak, Thursday,\r\n\r\n2\r\n00:00:05,340 --> 00:00:09,030\r\nFebruary 18 2021. This is your\r\naward winning media\r\n\r\n3\r\n00:00:09,030 --> 00:00:13,380\r\nassassination Episode 13. This\r\nis no agenda.\r\n\r\n...\r\n```\r\n\r\nI am not sure how common it is, but at least it exists.\r\n\r\nA complimentary approach that is less robust but does not rely on external data could be to match the relative position of sentences in the transcript with the relative time of the audio file (when no timestamps are available). Even if this was only able to generate precision to the minute, I think it would be helpful for most items I mentioned above. For some, like the scrolling text, it would probably perform quite well since so much of the transcript would be shown on the screen that the matched position does not have to be exact. It would probably benefit from calculating the relative audio position without silences (I noted that there is already an option in AP to skip these when listening).\r\n\nI like to add an idea mentioned in the issue above: **hide empty tabs** - that could be empty transcripts and especially nonexistent chapters, if only one tab remains the tablayout itself should probably be hidden.\r\n\r\nI think thats a sensible solution, to not crowd the AudioPlayer with empty tabs and require to user to swipe a thousand times to get to the desired tab, makes the UX clearer :)\n@tonytamsf Any idea how to implement the data store? Downloading all transcripts of all episodes could result in a huge amount of text to be stored. We already have the problem that the database is pretty big. I think it would be better to only store the URLs and then load the transcript when actually viewing the transcript page in AntennaPod. We could enable caching with okhttp to reduce the number of web requests. \n> @tonytamsf Any idea how to implement the data store? Downloading all transcripts of all episodes could result in a huge amount of text to be stored. We already have the problem that the database is pretty big. I think it would be better to only store the URLs and then load the transcript when actually viewing the transcript page in AntennaPod. We could enable caching with okhttp to reduce the number of web requests.\r\n\r\nI like your idea, there is no need to store transcription.  Depending on the user, they may not want to be downloading transcript using mobile data, so we might have to get user consent to use mobile to download transcript.\nWhy not storing transcript on file text on device? Same way episodes are stored. They would be removed along with episodes and it would allow to make them available like episodes are.\r\n\r\nEdit :\r\nAnd it won't clutter database except maybe to put a flag to know there is transcript downloaded. I am not sure it's even needed as all logics would be parallel to what is done for downloaded episodes.\nSounds like a good idea. When streaming, users need a data connection anyways. When downloading, we can download the transcripts, too. :+1:\n> Why not storing transcript on file text on device?\n\nI'm just wondering: this wouldn't hinder 'processing' the info (esp. timestamps, for # 4 in OP).\n\n> When downloading, we can download the transcripts, too\n\nJust to throw an idea out: couldn't this be done, but then in the db? As in, download & store in db when episode is downloaded; remove from dB when file is deleted? (Don't know if this would have any actual benefit, see above).\nI don't think storing and using text files would cause any problem : it is what video player does with srt files for subtitles.\nStoring it in the database but only for downloaded episodes should work :) Then we don't need to store the file path, we can just store the transcript directly.\nDon't know if you saw how Podverse implemented transcript with search. For reference there is a video of what they did : https://twitter.com/Podverse/status/1413642917760184325?s=19\r\n\r\nIMHO about their screen : \r\n- I would prefer timecode on left side and with a smaller font and using grey as text color. So time code would be there but won't distract your eyes when reading transcription\r\n- I wouldn't separate block like they did. It's like there is an empty line beetween each segment which is annoying when reading\nThanks for sharing that @Matth7878!\r\n\r\n> I would prefer timecode on left side and with a smaller font and using grey as text color\r\n\r\nFully agree\r\n\r\n> I wouldn't separate block like they did\r\n\r\nI understand your point, but we can't really merge sentences that are separated into two blocks I think:\r\n* we don't know where we can stitch parts together, and where a hard enter should be kept (in the interface). If there's no whitespace, it might still be complicated to read:\r\n![Schermafdruk van 2021-07-11 10-45-14](https://user-images.githubusercontent.com/11229646/125188759-38432280-e235-11eb-89f0-e0ce24a2ffff.png)\r\n* if we do stitch together the sentences, there might be a situation where one line on the screen covers three lines in the transcript file. Then we can only display the first timestamp, which can be problematic in some cases (e.g. when there is a line with `[silence]` that takes a minute - you wouldn't be able to jump to the bit after the silence).\r\n\nLet me take a stab at getting the podcast:transcript tag to download and stored.  Then we can work on the UI on the next step\n> Let me take a stab at getting the podcast:transcript tag to download and stored. Then we can work on the UI on the next step\r\n\r\nSorry I have been taking a break from AntennaPod.  I'm un-assigning myself until I get back\n\r\n> Sorry I have been taking a break from AntennaPod. I'm un-assigning myself until I get back\r\n\r\nI'm back with my beloved AP app. I'll start working on downloading the transcript\nAny thoughts about the support of all 4 content types in the `<podcast:transcript>` tag?\r\n\r\nSpec: https://github.com/Podcastindex-org/podcast-namespace/blob/main/transcripts/transcripts.md\r\n\r\n* HTML - this format has no or limited timecode - I recommend that we ignore this\r\n* JSON - Much more flexible - we should fully support this, I'm searching for sample podcast that use this format (not seeing it yet)\r\n* SRT - great for video or audio, max number of lines 2, max chars 32 - I recommend we support this fully\r\n* WebVTT - for HTML on the web, I recommend we don't support this\r\n\r\nExample: https://podnews.net/rss\r\n\r\n```\r\n<podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.vtt\" type=\"text/vtt\" />\r\n<podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.srt\" type=\"application/srt\" />\r\n<podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.txt\" type=\"text/plain\" />\r\n<podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.srt\" type=\"application/x-subrip\" rel=\"captions\" />\r\n```\r\n\r\nIt looks like Podnews also provides `text/pain` which is not in the Podcast 2.0 spec\r\n\r\n@jamescridland I am a loyal listener of Podnews, is there a reason you don't have JSON version of `podcast:transcript`?  \r\n\r\nExample: Podcasting 2.0 https://feeds.podcastindex.org/pc20.xml\r\n\r\nIt uses the SRT format \r\n`<podcast:transcript url=\"https://mp3s.nashownotes.com/PC20-125-Captions.srt\" type=\"application/srt\" rel=\"captions\"/>`\n@ByteHamster - do you have objections if I pull in this code to parse SRT files? https://github.com/gusthavosouza/SRTParser.\r\n\r\nI'm contacting the author about the missing license file his source code.\r\n\r\nIf you prefer I write my parser, I could do that.  It's not that hard.  Before I embark, I wanted to hear your opinion.\n> HTML - this format has no or limited timecode - I recommend that we ignore this\n\nAgreed.\n\nSupporting JSON & SRT is quite nice already.\n@tonytamsf I can't generate JSON transcripts - whisper.cpp is what I use, and it doesn't make them.\r\n\r\nI agree that supporting all four is redundant, and would agree with your suggestion to cease support for VTT. VTT seems to have been chosen because of support from libraries; but it seems to me that we are offering too many formats here for sensible support. It's not complicated to make an SRT using the same tools as that might make a VTT.\r\n\r\n(Edited) I was under the impression that support for HTML was as a simple link to a full web page with a transcript. This doesn't appear to be the case, and I believe that we should also remove this. So, we end up with (in preference order):\r\n\r\n1. JSON files for word-by-word closed-captioning, editing, etc.\r\n2. SRT files for closed-captioning (max 32 char length)\r\n\r\n(I shall also go and remove the TXT format from the Podnews feed; but will keep the VTT file there).\n> Any thoughts about the support of all 4 content types in the `<podcast:transcript>` tag?\r\n> \r\n> Spec: https://github.com/Podcastindex-org/podcast-namespace/blob/main/transcripts/transcripts.md\r\n> \r\n> * HTML - this format has no or limited timecode - I recommend that we ignore this\r\n> * JSON - Much more flexible - we should fully support this, I'm searching for sample podcast that use this format (not seeing it yet)\r\n> * SRT - great for video or audio, max number of lines 2, max chars 32 - I recommend we support this fully\r\n> * WebVTT - for HTML on the web, I recommend we don't support this\r\n> \r\n> Example: https://podnews.net/rss\r\n> \r\n> ```\r\n> <podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.vtt\" type=\"text/vtt\" />\r\n> <podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.srt\" type=\"application/srt\" />\r\n> <podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.txt\" type=\"text/plain\" />\r\n> <podcast:transcript url=\"https://podnews.net/audio/podnews230310.mp3.srt\" type=\"application/x-subrip\" rel=\"captions\" />\r\n> ```\r\n> \r\n> It looks like Podnews also provides `text/pain` which is not in the Podcast 2.0 spec\r\n> \r\n> @jamescridland I am a loyal listener of Podnews, is there a reason you don't have JSON version of `podcast:transcript`?\r\n> \r\n> Example: Podcasting 2.0 https://feeds.podcastindex.org/pc20.xml\r\n> \r\n> It uses the SRT format `<podcast:transcript url=\"https://mp3s.nashownotes.com/PC20-125-Captions.srt\" type=\"application/srt\" rel=\"captions\"/>`\r\n\r\n@tonytamsf, @jamescridland, `text/plain` is mentioned [here](https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#transcript) but not [here](https://github.com/Podcastindex-org/podcast-namespace/blob/main/transcripts/transcripts.md).\nI don't get this removing supported formats business.  VTT is the only format supported natively by browsers, and like SRT+ in many ways but a proper w3c standard.  If some of the first apps to take a stab at implementing don't support all formats, that's on them (and will improve with time) - no need to penalize everyone else by removing valuable stuff from the spec.  We should encourage the server side to push as much signal out to the world as they can.\n> I don't get this removing supported formats business. VTT is the only format supported natively by browsers\r\n\r\nNote that this issue is about support for the transcript tag in AntennaPod. First I thought that HTML was pointless, but I see now that it has a (different) use case - outside of the scope of this issue.\r\n\r\nMaybe let's create a separate issue in the PC namespace repo about this wider (PC namespace) topic.\nAh, sorry - followed a clickbaity link from [podnews](https://podnews.net/update/size-matters), and thought this was referring to the spec itself!\r\n\r\n> [Should we drop support for VTT and even HTML file support](https://github.com/AntennaPod/AntennaPod/issues/4935#issuecomment-1465273529?utm_source=podnews.net&utm_medium=web&utm_campaign=podnews.net:2023-03-13) for the podcast:transcript tag?\r\n\n> do you have objections if I pull in this code to parse SRT files? https://github.com/gusthavosouza/SRTParser.\r\n\r\nIf the license allows that, it should be okay. Probably needs some changes, though, because we only want English comments and maybe don't need all the features.\n> because we only want English comments\r\n\r\nDo we? With 'comments' do you refer to the actual transcripts (subtitles)? If a user has their device in French and there are transcripts/subtitles available in French, why not use that instead.\r\n\r\nSide note on implementation: I would be in favour of storing the transcript 'on drive' for downloaded episodes. As we've discussed for chapters, it's probably too big for in the database, and retrieving it only on playtime causes issues like #6062.\nThis issue has been mentioned on **AntennaPod Forum**. There might be relevant details there:\n\nhttps://forum.antennapod.org/t/podcast-subtitles/3365/4\n\n@keunes - I'm done with the data parsing for JSON and working on the SRT format now for `<podcast:transcript>`.  After I'm done with the data storage, I would like some mockups on how transcription would work in the AP app.\r\n\r\n1. How does transcription display while an episode is being played?  Does it by default hover as an overlay and users can click on the words to jump into a full timecode view?\r\n2. In the timecode full transcription view, I assume the user can scroll back and forward to view the transcription and tap on a timecode to jump into the audio?  Would each word highlight to follow along the audio?\r\n3. The user can copy and paste any portion transcript?\r\n4. Without the overlay of the words, can users jump to view the transcript before listening, how would that work?\r\n5. Propose Phase 2 : Can users search the transcripts in one episode, across all episodes and subscriptions?\nYeey. That's great news @tonytamsf!\n\nLet me try to reply to some of your questions:\n\n> How does transcription display while an episode is being played? Does it by default hover as an overlay and users can click on the words to jump into a full timecode view?\n\nBy default this 'live subtitling' should be enabled/visible in the full player, for discoverability (there are not yet many feeds with this tag, so we want to show it when it's available). It should be possible via a setting in the UI section to disable this. (I expect that someone at some point will ask to make this a setting at podcast level, e.g. to only turn it on for their language learning, but let's see.)\n\nWe'll need a mock-up for this. We can probably take inspiration from some of the other apps who have enabled this already. To make it work nicely, we might have to make some design/UI changes.\n\n> In the timecode full transcription view, I assume the user can scroll back and forward to view the transcription and tap on a timecode to jump into the audio?\n\nYes. We'll need a mock-up for this.\n\n> Would each word highlight to follow along the audio?\n\nDepends. It's not always possible at word-level. E.g. SRT/VTT does not \u2013 here I think we should highlight each fragment.\n\nIn any case, I think the highlighting should be quite subtle (and I'm wondering if it's acceptable if e.g. highlight colour is not visible to visually impaired/does not comply with accessibility standards). We'll need a mock-up for this.\n\nhttps://github.com/Podcastindex-org/podcast-namespace/blob/main/transcripts/transcripts.md\n\n(~~Which transcript file types do you support at thi point?~~ I see it's SRT and JSON.)\n\n>  The user can copy and paste any portion transcript?\n\nYes.\n\n> Without the overlay of the words, can users jump to view the transcript before listening, how would that work?\n\nYes, this should be possible. I made a proposal a long time ago here, following user feedback on a beta version: https://forum.antennapod.org/t/user-feedback-swipe-navigation-from-player-screen-2-3-beta/1119\n\nIt's probably a lot of work to implement, bit I still stand behind the UX concept.\n\n(As a back-up, there should probably be an entry in the overflow menu.)\n\n> Propose Phase 2 : Can users search the transcripts in one episode, across all episodes and subscriptions?\n\nThat would be cool indeed. Certainly *within* the current episode (e.g. to find the section where they talk about X). Global search is an entirely separate thing.\n> I made a proposal a long time ago here... It's probably a lot of work to implement, bit I still stand behind the UX concept. (As a back-up, there should probably be an entry in the overflow menu.)\r\n\r\nThat's outside the scope of this PR (and would need some discussion). For now, I would do the overflow button. There is enough to discuss about the subtitles dialog/page itself\nI have a working PR that can parse, scroll through the transcript while following the audio.   Feel free to download a test version and give some feedback. \r\n I use `Podnews Daily` to do my test https://github.com/AntennaPod/AntennaPod/pull/6710\r\n\r\nUnfortunately, after sampling podcasts that I am subscribed to, the state of the transcript format is still not super well supported.  Here is a sample of of 104 feeds\r\n\r\n# Podcasts sampling\r\n- Roblox Tech Talk - `text/plain` https://share.transistor.fm/s/39ce510f/transcript.txt\r\n   -  parsable with timecoees\r\n-  Dev Interrupted - `text/html` https://feeds.buzzsprout.com/1422892/10190284/transcript\r\n   - not parsable\r\n- The Method - json & 'text/html' https://feeds.buzzsprout.com/1859927/9638130/transcript\r\n   - html not parsable\r\n   - json is fine https://feeds.buzzsprout.com/1859927/9638130/transcript.json\r\n   - (only 2 episode)\r\n- Radical Candor - `application/x-subrip` https://freepodcasttranscription.com/transcription/5e6070b67882e784d6b5baf4b19976bb717f1115.srt\r\n   - parsable\r\n- Indie Bites - `text/plain` https://share.transistor.fm/s/6cdce2f8/transcript.txt (no timecodes)\r\n  - not parsable\r\n- The Golden Hour - `text/html` https://www.podcastone.com/episode/Someones-Getting-Tased--The-Golden-Hour-51-w/-Brendan-Schaub-Erik-Griffin--Chris-DElia?view=transcript\r\n   - not parsable\nHi, really exciting times for AntennaPod and Podcsting in general. I've been doing some research about the use of transcript in the Podcasting 2.0 namespace.\r\n- I've found that even these mime types being equivalent `text/srt` `application/srt` `application/x-subrip` most player don't support all 3, so in in a \"test\" feed I declare all for the same file. \r\n- SRT is the most used format, then JSON, VTT and TXT (but these are usually full transcripts, not subtitle with parsable timecodes)\r\n\r\nIn case is useful, I have a feed with different options of redirect/hosting with different formats and mime-types if you want to test different edge cases, as discussed here : https://github.com/podverse/podverse-web/issues/1168#issuecomment-1695231077\r\nProbably the redirect / hosting part is no problem here as that part was for testing CORS in different web players. (Gitlab Pages works best with web players than Archive if something is interested)\r\n\r\n```\r\nEpisode 16\r\nOp3+ archive.org + vtt only\r\n\r\nEpisode 15\r\nOp3+ gitlab + vtt only\r\n\r\nEpisode 09\r\nOp3 + gitlab + vtt\r\nOp3 + archive + srt\r\n\r\nEpisode 08 (without OP3)\r\nGitlab + vtt\r\nArchive + srt\r\n\r\nEpisode Episode 00\r\nOp3 + gitlab + vtt/srt\r\n\r\nAll others\r\nOP3 + archive + vtt/srt\r\n```\r\nA problem that I've found with some player, in case you want to take it into account, is that if there is first a transcript tag with a file that doesn't work, some player won't try the next tag that would work.\r\n\r\nFeed:\r\nhttps://kdeexpress.gitlab.io/feed\r\n\r\n**TL;NR**\r\n\r\nI would prioritize SRT parsing, then JSON and if there is no much trouble VTT given the similarities with SRT. \r\nFor `text/html` and `text/plain` I would either show a new screen with all the text just assuming that is the full transcript to read or just offer a link to be open in the web browser.\nI'd jump in here and say two things:\r\n\r\nThe accurate stat is [contained here](https://stats.podcastindex.org/hourly_counts.json) - which at the time of writing is: \r\n\r\n>    \"feedsWithTranscripts\": 38,255\r\n>    \"episodesWithTranscripts\": 1,379,606\r\n\r\nThere's obviously a chicken and egg scenario with support. If AntennaPod supports transcripts, it would be a significant benefit to podcasting as a whole, but also to the uptake of this feature. But you'll get considerable promotion when this is launched. (I will, as one guarantee, give you a headline story in Podnews.)\r\n\r\nSecondly; might I suggest you ideally support these in this format:\r\n\r\n1. JSON - this is accurate to the word level, and allows [this kind of highlighted transcript](https://www.steno.fm/show/9b024349-ccf0-5f69-a609-6b82873eab3c/episode/aHR0cHM6Ly9wb2RuZXdzLm5ldC91cGRhdGUvZ2Vuei1mYXN0ZXN0LWdyb3dpbmc=), where the individual word being said is highlighted on screen. That also allows you to lay out closed-captions in a very bespoke way - allowing you to properly wordwrap them. It also allows more features in future like clipping, where you could highlight a word or sentence, and have the app specifically clip that accurately.\r\n\r\n2. SRT - these are accurate to about 32 characters, and therefore the timing isn't as perfect as it could be. [It works like this](https://www.steno.fm/show/917393e3-1b1e-5cef-ace4-edaa54e1f810/episode/YTQ2OWE5ZmQtMzVlOC00MDNhLWIzMDUtZGEyNmU3MDE1ZjBh). \r\n\r\nI'd, frankly, not support TXT or HTML unless you really want to - my suspicion is that these are relatively poorly supported anyway. But it doesn't seem like a heavy lift to simply open these in a webview. (I'm also very unclear if anyone is using VTT.)\r\n\r\nI hope that helps a bit!\n> If AntennaPod supports transcripts\r\n\r\nThanks for chipping in @jamescridland - one of our contributors is already working on this functionality. Hope we can coordinate re your coverage when it gets released. :-)\r\n\r\n> JSON \u2026 That also allows you to lay out closed-captions in a very bespoke way - allowing you to properly wordwrap them\r\n\r\nSee, that's what I was thinking. But I'm also wondering: how. Let's say it is at word level, how do you wrap that into the traditional two lines neatly? Starting from the first word (with its time stamp) and fill up the two lines until the screen is full, and take the end-time of the last word as the end-time for these two lines? Do you 'hard break' when there's a comma, or a period? What about speaker changes?\r\n\r\nI feel that SRT - given that it's the provider's responsibility to make it work with the character limit - often will provide a more logical view (even if less accurate).\r\n\r\nEither way - I'm very happy that both SRT & JSON already can be fetched and parsed \ud83d\ude00\nThank you @jamescridland for the details, it is helpful.\n\nWhat would be helpful for me when I am implementing the transcript feature is to look at other Android apps that are supporting the transcript tag.  Do you recommend an app that has implemented this feature well and taken advantage of the JSON word level time code? \n[Podverse](https://github.com/podverse) could be a reference. [The web displays](https://podverse.fm/es/episode/hazS_hcJz) 1 word per line :-1: , but the mobile (-rn repo) app shows the full sentence :+1: . So I assume it's using a word level JSON.\r\nIn the Android app each line on sentences is a placeholder for the audio timestamps, not exactly a word by word. [Steno.fm](https://www.steno.fm/show/396d9ae0-da7e-5557-b894-b606231fa3ea/episode/QnV6enNwcm91dC0xMzgwNjg5Nw==) is 1 by 1, but I don't think it's open source :-1: \r\n\r\n![imagen](https://github.com/AntennaPod/AntennaPod/assets/2069735/ae51a17b-13b0-4928-934c-9c49b2156130)\r\n![imagen](https://github.com/AntennaPod/AntennaPod/assets/2069735/2d31a517-72df-4b48-9da9-00c957dc6f04)\r\n\n> What would be helpful for me when I am implementing the transcript feature is to look at other Android apps that are supporting the transcript tag.\n\n@tonytamsf Sorry for the silence on my end. I've been doing a comparative analysis of all the We/Android apps that support the transcript tag and will at some point this weekend share a couple of nice examples.\nHello,\r\n\r\nI've thought and designed a bit more over the weekend. Please find below some recordings of (web) apps that I particularly liked, and a link to some mock-ups I made.\r\n\r\nInspiration\r\n---\r\nI tested all Android & web-[apps listed on the Podcast Index website](https://podcastindex.org/apps?appTypes=podcast+player&elements=Transcript) that support the Transcript tag and are accessible without log-in. I always checked  episode [1601 - \"Unkool & The Gang\"](https://podcastindex.org/podcast/41504?episode=15754728488) of No agenda. It has [this SRT captions file](https://mp3s.nashownotes.com/NA-1601-Captions.srt). Here is [the podcast's RSS feed](https://feeds.noagendaassets.com/noagenda.xml).\r\n\r\n### Podfriend **\r\nCool because: has nicely designed subtitles, with different colours, and speaker images.\r\n\r\nhttps://github.com/AntennaPod/AntennaPod/assets/11229646/aa6d70d0-77d6-42dd-9d5a-ec7557145dd6\r\n\r\n### Steno **\r\ncool because: grouping of source content into blocks per speaker, highlighting background of actively playing blocks as well as selected block (when paused or searching)\r\n[Try for yourself](https://www.steno.fm/show/856cd618-7f34-57ea-9b84-3600f1f65e7f/episode/aHR0cDovLzE2MDEubm9hZ2VuZGFub3Rlcy5jb20=) - my recording is too big for GitHub.\r\n\r\n### Podfans *\r\ncool because: has up/down arrows in search bar, nice design of timestamps (thin + lighter colour - should try that in my mock-ups too, althgouh they only seem to use mm:ss, not hh)\r\n![Screenshot from 2023-10-29 23-16-03 podfans](https://github.com/AntennaPod/AntennaPod/assets/11229646/e94b019e-d7ba-4824-8c67-de9c5a9459a0)\r\n\r\n### Fountain *\r\ncool because: has a little (i) icon with info about the transcript timings - noting they \"might not be accurate if the podcaster has dynamic ads.\" --> not in mock-ups yet\r\n![Screenshot from 2023-10-29 23-09-47 Fountain](https://github.com/AntennaPod/AntennaPod/assets/11229646/007f0bdd-4fe6-40af-8100-a4cac7b4c1af)\r\n\r\n### Anytime Player *\r\ncool because: has 'follow transcript' toggle, the way scrolling position follows active block\r\n![Screenshot from 2023-10-29 23-13-14 anytime player](https://github.com/AntennaPod/AntennaPod/assets/11229646/350b356a-f936-4b2f-8a55-20c0aae2038d)\r\n\r\n### Podcast Addict\r\ncool because: has option in the player settings to (de)activate subtitles\r\n\r\nMock-up & general considerations\r\n---\r\n\r\nPlease find here the mock-ups I have so far: https://design.penpot.app/#/view/e357a320-7535-11eb-8a88-eb0147e048f5?page-id=eae2ba44-fe23-80be-8003-5736fde8c987&section=interactions&index=0&share-id=b509ea44-7222-80be-8003-5db588cbed16\r\n\r\nSome notes:\r\n* Several apps leverage speaker indication (either name + colon in SRT, or as metadata in JSON). It would be really neat if we can do that too. \r\n  * Steno 'collates' blocks - [Nathan explained how](https://mastodon.social/@keunes/111305523569815424).\r\n  * Podfriend & Anytime Player somehow connect speaker info from the subtitles with info from the `person` tags within the item (episode)\r\n```\r\n<podcast:person href=\"http://curry.com/\" img=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Adam_Curry_2016.jpg/440px-Adam_Curry_2016.jpg\" group=\"cast\" role=\"host\">Adam Curry</podcast:person>\r\n<podcast:person href=\"http://dvorak.org/blog\" img=\"https://speaking.com/wp-content/uploads/2018/09/John-Dvorak.jpg\" group=\"cast\" role=\"host\">John C Dvorak</podcast:person>\r\n```\r\n* I think we'll have to first identify if we have or can extract speakers, and adjust the design of the player & transcript screens for it. Yet maybe speaker indication (especially on the player screen) might be out of scope for now.\r\n* I kept the playback controls visible on purpose - I think it's handy to be able to pause and rewind when viewing the transcript.\r\n\r\n_The first set of screens you'll see are  in case there are speakers extracted/known, which can be displayed on the player screen. Followed by some screens where this is not the case. There's also some other details. Maybe it's best if we have a call @tonytamsf & @ByteHamster to see what's feasible for now._\n@keunes Thanks for the great research and screen casts of other players.   I can try to join the next community call about this topic if finding time is difficult \nWe'll be meeting to discuss the mock-ups Thursday 2 November at 21:00 CET, over at https://meet.antennapod.org/transcripts. Anyone interested in this UX review is welcome to join.\nAs discussed and agreed during the meeting:\r\n* implement as full-screen dialog (https://m3.material.io/components/dialogs/overview)\r\n* what to do with landscape player view? For now, easy implementation on the right-hand side.\r\n* store transcript SRT/JSON in filesystem\r\n* if there's word-level JSON without speaker:\r\n  * collate text blocks\r\n    * Sentence-based (using periods & question marks)\r\n    * If long pause, start new block\r\n    * If long single block without period, then break it up after x (30?) seconds\r\n  * combine highlighting in blocks of min. 1 second (e.g. 2 words) to avoid words being skipped due to 1-second refresh rate.\r\n\r\nDesign change to do:\r\n* tap on CC in player, open transcript dialog\r\n* setting to show/hide closed caption (TBC if in player settings or only in global>UI settings)\r\n\r\nIn separate PRs:\r\n* playback controls in transcript view\r\n* option to reach transcript from ep. detail page; show 'can't jump to postion' warning\r\n* Search in transcript\r\n* Speaker tag (parse & store; display in ep. details; display speaker photo in player screen)", "created_at": "2023-11-02T23:42:47Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 6659, "instance_id": "AntennaPod__AntennaPod-6659", "issue_numbers": ["6642"], "base_commit": "574ec1434c885429e0d9b4061dff765eb7284701", "patch": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java\nindex ba328adba7..730a391898 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java\n@@ -159,6 +159,7 @@ private void inflateSortMenu(MaterialToolbar toolbar) {\n         menu.findItem(R.id.sort_random).setVisible(false);\n         menu.findItem(R.id.sort_smart_shuffle).setVisible(false);\n         menu.findItem(R.id.keep_sorted).setVisible(false);\n+        menu.findItem(R.id.sort_size).setVisible(true);\n     }\n \n     @Override\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/MenuItemToSortOrderConverter.java b/app/src/main/java/de/danoeh/antennapod/fragment/MenuItemToSortOrderConverter.java\nindex 51911b1228..d4150fbdb5 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/MenuItemToSortOrderConverter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/MenuItemToSortOrderConverter.java\n@@ -32,6 +32,10 @@ public static SortOrder convert(MenuItem item) {\n             return SortOrder.SMART_SHUFFLE_OLD_NEW;\n         } else if (itemId == R.id.sort_smart_shuffle_desc) {\n             return SortOrder.SMART_SHUFFLE_NEW_OLD;\n+        } else if (itemId == R.id.sort_size_small_large) {\n+            return SortOrder.SIZE_SMALL_LARGE;\n+        } else if (itemId == R.id.sort_size_large_small) {\n+            return SortOrder.SIZE_LARGE_SMALL;\n         }\n \n         return null;\ndiff --git a/app/src/main/res/menu/sort_menu.xml b/app/src/main/res/menu/sort_menu.xml\nindex f0a22042b0..96ad4b9f6d 100644\n--- a/app/src/main/res/menu/sort_menu.xml\n+++ b/app/src/main/res/menu/sort_menu.xml\n@@ -75,6 +75,22 @@\n                 android:title=\"@string/sort_new_old\"/>\n         </menu>\n     </item>\n+\n+    <item\n+        android:id=\"@+id/sort_size\"\n+        android:title=\"@string/size\"\n+        android:visible=\"false\">\n+\n+        <menu>\n+            <item\n+                android:id=\"@+id/sort_size_small_large\"\n+                android:title=\"@string/sort_small_large\"/>\n+            <item\n+                android:id=\"@+id/sort_size_large_small\"\n+                android:title=\"@string/sort_large_small\"/>\n+        </menu>\n+    </item>\n+\n     <item\n         android:id=\"@+id/keep_sorted\"\n         android:title=\"@string/keep_sorted\"\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/util/FeedItemPermutors.java b/core/src/main/java/de/danoeh/antennapod/core/util/FeedItemPermutors.java\nindex 12377791e2..ec9c9e55e4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/util/FeedItemPermutors.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/util/FeedItemPermutors.java\n@@ -72,6 +72,12 @@ public static Permutor<FeedItem> getPermutor(@NonNull SortOrder sortOrder) {\n             case SMART_SHUFFLE_NEW_OLD:\n                 permutor = (queue) -> smartShuffle(queue, false);\n                 break;\n+            case SIZE_SMALL_LARGE:\n+                comparator = (f1, f2) -> Long.compare(size(f1), size(f2));\n+                break;\n+            case SIZE_LARGE_SMALL:\n+                comparator = (f1, f2) -> Long.compare(size(f2), size(f1));\n+                break;\n         }\n \n         if (comparator != null) {\n@@ -97,6 +103,10 @@ private static int duration(@Nullable FeedItem item) {\n         return (item != null && item.getMedia() != null) ? item.getMedia().getDuration() : 0;\n     }\n \n+    private static long size(@Nullable FeedItem item) {\n+        return (item != null && item.getMedia() != null) ? item.getMedia().getSize() : 0;\n+    }\n+\n     @NonNull\n     private static String itemLink(@Nullable FeedItem item) {\n         return (item != null && item.getLink() != null)\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/SortOrder.java b/model/src/main/java/de/danoeh/antennapod/model/feed/SortOrder.java\nindex 1f9687b2ee..08504b4454 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/feed/SortOrder.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/SortOrder.java\n@@ -20,6 +20,8 @@ public enum SortOrder {\n     DURATION_LONG_SHORT(6, INTRA_FEED),\n     EPISODE_FILENAME_A_Z(7, INTRA_FEED),\n     EPISODE_FILENAME_Z_A(8, INTRA_FEED),\n+    SIZE_SMALL_LARGE(9, INTRA_FEED),\n+    SIZE_LARGE_SMALL(10, INTRA_FEED),\n     FEED_TITLE_A_Z(101, INTER_FEED),\n     FEED_TITLE_Z_A(102, INTER_FEED),\n     RANDOM(103, INTER_FEED),\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemSortQuery.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemSortQuery.java\nindex aae5154d3e..d4404a0820 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemSortQuery.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/FeedItemSortQuery.java\n@@ -25,6 +25,12 @@ public static String generateFrom(SortOrder sortOrder) {\n             case DURATION_LONG_SHORT:\n                 sortQuery = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_DURATION + \" \" + \"DESC\";\n                 break;\n+            case SIZE_SMALL_LARGE:\n+                sortQuery = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_SIZE + \" \" + \"ASC\";\n+                break;\n+            case SIZE_LARGE_SMALL:\n+                sortQuery = PodDBAdapter.TABLE_NAME_FEED_MEDIA + \".\" + PodDBAdapter.KEY_SIZE + \" \" + \"DESC\";\n+                break;\n             default:\n                 sortQuery = \"\";\n                 break;\ndiff --git a/ui/i18n/src/main/res/values/strings.xml b/ui/i18n/src/main/res/values/strings.xml\nindex 0697a2f537..73423f4b5c 100644\n--- a/ui/i18n/src/main/res/values/strings.xml\n+++ b/ui/i18n/src/main/res/values/strings.xml\n@@ -343,6 +343,7 @@\n     <string name=\"feed_title\">Podcast title</string>\n     <string name=\"random\">Random</string>\n     <string name=\"smart_shuffle\">Smart shuffle</string>\n+    <string name=\"size\">Size</string>\n     <string name=\"clear_queue_confirmation_msg\">Please confirm that you want to clear the queue of ALL of the episodes in it</string>\n     <string name=\"time_left_label\">Time left:\\u0020</string>\n \n@@ -771,6 +772,8 @@\n     <string name=\"sort_old_new\">Old \\u2192 New</string>\n     <string name=\"sort_short_long\">Short \\u2192 Long</string>\n     <string name=\"sort_long_short\">Long \\u2192 Short</string>\n+    <string name=\"sort_small_large\">Small \\u2192 Large</string>\n+    <string name=\"sort_large_small\">Large \\u2192 Small</string>\n \n     <!-- Share episode dialog -->\n     <string name=\"share_playback_position_dialog_label\">Include playback position</string>\n", "test_patch": "diff --git a/core/src/test/java/de/danoeh/antennapod/core/util/FeedItemPermutorsTest.java b/core/src/test/java/de/danoeh/antennapod/core/util/FeedItemPermutorsTest.java\nindex 9c48f8df7e..be4012cb6c 100644\n--- a/core/src/test/java/de/danoeh/antennapod/core/util/FeedItemPermutorsTest.java\n+++ b/core/src/test/java/de/danoeh/antennapod/core/util/FeedItemPermutorsTest.java\n@@ -112,6 +112,26 @@ public void testPermutorForRule_DURATION_DESC() {\n         assertTrue(checkIdOrder(itemList, 3, 2, 1)); // after sorting\n     }\n \n+    @Test\n+    public void testPermutorForRule_size_asc() {\n+        Permutor<FeedItem> permutor = FeedItemPermutors.getPermutor(SortOrder.SIZE_SMALL_LARGE);\n+\n+        List<FeedItem> itemList = getTestList();\n+        assertTrue(checkIdOrder(itemList, 1, 3, 2)); // before sorting\n+        permutor.reorder(itemList);\n+        assertTrue(checkIdOrder(itemList, 1, 2, 3)); // after sorting\n+    }\n+\n+    @Test\n+    public void testPermutorForRule_size_desc() {\n+        Permutor<FeedItem> permutor = FeedItemPermutors.getPermutor(SortOrder.SIZE_LARGE_SMALL);\n+\n+        List<FeedItem> itemList = getTestList();\n+        assertTrue(checkIdOrder(itemList, 1, 3, 2)); // before sorting\n+        permutor.reorder(itemList);\n+        assertTrue(checkIdOrder(itemList, 3, 2, 1)); // after sorting\n+    }\n+\n     @Test\n     public void testPermutorForRule_DURATION_DESC_NullMedia() {\n         Permutor<FeedItem> permutor = FeedItemPermutors.getPermutor(SortOrder.DURATION_LONG_SHORT);\n@@ -166,21 +186,21 @@ private List<FeedItem> getTestList() {\n         calendar.set(2019, 0, 1);  // January 1st\n         Feed feed1 = new Feed(null, null, \"Feed title 1\");\n         FeedItem feedItem1 = new FeedItem(1, \"Title 1\", null, null, calendar.getTime(), 0, feed1);\n-        FeedMedia feedMedia1 = new FeedMedia(0, feedItem1, 1000, 0, 0, null, null, null, true, null, 0, 0);\n+        FeedMedia feedMedia1 = new FeedMedia(0, feedItem1, 1000, 0, 100, null, null, null, true, null, 0, 0);\n         feedItem1.setMedia(feedMedia1);\n         itemList.add(feedItem1);\n \n         calendar.set(2019, 2, 1);  // March 1st\n         Feed feed2 = new Feed(null, null, \"Feed title 3\");\n         FeedItem feedItem2 = new FeedItem(3, \"Title 3\", null, null, calendar.getTime(), 0, feed2);\n-        FeedMedia feedMedia2 = new FeedMedia(0, feedItem2, 3000, 0, 0, null, null, null, true, null, 0, 0);\n+        FeedMedia feedMedia2 = new FeedMedia(0, feedItem2, 3000, 0, 300, null, null, null, true, null, 0, 0);\n         feedItem2.setMedia(feedMedia2);\n         itemList.add(feedItem2);\n \n         calendar.set(2019, 1, 1);  // February 1st\n         Feed feed3 = new Feed(null, null, \"Feed title 2\");\n         FeedItem feedItem3 = new FeedItem(2, \"Title 2\", null, null, calendar.getTime(), 0, feed3);\n-        FeedMedia feedMedia3 = new FeedMedia(0, feedItem3, 2000, 0, 0, null, null, null, true, null, 0, 0);\n+        FeedMedia feedMedia3 = new FeedMedia(0, feedItem3, 2000, 0, 200, null, null, null, true, null, 0, 0);\n         feedItem3.setMedia(feedMedia3);\n         itemList.add(feedItem3);\n \n", "problem_statement": "Sort downloads by size\n### Checklist\n\n- [X] I have used the search function for [open](https://github.com/AntennaPod/AntennaPod/issues) **and** [closed](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue+is%3Aclosed) issues to see if someone else has already submitted the same feature request.\n- [X] I will describe the problem with as much detail as possible.\n- [X] This request contains only one single feature, **not** a list of multiple (related) features.\n\n### App version\n\n3.1.0\n\n### Where did you get the app from\n\nGoogle Play\n\n### Problem you may be having, or feature you want\n\nThe Downloads pane supports sorting by date, duration and title, but it would be nice to be able to sort by size of the file, to see large episodes that are taking up space.\n\n### Suggested solution\n\nAdd a new sort\n\n### Screenshots / Drawings / Technical details\n\n_No response_\n", "hints_text": "Hey @Julian . I would like to work on this issue!! Is this still open?\nYes, it is still open :)\nGreat!! I would like to work on it then.", "created_at": "2023-09-27T12:36:29Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 6652, "instance_id": "AntennaPod__AntennaPod-6652", "issue_numbers": ["6596"], "base_commit": "8073de55af3c7cb749b6be2b80768bc07807e16c", "patch": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/CancelDownloadActionButton.java b/app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/CancelDownloadActionButton.java\nindex 8b7a888739..c9500340b4 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/CancelDownloadActionButton.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/CancelDownloadActionButton.java\n@@ -32,7 +32,7 @@ public int getDrawable() {\n     @Override\n     public void onClick(Context context) {\n         FeedMedia media = item.getMedia();\n-        DownloadServiceInterface.get().cancel(context, media.getDownload_url());\n+        DownloadServiceInterface.get().cancel(context, media);\n         if (UserPreferences.isEnableAutodownload()) {\n             item.disableAutoDownload();\n             DBWriter.setFeedItem(item);\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceInterfaceImpl.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceInterfaceImpl.java\nindex 87cbeda847..894a7153b0 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceInterfaceImpl.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceInterfaceImpl.java\n@@ -7,12 +7,18 @@\n import androidx.work.NetworkType;\n import androidx.work.OneTimeWorkRequest;\n import androidx.work.OutOfQuotaPolicy;\n+import androidx.work.WorkInfo;\n import androidx.work.WorkManager;\n import de.danoeh.antennapod.core.storage.DBWriter;\n import de.danoeh.antennapod.model.feed.FeedItem;\n+import de.danoeh.antennapod.model.feed.FeedMedia;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n+import io.reactivex.Observable;\n+import io.reactivex.schedulers.Schedulers;\n \n+import java.util.List;\n+import java.util.concurrent.Future;\n import java.util.concurrent.TimeUnit;\n \n public class DownloadServiceInterfaceImpl extends DownloadServiceInterface {\n@@ -40,13 +46,11 @@ private static OneTimeWorkRequest.Builder getRequest(Context context, FeedItem i\n                 .setInitialDelay(0L, TimeUnit.MILLISECONDS)\n                 .addTag(DownloadServiceInterface.WORK_TAG)\n                 .addTag(DownloadServiceInterface.WORK_TAG_EPISODE_URL + item.getMedia().getDownload_url());\n-        Data.Builder builder = new Data.Builder();\n-        builder.putLong(WORK_DATA_MEDIA_ID, item.getMedia().getId());\n         if (!item.isTagged(FeedItem.TAG_QUEUE) && UserPreferences.enqueueDownloadedEpisodes()) {\n             DBWriter.addQueueItem(context, false, item.getId());\n-            builder.putBoolean(WORK_DATA_WAS_QUEUED, true);\n+            workRequest.addTag(DownloadServiceInterface.WORK_DATA_WAS_QUEUED);\n         }\n-        workRequest.setInputData(builder.build());\n+        workRequest.setInputData(new Data.Builder().putLong(WORK_DATA_MEDIA_ID, item.getMedia().getId()).build());\n         return workRequest;\n     }\n \n@@ -61,8 +65,26 @@ private static Constraints getConstraints() {\n     }\n \n     @Override\n-    public void cancel(Context context, String url) {\n-        WorkManager.getInstance(context).cancelAllWorkByTag(WORK_TAG_EPISODE_URL + url);\n+    public void cancel(Context context, FeedMedia media) {\n+        // This needs to be done here, not in the worker. Reason: The worker might or might not be running.\n+        DBWriter.deleteFeedMediaOfItem(context, media.getId()); // Remove partially downloaded file\n+        String tag = WORK_TAG_EPISODE_URL + media.getDownload_url();\n+        Future<List<WorkInfo>> future = WorkManager.getInstance(context).getWorkInfosByTag(tag);\n+        Observable.fromFuture(future)\n+                .subscribeOn(Schedulers.io())\n+                .observeOn(Schedulers.io())\n+                .subscribe(\n+                    workInfos -> {\n+                        for (WorkInfo info : workInfos) {\n+                            if (info.getTags().contains(DownloadServiceInterface.WORK_DATA_WAS_QUEUED)) {\n+                                DBWriter.removeQueueItem(context, false, media.getItem());\n+                            }\n+                        }\n+                        WorkManager.getInstance(context).cancelAllWorkByTag(tag);\n+                    }, exception -> {\n+                        WorkManager.getInstance(context).cancelAllWorkByTag(tag);\n+                        exception.printStackTrace();\n+                    });\n     }\n \n     @Override\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/EpisodeDownloadWorker.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/EpisodeDownloadWorker.java\nindex af5b5c9a41..976b3504a9 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/EpisodeDownloadWorker.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/EpisodeDownloadWorker.java\n@@ -93,6 +93,9 @@ public void run() {\n             e.printStackTrace();\n             result = Result.failure();\n         }\n+        if (result.equals(Result.failure()) && downloader != null) {\n+            FileUtils.deleteQuietly(new File(downloader.getDownloadRequest().getDestination()));\n+        }\n         progressUpdaterThread.interrupt();\n         try {\n             progressUpdaterThread.join();\n@@ -156,22 +159,15 @@ private Result performDownload(FeedMedia media, DownloadRequest request) {\n         } catch (Exception e) {\n             DBWriter.addDownloadStatus(downloader.getResult());\n             if (EventBus.getDefault().hasSubscriberForEvent(MessageEvent.class)) {\n-                sendMessage(request.getTitle(), false);\n+                sendMessage(request.getTitle(), true);\n             } else {\n                 sendErrorNotification();\n             }\n-            FileUtils.deleteQuietly(new File(downloader.getDownloadRequest().getDestination()));\n             return Result.failure();\n         }\n \n         if (downloader.cancelled) {\n-            if (getInputData().getBoolean(DownloadServiceInterface.WORK_DATA_WAS_QUEUED, false)) {\n-                try {\n-                    DBWriter.removeQueueItem(getApplicationContext(), false, media.getItem()).get();\n-                } catch (ExecutionException | InterruptedException e) {\n-                    e.printStackTrace();\n-                }\n-            }\n+            // This also happens when the worker was preempted, not just when the user cancelled it\n             return Result.success();\n         }\n \n@@ -188,10 +184,7 @@ private Result performDownload(FeedMedia media, DownloadRequest request) {\n                 && Integer.parseInt(status.getReasonDetailed()) == 416) {\n             Log.d(TAG, \"Requested invalid range, restarting download from the beginning\");\n             FileUtils.deleteQuietly(new File(downloader.getDownloadRequest().getDestination()));\n-            sendMessage(request.getTitle(), true);\n-            if (isLastRunAttempt()) {\n-                FileUtils.deleteQuietly(new File(downloader.getDownloadRequest().getDestination()));\n-            }\n+            sendMessage(request.getTitle(), false);\n             return retry3times();\n         }\n \n@@ -203,17 +196,13 @@ private Result performDownload(FeedMedia media, DownloadRequest request) {\n                 || status.getReason() == DownloadError.ERROR_IO_BLOCKED) {\n             // Fail fast, these are probably unrecoverable\n             if (EventBus.getDefault().hasSubscriberForEvent(MessageEvent.class)) {\n-                sendMessage(request.getTitle(), false);\n+                sendMessage(request.getTitle(), true);\n             } else {\n                 sendErrorNotification();\n             }\n-            FileUtils.deleteQuietly(new File(downloader.getDownloadRequest().getDestination()));\n             return Result.failure();\n         }\n-        sendMessage(request.getTitle(), true);\n-        if (isLastRunAttempt()) {\n-            FileUtils.deleteQuietly(new File(downloader.getDownloadRequest().getDestination()));\n-        }\n+        sendMessage(request.getTitle(), false);\n         return retry3times();\n     }\n \n@@ -230,7 +219,8 @@ private boolean isLastRunAttempt() {\n         return getRunAttemptCount() >= 2;\n     }\n \n-    private void sendMessage(String episodeTitle, boolean retrying) {\n+    private void sendMessage(String episodeTitle, boolean isImmediateFail) {\n+        boolean retrying = !isLastRunAttempt() && !isImmediateFail;\n         if (episodeTitle.length() > 20) {\n             episodeTitle = episodeTitle.substring(0, 19) + \"\u2026\";\n         }\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java\nindex 11e82af27b..b2cc46ee0f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java\n@@ -110,7 +110,7 @@ private static boolean deleteFeedMediaSynchronous(\n             @NonNull Context context, @NonNull FeedMedia media) {\n         Log.i(TAG, String.format(Locale.US, \"Requested to delete FeedMedia [id=%d, title=%s, downloaded=%s\",\n                 media.getId(), media.getEpisodeTitle(), media.isDownloaded()));\n-        if (media.isDownloaded()) {\n+        if (media.isDownloaded() || media.getFile_url() != null) {\n             // delete downloaded media file\n             File mediaFile = new File(media.getFile_url());\n             if (mediaFile.exists() && !mediaFile.delete()) {\n@@ -206,7 +206,7 @@ private static void deleteFeedItemsSynchronous(@NonNull Context context, @NonNul\n                 if (item.getMedia().isDownloaded()) {\n                     deleteFeedMediaSynchronous(context, item.getMedia());\n                 }\n-                DownloadServiceInterface.get().cancel(context, item.getMedia().getDownload_url());\n+                DownloadServiceInterface.get().cancel(context, item.getMedia());\n             }\n         }\n \ndiff --git a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterface.java b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterface.java\nindex 5fac79ce8b..a04c24ee45 100644\n--- a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterface.java\n+++ b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterface.java\n@@ -3,6 +3,7 @@\n import android.content.Context;\n import de.danoeh.antennapod.model.download.DownloadStatus;\n import de.danoeh.antennapod.model.feed.FeedItem;\n+import de.danoeh.antennapod.model.feed.FeedMedia;\n \n import java.util.HashMap;\n import java.util.Map;\n@@ -38,7 +39,7 @@ public void setCurrentDownloads(Map<String, DownloadStatus> currentDownloads) {\n      */\n     public abstract void download(Context context, FeedItem item);\n \n-    public abstract void cancel(Context context, String url);\n+    public abstract void cancel(Context context, FeedMedia media);\n \n     public abstract void cancelAll(Context context);\n \n", "test_patch": "diff --git a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterfaceStub.java b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterfaceStub.java\nindex 716d68d144..70f551a9c8 100644\n--- a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterfaceStub.java\n+++ b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterfaceStub.java\n@@ -2,6 +2,7 @@\n \n import android.content.Context;\n import de.danoeh.antennapod.model.feed.FeedItem;\n+import de.danoeh.antennapod.model.feed.FeedMedia;\n \n public class DownloadServiceInterfaceStub extends DownloadServiceInterface {\n \n@@ -14,7 +15,7 @@ public void download(Context context, FeedItem item) {\n     }\n \n     @Override\n-    public void cancel(Context context, String url) {\n+    public void cancel(Context context, FeedMedia media) {\n     }\n \n     @Override\n", "problem_statement": "Successful download auto-retry should honour queue settings\n### Checklist\n\n- [X] I have used the search function for [open](https://github.com/AntennaPod/AntennaPod/issues) **and** [closed](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue+is%3Aclosed) issues to see if someone else has already submitted the same bug report.\n- [X] I will describe the problem with as much detail as possible.\n- [X] If the bug only to occurs with a certain podcast, I will include the URL of that podcast.\n\n### App version\n\n3.1.0 (91d5238f0)\n\n### Where did you get the app from\n\nGoogle Play\n\n### Android version\n\n12\n\n### Device model\n\n_No response_\n\n### First occurred\n\n_No response_\n\n### Steps to reproduce\n\n1. Have settings \"Enqueue downloaded\" and \"Delete removes from queue\" on\r\n2. Trigger an episode download which fails\r\n3. Notice that the episode, which was initially added to the queue, is removed from the queue\r\n4. Auto-retry download and succeed\n\n### Expected behaviour\n\n5. The episode is downloaded and added to the queue (either in the original position or as last)\n\n### Current behaviour\n\n5. The episode is downloaded, but it is not added to the queue\n\n### Logs\n\n_No response_\n", "hints_text": "Seeing the same behavior: some episodes downloaded but not added to the queue\nMy linked duplicate issue (#6641) added some more information:\r\n\r\nScenario: \"active wifi and inactive mobile network\" when wifi is turned off I even get a toast with \"download aborted, will be restarted later\"\r\nBut \"with wifi and mobile network\" when wifi is turned off the episode is removed from the queue.\r\n\r\nMy issue has also a stack trace of the buggy abort.\n@HolgerJeromin I think there are some lines missing from the log in the other issue. The lines say that the download was cancelled with a reason, but it doesn't give the reason. I suspect that the reason is below the last line you posted.\r\n\r\nWe make a distinction there: Cancelled downloads are removed from the queue again and failed downloads are kept in the queue and are retried. So we need to find out why the download on your device got cancelled instead of just failing.", "created_at": "2023-09-23T18:29:13Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 6573, "instance_id": "AntennaPod__AntennaPod-6573", "issue_numbers": ["5286"], "base_commit": "5ae766b1a1557e2a54627e6b3c83c54c6578995d", "patch": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\nindex ae9e003d50..0e4c883cfe 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n@@ -156,7 +156,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {\n                         setupAutoDownloadPreference();\n                         setupKeepUpdatedPreference();\n                         setupAutoDeletePreference();\n-                        setupVolumeReductionPreferences();\n+                        setupVolumeAdaptationPreferences();\n                         setupNewEpisodesAction();\n                         setupAuthentificationPreference();\n                         setupEpisodeFilterPreference();\n@@ -166,7 +166,7 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {\n                         setupTags();\n \n                         updateAutoDeleteSummary();\n-                        updateVolumeReductionValue();\n+                        updateVolumeAdaptationValue();\n                         updateAutoDownloadEnabled();\n                         updateNewEpisodesAction();\n \n@@ -317,9 +317,9 @@ private void updateAutoDeleteSummary() {\n             }\n         }\n \n-        private void setupVolumeReductionPreferences() {\n-            ListPreference volumeReductionPreference = findPreference(\"volumeReduction\");\n-            volumeReductionPreference.setOnPreferenceChangeListener((preference, newValue) -> {\n+        private void setupVolumeAdaptationPreferences() {\n+            ListPreference volumeAdaptationPreference = findPreference(\"volumeReduction\");\n+            volumeAdaptationPreference.setOnPreferenceChangeListener((preference, newValue) -> {\n                 switch ((String) newValue) {\n                     case \"off\":\n                         feedPreferences.setVolumeAdaptionSetting(VolumeAdaptionSetting.OFF);\n@@ -330,28 +330,46 @@ private void setupVolumeReductionPreferences() {\n                     case \"heavy\":\n                         feedPreferences.setVolumeAdaptionSetting(VolumeAdaptionSetting.HEAVY_REDUCTION);\n                         break;\n+                    case \"light_boost\":\n+                        feedPreferences.setVolumeAdaptionSetting(VolumeAdaptionSetting.LIGHT_BOOST);\n+                        break;\n+                    case \"medium_boost\":\n+                        feedPreferences.setVolumeAdaptionSetting(VolumeAdaptionSetting.MEDIUM_BOOST);\n+                        break;\n+                    case \"heavy_boost\":\n+                        feedPreferences.setVolumeAdaptionSetting(VolumeAdaptionSetting.HEAVY_BOOST);\n+                        break;\n                     default:\n                 }\n                 DBWriter.setFeedPreferences(feedPreferences);\n-                updateVolumeReductionValue();\n+                updateVolumeAdaptationValue();\n                 EventBus.getDefault().post(\n                         new VolumeAdaptionChangedEvent(feedPreferences.getVolumeAdaptionSetting(), feed.getId()));\n                 return false;\n             });\n         }\n \n-        private void updateVolumeReductionValue() {\n-            ListPreference volumeReductionPreference = findPreference(\"volumeReduction\");\n+        private void updateVolumeAdaptationValue() {\n+            ListPreference volumeAdaptationPreference = findPreference(\"volumeReduction\");\n \n             switch (feedPreferences.getVolumeAdaptionSetting()) {\n                 case OFF:\n-                    volumeReductionPreference.setValue(\"off\");\n+                    volumeAdaptationPreference.setValue(\"off\");\n                     break;\n                 case LIGHT_REDUCTION:\n-                    volumeReductionPreference.setValue(\"light\");\n+                    volumeAdaptationPreference.setValue(\"light\");\n                     break;\n                 case HEAVY_REDUCTION:\n-                    volumeReductionPreference.setValue(\"heavy\");\n+                    volumeAdaptationPreference.setValue(\"heavy\");\n+                    break;\n+                case LIGHT_BOOST:\n+                    volumeAdaptationPreference.setValue(\"light_boost\");\n+                    break;\n+                case MEDIUM_BOOST:\n+                    volumeAdaptationPreference.setValue(\"medium_boost\");\n+                    break;\n+                case HEAVY_BOOST:\n+                    volumeAdaptationPreference.setValue(\"heavy_boost\");\n                     break;\n             }\n         }\ndiff --git a/app/src/main/res/xml/feed_settings.xml b/app/src/main/res/xml/feed_settings.xml\nindex 619ab62966..fb9e2e4254 100644\n--- a/app/src/main/res/xml/feed_settings.xml\n+++ b/app/src/main/res/xml/feed_settings.xml\n@@ -50,12 +50,12 @@\n \n     <de.danoeh.antennapod.preferences.MaterialListPreference\n         android:defaultValue=\"off\"\n-        android:entries=\"@array/spnVolumeReductionItems\"\n-        android:entryValues=\"@array/spnVolumeReductionValues\"\n+        android:entries=\"@array/spnVolumeAdaptationItems\"\n+        android:entryValues=\"@array/spnVolumeAdaptationValues\"\n         android:icon=\"@drawable/ic_volume_adaption\"\n         android:key=\"volumeReduction\"\n-        android:summary=\"@string/feed_volume_reduction_summary\"\n-        android:title=\"@string/feed_volume_reduction\" />\n+        android:summary=\"@string/feed_volume_adaptation_summary\"\n+        android:title=\"@string/feed_volume_adapdation\" />\n \n     <de.danoeh.antennapod.preferences.MaterialListPreference\n         android:entries=\"@array/feedNewEpisodesActionItems\"\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/ExoPlayerWrapper.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/ExoPlayerWrapper.java\nindex e0c5da00bb..c275444d9a 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/ExoPlayerWrapper.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/ExoPlayerWrapper.java\n@@ -1,6 +1,7 @@\n package de.danoeh.antennapod.core.service.playback;\n \n import android.content.Context;\n+import android.media.audiofx.LoudnessEnhancer;\n import android.net.Uri;\n import android.text.TextUtils;\n import android.util.Log;\n@@ -68,6 +69,8 @@ public class ExoPlayerWrapper {\n     private PlaybackParameters playbackParameters;\n     private DefaultTrackSelector trackSelector;\n \n+    private LoudnessEnhancer loudnessEnhancer;\n+\n     ExoPlayerWrapper(Context context) {\n         this.context = context;\n         createPlayer();\n@@ -133,7 +136,14 @@ public void onPositionDiscontinuity(@NonNull Player.PositionInfo oldPosition,\n                     audioSeekCompleteListener.run();\n                 }\n             }\n+\n+            @Override\n+            public void onAudioSessionIdChanged(int audioSessionId) {\n+                initLoudnessEnhancer(audioSessionId);\n+            }\n         });\n+\n+        initLoudnessEnhancer(exoPlayer.getAudioSessionId());\n     }\n \n     public int getCurrentPosition() {\n@@ -235,7 +245,14 @@ public void setPlaybackParams(float speed, boolean skipSilence) {\n     }\n \n     public void setVolume(float v, float v1) {\n-        exoPlayer.setVolume(v);\n+        if (v > 1) {\n+            exoPlayer.setVolume(1f);\n+            loudnessEnhancer.setEnabled(true);\n+            loudnessEnhancer.setTargetGain((int) (1000 * (v - 1)));\n+        } else {\n+            exoPlayer.setVolume(v);\n+            loudnessEnhancer.setEnabled(false);\n+        }\n     }\n \n     public void start() {\n@@ -335,4 +352,16 @@ int getVideoHeight() {\n     void setOnBufferingUpdateListener(Consumer<Integer> bufferingUpdateListener) {\n         this.bufferingUpdateListener = bufferingUpdateListener;\n     }\n+\n+    private void initLoudnessEnhancer(int audioStreamId) {\n+        LoudnessEnhancer newEnhancer = new LoudnessEnhancer(audioStreamId);\n+        LoudnessEnhancer oldEnhancer = this.loudnessEnhancer;\n+        if (oldEnhancer != null) {\n+            newEnhancer.setEnabled(oldEnhancer.getEnabled());\n+            newEnhancer.setTargetGain((int) oldEnhancer.getTargetGain());\n+            oldEnhancer.release();\n+        }\n+\n+        this.loudnessEnhancer = newEnhancer;\n+    }\n }\ndiff --git a/core/src/main/res/values/arrays.xml b/core/src/main/res/values/arrays.xml\nindex 7749c6f3c8..50afe630b7 100644\n--- a/core/src/main/res/values/arrays.xml\n+++ b/core/src/main/res/values/arrays.xml\n@@ -13,16 +13,22 @@\n         <item>never</item>\n     </string-array>\n \n-    <string-array name=\"spnVolumeReductionItems\">\n-        <item>@string/feed_volume_reduction_off</item>\n-        <item>@string/feed_volume_reduction_light</item>\n+    <string-array name=\"spnVolumeAdaptationItems\">\n         <item>@string/feed_volume_reduction_heavy</item>\n+        <item>@string/feed_volume_reduction_light</item>\n+        <item>@string/feed_volume_reduction_off</item>\n+        <item>@string/feed_volume_boost_light</item>\n+        <item>@string/feed_volume_boost_medium</item>\n+        <item>@string/feed_volume_boost_heavy</item>\n     </string-array>\n \n-    <string-array name=\"spnVolumeReductionValues\">\n-        <item>off</item>\n-        <item>light</item>\n+    <string-array name=\"spnVolumeAdaptationValues\">\n         <item>heavy</item>\n+        <item>light</item>\n+        <item>off</item>\n+        <item>light_boost</item>\n+        <item>medium_boost</item>\n+        <item>heavy_boost</item>\n     </string-array>\n \n     <string-array name=\"feed_refresh_interval_entries\">\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/feed/VolumeAdaptionSetting.java b/model/src/main/java/de/danoeh/antennapod/model/feed/VolumeAdaptionSetting.java\nindex 67e30e5c81..e71c5ad363 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/feed/VolumeAdaptionSetting.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/feed/VolumeAdaptionSetting.java\n@@ -3,7 +3,10 @@\n public enum VolumeAdaptionSetting {\n     OFF(0, 1.0f),\n     LIGHT_REDUCTION(1, 0.5f),\n-    HEAVY_REDUCTION(2, 0.2f);\n+    HEAVY_REDUCTION(2, 0.2f),\n+    LIGHT_BOOST(3, 1.5f),\n+    MEDIUM_BOOST(4, 2f),\n+    HEAVY_BOOST(5, 2.5f);\n \n     private final int value;\n     private float adaptionFactor;\ndiff --git a/ui/i18n/src/main/res/values/strings.xml b/ui/i18n/src/main/res/values/strings.xml\nindex 6bdb836dd2..baed14c553 100644\n--- a/ui/i18n/src/main/res/values/strings.xml\n+++ b/ui/i18n/src/main/res/values/strings.xml\n@@ -124,11 +124,14 @@\n     <string name=\"retry_label\">Retry</string>\n     <string name=\"auto_download_label\">Include in auto downloads</string>\n     <string name=\"auto_delete_label\">Auto delete episode</string>\n-    <string name=\"feed_volume_reduction\">Volume reduction</string>\n-    <string name=\"feed_volume_reduction_summary\">Turn down volume for episodes of this podcast: %1$s</string>\n-    <string name=\"feed_volume_reduction_off\">Off</string>\n-    <string name=\"feed_volume_reduction_light\">Light</string>\n-    <string name=\"feed_volume_reduction_heavy\">Heavy</string>\n+    <string name=\"feed_volume_adapdation\">Volume adaptation</string>\n+    <string name=\"feed_volume_adaptation_summary\">Turn volume for episodes of this podcast up or down: %1$s</string>\n+    <string name=\"feed_volume_reduction_off\">No adaption</string>\n+    <string name=\"feed_volume_reduction_light\">Light reduction</string>\n+    <string name=\"feed_volume_reduction_heavy\">Heavy reduction</string>\n+    <string name=\"feed_volume_boost_light\">Light boost</string>\n+    <string name=\"feed_volume_boost_medium\">Medium boost</string>\n+    <string name=\"feed_volume_boost_heavy\">Heavy boost</string>\n     <string name=\"feed_auto_download_always\">Always</string>\n     <string name=\"feed_auto_download_never\">Never</string>\n     <string name=\"feed_new_episodes_action_add_to_inbox\">Add to inbox</string>\n", "test_patch": "diff --git a/app/src/androidTest/java/de/test/antennapod/ui/FeedSettingsTest.java b/app/src/androidTest/java/de/test/antennapod/ui/FeedSettingsTest.java\nindex 861c62f1bf..187c9e16da 100644\n--- a/app/src/androidTest/java/de/test/antennapod/ui/FeedSettingsTest.java\n+++ b/app/src/androidTest/java/de/test/antennapod/ui/FeedSettingsTest.java\n@@ -73,7 +73,7 @@ public void testClickFeedSettings() {\n         clickPreference(R.string.auto_delete_label);\n         onView(withText(R.string.cancel_label)).perform(click());\n \n-        clickPreference(R.string.feed_volume_reduction);\n+        clickPreference(R.string.feed_volume_adapdation);\n         onView(withText(R.string.cancel_label)).perform(click());\n     }\n }\ndiff --git a/core/src/test/java/de/danoeh/antennapod/core/feed/VolumeAdaptionSettingTest.java b/core/src/test/java/de/danoeh/antennapod/core/feed/VolumeAdaptionSettingTest.java\nindex 4241707bc5..30767bdc88 100644\n--- a/core/src/test/java/de/danoeh/antennapod/core/feed/VolumeAdaptionSettingTest.java\n+++ b/core/src/test/java/de/danoeh/antennapod/core/feed/VolumeAdaptionSettingTest.java\n@@ -31,11 +31,35 @@ public void mapHeavyReductionToInteger() {\n         assertThat(setting.toInteger(), is(equalTo(2)));\n     }\n \n+    @Test\n+    public void mapLightBoostToInteger() {\n+        VolumeAdaptionSetting setting = VolumeAdaptionSetting.LIGHT_BOOST;\n+\n+        assertThat(setting.toInteger(), is(equalTo(3)));\n+    }\n+\n+    @Test\n+    public void mapMediumBoostToInteger() {\n+        VolumeAdaptionSetting setting = VolumeAdaptionSetting.MEDIUM_BOOST;\n+\n+        assertThat(setting.toInteger(), is(equalTo(4)));\n+    }\n+\n+    @Test\n+    public void mapHeavyBoostToInteger() {\n+        VolumeAdaptionSetting setting = VolumeAdaptionSetting.HEAVY_BOOST;\n+\n+        assertThat(setting.toInteger(), is(equalTo(5)));\n+    }\n+\n     @Test\n     public void mapIntegerToVolumeAdaptionSetting() {\n         assertThat(VolumeAdaptionSetting.fromInteger(0), is(equalTo(VolumeAdaptionSetting.OFF)));\n         assertThat(VolumeAdaptionSetting.fromInteger(1), is(equalTo(VolumeAdaptionSetting.LIGHT_REDUCTION)));\n         assertThat(VolumeAdaptionSetting.fromInteger(2), is(equalTo(VolumeAdaptionSetting.HEAVY_REDUCTION)));\n+        assertThat(VolumeAdaptionSetting.fromInteger(3), is(equalTo(VolumeAdaptionSetting.LIGHT_BOOST)));\n+        assertThat(VolumeAdaptionSetting.fromInteger(4), is(equalTo(VolumeAdaptionSetting.MEDIUM_BOOST)));\n+        assertThat(VolumeAdaptionSetting.fromInteger(5), is(equalTo(VolumeAdaptionSetting.HEAVY_BOOST)));\n     }\n \n     @Test(expected =  IllegalArgumentException.class)\n@@ -45,7 +69,7 @@ public void cannotMapNegativeValues() {\n \n     @Test(expected =  IllegalArgumentException.class)\n     public void cannotMapValuesOutOfRange() {\n-        VolumeAdaptionSetting.fromInteger(3);\n+        VolumeAdaptionSetting.fromInteger(6);\n     }\n \n     @Test\n@@ -62,4 +86,31 @@ public void lightReductionYieldsHigherValueThanHeavyReduction() {\n \n         assertTrue(\"Light reduction must have higher factor than heavy reduction\", lightReductionFactor > heavyReductionFactor);\n     }\n-}\n\\ No newline at end of file\n+\n+    @Test\n+    public void lightBoostYieldsHigherValueThanLightReduction() {\n+        float lightReductionFactor = VolumeAdaptionSetting.LIGHT_REDUCTION.getAdaptionFactor();\n+\n+        float lightBoostFactor = VolumeAdaptionSetting.LIGHT_BOOST.getAdaptionFactor();\n+\n+        assertTrue(\"Light boost must have higher factor than light reduction\", lightBoostFactor > lightReductionFactor);\n+    }\n+\n+    @Test\n+    public void mediumBoostYieldsHigherValueThanLightBoost() {\n+        float lightBoostFactor = VolumeAdaptionSetting.LIGHT_BOOST.getAdaptionFactor();\n+\n+        float mediumBoostFactor = VolumeAdaptionSetting.MEDIUM_BOOST.getAdaptionFactor();\n+\n+        assertTrue(\"Medium boost must have higher factor than light boost\", mediumBoostFactor > lightBoostFactor);\n+    }\n+\n+    @Test\n+    public void heavyBoostYieldsHigherValueThanMediumBoost() {\n+        float mediumBoostFactor = VolumeAdaptionSetting.MEDIUM_BOOST.getAdaptionFactor();\n+\n+        float heavyBoostFactor = VolumeAdaptionSetting.HEAVY_BOOST.getAdaptionFactor();\n+\n+        assertTrue(\"Heavy boost must have higher factor than medium boost\", heavyBoostFactor > mediumBoostFactor);\n+    }\n+}\n", "problem_statement": "Option to allow boosting audio volume over 100%\n# Checklist\r\n\r\n- [x ] I have used the search function to see if someone else has already submitted the same feature request.\r\n- [ x] I will only create one feature request per issue.\r\n- [x ] I will describe the problem with as much detail as possible.\r\n\r\n# System info\r\n\r\n**App version**: 2.2.1 (latest)\r\n\r\n**App source**: Google Play\r\n\r\n# Feature description\r\n\r\n**Problem you may be having, or feature you want**:\r\nSome of the episodes I have are using a lower audio volume, and even if I'm at 100% of the volume I cannot hear correctly.\r\n\r\n**Suggested solution**:\r\nMaybe we could implement an option that allow to boost audio volume over 100% ?\r\nFor safety reasons, it could be an option that is disabled by default and is available to be enabled in the advanced settings tab.\r\n\n", "hints_text": "Hi and thank you for writing this issue!\n\nIt looks like you did not follow our issue template. In case you accidentally deleted the template, you can find the version for bug reports [here](https://raw.githubusercontent.com/AntennaPod/AntennaPod/develop/.github/ISSUE_TEMPLATE/bug_report.md) and the version for feature requests [here](https://raw.githubusercontent.com/AntennaPod/AntennaPod/develop/.github/ISSUE_TEMPLATE/feature_request.md). Please copy the matching template and then edit your post to follow the template. Please also make sure to use the [search function](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue) to look for open **and** closed issues about the same topic.\n\nIn order to properly deal with the issue, we need the information requested in the template. Please note that dealing with duplicate issues and asking users to follow the issue template takes away a lot of time from the developers. That time can then not be spent to actually implement features.\nRelated: #2187\nInterested in seeing this feature happen.\nThis is the reason for me leaving this app that actually I like a lot.\r\n\r\nWhen driving a car, the traffic instructions are sometimes so much louder than a badly recorded hardly audible podcast that it blows my ears. For health reasons, I have to switch now. (I am not exaggerating - it is literally painful.)\r\n\r\nThanks for the great work so far!", "created_at": "2023-08-09T06:17:52Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 6530, "instance_id": "AntennaPod__AntennaPod-6530", "issue_numbers": ["6460"], "base_commit": "75c3c4cf249b685d4c7ffc88b3db212963659df8", "patch": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadRequestCreator.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadRequestCreator.java\nindex 5ca904ff66..4d5f2883d0 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadRequestCreator.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadRequestCreator.java\n@@ -28,7 +28,6 @@ public static DownloadRequest.Builder create(Feed feed) {\n \n         return new DownloadRequest.Builder(dest.toString(), feed)\n                 .withAuthentication(username, password)\n-                .deleteOnFailure(true)\n                 .lastModified(feed.getLastUpdate());\n     }\n \n@@ -53,7 +52,6 @@ public static DownloadRequest.Builder create(FeedMedia media) {\n                 ? media.getItem().getFeed().getPreferences().getPassword() : null;\n \n         return new DownloadRequest.Builder(dest.toString(), media)\n-                .deleteOnFailure(false)\n                 .withAuthentication(username, password);\n     }\n \ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/EpisodeDownloadWorker.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/EpisodeDownloadWorker.java\nindex c428bc861e..62956894c0 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/EpisodeDownloadWorker.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/EpisodeDownloadWorker.java\n@@ -134,6 +134,7 @@ private Result performDownload(FeedMedia media, DownloadRequest request) {\n             } else {\n                 sendErrorNotification();\n             }\n+            FileUtils.deleteQuietly(new File(downloader.getDownloadRequest().getDestination()));\n             return Result.failure();\n         }\n \n@@ -162,6 +163,9 @@ private Result performDownload(FeedMedia media, DownloadRequest request) {\n             Log.d(TAG, \"Requested invalid range, restarting download from the beginning\");\n             FileUtils.deleteQuietly(new File(downloader.getDownloadRequest().getDestination()));\n             sendMessage(request.getTitle(), true);\n+            if (isLastRunAttempt()) {\n+                FileUtils.deleteQuietly(new File(downloader.getDownloadRequest().getDestination()));\n+            }\n             return retry3times();\n         }\n \n@@ -177,21 +181,29 @@ private Result performDownload(FeedMedia media, DownloadRequest request) {\n             } else {\n                 sendErrorNotification();\n             }\n+            FileUtils.deleteQuietly(new File(downloader.getDownloadRequest().getDestination()));\n             return Result.failure();\n         }\n         sendMessage(request.getTitle(), true);\n+        if (isLastRunAttempt()) {\n+            FileUtils.deleteQuietly(new File(downloader.getDownloadRequest().getDestination()));\n+        }\n         return retry3times();\n     }\n \n     private Result retry3times() {\n-        if (getRunAttemptCount() < 2) {\n-            return Result.retry();\n-        } else {\n+        if (isLastRunAttempt()) {\n             sendErrorNotification();\n             return Result.failure();\n+        } else {\n+            return Result.retry();\n         }\n     }\n \n+    private boolean isLastRunAttempt() {\n+        return getRunAttemptCount() >= 2;\n+    }\n+\n     private void sendMessage(String episodeTitle, boolean retrying) {\n         if (episodeTitle.length() > 20) {\n             episodeTitle = episodeTitle.substring(0, 19) + \"\u2026\";\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java\nindex 6de5e70067..94cd81337f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java\n@@ -49,12 +49,6 @@ protected void download() {\n         File destination = new File(request.getDestination());\n         final boolean fileExists = destination.exists();\n \n-        if (request.isDeleteOnFailure() && fileExists) {\n-            Log.w(TAG, \"File already exists\");\n-            onSuccess();\n-            return;\n-        }\n-\n         RandomAccessFile out = null;\n         InputStream connection;\n         ResponseBody responseBody = null;\n@@ -309,31 +303,11 @@ private void onSuccess() {\n     private void onFail(DownloadError reason, String reasonDetailed) {\n         Log.d(TAG, \"onFail() called with: \" + \"reason = [\" + reason + \"], reasonDetailed = [\" + reasonDetailed + \"]\");\n         result.setFailed(reason, reasonDetailed);\n-        if (request.isDeleteOnFailure()) {\n-            cleanup();\n-        }\n     }\n \n     private void onCancelled() {\n         Log.d(TAG, \"Download was cancelled\");\n         result.setCancelled();\n         cancelled = true;\n-        cleanup();\n-    }\n-\n-    /**\n-     * Deletes unfinished downloads.\n-     */\n-    private void cleanup() {\n-        if (request.getDestination() != null) {\n-            File dest = new File(request.getDestination());\n-            if (dest.exists()) {\n-                boolean rc = dest.delete();\n-                Log.d(TAG, \"Deleted file \" + dest.getName() + \"; Result: \"\n-                        + rc);\n-            } else {\n-                Log.d(TAG, \"cleanup() didn't delete file: does not exist.\");\n-            }\n-        }\n     }\n }\ndiff --git a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadRequest.java b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadRequest.java\nindex 9f9737edce..962ecfc84e 100644\n--- a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadRequest.java\n+++ b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadRequest.java\n@@ -14,7 +14,6 @@\n \n public class DownloadRequest implements Parcelable {\n     public static final String REQUEST_ARG_PAGE_NR = \"page\";\n-    public static final String REQUEST_ARG_LOAD_ALL_PAGES = \"loadAllPages\";\n \n     private final String destination;\n     private final String source;\n@@ -22,7 +21,6 @@ public class DownloadRequest implements Parcelable {\n     private String username;\n     private String password;\n     private String lastModified;\n-    private final boolean deleteOnFailure;\n     private final long feedfileId;\n     private final int feedfileType;\n     private final Bundle arguments;\n@@ -35,26 +33,26 @@ public class DownloadRequest implements Parcelable {\n     private boolean initiatedByUser;\n \n     public DownloadRequest(@NonNull String destination, @NonNull String source, @NonNull String title, long feedfileId,\n-                           int feedfileType, String username, String password, boolean deleteOnFailure,\n+                           int feedfileType, String username, String password,\n                            Bundle arguments, boolean initiatedByUser) {\n-        this(destination, source, title, feedfileId, feedfileType, null, deleteOnFailure, username, password, false,\n-             arguments, initiatedByUser);\n+        this(destination, source, title, feedfileId, feedfileType, null, username, password, false,\n+                arguments, initiatedByUser);\n     }\n \n     private DownloadRequest(Builder builder) {\n         this(builder.destination, builder.source, builder.title, builder.feedfileId, builder.feedfileType,\n-             builder.lastModified, builder.deleteOnFailure, builder.username, builder.password, false,\n-             builder.arguments != null ? builder.arguments : new Bundle(), builder.initiatedByUser);\n+                builder.lastModified, builder.username, builder.password, false,\n+                builder.arguments, builder.initiatedByUser);\n     }\n \n     private DownloadRequest(Parcel in) {\n         this(in.readString(), in.readString(), in.readString(), in.readLong(), in.readInt(), in.readString(),\n-             in.readByte() > 0, nullIfEmpty(in.readString()), nullIfEmpty(in.readString()), in.readByte() > 0,\n-             in.readBundle(), in.readByte() > 0);\n+                nullIfEmpty(in.readString()), nullIfEmpty(in.readString()), in.readByte() > 0,\n+                in.readBundle(), in.readByte() > 0);\n     }\n \n     private DownloadRequest(String destination, String source, String title, long feedfileId, int feedfileType,\n-                            String lastModified, boolean deleteOnFailure, String username, String password,\n+                            String lastModified, String username, String password,\n                             boolean mediaEnqueued, Bundle arguments, boolean initiatedByUser) {\n         this.destination = destination;\n         this.source = source;\n@@ -62,7 +60,6 @@ private DownloadRequest(String destination, String source, String title, long fe\n         this.feedfileId = feedfileId;\n         this.feedfileType = feedfileType;\n         this.lastModified = lastModified;\n-        this.deleteOnFailure = deleteOnFailure;\n         this.username = username;\n         this.password = password;\n         this.mediaEnqueued = mediaEnqueued;\n@@ -83,7 +80,6 @@ public void writeToParcel(Parcel dest, int flags) {\n         dest.writeLong(feedfileId);\n         dest.writeInt(feedfileType);\n         dest.writeString(lastModified);\n-        dest.writeByte((deleteOnFailure) ? (byte) 1 : 0);\n         // in case of null username/password, still write an empty string\n         // (rather than skipping it). Otherwise, unmarshalling  a collection\n         // of them from a Parcel (from an Intent extra to submit a request to DownloadService) will fail.\n@@ -124,7 +120,6 @@ public boolean equals(Object o) {\n \n         if (lastModified != null ? !lastModified.equals(that.lastModified) : that.lastModified != null)\n             return false;\n-        if (deleteOnFailure != that.deleteOnFailure) return false;\n         if (feedfileId != that.feedfileId) return false;\n         if (feedfileType != that.feedfileType) return false;\n         if (progressPercent != that.progressPercent) return false;\n@@ -151,7 +146,6 @@ public int hashCode() {\n         result = 31 * result + (username != null ? username.hashCode() : 0);\n         result = 31 * result + (password != null ? password.hashCode() : 0);\n         result = 31 * result + (lastModified != null ? lastModified.hashCode() : 0);\n-        result = 31 * result + (deleteOnFailure ? 1 : 0);\n         result = 31 * result + (int) (feedfileId ^ (feedfileId >>> 32));\n         result = 31 * result + feedfileType;\n         result = 31 * result + arguments.hashCode();\n@@ -237,26 +231,6 @@ public String getLastModified() {\n         return lastModified;\n     }\n \n-    public boolean isDeleteOnFailure() {\n-        return deleteOnFailure;\n-    }\n-\n-    public boolean isMediaEnqueued() {\n-        return mediaEnqueued;\n-    }\n-\n-    public boolean isInitiatedByUser() {\n-        return initiatedByUser;\n-    }\n-\n-    /**\n-     * Set to true if the media is enqueued because of this download.\n-     * The state is helpful if the download is cancelled, and undoing the enqueue is needed.\n-     */\n-    public void setMediaEnqueued(boolean mediaEnqueued) {\n-        this.mediaEnqueued = mediaEnqueued;\n-    }\n-\n     public Bundle getArguments() {\n         return arguments;\n     }\n@@ -268,7 +242,6 @@ public static class Builder {\n         private String username;\n         private String password;\n         private String lastModified;\n-        private boolean deleteOnFailure = false;\n         private final long feedfileId;\n         private final int feedfileType;\n         private final Bundle arguments = new Bundle();\n@@ -306,11 +279,6 @@ public void setForce(boolean force) {\n             }\n         }\n \n-        public Builder deleteOnFailure(boolean deleteOnFailure) {\n-            this.deleteOnFailure = deleteOnFailure;\n-            return this;\n-        }\n-\n         public Builder lastModified(String lastModified) {\n             this.lastModified = lastModified;\n             return this;\n@@ -322,12 +290,6 @@ public Builder withAuthentication(String username, String password) {\n             return this;\n         }\n \n-        public void loadAllPages(boolean loadAllPages) {\n-            if (loadAllPages) {\n-                arguments.putBoolean(REQUEST_ARG_LOAD_ALL_PAGES, true);\n-            }\n-        }\n-\n         public DownloadRequest build() {\n             return new DownloadRequest(this);\n         }\n", "test_patch": "diff --git a/app/src/androidTest/java/de/test/antennapod/service/download/HttpDownloaderTest.java b/app/src/androidTest/java/de/test/antennapod/service/download/HttpDownloaderTest.java\nindex 76cba47066..aa55a1e59c 100644\n--- a/app/src/androidTest/java/de/test/antennapod/service/download/HttpDownloaderTest.java\n+++ b/app/src/androidTest/java/de/test/antennapod/service/download/HttpDownloaderTest.java\n@@ -72,12 +72,14 @@ private FeedFileImpl setupFeedFile(String downloadUrl, String title, boolean del\n     }\n \n     private Downloader download(String url, String title, boolean expectedResult) {\n-        return download(url, title, expectedResult, true, null, null, true);\n+        return download(url, title, expectedResult, true, null, null);\n     }\n \n-    private Downloader download(String url, String title, boolean expectedResult, boolean deleteExisting, String username, String password, boolean deleteOnFail) {\n+    private Downloader download(String url, String title, boolean expectedResult, boolean deleteExisting,\n+                                String username, String password) {\n         FeedFile feedFile = setupFeedFile(url, title, deleteExisting);\n-        DownloadRequest request = new DownloadRequest(feedFile.getFile_url(), url, title, 0, feedFile.getTypeAsInt(), username, password, deleteOnFail, null, false);\n+        DownloadRequest request = new DownloadRequest(feedFile.getFile_url(), url, title, 0, feedFile.getTypeAsInt(),\n+                username, password, null, false);\n         Downloader downloader = new HttpDownloader(request);\n         downloader.call();\n         DownloadResult status = downloader.getResult();\n@@ -112,7 +114,8 @@ public void test404() {\n     public void testCancel() {\n         final String url = httpServer.getBaseUrl() + \"/delay/3\";\n         FeedFileImpl feedFile = setupFeedFile(url, \"delay\", true);\n-        final Downloader downloader = new HttpDownloader(new DownloadRequest(feedFile.getFile_url(), url, \"delay\", 0, feedFile.getTypeAsInt(), null, null, true, null, false));\n+        final Downloader downloader = new HttpDownloader(new DownloadRequest(feedFile.getFile_url(), url, \"delay\", 0,\n+                feedFile.getTypeAsInt(), null, null, null, false));\n         Thread t = new Thread() {\n             @Override\n             public void run() {\n@@ -128,12 +131,11 @@ public void run() {\n         }\n         DownloadResult result = downloader.getResult();\n         assertFalse(result.isSuccessful());\n-        assertFalse(new File(feedFile.getFile_url()).exists());\n     }\n \n     @Test\n     public void testDeleteOnFailShouldDelete() {\n-        Downloader downloader = download(url404, \"testDeleteOnFailShouldDelete\", false, true, null, null, true);\n+        Downloader downloader = download(url404, \"testDeleteOnFailShouldDelete\", false, true, null, null);\n         assertFalse(new File(downloader.getDownloadRequest().getDestination()).exists());\n     }\n \n@@ -143,18 +145,18 @@ public void testDeleteOnFailShouldNotDelete() throws IOException {\n         File dest = new File(destDir, filename);\n         dest.delete();\n         assertTrue(dest.createNewFile());\n-        Downloader downloader = download(url404, filename, false, false, null, null, false);\n+        Downloader downloader = download(url404, filename, false, false, null, null);\n         assertTrue(new File(downloader.getDownloadRequest().getDestination()).exists());\n     }\n \n     @Test\n     public void testAuthenticationShouldSucceed() throws InterruptedException {\n-        download(urlAuth, \"testAuthSuccess\", true, true, \"user\", \"passwd\", true);\n+        download(urlAuth, \"testAuthSuccess\", true, true, \"user\", \"passwd\");\n     }\n \n     @Test\n     public void testAuthenticationShouldFail() {\n-        Downloader downloader = download(urlAuth, \"testAuthSuccess\", false, true, \"user\", \"Wrong passwd\", true);\n+        Downloader downloader = download(urlAuth, \"testAuthSuccess\", false, true, \"user\", \"Wrong passwd\");\n         assertEquals(DownloadError.ERROR_UNAUTHORIZED, downloader.getResult().getReason());\n     }\n \ndiff --git a/net/download/service-interface/src/test/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadRequestTest.java b/net/download/service-interface/src/test/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadRequestTest.java\nindex 2709744f7b..a48934cfeb 100644\n--- a/net/download/service-interface/src/test/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadRequestTest.java\n+++ b/net/download/service-interface/src/test/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadRequestTest.java\n@@ -41,17 +41,14 @@ public void downloadRequestTestEquals() {\n         String password = \"testPassword\";\n         FeedMedia item = createFeedItem(1);\n         DownloadRequest request1 = new DownloadRequest.Builder(destStr, item)\n-                .deleteOnFailure(true)\n                 .withAuthentication(username, password)\n                 .build();\n \n         DownloadRequest request2 = new DownloadRequest.Builder(destStr, item)\n-                .deleteOnFailure(true)\n                 .withAuthentication(username, password)\n                 .build();\n \n         DownloadRequest request3 = new DownloadRequest.Builder(destStr, item)\n-                .deleteOnFailure(true)\n                 .withAuthentication(\"diffUsername\", \"diffPassword\")\n                 .build();\n \n", "problem_statement": "Partial downloads that users do not retry are kept forever\n### Checklist\n\n- [X] I have used the search function for [open](https://github.com/AntennaPod/AntennaPod/issues) **and** [closed](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue+is%3Aclosed) issues to see if someone else has already submitted the same feature request.\n- [X] I will describe the problem with as much detail as possible.\n- [X] This request contains only one single feature, **not** a list of multiple (related) features.\n\n### App version\n\n2.7.1\n\n### Where did you get the app from\n\nGoogle Play\n\n### Problem you may be having, or feature you want\n\nThere are a number of issues around incomplete downloads but more than what to do about them I should first point out that they are invisible and take up space. This could happen when the app crashes while downloading or the storage fills up. Unless one downloads frequently from a relatively short backlog list of episodes and does one thing at a time, it's easy to lose track of what had been attempted. I imagine that over time these episodes add up to wasted space. I know that space is wasted because resuming a download does not start from scratch. Maybe these clear periodically but that would be also the wrong approach because the user could be roaming (data cost) or intended to hear something and the time spent spotting it again would be a waste.\r\n\r\nThe main issue is that there is hidden state. It's not obvious if any downloads are incomplete, and no easy / actionable list of such.\n\n### Suggested solution\n\nI see that there is a \"Download Log\" button at the top right, that I didn't notice before. I cannot tell if that would have helped because if the app doesn't crash, or the target space fills-up, things just continue downloading automatically. This log is fine showing everything, but the main issue as I see it is failed partial downloads that have started and are now incomplete. Several solutions are possible, all addressing the same issue in different ways, any one of the 1-3, and especially 2 or 3 would be great to have:\r\n\r\n1. a different icon for incomplete downloads as a visual cue to hit download again\r\n2. add a separate button (next to the Download Log button) with a list of just such downloads and with two options for each item -- resume or delete\r\n3. if a separate list is undesirable, perhaps add a filter for the various things in the log -- a second row of toggle buttons (union of category sets) or a menu (all vs select single category) -- my particular interest being the Incomplete category (all options should fit on a single line)\r\n4. Finally, perhaps there could be a summary about how much space incomplete downloads take up and a button to delete all of them (this is a nice-to-have that would make the #2 solution even better)\r\n\r\nAll of the above are complementary, some perhaps slightly easier. What's best would depend on the aesthetic preferences of the maintainers.\n\n### Screenshots / Drawings / Technical details\n\n_No response_\n", "hints_text": "I can't believe I didn't notice this until just now; come to find out that partial downloads have been taking up 17 GB of internal storage!", "created_at": "2023-07-04T20:28:27Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 6529, "instance_id": "AntennaPod__AntennaPod-6529", "issue_numbers": ["6491"], "base_commit": "6999a944bb3c1ce1547832ad15e401ff7cbbbe10", "patch": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java\nindex 4815737f40..11e82af27b 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java\n@@ -360,6 +360,9 @@ public static Future<?> addQueueItem(final Context context, final FeedItem... it\n     public static Future<?> addQueueItem(final Context context, boolean markAsUnplayed, final FeedItem... items) {\n         LongList itemIds = new LongList(items.length);\n         for (FeedItem item : items) {\n+            if (!item.hasMedia()) {\n+                continue;\n+            }\n             itemIds.add(item.getId());\n             item.addTag(FeedItem.TAG_QUEUE);\n         }\n", "test_patch": "diff --git a/core/src/test/java/de/danoeh/antennapod/core/storage/DbWriterTest.java b/core/src/test/java/de/danoeh/antennapod/core/storage/DbWriterTest.java\nindex 08842e5fbd..fb7cad252d 100644\n--- a/core/src/test/java/de/danoeh/antennapod/core/storage/DbWriterTest.java\n+++ b/core/src/test/java/de/danoeh/antennapod/core/storage/DbWriterTest.java\n@@ -298,7 +298,6 @@ public void testDeleteFeedNoFeedMedia() throws Exception {\n         for (int i = 0; i < 10; i++) {\n             FeedItem item = new FeedItem(0, \"Item \" + i, \"Item\" + i, \"url\", new Date(), FeedItem.PLAYED, feed);\n             feed.getItems().add(item);\n-\n         }\n \n         PodDBAdapter adapter = PodDBAdapter.getInstance();\n@@ -444,6 +443,7 @@ public void testDeleteFeedItems() throws Exception {\n         // create items\n         for (int i = 0; i < 10; i++) {\n             FeedItem item = new FeedItem(0, \"Item \" + i, \"Item\" + i, \"url\", new Date(), FeedItem.PLAYED, feed);\n+            item.setMedia(new FeedMedia(item, \"\", 0, \"\"));\n             feed.getItems().add(item);\n         }\n \n@@ -522,6 +522,7 @@ private Feed queueTestSetupMultipleItems(final int numItems) throws Exception {\n         feed.setItems(new ArrayList<>());\n         for (int i = 0; i < numItems; i++) {\n             FeedItem item = new FeedItem(0, \"title \" + i, \"id \" + i, \"link \" + i, new Date(), FeedItem.PLAYED, feed);\n+            item.setMedia(new FeedMedia(item, \"\", 0, \"\"));\n             feed.getItems().add(item);\n         }\n \n@@ -548,6 +549,7 @@ public void testAddQueueItemSingleItem() throws Exception {\n         Feed feed = new Feed(\"url\", null, \"title\");\n         feed.setItems(new ArrayList<>());\n         FeedItem item = new FeedItem(0, \"title\", \"id\", \"link\", new Date(), FeedItem.PLAYED, feed);\n+        item.setMedia(new FeedMedia(item, \"\", 0, \"\"));\n         feed.getItems().add(item);\n \n         PodDBAdapter adapter = PodDBAdapter.getInstance();\n@@ -572,6 +574,7 @@ public void testAddQueueItemSingleItemAlreadyInQueue() throws Exception {\n         Feed feed = new Feed(\"url\", null, \"title\");\n         feed.setItems(new ArrayList<>());\n         FeedItem item = new FeedItem(0, \"title\", \"id\", \"link\", new Date(), FeedItem.PLAYED, feed);\n+        item.setMedia(new FeedMedia(item, \"\", 0, \"\"));\n         feed.getItems().add(item);\n \n         PodDBAdapter adapter = PodDBAdapter.getInstance();\n@@ -714,6 +717,7 @@ public void testMoveQueueItem() throws Exception {\n         for (int i = 0; i < numItems; i++) {\n             FeedItem item = new FeedItem(0, \"title \" + i, \"id \" + i, \"link \" + i,\n                     new Date(), FeedItem.PLAYED, feed);\n+            item.setMedia(new FeedMedia(item, \"\", 0, \"\"));\n             feed.getItems().add(item);\n         }\n \n@@ -762,6 +766,7 @@ public void testRemoveAllNewFlags() throws Exception {\n         for (int i = 0; i < numItems; i++) {\n             FeedItem item = new FeedItem(0, \"title \" + i, \"id \" + i, \"link \" + i,\n                     new Date(), FeedItem.NEW, feed);\n+            item.setMedia(new FeedMedia(item, \"\", 0, \"\"));\n             feed.getItems().add(item);\n         }\n \n@@ -788,6 +793,7 @@ private static Feed createTestFeed(int numItems) {\n         for (int i = 0; i < numItems; i++) {\n             FeedItem item = new FeedItem(0, \"title \" + i, \"id \" + i, \"link \" + i,\n                     new Date(), FeedItem.PLAYED, feed);\n+            item.setMedia(new FeedMedia(item, \"\", 0, \"\"));\n             feed.getItems().add(item);\n         }\n \n", "problem_statement": "It's possiblle to add contentless entry to queue with swipes, but not with menus.\n### Checklist\n\n- [X] I have used the search function for [open](https://github.com/AntennaPod/AntennaPod/issues) **and** [closed](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue+is%3Aclosed) issues to see if someone else has already submitted the same bug report.\n- [X] I will describe the problem with as much detail as possible.\n- [X] If the bug only to occurs with a certain podcast, I will include the URL of that podcast.\n\n### App version\n\n3.0.2\n\n### Where did you get the app from\n\nF-Droid\n\n### Android version\n\n13\n\n### Device model\n\nSamsung Fold 2\n\n### First occurred\n\n_No response_\n\n### Steps to reproduce\n\n1. Make a podcast feed with an entry that doesn't specify content to download (those with checkmarks, any regular RSS podcastless feed should do for testing)\r\n2. Context menu on that entry won't offer the possibility to add the contentless entry to queue\r\n3. Configuring swipes to enqueue and swiping on them adds the contentless entry to queue\n\n### Expected behaviour\n\nConsistently either block or allow adding contentless entries.\r\n\r\nVariant A: Contentless entries can be enqueued either with swipes nor with context menus. When entry gains content on refresh, the tickbox changes to a dowloading indicator, then to playback button. Personally, I'd prefer this variant.\r\n\r\nVariant B: Contentless entries cannot be enqueued neither with swipes nor with context menus.\n\n### Current behaviour\n\nContentless entries cannot be enqueued with menus, but can be enqueued with swipes. When the entry gains content on refresh, it is correctly auto-downloaded (provided auto-downloading is enabled), but there's a visual glitch where it still displays the checkmark up until the downloading is completed.\n\n### Logs\n\n_No response_\n", "hints_text": "Thanks for pointing that out. I think we should consistently block.\n\nQuestion is: if your swipe action is 'add to queue' and that's not possible, what do we do? Block swipe? (That's not very user friendly, wouldn't do that.) Or choose a back-up action? (E.g. Remove from Inbox)\nDisplay the action icon in red, let the swipe through and do nothing?\n", "created_at": "2023-07-04T20:14:57Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 6434, "instance_id": "AntennaPod__AntennaPod-6434", "issue_numbers": ["5420"], "base_commit": "84e1ff248f6e6c437dd5ecaf8217a7ee6b5c1af5", "patch": "diff --git a/app/src/main/java/de/danoeh/antennapod/activity/PreferenceActivity.java b/app/src/main/java/de/danoeh/antennapod/activity/PreferenceActivity.java\nindex af8db0d796..b101c20c0b 100644\n--- a/app/src/main/java/de/danoeh/antennapod/activity/PreferenceActivity.java\n+++ b/app/src/main/java/de/danoeh/antennapod/activity/PreferenceActivity.java\n@@ -23,10 +23,9 @@\n import de.danoeh.antennapod.fragment.preferences.AutoDownloadPreferencesFragment;\n import de.danoeh.antennapod.fragment.preferences.ImportExportPreferencesFragment;\n import de.danoeh.antennapod.fragment.preferences.MainPreferencesFragment;\n-import de.danoeh.antennapod.fragment.preferences.NetworkPreferencesFragment;\n+import de.danoeh.antennapod.fragment.preferences.DownloadsPreferencesFragment;\n import de.danoeh.antennapod.fragment.preferences.NotificationPreferencesFragment;\n import de.danoeh.antennapod.fragment.preferences.PlaybackPreferencesFragment;\n-import de.danoeh.antennapod.fragment.preferences.StoragePreferencesFragment;\n import de.danoeh.antennapod.fragment.preferences.synchronization.SynchronizationPreferencesFragment;\n import de.danoeh.antennapod.fragment.preferences.SwipePreferencesFragment;\n import de.danoeh.antennapod.fragment.preferences.UserInterfacePreferencesFragment;\n@@ -69,10 +68,8 @@ private PreferenceFragmentCompat getPreferenceScreen(int screen) {\n \n         if (screen == R.xml.preferences_user_interface) {\n             prefFragment = new UserInterfacePreferencesFragment();\n-        } else if (screen == R.xml.preferences_network) {\n-            prefFragment = new NetworkPreferencesFragment();\n-        } else if (screen == R.xml.preferences_storage) {\n-            prefFragment = new StoragePreferencesFragment();\n+        } else if (screen == R.xml.preferences_downloads) {\n+            prefFragment = new DownloadsPreferencesFragment();\n         } else if (screen == R.xml.preferences_import_export) {\n             prefFragment = new ImportExportPreferencesFragment();\n         } else if (screen == R.xml.preferences_autodownload) {\n@@ -90,14 +87,12 @@ private PreferenceFragmentCompat getPreferenceScreen(int screen) {\n     }\n \n     public static int getTitleOfPage(int preferences) {\n-        if (preferences == R.xml.preferences_network) {\n-            return R.string.network_pref;\n+        if (preferences == R.xml.preferences_downloads) {\n+            return R.string.downloads_pref;\n         } else if (preferences == R.xml.preferences_autodownload) {\n             return R.string.pref_automatic_download_title;\n         } else if (preferences == R.xml.preferences_playback) {\n             return R.string.playback_pref;\n-        } else if (preferences == R.xml.preferences_storage) {\n-            return R.string.storage_pref;\n         } else if (preferences == R.xml.preferences_import_export) {\n             return R.string.import_export_pref;\n         } else if (preferences == R.xml.preferences_user_interface) {\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/preferences/NetworkPreferencesFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/preferences/DownloadsPreferencesFragment.java\nsimilarity index 76%\nrename from app/src/main/java/de/danoeh/antennapod/fragment/preferences/NetworkPreferencesFragment.java\nrename to app/src/main/java/de/danoeh/antennapod/fragment/preferences/DownloadsPreferencesFragment.java\nindex 94c85abfe0..c486089fc4 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/preferences/NetworkPreferencesFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/preferences/DownloadsPreferencesFragment.java\n@@ -8,25 +8,29 @@\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.PreferenceActivity;\n import de.danoeh.antennapod.core.util.download.FeedUpdateManager;\n+import de.danoeh.antennapod.dialog.ChooseDataFolderDialog;\n import de.danoeh.antennapod.dialog.ProxyDialog;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n \n+import java.io.File;\n \n-public class NetworkPreferencesFragment extends PreferenceFragmentCompat\n+\n+public class DownloadsPreferencesFragment extends PreferenceFragmentCompat\n         implements SharedPreferences.OnSharedPreferenceChangeListener {\n     private static final String PREF_SCREEN_AUTODL = \"prefAutoDownloadSettings\";\n     private static final String PREF_PROXY = \"prefProxy\";\n+    private static final String PREF_CHOOSE_DATA_DIR = \"prefChooseDataDir\";\n \n     @Override\n     public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {\n-        addPreferencesFromResource(R.xml.preferences_network);\n+        addPreferencesFromResource(R.xml.preferences_downloads);\n         setupNetworkScreen();\n     }\n \n     @Override\n     public void onStart() {\n         super.onStart();\n-        ((PreferenceActivity) getActivity()).getSupportActionBar().setTitle(R.string.network_pref);\n+        ((PreferenceActivity) getActivity()).getSupportActionBar().setTitle(R.string.downloads_pref);\n         PreferenceManager.getDefaultSharedPreferences(getContext()).registerOnSharedPreferenceChangeListener(this);\n     }\n \n@@ -40,6 +44,7 @@ public void onStop() {\n     public void onResume() {\n         super.onResume();\n         setParallelDownloadsText(UserPreferences.getParallelDownloads());\n+        setDataFolderText();\n     }\n \n     private void setupNetworkScreen() {\n@@ -59,6 +64,13 @@ private void setupNetworkScreen() {\n             dialog.show();\n             return true;\n         });\n+        findPreference(PREF_CHOOSE_DATA_DIR).setOnPreferenceClickListener(preference -> {\n+            ChooseDataFolderDialog.showDialog(getContext(), path -> {\n+                UserPreferences.setDataFolder(path);\n+                setDataFolderText();\n+            });\n+            return true;\n+        });\n     }\n \n     private void setParallelDownloadsText(int downloads) {\n@@ -67,6 +79,13 @@ private void setParallelDownloadsText(int downloads) {\n         findPreference(UserPreferences.PREF_PARALLEL_DOWNLOADS).setSummary(s);\n     }\n \n+    private void setDataFolderText() {\n+        File f = UserPreferences.getDataFolder(null);\n+        if (f != null) {\n+            findPreference(PREF_CHOOSE_DATA_DIR).setSummary(f.getAbsolutePath());\n+        }\n+    }\n+\n     @Override\n     public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {\n         if (UserPreferences.PREF_UPDATE_INTERVAL.equals(key)) {\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/preferences/MainPreferencesFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/preferences/MainPreferencesFragment.java\nindex 7f5205db46..4d73132473 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/preferences/MainPreferencesFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/preferences/MainPreferencesFragment.java\n@@ -29,9 +29,9 @@ public class MainPreferencesFragment extends PreferenceFragmentCompat {\n \n     private static final String PREF_SCREEN_USER_INTERFACE = \"prefScreenInterface\";\n     private static final String PREF_SCREEN_PLAYBACK = \"prefScreenPlayback\";\n-    private static final String PREF_SCREEN_NETWORK = \"prefScreenNetwork\";\n+    private static final String PREF_SCREEN_DOWNLOADS = \"prefScreenDownloads\";\n+    private static final String PREF_SCREEN_IMPORT_EXPORT = \"prefScreenImportExport\";\n     private static final String PREF_SCREEN_SYNCHRONIZATION = \"prefScreenSynchronization\";\n-    private static final String PREF_SCREEN_STORAGE = \"prefScreenStorage\";\n     private static final String PREF_DOCUMENTATION = \"prefDocumentation\";\n     private static final String PREF_VIEW_FORUM = \"prefViewForum\";\n     private static final String PREF_SEND_BUG_REPORT = \"prefSendBugReport\";\n@@ -88,16 +88,16 @@ private void setupMainScreen() {\n             ((PreferenceActivity) getActivity()).openScreen(R.xml.preferences_playback);\n             return true;\n         });\n-        findPreference(PREF_SCREEN_NETWORK).setOnPreferenceClickListener(preference -> {\n-            ((PreferenceActivity) getActivity()).openScreen(R.xml.preferences_network);\n+        findPreference(PREF_SCREEN_DOWNLOADS).setOnPreferenceClickListener(preference -> {\n+            ((PreferenceActivity) getActivity()).openScreen(R.xml.preferences_downloads);\n             return true;\n         });\n         findPreference(PREF_SCREEN_SYNCHRONIZATION).setOnPreferenceClickListener(preference -> {\n             ((PreferenceActivity) getActivity()).openScreen(R.xml.preferences_synchronization);\n             return true;\n         });\n-        findPreference(PREF_SCREEN_STORAGE).setOnPreferenceClickListener(preference -> {\n-            ((PreferenceActivity) getActivity()).openScreen(R.xml.preferences_storage);\n+        findPreference(PREF_SCREEN_IMPORT_EXPORT).setOnPreferenceClickListener(preference -> {\n+            ((PreferenceActivity) getActivity()).openScreen(R.xml.preferences_import_export);\n             return true;\n         });\n         findPreference(PREF_NOTIFICATION).setOnPreferenceClickListener(preference -> {\n@@ -155,15 +155,12 @@ private void setupSearch() {\n                 .addBreadcrumb(PreferenceActivity.getTitleOfPage(R.xml.preferences_user_interface));\n         config.index(R.xml.preferences_playback)\n                 .addBreadcrumb(PreferenceActivity.getTitleOfPage(R.xml.preferences_playback));\n-        config.index(R.xml.preferences_network)\n-                .addBreadcrumb(PreferenceActivity.getTitleOfPage(R.xml.preferences_network));\n-        config.index(R.xml.preferences_storage)\n-                .addBreadcrumb(PreferenceActivity.getTitleOfPage(R.xml.preferences_storage));\n+        config.index(R.xml.preferences_downloads)\n+                .addBreadcrumb(PreferenceActivity.getTitleOfPage(R.xml.preferences_downloads));\n         config.index(R.xml.preferences_import_export)\n-                .addBreadcrumb(PreferenceActivity.getTitleOfPage(R.xml.preferences_storage))\n                 .addBreadcrumb(PreferenceActivity.getTitleOfPage(R.xml.preferences_import_export));\n         config.index(R.xml.preferences_autodownload)\n-                .addBreadcrumb(PreferenceActivity.getTitleOfPage(R.xml.preferences_network))\n+                .addBreadcrumb(PreferenceActivity.getTitleOfPage(R.xml.preferences_downloads))\n                 .addBreadcrumb(R.string.automation)\n                 .addBreadcrumb(PreferenceActivity.getTitleOfPage(R.xml.preferences_autodownload));\n         config.index(R.xml.preferences_synchronization)\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/preferences/StoragePreferencesFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/preferences/StoragePreferencesFragment.java\ndeleted file mode 100644\nindex 1801b107ff..0000000000\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/preferences/StoragePreferencesFragment.java\n+++ /dev/null\n@@ -1,58 +0,0 @@\n-package de.danoeh.antennapod.fragment.preferences;\n-\n-import android.os.Bundle;\n-import androidx.preference.PreferenceFragmentCompat;\n-import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.activity.PreferenceActivity;\n-import de.danoeh.antennapod.storage.preferences.UserPreferences;\n-import de.danoeh.antennapod.dialog.ChooseDataFolderDialog;\n-\n-import java.io.File;\n-\n-public class StoragePreferencesFragment extends PreferenceFragmentCompat {\n-    private static final String PREF_CHOOSE_DATA_DIR = \"prefChooseDataDir\";\n-    private static final String PREF_IMPORT_EXPORT = \"prefImportExport\";\n-\n-    @Override\n-    public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {\n-        addPreferencesFromResource(R.xml.preferences_storage);\n-        setupStorageScreen();\n-    }\n-\n-    @Override\n-    public void onStart() {\n-        super.onStart();\n-        ((PreferenceActivity) getActivity()).getSupportActionBar().setTitle(R.string.storage_pref);\n-    }\n-\n-    @Override\n-    public void onResume() {\n-        super.onResume();\n-        setDataFolderText();\n-    }\n-\n-    private void setupStorageScreen() {\n-        findPreference(PREF_CHOOSE_DATA_DIR).setOnPreferenceClickListener(\n-                preference -> {\n-                    ChooseDataFolderDialog.showDialog(getContext(), path -> {\n-                        UserPreferences.setDataFolder(path);\n-                        setDataFolderText();\n-                    });\n-                    return true;\n-                }\n-        );\n-        findPreference(PREF_IMPORT_EXPORT).setOnPreferenceClickListener(\n-                preference -> {\n-                    ((PreferenceActivity) getActivity()).openScreen(R.xml.preferences_import_export);\n-                    return true;\n-                }\n-        );\n-    }\n-\n-    private void setDataFolderText() {\n-        File f = UserPreferences.getDataFolder(null);\n-        if (f != null) {\n-            findPreference(PREF_CHOOSE_DATA_DIR).setSummary(f.getAbsolutePath());\n-        }\n-    }\n-}\ndiff --git a/app/src/main/res/xml/preferences.xml b/app/src/main/res/xml/preferences.xml\nindex 9967d7fd11..24d50cc45c 100644\n--- a/app/src/main/res/xml/preferences.xml\n+++ b/app/src/main/res/xml/preferences.xml\n@@ -22,10 +22,10 @@\n             android:icon=\"@drawable/ic_play_24dp\" />\n \n     <Preference\n-            android:key=\"prefScreenNetwork\"\n-            android:title=\"@string/network_pref\"\n-            android:summary=\"@string/network_pref_sum\"\n-            android:icon=\"@drawable/ic_network\" />\n+            android:key=\"prefScreenDownloads\"\n+            android:title=\"@string/downloads_pref\"\n+            android:summary=\"@string/downloads_pref_sum\"\n+            android:icon=\"@drawable/ic_download_black\" />\n \n     <Preference\n             android:key=\"prefScreenSynchronization\"\n@@ -34,9 +34,9 @@\n             android:icon=\"@drawable/ic_cloud\" />\n \n     <Preference\n-            android:key=\"prefScreenStorage\"\n-            android:title=\"@string/storage_pref\"\n-            android:summary=\"@string/storage_sum\"\n+            android:key=\"prefScreenImportExport\"\n+            android:title=\"@string/import_export_pref\"\n+            android:summary=\"@string/import_export_summary\"\n             android:icon=\"@drawable/ic_storage\" />\n \n     <Preference\ndiff --git a/app/src/main/res/xml/preferences_downloads.xml b/app/src/main/res/xml/preferences_downloads.xml\nnew file mode 100644\nindex 0000000000..865748d200\n--- /dev/null\n+++ b/app/src/main/res/xml/preferences_downloads.xml\n@@ -0,0 +1,70 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<PreferenceScreen\n+        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+        xmlns:numberpicker=\"http://schemas.android.com/apk/de.danoeh.antennapod\"\n+        xmlns:search=\"http://schemas.android.com/apk/com.bytehamster.lib.preferencesearch\">\n+\n+    <Preference\n+        android:title=\"@string/choose_data_directory\"\n+        android:key=\"prefChooseDataDir\"/>\n+\n+    <PreferenceCategory android:title=\"@string/automation\">\n+        <de.danoeh.antennapod.preferences.MaterialListPreference\n+            android:entryValues=\"@array/feed_refresh_interval_values\"\n+            android:entries=\"@array/feed_refresh_interval_entries\"\n+            android:key=\"prefAutoUpdateIntervall\"\n+            android:title=\"@string/feed_refresh_title\"\n+            android:summary=\"@string/feed_refresh_sum\"\n+            android:defaultValue=\"12\"/>\n+        <de.danoeh.antennapod.preferences.MaterialListPreference\n+            android:entryValues=\"@array/globalNewEpisodesActionValues\"\n+            android:entries=\"@array/globalNewEpisodesActionItems\"\n+            android:key=\"prefNewEpisodesAction\"\n+            android:title=\"@string/pref_new_episodes_action_title\"\n+            android:summary=\"@string/pref_new_episodes_action_sum\"\n+            android:defaultValue=\"1\"/>\n+        <Preference\n+            android:summary=\"@string/pref_automatic_download_sum\"\n+            android:key=\"prefAutoDownloadSettings\"\n+            android:title=\"@string/pref_automatic_download_title\"\n+            search:ignore=\"true\" />\n+        <SwitchPreferenceCompat\n+            android:defaultValue=\"false\"\n+            android:enabled=\"true\"\n+            android:key=\"prefAutoDelete\"\n+            android:summary=\"@string/pref_auto_delete_sum\"\n+            android:title=\"@string/pref_auto_delete_title\"/>\n+        <SwitchPreferenceCompat\n+            android:defaultValue=\"true\"\n+            android:enabled=\"true\"\n+            android:key=\"prefFavoriteKeepsEpisode\"\n+            android:summary=\"@string/pref_favorite_keeps_episodes_sum\"\n+            android:title=\"@string/pref_favorite_keeps_episodes_title\"/>\n+        <SwitchPreferenceCompat\n+            android:defaultValue=\"false\"\n+            android:enabled=\"true\"\n+            android:key=\"prefDeleteRemovesFromQueue\"\n+            android:summary=\"@string/pref_delete_removes_from_queue_sum\"\n+            android:title=\"@string/pref_delete_removes_from_queue_title\"/>\n+    </PreferenceCategory>\n+\n+    <PreferenceCategory android:title=\"@string/download_pref_details\">\n+        <MultiSelectListPreference\n+                android:defaultValue=\"@array/mobile_update_default_value\"\n+                android:entries=\"@array/mobile_update_entries\"\n+                android:entryValues=\"@array/mobile_update_values\"\n+                android:key=\"prefMobileUpdateTypes\"\n+                android:summary=\"@string/pref_mobileUpdate_sum\"\n+                android:title=\"@string/pref_mobileUpdate_title\"/>\n+        <de.danoeh.antennapod.preferences.NumberPickerPreference\n+                android:defaultValue=\"4\"\n+                numberpicker:minValue=\"1\"\n+                numberpicker:maxValue=\"50\"\n+                android:key=\"prefParallelDownloads\"\n+                android:title=\"@string/pref_parallel_downloads_title\"/>\n+        <Preference\n+                android:key=\"prefProxy\"\n+                android:summary=\"@string/pref_proxy_sum\"\n+                android:title=\"@string/pref_proxy_title\"/>\n+    </PreferenceCategory>\n+</PreferenceScreen>\ndiff --git a/app/src/main/res/xml/preferences_network.xml b/app/src/main/res/xml/preferences_network.xml\ndeleted file mode 100644\nindex f9cd15e685..0000000000\n--- a/app/src/main/res/xml/preferences_network.xml\n+++ /dev/null\n@@ -1,47 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<PreferenceScreen\n-        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-        xmlns:numberpicker=\"http://schemas.android.com/apk/de.danoeh.antennapod\"\n-        xmlns:search=\"http://schemas.android.com/apk/com.bytehamster.lib.preferencesearch\">\n-    <PreferenceCategory android:title=\"@string/automation\">\n-        <de.danoeh.antennapod.preferences.MaterialListPreference\n-                android:entryValues=\"@array/feed_refresh_interval_values\"\n-                android:entries=\"@array/feed_refresh_interval_entries\"\n-                android:key=\"prefAutoUpdateIntervall\"\n-                android:title=\"@string/feed_refresh_title\"\n-                android:summary=\"@string/feed_refresh_sum\"\n-                android:defaultValue=\"12\"/>\n-        <Preference\n-                android:summary=\"@string/pref_automatic_download_sum\"\n-                android:key=\"prefAutoDownloadSettings\"\n-                android:title=\"@string/pref_automatic_download_title\"\n-                search:ignore=\"true\" />\n-        <de.danoeh.antennapod.preferences.MaterialListPreference\n-                android:entryValues=\"@array/globalNewEpisodesActionValues\"\n-                android:entries=\"@array/globalNewEpisodesActionItems\"\n-                android:key=\"prefNewEpisodesAction\"\n-                android:title=\"@string/pref_new_episodes_action_title\"\n-                android:summary=\"@string/pref_new_episodes_action_sum\"\n-                android:defaultValue=\"1\"/>\n-    </PreferenceCategory>\n-\n-    <PreferenceCategory android:title=\"@string/download_pref_details\">\n-        <MultiSelectListPreference\n-                android:defaultValue=\"@array/mobile_update_default_value\"\n-                android:entries=\"@array/mobile_update_entries\"\n-                android:entryValues=\"@array/mobile_update_values\"\n-                android:key=\"prefMobileUpdateTypes\"\n-                android:summary=\"@string/pref_mobileUpdate_sum\"\n-                android:title=\"@string/pref_mobileUpdate_title\"/>\n-        <de.danoeh.antennapod.preferences.NumberPickerPreference\n-                android:defaultValue=\"4\"\n-                numberpicker:minValue=\"1\"\n-                numberpicker:maxValue=\"50\"\n-                android:key=\"prefParallelDownloads\"\n-                android:title=\"@string/pref_parallel_downloads_title\"/>\n-        <Preference\n-                android:key=\"prefProxy\"\n-                android:summary=\"@string/pref_proxy_sum\"\n-                android:title=\"@string/pref_proxy_title\"/>\n-    </PreferenceCategory>\n-</PreferenceScreen>\ndiff --git a/app/src/main/res/xml/preferences_storage.xml b/app/src/main/res/xml/preferences_storage.xml\ndeleted file mode 100644\nindex 89e8c4cf52..0000000000\n--- a/app/src/main/res/xml/preferences_storage.xml\n+++ /dev/null\n@@ -1,32 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<PreferenceScreen\n-        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-        xmlns:search=\"http://schemas.android.com/apk/com.bytehamster.lib.preferencesearch\">\n-\n-    <Preference\n-            android:title=\"@string/choose_data_directory\"\n-            android:key=\"prefChooseDataDir\"/>\n-    <SwitchPreferenceCompat\n-            android:defaultValue=\"false\"\n-            android:enabled=\"true\"\n-            android:key=\"prefAutoDelete\"\n-            android:summary=\"@string/pref_auto_delete_sum\"\n-            android:title=\"@string/pref_auto_delete_title\"/>\n-    <SwitchPreferenceCompat\n-            android:defaultValue=\"true\"\n-            android:enabled=\"true\"\n-            android:key=\"prefFavoriteKeepsEpisode\"\n-            android:summary=\"@string/pref_favorite_keeps_episodes_sum\"\n-            android:title=\"@string/pref_favorite_keeps_episodes_title\"/>\n-    <SwitchPreferenceCompat\n-            android:defaultValue=\"false\"\n-            android:enabled=\"true\"\n-            android:key=\"prefDeleteRemovesFromQueue\"\n-            android:summary=\"@string/pref_delete_removes_from_queue_sum\"\n-            android:title=\"@string/pref_delete_removes_from_queue_title\"/>\n-    <Preference\n-            android:title=\"@string/import_export_pref\"\n-            android:summary=\"@string/import_export_summary\"\n-            android:key=\"prefImportExport\"\n-            search:ignore=\"true\"/>\n-</PreferenceScreen>\ndiff --git a/core/src/main/res/drawable/ic_network.xml b/core/src/main/res/drawable/ic_network.xml\ndeleted file mode 100644\nindex 52f5889b84..0000000000\n--- a/core/src/main/res/drawable/ic_network.xml\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-<vector android:height=\"24dp\"\n-    android:viewportHeight=\"24.0\" android:viewportWidth=\"24.0\"\n-    android:width=\"24dp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-    <path android:fillColor=\"?attr/action_icon_color\" android:pathData=\"M16,17.01V10h-2v7.01h-3L15,21l4,-3.99h-3zM9,3L5,6.99h3V14h2V6.99h3L9,3z\"/>\n-</vector>\ndiff --git a/ui/i18n/src/main/res/values/strings.xml b/ui/i18n/src/main/res/values/strings.xml\nindex 1d11d45577..68bde475ce 100644\n--- a/ui/i18n/src/main/res/values/strings.xml\n+++ b/ui/i18n/src/main/res/values/strings.xml\n@@ -370,8 +370,6 @@\n     <string name=\"no_subscriptions_label\">To subscribe to a podcast, press the plus icon below.</string>\n \n     <!-- Preferences -->\n-    <string name=\"storage_pref\">Storage</string>\n-    <string name=\"storage_sum\">Episode auto delete, Import, Export</string>\n     <string name=\"project_pref\">Project</string>\n     <string name=\"synchronization_pref\">Synchronization</string>\n     <string name=\"synchronization_sum\">Synchronize with other devices</string>\n@@ -411,8 +409,8 @@\n     <string name=\"pref_favorite_keeps_episodes_title\">Keep Favorite Episodes</string>\n     <string name=\"playback_pref\">Playback</string>\n     <string name=\"playback_pref_sum\">Headphone controls, Skip intervals, Queue</string>\n-    <string name=\"network_pref\">Network</string>\n-    <string name=\"network_pref_sum\">Update interval, Download controls, Mobile data</string>\n+    <string name=\"downloads_pref\">Downloads</string>\n+    <string name=\"downloads_pref_sum\">Update interval, Mobile data, Automatic download, Automatic deletion</string>\n     <string name=\"feed_refresh_title\">Refresh podcasts</string>\n     <string name=\"feed_refresh_sum\">Specify an interval at which AntennaPod looks for new episodes automatically</string>\n     <string name=\"feed_refresh_never\">Never</string>\n", "test_patch": "diff --git a/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java b/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\nindex be947bc1e1..5940d511be 100644\n--- a/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\n+++ b/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\n@@ -193,7 +193,7 @@ public void testContinuousPlayback() {\n \n     @Test\n     public void testAutoDelete() {\n-        clickPreference(R.string.storage_pref);\n+        clickPreference(R.string.downloads_pref);\n         final boolean autoDelete = UserPreferences.isAutoDelete();\n         onView(withText(R.string.pref_auto_delete_title)).perform(click());\n         Awaitility.await().atMost(1000, MILLISECONDS)\n@@ -225,7 +225,7 @@ public void testPauseForInterruptions() {\n \n     @Test\n     public void testSetSequentialDownload() {\n-        clickPreference(R.string.network_pref);\n+        clickPreference(R.string.downloads_pref);\n         clickPreference(R.string.pref_parallel_downloads_title);\n         onView(isRoot()).perform(waitForView(withClassName(endsWith(\"EditText\")), 1000));\n         onView(withClassName(endsWith(\"EditText\"))).perform(replaceText(\"1\"));\n@@ -236,7 +236,7 @@ public void testSetSequentialDownload() {\n \n     @Test\n     public void testSetParallelDownloads() {\n-        clickPreference(R.string.network_pref);\n+        clickPreference(R.string.downloads_pref);\n         clickPreference(R.string.pref_parallel_downloads_title);\n         onView(isRoot()).perform(waitForView(withClassName(endsWith(\"EditText\")), 1000));\n         onView(withClassName(endsWith(\"EditText\"))).perform(replaceText(\"10\"));\n@@ -248,7 +248,7 @@ public void testSetParallelDownloads() {\n \n     @Test\n     public void testSetParallelDownloadsInvalidInput() {\n-        clickPreference(R.string.network_pref);\n+        clickPreference(R.string.downloads_pref);\n         clickPreference(R.string.pref_parallel_downloads_title);\n         onView(isRoot()).perform(waitForView(withClassName(endsWith(\"EditText\")), 1000));\n         onView(withClassName(endsWith(\"EditText\"))).perform(replaceText(\"0\"));\n@@ -263,7 +263,7 @@ public void testSetEpisodeCache() {\n         String[] values = res.getStringArray(R.array.episode_cache_size_values);\n         String entry = entries[entries.length / 2];\n         final int value = Integer.parseInt(values[values.length / 2]);\n-        clickPreference(R.string.network_pref);\n+        clickPreference(R.string.downloads_pref);\n         clickPreference(R.string.pref_automatic_download_title);\n         clickPreference(R.string.pref_episode_cache_title);\n         onView(isRoot()).perform(waitForView(withText(entry), 1000));\n@@ -279,7 +279,7 @@ public void testSetEpisodeCacheMin() {\n         String minEntry = entries[0];\n         final int minValue = Integer.parseInt(values[0]);\n \n-        clickPreference(R.string.network_pref);\n+        clickPreference(R.string.downloads_pref);\n         clickPreference(R.string.pref_automatic_download_title);\n         clickPreference(R.string.pref_episode_cache_title);\n         onView(withId(R.id.select_dialog_listview)).perform(swipeDown());\n@@ -294,7 +294,7 @@ public void testSetEpisodeCacheMax() {\n         String[] values = res.getStringArray(R.array.episode_cache_size_values);\n         String maxEntry = entries[entries.length - 1];\n         final int maxValue = Integer.parseInt(values[values.length - 1]);\n-        onView(withText(R.string.network_pref)).perform(click());\n+        onView(withText(R.string.downloads_pref)).perform(click());\n         onView(withText(R.string.pref_automatic_download_title)).perform(click());\n         onView(withText(R.string.pref_episode_cache_title)).perform(click());\n         onView(withId(R.id.select_dialog_listview)).perform(swipeUp());\n@@ -306,7 +306,7 @@ public void testSetEpisodeCacheMax() {\n     @Test\n     public void testAutomaticDownload() {\n         final boolean automaticDownload = UserPreferences.isEnableAutodownload();\n-        clickPreference(R.string.network_pref);\n+        clickPreference(R.string.downloads_pref);\n         clickPreference(R.string.pref_automatic_download_title);\n         clickPreference(R.string.pref_automatic_download_title);\n         Awaitility.await().atMost(1000, MILLISECONDS)\n@@ -327,7 +327,7 @@ public void testAutomaticDownload() {\n \n     @Test\n     public void testEpisodeCleanupFavoriteOnly() {\n-        clickPreference(R.string.network_pref);\n+        clickPreference(R.string.downloads_pref);\n         onView(withText(R.string.pref_automatic_download_title)).perform(click());\n         onView(withText(R.string.pref_episode_cleanup_title)).perform(click());\n         onView(withId(R.id.select_dialog_listview)).perform(swipeDown());\n@@ -338,7 +338,7 @@ public void testEpisodeCleanupFavoriteOnly() {\n \n     @Test\n     public void testEpisodeCleanupQueueOnly() {\n-        clickPreference(R.string.network_pref);\n+        clickPreference(R.string.downloads_pref);\n         onView(withText(R.string.pref_automatic_download_title)).perform(click());\n         onView(withText(R.string.pref_episode_cleanup_title)).perform(click());\n         onView(withId(R.id.select_dialog_listview)).perform(swipeDown());\n@@ -349,7 +349,7 @@ public void testEpisodeCleanupQueueOnly() {\n \n     @Test\n     public void testEpisodeCleanupNeverAlg() {\n-        clickPreference(R.string.network_pref);\n+        clickPreference(R.string.downloads_pref);\n         onView(withText(R.string.pref_automatic_download_title)).perform(click());\n         onView(withText(R.string.pref_episode_cleanup_title)).perform(click());\n         onView(withId(R.id.select_dialog_listview)).perform(swipeUp());\n@@ -360,7 +360,7 @@ public void testEpisodeCleanupNeverAlg() {\n \n     @Test\n     public void testEpisodeCleanupClassic() {\n-        clickPreference(R.string.network_pref);\n+        clickPreference(R.string.downloads_pref);\n         onView(withText(R.string.pref_automatic_download_title)).perform(click());\n         onView(withText(R.string.pref_episode_cleanup_title)).perform(click());\n         onView(withText(R.string.episode_cleanup_after_listening)).perform(click());\n@@ -377,7 +377,7 @@ public void testEpisodeCleanupClassic() {\n \n     @Test\n     public void testEpisodeCleanupNumDays() {\n-        clickPreference(R.string.network_pref);\n+        clickPreference(R.string.downloads_pref);\n         clickPreference(R.string.pref_automatic_download_title);\n         clickPreference(R.string.pref_episode_cleanup_title);\n         String search = res.getQuantityString(R.plurals.episode_cleanup_days_after_listening, 3, 3);\n@@ -437,7 +437,7 @@ public void testFastForwardChange() {\n \n     @Test\n     public void testDeleteRemovesFromQueue() {\n-        clickPreference(R.string.storage_pref);\n+        clickPreference(R.string.downloads_pref);\n         if (!UserPreferences.shouldDeleteRemoveFromQueue()) {\n             clickPreference(R.string.pref_delete_removes_from_queue_title);\n             Awaitility.await().atMost(1000, MILLISECONDS)\n", "problem_statement": "Move 'Import/Export' to its own setting category: 'Export & back-up'\n# Checklist\r\n<!-- Place an x in the boxes to tick them: [x] -->\r\n\r\n- [x ] I have used the search function to see if someone else has already submitted the same feature request.\r\n- [x ] I will only create one feature request per issue.\r\n- [x ] I will describe the problem with as much detail as possible.\r\n\r\n# System info\r\n\r\n**App version**: 2.3.2\r\n<!-- The latest version may be different depending on your device. You can find the version in AntennaPod's settings. -->\r\n\r\n**App source**: Google Play\r\n<!-- Please delete irrelevant answer or fill in the blank -->\r\n\r\n# Feature description\r\n\r\n**Problem you may be having, or feature you want**: The back-up option is quite hidden in the settings. Also, it is located under 'Storage' which doesn't really align (the other Storage items are more about the space AntennaPod occupies on the device).\r\n<!-- Give a brief explanation about the problem that may currently exist -->\r\n\r\n**Suggested solution**:\r\n* Move the current 'Import/Export' group up on level, so it's directly visible when reviewing the settings.\r\n* Rename to 'Export & back-up'\r\n This is to sign-post that's where back-ups can be made & restored. 'Import' can be dropped as it's partly covered by 'back-up' and OPML import (which might be back-up, might be not, depending on the use-case) is also accessible via the 'Add subscription' screen.\r\n* Use the [`backup-restore`](https://materialdesignicons.com/icon/backup-restore) icon for the new category.\r\n<!-- Describe how your requested feature solves this problem. Try to be as specific as possible. Please not only explain what the feature does, but also how. -->\r\n\r\n**Screenshots / Drawings / Technical details**:\r\n<!-- If your request is about (or includes) changing or extending the UI, describe what the UI would look like and how the user would interact with it. -->\r\n\n", "hints_text": "The number of top-level settings entries are getting a bit much for my taste lately (documentation, contribute, etc). If we display too many items on the main settings page, it is harder to actually find important items.\r\n\r\nI was also thinking about moving the \"automation\" related settings (auto delete, auto update, auto download) to a new top-level settings screen. When that is done, the \"network\" and \"storage\" screens will be mostly empty and should probably be re-organized. Maybe together with the import/export item?\nThis issue has been mentioned on **AntennaPod Forum**. There might be relevant details there:\n\nhttps://forum.antennapod.org/t/settings-restructuring/2079/1\n\nHi @ByteHamster,\r\n\r\nWhile I agree that there are a lot of top-level setting entries, I think (after/with the removal of the Statistics) we have enough space to have an 'Export & back-up' setting.\r\n\r\nAn already happy user in [a review](https://play.google.com/console/u/0/developers/8008695526664634386/app/4974638472012894302/user-feedback/review-details?reviewId=41136731-7fe5-4b02-979d-02ec148f0021&corpus=PUBLIC_REVIEWS) suggested the following:\r\n> import/export should be a top-level settings category or merged with \"Synchronization\"\r\n\r\nSo I think it'd be good to implement this (ahead of any further restructuring under discussion in the forum). OK to remove the 'needs decision' label?\nHmm, not really happy but OK", "created_at": "2023-04-15T09:32:48Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 6420, "instance_id": "AntennaPod__AntennaPod-6420", "issue_numbers": ["1250", "3673"], "base_commit": "4c286931cd2dbd9038022f808f9d8a73ccbb6759", "patch": "diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml\nindex 8c779db268..95b0c16148 100644\n--- a/app/src/main/AndroidManifest.xml\n+++ b/app/src/main/AndroidManifest.xml\n@@ -129,17 +129,6 @@\n             </intent-filter>\n         </activity>\n \n-        <activity\n-            android:name=\".activity.DownloadAuthenticationActivity\"\n-            android:theme=\"@style/Theme.AntennaPod.Dark.Translucent\"\n-            android:exported=\"false\"\n-            android:launchMode=\"singleInstance\">\n-            <intent-filter>\n-                <action android:name=\"de.danoeh.antennapod.intents.DOWNLOAD_AUTH_ACTIVITY\" />\n-                <category android:name=\"android.intent.category.DEFAULT\" />\n-            </intent-filter>\n-        </activity>\n-\n         <activity\n             android:name=\".activity.PreferenceActivity\"\n             android:configChanges=\"keyboardHidden|orientation|screenSize\"\ndiff --git a/app/src/main/java/de/danoeh/antennapod/activity/DownloadAuthenticationActivity.java b/app/src/main/java/de/danoeh/antennapod/activity/DownloadAuthenticationActivity.java\ndeleted file mode 100644\nindex 176c3c9906..0000000000\n--- a/app/src/main/java/de/danoeh/antennapod/activity/DownloadAuthenticationActivity.java\n+++ /dev/null\n@@ -1,71 +0,0 @@\n-package de.danoeh.antennapod.activity;\n-\n-import android.os.Bundle;\n-import android.text.TextUtils;\n-import androidx.appcompat.app.AppCompatActivity;\n-import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.core.preferences.ThemeSwitcher;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n-import de.danoeh.antennapod.model.feed.FeedMedia;\n-import de.danoeh.antennapod.model.feed.FeedPreferences;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n-import de.danoeh.antennapod.core.storage.DBReader;\n-import de.danoeh.antennapod.core.storage.DBWriter;\n-import de.danoeh.antennapod.dialog.AuthenticationDialog;\n-import de.danoeh.antennapod.ui.appstartintent.DownloadAuthenticationActivityStarter;\n-import io.reactivex.Completable;\n-import io.reactivex.android.schedulers.AndroidSchedulers;\n-import io.reactivex.schedulers.Schedulers;\n-\n-\n-/**\n- * Shows a username and a password text field.\n- * The activity MUST be started with the ARG_DOWNlOAD_REQUEST argument set to a non-null value.\n- */\n-public class DownloadAuthenticationActivity extends AppCompatActivity {\n-    @Override\n-    protected void onCreate(Bundle savedInstanceState) {\n-        setTheme(ThemeSwitcher.getTranslucentTheme(this));\n-        super.onCreate(savedInstanceState);\n-\n-        DownloadRequest request = getIntent().getParcelableExtra(\n-                DownloadAuthenticationActivityStarter.EXTRA_DOWNLOAD_REQUEST);\n-\n-        new AuthenticationDialog(this, R.string.authentication_label, true, \"\", \"\") {\n-            @Override\n-            protected void onConfirmed(String username, String password) {\n-                Completable.fromAction(\n-                        () -> {\n-                            request.setUsername(username);\n-                            request.setPassword(password);\n-\n-                            if (request.getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {\n-                                long mediaId = request.getFeedfileId();\n-                                FeedMedia media = DBReader.getFeedMedia(mediaId);\n-                                if (media != null) {\n-                                    FeedPreferences preferences = media.getItem().getFeed().getPreferences();\n-                                    if (TextUtils.isEmpty(preferences.getPassword())\n-                                            || TextUtils.isEmpty(preferences.getUsername())) {\n-                                        preferences.setUsername(username);\n-                                        preferences.setPassword(password);\n-                                        DBWriter.setFeedPreferences(preferences);\n-                                    }\n-                                }\n-                            }\n-                        })\n-                        .subscribeOn(Schedulers.io())\n-                        .observeOn(AndroidSchedulers.mainThread())\n-                        .subscribe(() -> {\n-                            DownloadServiceInterface.get()\n-                                    .download(DownloadAuthenticationActivity.this, false, request);\n-                            finish();\n-                        });\n-            }\n-\n-            @Override\n-            protected void onCancelled() {\n-                finish();\n-            }\n-        }.show();\n-    }\n-}\ndiff --git a/app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java b/app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java\nindex bd467076a8..a55bfade31 100644\n--- a/app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java\n+++ b/app/src/main/java/de/danoeh/antennapod/activity/MainActivity.java\n@@ -39,12 +39,14 @@\n import de.danoeh.antennapod.core.receiver.MediaButtonReceiver;\n import de.danoeh.antennapod.core.util.download.FeedUpdateManager;\n import de.danoeh.antennapod.dialog.RatingDialog;\n+import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.event.FeedUpdateRunningEvent;\n import de.danoeh.antennapod.event.MessageEvent;\n import de.danoeh.antennapod.fragment.AddFeedFragment;\n import de.danoeh.antennapod.fragment.AllEpisodesFragment;\n import de.danoeh.antennapod.fragment.AudioPlayerFragment;\n import de.danoeh.antennapod.fragment.CompletedDownloadsFragment;\n+import de.danoeh.antennapod.fragment.DownloadLogFragment;\n import de.danoeh.antennapod.fragment.FeedItemlistFragment;\n import de.danoeh.antennapod.fragment.InboxFragment;\n import de.danoeh.antennapod.fragment.NavDrawerFragment;\n@@ -53,6 +55,8 @@\n import de.danoeh.antennapod.fragment.SearchFragment;\n import de.danoeh.antennapod.fragment.SubscriptionFragment;\n import de.danoeh.antennapod.fragment.TransitionEffect;\n+import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n import de.danoeh.antennapod.playback.cast.CastEnabledActivity;\n import de.danoeh.antennapod.preferences.PreferenceUpgrader;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n@@ -66,6 +70,9 @@\n import org.greenrobot.eventbus.Subscribe;\n import org.greenrobot.eventbus.ThreadMode;\n \n+import java.util.HashMap;\n+import java.util.Map;\n+\n /**\n  * The activity that is shown when the user launches the app.\n  */\n@@ -173,6 +180,39 @@ public void onCreate(Bundle savedInstanceState) {\n                     }\n                     EventBus.getDefault().postSticky(new FeedUpdateRunningEvent(isRefreshingFeeds));\n                 });\n+        WorkManager.getInstance(this)\n+                .getWorkInfosByTagLiveData(DownloadServiceInterface.WORK_TAG)\n+                .observe(this, workInfos -> {\n+                    Map<String, DownloadStatus> updatedEpisodes = new HashMap<>();\n+                    for (WorkInfo workInfo : workInfos) {\n+                        String downloadUrl = null;\n+                        for (String tag : workInfo.getTags()) {\n+                            if (tag.startsWith(DownloadServiceInterface.WORK_TAG_EPISODE_URL)) {\n+                                downloadUrl = tag.substring(DownloadServiceInterface.WORK_TAG_EPISODE_URL.length());\n+                            }\n+                        }\n+                        if (downloadUrl == null) {\n+                            continue;\n+                        }\n+                        int status;\n+                        if (workInfo.getState() == WorkInfo.State.RUNNING) {\n+                            status = DownloadStatus.STATE_RUNNING;\n+                        } else if (workInfo.getState() == WorkInfo.State.ENQUEUED\n+                                || workInfo.getState() == WorkInfo.State.BLOCKED) {\n+                            status = DownloadStatus.STATE_QUEUED;\n+                        } else {\n+                            status = DownloadStatus.STATE_COMPLETED;\n+                        }\n+                        int progress = workInfo.getProgress().getInt(DownloadServiceInterface.WORK_DATA_PROGRESS, -1);\n+                        if (progress == -1 && status != DownloadStatus.STATE_COMPLETED) {\n+                            status = DownloadStatus.STATE_QUEUED;\n+                            progress = 0;\n+                        }\n+                        updatedEpisodes.put(downloadUrl, new DownloadStatus(status, progress));\n+                    }\n+                    DownloadServiceInterface.get().setCurrentDownloads(updatedEpisodes);\n+                    EventBus.getDefault().postSticky(new EpisodeDownloadEvent(updatedEpisodes));\n+                });\n     }\n \n     @Override\n@@ -531,9 +571,9 @@ public void onBackPressed() {\n     public void onEventMainThread(MessageEvent event) {\n         Log.d(TAG, \"onEvent(\" + event + \")\");\n \n-        Snackbar snackbar = showSnackbarAbovePlayer(event.message, Snackbar.LENGTH_SHORT);\n+        Snackbar snackbar = showSnackbarAbovePlayer(event.message, Snackbar.LENGTH_LONG);\n         if (event.action != null) {\n-            snackbar.setAction(getString(R.string.undo), v -> event.action.run());\n+            snackbar.setAction(event.actionText, v -> event.action.accept(this));\n         }\n     }\n \n@@ -570,6 +610,9 @@ private void handleNavIntent() {\n         if (intent.getBooleanExtra(MainActivityStarter.EXTRA_OPEN_DRAWER, false) && drawerLayout != null) {\n             drawerLayout.open();\n         }\n+        if (intent.getBooleanExtra(MainActivityStarter.EXTRA_OPEN_DOWNLOAD_LOGS, false)) {\n+            new DownloadLogFragment().show(getSupportFragmentManager(), null);\n+        }\n         if (intent.getBooleanExtra(EXTRA_REFRESH_ON_START, false)) {\n             FeedUpdateManager.runOnceOrAsk(this);\n         }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java b/app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java\nindex f5f3d28f6b..3812339bdc 100644\n--- a/app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java\n+++ b/app/src/main/java/de/danoeh/antennapod/activity/OnlineFeedViewActivity.java\n@@ -31,20 +31,20 @@\n \n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.adapter.FeedItemlistDescriptionAdapter;\n-import de.danoeh.antennapod.core.event.DownloadEvent;\n import de.danoeh.antennapod.core.preferences.ThemeSwitcher;\n-import de.danoeh.antennapod.core.service.download.DownloadService;\n import de.danoeh.antennapod.core.service.download.DownloadRequestCreator;\n import de.danoeh.antennapod.core.feed.FeedUrlNotFoundException;\n import de.danoeh.antennapod.core.storage.DBTasks;\n import de.danoeh.antennapod.core.service.playback.PlaybackServiceInterface;\n import de.danoeh.antennapod.core.util.DownloadErrorLabel;\n+import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.event.FeedListUpdateEvent;\n import de.danoeh.antennapod.event.PlayerStatusEvent;\n import de.danoeh.antennapod.core.preferences.PlaybackPreferences;\n+import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.core.service.download.Downloader;\n import de.danoeh.antennapod.core.service.download.HttpDownloader;\n import de.danoeh.antennapod.core.storage.DBReader;\n@@ -307,10 +307,7 @@ private void startFeedDownload(String url) {\n                 error -> Log.e(TAG, Log.getStackTraceString(error)));\n     }\n \n-    private void checkDownloadResult(@NonNull DownloadStatus status, String destination) {\n-        if (status.isCancelled()) {\n-            return;\n-        }\n+    private void checkDownloadResult(@NonNull DownloadResult status, String destination) {\n         if (status.isSuccessful()) {\n             parseFeed(destination);\n         } else if (status.getReason() == DownloadError.ERROR_UNAUTHORIZED) {\n@@ -341,9 +338,8 @@ public void onFeedListChanged(FeedListUpdateEvent event) {\n                 );\n     }\n \n-    @Subscribe(threadMode = ThreadMode.MAIN)\n-    public void onEventMainThread(DownloadEvent event) {\n-        Log.d(TAG, \"onEventMainThread() called with: \" + \"event = [\" + event + \"]\");\n+    @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\n+    public void onEventMainThread(EpisodeDownloadEvent event) {\n         handleUpdatedFeedStatus();\n     }\n \n@@ -535,7 +531,7 @@ private void openFeed() {\n     }\n \n     private void handleUpdatedFeedStatus() {\n-        if (DownloadService.isDownloadingFile(selectedDownloadUrl)) {\n+        if (DownloadServiceInterface.get().isDownloadingEpisode(selectedDownloadUrl)) {\n             viewBinding.subscribeButton.setEnabled(false);\n             viewBinding.subscribeButton.setText(R.string.subscribing_label);\n         } else if (feedInFeedlist()) {\ndiff --git a/app/src/main/java/de/danoeh/antennapod/adapter/DownloadLogAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/DownloadLogAdapter.java\nindex 8df3e39683..0fb6a7e7a9 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/DownloadLogAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/DownloadLogAdapter.java\n@@ -2,7 +2,6 @@\n \n import android.app.Activity;\n import android.text.format.DateUtils;\n-import android.text.format.Formatter;\n import android.util.Log;\n import android.view.View;\n import android.view.ViewGroup;\n@@ -10,18 +9,13 @@\n import android.widget.Toast;\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n-import de.danoeh.antennapod.core.service.download.DownloadRequestCreator;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n-import de.danoeh.antennapod.core.service.download.Downloader;\n+import de.danoeh.antennapod.adapter.actionbutton.DownloadActionButton;\n import de.danoeh.antennapod.core.storage.DBReader;\n import de.danoeh.antennapod.core.storage.DBTasks;\n-import de.danoeh.antennapod.core.storage.DBWriter;\n import de.danoeh.antennapod.core.util.DownloadErrorLabel;\n import de.danoeh.antennapod.model.download.DownloadError;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.model.feed.Feed;\n-import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n import de.danoeh.antennapod.ui.common.ThemeUtils;\n import de.danoeh.antennapod.view.viewholder.DownloadLogItemViewHolder;\n@@ -36,24 +30,18 @@ public class DownloadLogAdapter extends BaseAdapter {\n     private static final String TAG = \"DownloadLogAdapter\";\n \n     private final Activity context;\n-    private List<DownloadStatus> downloadLog = new ArrayList<>();\n-    private List<Downloader> runningDownloads = new ArrayList<>();\n+    private List<DownloadResult> downloadLog = new ArrayList<>();\n \n     public DownloadLogAdapter(Activity context) {\n         super();\n         this.context = context;\n     }\n \n-    public void setDownloadLog(List<DownloadStatus> downloadLog) {\n+    public void setDownloadLog(List<DownloadResult> downloadLog) {\n         this.downloadLog = downloadLog;\n         notifyDataSetChanged();\n     }\n \n-    public void setRunningDownloads(List<Downloader> runningDownloads) {\n-        this.runningDownloads = runningDownloads;\n-        notifyDataSetChanged();\n-    }\n-\n     @Override\n     public View getView(int position, View convertView, ViewGroup parent) {\n         DownloadLogItemViewHolder holder;\n@@ -63,17 +51,11 @@ public View getView(int position, View convertView, ViewGroup parent) {\n         } else {\n             holder = (DownloadLogItemViewHolder) convertView.getTag();\n         }\n-\n-        Object item = getItem(position);\n-        if (item instanceof DownloadStatus) {\n-            bind(holder, (DownloadStatus) item, position);\n-        } else if (item instanceof Downloader) {\n-            bind(holder, (Downloader) item, position);\n-        }\n+        bind(holder, getItem(position), position);\n         return holder.itemView;\n     }\n \n-    private void bind(DownloadLogItemViewHolder holder, DownloadStatus status, int position) {\n+    private void bind(DownloadLogItemViewHolder holder, DownloadResult status, int position) {\n         String statusText = \"\";\n         if (status.getFeedfileType() == Feed.FEEDFILETYPE_FEED) {\n             statusText += context.getString(R.string.download_type_feed);\n@@ -111,8 +93,7 @@ private void bind(DownloadLogItemViewHolder holder, DownloadStatus status, int p\n             holder.reason.setVisibility(View.VISIBLE);\n             holder.tapForDetails.setVisibility(View.VISIBLE);\n \n-            if (newerWasSuccessful(position - runningDownloads.size(),\n-                    status.getFeedfileType(), status.getFeedfileId())) {\n+            if (newerWasSuccessful(position, status.getFeedfileType(), status.getFeedfileId())) {\n                 holder.secondaryActionButton.setVisibility(View.INVISIBLE);\n                 holder.secondaryActionButton.setOnClickListener(null);\n                 holder.secondaryActionButton.setTag(null);\n@@ -138,8 +119,7 @@ private void bind(DownloadLogItemViewHolder holder, DownloadStatus status, int p\n                             Log.e(TAG, \"Could not find feed media for feed id: \" + status.getFeedfileId());\n                             return;\n                         }\n-                        DownloadServiceInterface.get()\n-                                .download(context, true, DownloadRequestCreator.create(media).build());\n+                        new DownloadActionButton(media.getItem()).onClick(context);\n                         ((MainActivity) context).showSnackbarAbovePlayer(\n                                 R.string.status_downloading_label, Toast.LENGTH_SHORT);\n                     });\n@@ -148,56 +128,9 @@ private void bind(DownloadLogItemViewHolder holder, DownloadStatus status, int p\n         }\n     }\n \n-    private void bind(DownloadLogItemViewHolder holder, Downloader downloader, int position) {\n-        DownloadRequest request = downloader.getDownloadRequest();\n-        holder.title.setText(request.getTitle());\n-        holder.secondaryActionIcon.setImageResource(R.drawable.ic_cancel);\n-        holder.secondaryActionButton.setContentDescription(context.getString(R.string.cancel_download_label));\n-        holder.secondaryActionButton.setVisibility(View.VISIBLE);\n-        holder.secondaryActionButton.setTag(downloader);\n-        holder.secondaryActionButton.setOnClickListener(v -> {\n-            DownloadServiceInterface.get().cancel(context, request.getSource());\n-            if (request.getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {\n-                FeedMedia media = DBReader.getFeedMedia(request.getFeedfileId());\n-                FeedItem feedItem = media.getItem();\n-                feedItem.disableAutoDownload();\n-                DBWriter.setFeedItem(feedItem);\n-            }\n-        });\n-        holder.reason.setVisibility(View.GONE);\n-        holder.tapForDetails.setVisibility(View.GONE);\n-        holder.icon.setTextColor(ThemeUtils.getColorFromAttr(context, R.attr.colorPrimary));\n-        holder.icon.setText(\"{fa-arrow-circle-down}\");\n-        holder.icon.setContentDescription(context.getString(R.string.status_downloading_label));\n-\n-        boolean percentageWasSet = false;\n-        String status = \"\";\n-        if (request.getFeedfileType() == Feed.FEEDFILETYPE_FEED) {\n-            status += context.getString(R.string.download_type_feed);\n-        } else if (request.getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {\n-            status += context.getString(R.string.download_type_media);\n-        }\n-        status += \" \u00b7 \";\n-        if (request.getSoFar() <= 0) {\n-            status += context.getString(R.string.download_pending);\n-        } else {\n-            status += Formatter.formatShortFileSize(context, request.getSoFar());\n-            if (request.getSize() != DownloadStatus.SIZE_UNKNOWN) {\n-                status += \" / \" + Formatter.formatShortFileSize(context, request.getSize());\n-                holder.secondaryActionProgress.setPercentage(\n-                        0.01f * Math.max(1, request.getProgressPercent()), request);\n-                percentageWasSet = true;\n-            }\n-        }\n-        if (!percentageWasSet) {\n-            holder.secondaryActionProgress.setPercentage(0, request);\n-        }\n-        holder.status.setText(status);\n-    }\n-\n     private boolean newerWasSuccessful(int downloadStatusIndex, int feedTypeId, long id) {\n         for (int i = 0; i < downloadStatusIndex; i++) {\n-            DownloadStatus status = downloadLog.get(i);\n+            DownloadResult status = downloadLog.get(i);\n             if (status.getFeedfileType() == feedTypeId && status.getFeedfileId() == id && status.isSuccessful()) {\n                 return true;\n             }\n@@ -207,15 +140,13 @@ private boolean newerWasSuccessful(int downloadStatusIndex, int feedTypeId, long\n \n     @Override\n     public int getCount() {\n-        return downloadLog.size() + runningDownloads.size();\n+        return downloadLog.size();\n     }\n \n     @Override\n-    public Object getItem(int position) {\n-        if (position < runningDownloads.size()) {\n-            return runningDownloads.get(position);\n-        } else if (position - runningDownloads.size() < downloadLog.size()) {\n-            return downloadLog.get(position - runningDownloads.size());\n+    public DownloadResult getItem(int position) {\n+        if (position < downloadLog.size()) {\n+            return downloadLog.get(position);\n         }\n         return null;\n     }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/DownloadActionButton.java b/app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/DownloadActionButton.java\nindex 3b54efc035..86a8047a95 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/DownloadActionButton.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/DownloadActionButton.java\n@@ -2,20 +2,17 @@\n \n import android.content.Context;\n import android.view.View;\n-import android.widget.Toast;\n \n import androidx.annotation.DrawableRes;\n import androidx.annotation.NonNull;\n import androidx.annotation.StringRes;\n \n+import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.core.service.download.DownloadRequestCreator;\n-import de.danoeh.antennapod.core.service.download.DownloadService;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n import de.danoeh.antennapod.core.preferences.UsageStatistics;\n-import de.danoeh.antennapod.core.storage.DBWriter;\n import de.danoeh.antennapod.core.util.NetworkUtils;\n \n public class DownloadActionButton extends ItemActionButton {\n@@ -50,19 +47,23 @@ public void onClick(Context context) {\n \n         UsageStatistics.logAction(UsageStatistics.ACTION_DOWNLOAD);\n \n-        if (NetworkUtils.isEpisodeDownloadAllowed() || MobileDownloadHelper.userAllowedMobileDownloads()) {\n-            DownloadServiceInterface.get()\n-                    .download(context, false, DownloadRequestCreator.create(item.getMedia()).build());\n-        } else if (MobileDownloadHelper.userChoseAddToQueue() && !item.isTagged(FeedItem.TAG_QUEUE)) {\n-            DBWriter.addQueueItem(context, item);\n-            Toast.makeText(context, R.string.added_to_queue_label, Toast.LENGTH_SHORT).show();\n+        if (NetworkUtils.isEpisodeDownloadAllowed()) {\n+            DownloadServiceInterface.get().downloadNow(context, item, false);\n         } else {\n-            MobileDownloadHelper.confirmMobileDownload(context, item);\n+            MaterialAlertDialogBuilder builder = new MaterialAlertDialogBuilder(context)\n+                    .setTitle(R.string.confirm_mobile_download_dialog_title)\n+                    .setMessage(R.string.confirm_mobile_download_dialog_message)\n+                    .setPositiveButton(R.string.confirm_mobile_download_dialog_download_later,\n+                            (d, w) -> DownloadServiceInterface.get().downloadNow(context, item, false))\n+                    .setNeutralButton(R.string.confirm_mobile_download_dialog_allow_this_time,\n+                            (d, w) -> DownloadServiceInterface.get().downloadNow(context, item, true))\n+                    .setNegativeButton(R.string.cancel_label, null);\n+            builder.show();\n         }\n     }\n \n     private boolean shouldNotDownload(@NonNull FeedMedia media) {\n-        boolean isDownloading = DownloadService.isDownloadingFile(media.getDownload_url());\n+        boolean isDownloading = DownloadServiceInterface.get().isDownloadingEpisode(media.getDownload_url());\n         return isDownloading || media.isDownloaded();\n     }\n }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/ItemActionButton.java b/app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/ItemActionButton.java\nindex e7a95c4047..613dd32f0a 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/ItemActionButton.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/ItemActionButton.java\n@@ -7,10 +7,10 @@\n import androidx.annotation.StringRes;\n import android.view.View;\n \n-import de.danoeh.antennapod.core.service.download.DownloadService;\n import de.danoeh.antennapod.core.util.PlaybackStatus;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n+import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n \n public abstract class ItemActionButton {\n@@ -39,7 +39,7 @@ public static ItemActionButton forItem(@NonNull FeedItem item) {\n             return new MarkAsPlayedActionButton(item);\n         }\n \n-        final boolean isDownloadingMedia = DownloadService.isDownloadingFile(media.getDownload_url());\n+        final boolean isDownloadingMedia = DownloadServiceInterface.get().isDownloadingEpisode(media.getDownload_url());\n         if (PlaybackStatus.isCurrentlyPlaying(media)) {\n             return new PauseActionButton(item);\n         } else if (item.getFeed().isLocalFeed()) {\ndiff --git a/app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/MobileDownloadHelper.java b/app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/MobileDownloadHelper.java\ndeleted file mode 100644\nindex 015f463181..0000000000\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/MobileDownloadHelper.java\n+++ /dev/null\n@@ -1,49 +0,0 @@\n-package de.danoeh.antennapod.adapter.actionbutton;\n-\n-import android.content.Context;\n-\n-import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n-import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.core.service.download.DownloadRequestCreator;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n-import de.danoeh.antennapod.model.feed.FeedItem;\n-import de.danoeh.antennapod.core.storage.DBReader;\n-import de.danoeh.antennapod.core.storage.DBWriter;\n-\n-class MobileDownloadHelper {\n-    private static long addToQueueTimestamp;\n-    private static long allowMobileDownloadTimestamp;\n-    private static final int TEN_MINUTES_IN_MILLIS = 10 * 60 * 1000;\n-\n-    static boolean userChoseAddToQueue() {\n-        return System.currentTimeMillis() - addToQueueTimestamp < TEN_MINUTES_IN_MILLIS;\n-    }\n-\n-    static boolean userAllowedMobileDownloads() {\n-        return System.currentTimeMillis() - allowMobileDownloadTimestamp < TEN_MINUTES_IN_MILLIS;\n-    }\n-\n-    static void confirmMobileDownload(final Context context, final FeedItem item) {\n-        MaterialAlertDialogBuilder builder = new MaterialAlertDialogBuilder(context)\n-                .setTitle(R.string.confirm_mobile_download_dialog_title)\n-                .setMessage(R.string.confirm_mobile_download_dialog_message)\n-                .setPositiveButton(context.getText(R.string.confirm_mobile_download_dialog_enable_temporarily),\n-                        (dialog, which) -> downloadFeedItems(context, item));\n-        if (!DBReader.getQueueIDList().contains(item.getId())) {\n-            builder.setMessage(R.string.confirm_mobile_download_dialog_message_not_in_queue)\n-                    .setNeutralButton(R.string.confirm_mobile_download_dialog_only_add_to_queue,\n-                            (dialog, which) -> addToQueue(context, item));\n-        }\n-        builder.show();\n-    }\n-\n-    private static void addToQueue(Context context, FeedItem item) {\n-        addToQueueTimestamp = System.currentTimeMillis();\n-        DBWriter.addQueueItem(context, item);\n-    }\n-\n-    private static void downloadFeedItems(Context context, FeedItem item) {\n-        allowMobileDownloadTimestamp = System.currentTimeMillis();\n-        DownloadServiceInterface.get().download(context, true, DownloadRequestCreator.create(item.getMedia()).build());\n-    }\n-}\n\\ No newline at end of file\ndiff --git a/app/src/main/java/de/danoeh/antennapod/dialog/DownloadLogDetailsDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/DownloadLogDetailsDialog.java\nindex 5e28639ddf..00936a38af 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/DownloadLogDetailsDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/DownloadLogDetailsDialog.java\n@@ -9,7 +9,7 @@\n import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.core.util.DownloadErrorLabel;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.core.storage.DBReader;\n import de.danoeh.antennapod.event.MessageEvent;\n import de.danoeh.antennapod.model.feed.Feed;\n@@ -18,7 +18,7 @@\n \n public class DownloadLogDetailsDialog extends MaterialAlertDialogBuilder {\n \n-    public DownloadLogDetailsDialog(@NonNull Context context, DownloadStatus status) {\n+    public DownloadLogDetailsDialog(@NonNull Context context, DownloadResult status) {\n         super(context);\n \n         String url = \"unknown\";\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java\nindex 7379753892..ba328adba7 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java\n@@ -20,12 +20,12 @@\n import de.danoeh.antennapod.activity.MainActivity;\n import de.danoeh.antennapod.adapter.EpisodeItemListAdapter;\n import de.danoeh.antennapod.adapter.actionbutton.DeleteActionButton;\n-import de.danoeh.antennapod.core.event.DownloadEvent;\n import de.danoeh.antennapod.core.event.DownloadLogEvent;\n import de.danoeh.antennapod.core.menuhandler.MenuItemUtils;\n import de.danoeh.antennapod.core.storage.DBReader;\n import de.danoeh.antennapod.core.util.FeedItemUtil;\n import de.danoeh.antennapod.core.util.download.FeedUpdateManager;\n+import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.event.FeedItemEvent;\n import de.danoeh.antennapod.event.PlayerStatusEvent;\n import de.danoeh.antennapod.event.UnreadItemsUpdateEvent;\n@@ -36,6 +36,7 @@\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedItemFilter;\n import de.danoeh.antennapod.model.feed.SortOrder;\n+import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n import de.danoeh.antennapod.view.EmptyViewHandler;\n import de.danoeh.antennapod.view.EpisodeItemListRecyclerView;\n@@ -50,9 +51,10 @@\n import org.greenrobot.eventbus.ThreadMode;\n \n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.Collections;\n+import java.util.HashSet;\n import java.util.List;\n+import java.util.Set;\n \n /**\n  * Displays all completed downloads and provides a button to delete them.\n@@ -63,7 +65,7 @@ public class CompletedDownloadsFragment extends Fragment\n     public static final String ARG_SHOW_LOGS = \"show_logs\";\n     private static final String KEY_UP_ARROW = \"up_arrow\";\n \n-    private long[] runningDownloads = new long[0];\n+    private Set<String> runningDownloads = new HashSet<>();\n     private List<FeedItem> items = new ArrayList<>();\n     private CompletedDownloadsListAdapter adapter;\n     private EpisodeItemListRecyclerView recyclerView;\n@@ -217,19 +219,22 @@ private void setSortOrder(SortOrder sortOrder) {\n     }\n \n     @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\n-    public void onEventMainThread(DownloadEvent event) {\n-        Log.d(TAG, \"onEventMainThread() called with: \" + \"event = [\" + event + \"]\");\n-        if (!Arrays.equals(event.update.mediaIds, runningDownloads)) {\n-            runningDownloads = event.update.mediaIds;\n+    public void onEventMainThread(EpisodeDownloadEvent event) {\n+        Set<String> newRunningDownloads = new HashSet<>();\n+        for (String url : event.getUrls()) {\n+            if (DownloadServiceInterface.get().isDownloadingEpisode(url)) {\n+                newRunningDownloads.add(url);\n+            }\n+        }\n+        if (!newRunningDownloads.equals(runningDownloads)) {\n+            runningDownloads = newRunningDownloads;\n             loadItems();\n             return; // Refreshed anyway\n         }\n-        if (event.update.mediaIds.length > 0) {\n-            for (long mediaId : event.update.mediaIds) {\n-                int pos = FeedItemUtil.indexOfItemWithMediaId(items, mediaId);\n-                if (pos >= 0) {\n-                    adapter.notifyItemChangedCompat(pos);\n-                }\n+        for (String downloadUrl : event.getUrls()) {\n+            int pos = FeedItemUtil.indexOfItemWithDownloadUrl(items, downloadUrl);\n+            if (pos >= 0) {\n+                adapter.notifyItemChangedCompat(pos);\n             }\n         }\n     }\n@@ -318,17 +323,17 @@ private void loadItems() {\n             List<FeedItem> downloadedItems = DBReader.getEpisodes(0, Integer.MAX_VALUE,\n                         new FeedItemFilter(FeedItemFilter.DOWNLOADED), sortOrder);\n \n-            List<Long> mediaIds = new ArrayList<>();\n+            List<String> mediaUrls = new ArrayList<>();\n             if (runningDownloads == null) {\n                 return downloadedItems;\n             }\n-            for (long id : runningDownloads) {\n-                if (FeedItemUtil.indexOfItemWithMediaId(downloadedItems, id) != -1) {\n+            for (String url : runningDownloads) {\n+                if (FeedItemUtil.indexOfItemWithDownloadUrl(downloadedItems, url) != -1) {\n                     continue; // Already in list\n                 }\n-                mediaIds.add(id);\n+                mediaUrls.add(url);\n             }\n-            List<FeedItem> currentDownloads = DBReader.getFeedItemsWithMedia(mediaIds.toArray(new Long[0]));\n+            List<FeedItem> currentDownloads = DBReader.getFeedItemsWithUrl(mediaUrls);\n             currentDownloads.addAll(downloadedItems);\n             return currentDownloads;\n         })\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java\nindex c27d8c058a..03913ff12e 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/DownloadLogFragment.java\n@@ -14,15 +14,12 @@\n import com.google.android.material.bottomsheet.BottomSheetDialogFragment;\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.adapter.DownloadLogAdapter;\n-import de.danoeh.antennapod.core.event.DownloadEvent;\n import de.danoeh.antennapod.core.event.DownloadLogEvent;\n-import de.danoeh.antennapod.core.event.DownloaderUpdate;\n-import de.danoeh.antennapod.core.service.download.Downloader;\n import de.danoeh.antennapod.core.storage.DBReader;\n import de.danoeh.antennapod.core.storage.DBWriter;\n import de.danoeh.antennapod.databinding.DownloadLogFragmentBinding;\n import de.danoeh.antennapod.dialog.DownloadLogDetailsDialog;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.view.EmptyViewHandler;\n import io.reactivex.Observable;\n import io.reactivex.android.schedulers.AndroidSchedulers;\n@@ -30,7 +27,6 @@\n import io.reactivex.schedulers.Schedulers;\n import org.greenrobot.eventbus.EventBus;\n import org.greenrobot.eventbus.Subscribe;\n-import org.greenrobot.eventbus.ThreadMode;\n \n import java.util.ArrayList;\n import java.util.List;\n@@ -42,8 +38,7 @@ public class DownloadLogFragment extends BottomSheetDialogFragment\n         implements AdapterView.OnItemClickListener, MaterialToolbar.OnMenuItemClickListener {\n     private static final String TAG = \"DownloadLogFragment\";\n \n-    private List<DownloadStatus> downloadLog = new ArrayList<>();\n-    private List<Downloader> runningDownloads = new ArrayList<>();\n+    private List<DownloadResult> downloadLog = new ArrayList<>();\n     private DownloadLogAdapter adapter;\n     private Disposable disposable;\n     private DownloadLogFragmentBinding viewBinding;\n@@ -93,8 +88,8 @@ public void onDestroyView() {\n     @Override\n     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n         Object item = adapter.getItem(position);\n-        if (item instanceof DownloadStatus) {\n-            new DownloadLogDetailsDialog(getContext(), (DownloadStatus) item).show();\n+        if (item instanceof DownloadResult) {\n+            new DownloadLogDetailsDialog(getContext(), (DownloadResult) item).show();\n         }\n     }\n \n@@ -119,14 +114,6 @@ public boolean onMenuItemClick(MenuItem item) {\n         return false;\n     }\n \n-    @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\n-    public void onEvent(DownloadEvent event) {\n-        Log.d(TAG, \"onEvent() called with: \" + \"event = [\" + event + \"]\");\n-        DownloaderUpdate update = event.update;\n-        runningDownloads = update.downloaders;\n-        adapter.setRunningDownloads(runningDownloads);\n-    }\n-\n     private void loadDownloadLog() {\n         if (disposable != null) {\n             disposable.dispose();\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/EpisodesListFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/EpisodesListFragment.java\nindex ef784e9ee2..00d671d36e 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/EpisodesListFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/EpisodesListFragment.java\n@@ -27,11 +27,10 @@\n import de.danoeh.antennapod.activity.MainActivity;\n import de.danoeh.antennapod.adapter.EpisodeItemListAdapter;\n import de.danoeh.antennapod.core.dialog.ConfirmationDialog;\n-import de.danoeh.antennapod.core.event.DownloadEvent;\n-import de.danoeh.antennapod.core.event.DownloaderUpdate;\n import de.danoeh.antennapod.core.menuhandler.MenuItemUtils;\n import de.danoeh.antennapod.core.util.FeedItemUtil;\n import de.danoeh.antennapod.core.util.download.FeedUpdateManager;\n+import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.event.FeedItemEvent;\n import de.danoeh.antennapod.event.FeedListUpdateEvent;\n import de.danoeh.antennapod.event.FeedUpdateRunningEvent;\n@@ -387,16 +386,11 @@ public void onKeyUp(KeyEvent event) {\n     }\n \n     @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\n-    public void onEventMainThread(DownloadEvent event) {\n-        Log.d(TAG, \"onEventMainThread() called with: \" + \"event = [\" + event + \"]\");\n-        DownloaderUpdate update = event.update;\n-        updateToolbar();\n-        if (update.mediaIds.length > 0) {\n-            for (long mediaId : update.mediaIds) {\n-                int pos = FeedItemUtil.indexOfItemWithMediaId(episodes, mediaId);\n-                if (pos >= 0) {\n-                    listAdapter.notifyItemChangedCompat(pos);\n-                }\n+    public void onEventMainThread(EpisodeDownloadEvent event) {\n+        for (String downloadUrl : event.getUrls()) {\n+            int pos = FeedItemUtil.indexOfItemWithDownloadUrl(episodes, downloadUrl);\n+            if (pos >= 0) {\n+                listAdapter.notifyItemChangedCompat(pos);\n             }\n         }\n     }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java\nindex 61883afe7e..f59d5dbd48 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java\n@@ -29,8 +29,6 @@\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n import de.danoeh.antennapod.adapter.EpisodeItemListAdapter;\n-import de.danoeh.antennapod.core.event.DownloadEvent;\n-import de.danoeh.antennapod.core.event.DownloaderUpdate;\n import de.danoeh.antennapod.core.feed.FeedEvent;\n import de.danoeh.antennapod.core.menuhandler.MenuItemUtils;\n import de.danoeh.antennapod.core.storage.DBReader;\n@@ -45,6 +43,7 @@\n import de.danoeh.antennapod.dialog.FeedItemFilterDialog;\n import de.danoeh.antennapod.dialog.RemoveFeedDialog;\n import de.danoeh.antennapod.dialog.RenameItemDialog;\n+import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.event.FavoritesEvent;\n import de.danoeh.antennapod.event.FeedItemEvent;\n import de.danoeh.antennapod.event.FeedListUpdateEvent;\n@@ -57,7 +56,7 @@\n import de.danoeh.antennapod.fragment.swipeactions.SwipeActions;\n import de.danoeh.antennapod.menuhandler.FeedItemMenuHandler;\n import de.danoeh.antennapod.menuhandler.FeedMenuHandler;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedItemFilter;\n@@ -330,16 +329,14 @@ public void onEventMainThread(FeedItemEvent event) {\n     }\n \n     @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\n-    public void onEventMainThread(DownloadEvent event) {\n-        Log.d(TAG, \"onEventMainThread() called with: \" + \"event = [\" + event + \"]\");\n-        DownloaderUpdate update = event.update;\n-        updateToolbar();\n-        if (update.mediaIds.length > 0 && feed != null) {\n-            for (long mediaId : update.mediaIds) {\n-                int pos = FeedItemUtil.indexOfItemWithMediaId(feed.getItems(), mediaId);\n-                if (pos >= 0) {\n-                    adapter.notifyItemChangedCompat(pos);\n-                }\n+    public void onEventMainThread(EpisodeDownloadEvent event) {\n+        if (feed == null) {\n+            return;\n+        }\n+        for (String downloadUrl : event.getUrls()) {\n+            int pos = FeedItemUtil.indexOfItemWithDownloadUrl(feed.getItems(), downloadUrl);\n+            if (pos >= 0) {\n+                adapter.notifyItemChangedCompat(pos);\n             }\n         }\n     }\n@@ -479,7 +476,7 @@ private void setupHeaderView() {\n     private void showErrorDetails() {\n         Maybe.fromCallable(\n                 () -> {\n-                    List<DownloadStatus> feedDownloadLog = DBReader.getFeedDownloadLog(feedID);\n+                    List<DownloadResult> feedDownloadLog = DBReader.getFeedDownloadLog(feedID);\n                     if (feedDownloadLog.size() == 0 || feedDownloadLog.get(0).isSuccessful()) {\n                         return null;\n                     }\n@@ -490,9 +487,7 @@ private void showErrorDetails() {\n                 .subscribe(\n                     downloadStatus -> new DownloadLogDetailsDialog(getContext(), downloadStatus).show(),\n                     error -> error.printStackTrace(),\n-                    () -> {\n-                        ((MainActivity) getActivity()).loadChildFragment(new DownloadLogFragment());\n-                    });\n+                    () -> new DownloadLogFragment().show(getChildFragmentManager(), null));\n     }\n \n     private void showFeedInfo() {\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java\nindex df48c9a988..94877811e7 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/ItemFragment.java\n@@ -37,10 +37,7 @@\n import de.danoeh.antennapod.adapter.actionbutton.PlayLocalActionButton;\n import de.danoeh.antennapod.adapter.actionbutton.StreamActionButton;\n import de.danoeh.antennapod.adapter.actionbutton.VisitWebsiteActionButton;\n-import de.danoeh.antennapod.core.event.DownloadEvent;\n-import de.danoeh.antennapod.core.event.DownloaderUpdate;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n-import de.danoeh.antennapod.core.service.download.DownloadService;\n+import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.core.util.PlaybackStatus;\n import de.danoeh.antennapod.event.FeedItemEvent;\n import de.danoeh.antennapod.event.PlayerStatusEvent;\n@@ -49,8 +46,8 @@\n import de.danoeh.antennapod.model.feed.FeedMedia;\n import de.danoeh.antennapod.core.feed.util.ImageResourceUtils;\n import de.danoeh.antennapod.core.preferences.UsageStatistics;\n+import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n-import de.danoeh.antennapod.core.service.download.Downloader;\n import de.danoeh.antennapod.core.storage.DBReader;\n import de.danoeh.antennapod.core.util.Converter;\n import de.danoeh.antennapod.core.util.DateFormatter;\n@@ -63,12 +60,10 @@\n import io.reactivex.android.schedulers.AndroidSchedulers;\n import io.reactivex.disposables.Disposable;\n import io.reactivex.schedulers.Schedulers;\n-import org.apache.commons.lang3.ArrayUtils;\n import org.greenrobot.eventbus.EventBus;\n import org.greenrobot.eventbus.Subscribe;\n import org.greenrobot.eventbus.ThreadMode;\n \n-import java.util.List;\n import java.util.Locale;\n import java.util.Objects;\n \n@@ -98,7 +93,6 @@ public static ItemFragment newInstance(long feeditem) {\n     private long itemId;\n     private FeedItem item;\n     private String webviewData;\n-    private List<Downloader> downloaderList;\n \n     private ViewGroup root;\n     private ShownotesWebView webvDescription;\n@@ -309,14 +303,13 @@ private void updateAppearance() {\n \n     private void updateButtons() {\n         progbarDownload.setVisibility(View.GONE);\n-        if (item.hasMedia() && downloaderList != null) {\n-            for (Downloader downloader : downloaderList) {\n-                DownloadRequest request = downloader.getDownloadRequest();\n-                if (request.getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA\n-                        && request.getFeedfileId() == item.getMedia().getId()) {\n-                    progbarDownload.setVisibility(View.VISIBLE);\n-                    progbarDownload.setPercentage(0.01f * Math.max(1, request.getProgressPercent()), request);\n-                }\n+        if (item.hasMedia()) {\n+            if (DownloadServiceInterface.get().isDownloadingEpisode(item.getMedia().getDownload_url())) {\n+                progbarDownload.setVisibility(View.VISIBLE);\n+                progbarDownload.setPercentage(0.01f * Math.max(1,\n+                        DownloadServiceInterface.get().getProgress(item.getMedia().getDownload_url())), item);\n+                progbarDownload.setIndeterminate(\n+                        DownloadServiceInterface.get().isEpisodeQueued(item.getMedia().getDownload_url()));\n             }\n         }\n \n@@ -341,7 +334,7 @@ private void updateButtons() {\n             } else {\n                 actionButton1 = new StreamActionButton(item);\n             }\n-            if (DownloadService.isDownloadingFile(media.getDownload_url())) {\n+            if (DownloadServiceInterface.get().isDownloadingEpisode(media.getDownload_url())) {\n                 actionButton2 = new CancelDownloadActionButton(item);\n             } else if (!media.isDownloaded()) {\n                 actionButton2 = new DownloadActionButton(item);\n@@ -386,18 +379,15 @@ public void onEventMainThread(FeedItemEvent event) {\n     }\n \n     @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\n-    public void onEventMainThread(DownloadEvent event) {\n-        Log.d(TAG, \"onEventMainThread() called with: \" + \"event = [\" + event + \"]\");\n-        DownloaderUpdate update = event.update;\n-        downloaderList = update.downloaders;\n+    public void onEventMainThread(EpisodeDownloadEvent event) {\n         if (item == null || item.getMedia() == null) {\n             return;\n         }\n-        long mediaId = item.getMedia().getId();\n-        if (ArrayUtils.contains(update.mediaIds, mediaId)) {\n-            if (itemsLoaded && getActivity() != null) {\n-                updateButtons();\n-            }\n+        if (!event.getUrls().contains(item.getMedia().getDownload_url())) {\n+            return;\n+        }\n+        if (itemsLoaded && getActivity() != null) {\n+            updateButtons();\n         }\n     }\n \ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java\nindex 6681df4c1f..a1aa7226d8 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/QueueFragment.java\n@@ -32,8 +32,6 @@\n import de.danoeh.antennapod.adapter.EpisodeItemListAdapter;\n import de.danoeh.antennapod.adapter.QueueRecyclerAdapter;\n import de.danoeh.antennapod.core.dialog.ConfirmationDialog;\n-import de.danoeh.antennapod.core.event.DownloadEvent;\n-import de.danoeh.antennapod.core.event.DownloaderUpdate;\n import de.danoeh.antennapod.core.feed.util.PlaybackSpeedUtils;\n import de.danoeh.antennapod.core.menuhandler.MenuItemUtils;\n import de.danoeh.antennapod.core.storage.DBReader;\n@@ -41,6 +39,7 @@\n import de.danoeh.antennapod.core.util.Converter;\n import de.danoeh.antennapod.core.util.FeedItemUtil;\n import de.danoeh.antennapod.core.util.download.FeedUpdateManager;\n+import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.event.FeedItemEvent;\n import de.danoeh.antennapod.event.FeedUpdateRunningEvent;\n import de.danoeh.antennapod.event.PlayerStatusEvent;\n@@ -186,16 +185,14 @@ public void onEventMainThread(FeedItemEvent event) {\n     }\n \n     @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\n-    public void onEventMainThread(DownloadEvent event) {\n-        Log.d(TAG, \"onEventMainThread() called with DownloadEvent\");\n-        DownloaderUpdate update = event.update;\n-        refreshToolbarState();\n-        if (recyclerAdapter != null && update.mediaIds.length > 0) {\n-            for (long mediaId : update.mediaIds) {\n-                int pos = FeedItemUtil.indexOfItemWithMediaId(queue, mediaId);\n-                if (pos >= 0) {\n-                    recyclerAdapter.notifyItemChangedCompat(pos);\n-                }\n+    public void onEventMainThread(EpisodeDownloadEvent event) {\n+        if (queue == null) {\n+            return;\n+        }\n+        for (String downloadUrl : event.getUrls()) {\n+            int pos = FeedItemUtil.indexOfItemWithDownloadUrl(queue, downloadUrl);\n+            if (pos >= 0) {\n+                recyclerAdapter.notifyItemChangedCompat(pos);\n             }\n         }\n     }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java\nindex d2aa35549f..b85e34e7dd 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/SearchFragment.java\n@@ -28,9 +28,8 @@\n import de.danoeh.antennapod.activity.MainActivity;\n import de.danoeh.antennapod.adapter.EpisodeItemListAdapter;\n import de.danoeh.antennapod.adapter.HorizontalFeedListAdapter;\n-import de.danoeh.antennapod.core.event.DownloadEvent;\n-import de.danoeh.antennapod.core.event.DownloaderUpdate;\n import de.danoeh.antennapod.core.menuhandler.MenuItemUtils;\n+import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.event.FeedItemEvent;\n import de.danoeh.antennapod.event.playback.PlaybackPositionEvent;\n import de.danoeh.antennapod.event.PlayerStatusEvent;\n@@ -295,15 +294,14 @@ public void onEventMainThread(FeedItemEvent event) {\n     }\n \n     @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\n-    public void onEventMainThread(DownloadEvent event) {\n-        Log.d(TAG, \"onEventMainThread() called with: \" + \"event = [\" + event + \"]\");\n-        DownloaderUpdate update = event.update;\n-        if (adapter != null && update.mediaIds.length > 0) {\n-            for (long mediaId : update.mediaIds) {\n-                int pos = FeedItemUtil.indexOfItemWithMediaId(results, mediaId);\n-                if (pos >= 0) {\n-                    adapter.notifyItemChangedCompat(pos);\n-                }\n+    public void onEventMainThread(EpisodeDownloadEvent event) {\n+        if (results == null) {\n+            return;\n+        }\n+        for (String downloadUrl : event.getUrls()) {\n+            int pos = FeedItemUtil.indexOfItemWithDownloadUrl(results, downloadUrl);\n+            if (pos >= 0) {\n+                adapter.notifyItemChangedCompat(pos);\n             }\n         }\n     }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\nindex 490c79d473..a6daec2e70 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n@@ -36,7 +36,6 @@\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n import de.danoeh.antennapod.adapter.SubscriptionsRecyclerAdapter;\n-import de.danoeh.antennapod.core.event.DownloadEvent;\n import de.danoeh.antennapod.core.menuhandler.MenuItemUtils;\n import de.danoeh.antennapod.core.storage.DBReader;\n import de.danoeh.antennapod.core.storage.NavDrawerData;\n@@ -362,12 +361,6 @@ public void onUnreadItemsChanged(UnreadItemsUpdateEvent event) {\n         loadSubscriptions();\n     }\n \n-    @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\n-    public void onEventMainThread(DownloadEvent event) {\n-        Log.d(TAG, \"onEventMainThread() called with: \" + \"event = [\" + event + \"]\");\n-        refreshToolbarState();\n-    }\n-\n     @Override\n     public void onEndSelectMode() {\n         speedDialView.close();\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/actions/EpisodeMultiSelectActionHandler.java b/app/src/main/java/de/danoeh/antennapod/fragment/actions/EpisodeMultiSelectActionHandler.java\nindex e076d35b63..a14bfcd162 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/actions/EpisodeMultiSelectActionHandler.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/actions/EpisodeMultiSelectActionHandler.java\n@@ -6,13 +6,10 @@\n \n import com.google.android.material.snackbar.Snackbar;\n \n-import java.util.ArrayList;\n import java.util.List;\n \n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n-import de.danoeh.antennapod.core.service.download.DownloadRequestCreator;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n import de.danoeh.antennapod.core.storage.DBWriter;\n import de.danoeh.antennapod.core.util.LongList;\n@@ -93,14 +90,12 @@ private void markedCheckedUnplayed(List<FeedItem> items) {\n \n     private void downloadChecked(List<FeedItem> items) {\n         // download the check episodes in the same order as they are currently displayed\n-        List<DownloadRequest> requests = new ArrayList<>();\n         for (FeedItem episode : items) {\n             if (episode.hasMedia() && !episode.getFeed().isLocalFeed()) {\n-                requests.add(DownloadRequestCreator.create(episode.getMedia()).build());\n+                DownloadServiceInterface.get().download(activity, episode);\n             }\n         }\n-        DownloadServiceInterface.get().download(activity, true, requests.toArray(new DownloadRequest[0]));\n-        showMessage(R.plurals.downloading_batch_label, requests.size());\n+        showMessage(R.plurals.downloading_batch_label, items.size());\n     }\n \n     private void deleteChecked(List<FeedItem> items) {\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/preferences/DownloadsPreferencesFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/preferences/DownloadsPreferencesFragment.java\nindex c486089fc4..7b0c3efdfe 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/preferences/DownloadsPreferencesFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/preferences/DownloadsPreferencesFragment.java\n@@ -1,7 +1,6 @@\n package de.danoeh.antennapod.fragment.preferences;\n \n import android.content.SharedPreferences;\n-import android.content.res.Resources;\n import android.os.Bundle;\n import androidx.preference.PreferenceFragmentCompat;\n import androidx.preference.PreferenceManager;\n@@ -43,7 +42,6 @@ public void onStop() {\n     @Override\n     public void onResume() {\n         super.onResume();\n-        setParallelDownloadsText(UserPreferences.getParallelDownloads());\n         setDataFolderText();\n     }\n \n@@ -52,12 +50,6 @@ private void setupNetworkScreen() {\n             ((PreferenceActivity) getActivity()).openScreen(R.xml.preferences_autodownload);\n             return true;\n         });\n-        findPreference(UserPreferences.PREF_PARALLEL_DOWNLOADS).setOnPreferenceChangeListener((preference, o) -> {\n-            if (o instanceof Integer) {\n-                setParallelDownloadsText((Integer) o);\n-            }\n-            return true;\n-        });\n         // validate and set correct value: number of downloads between 1 and 50 (inclusive)\n         findPreference(PREF_PROXY).setOnPreferenceClickListener(preference -> {\n             ProxyDialog dialog = new ProxyDialog(getActivity());\n@@ -73,12 +65,6 @@ private void setupNetworkScreen() {\n         });\n     }\n \n-    private void setParallelDownloadsText(int downloads) {\n-        final Resources res = getActivity().getResources();\n-        String s = res.getString(R.string.parallel_downloads, downloads);\n-        findPreference(UserPreferences.PREF_PARALLEL_DOWNLOADS).setSummary(s);\n-    }\n-\n     private void setDataFolderText() {\n         File f = UserPreferences.getDataFolder(null);\n         if (f != null) {\ndiff --git a/app/src/main/java/de/danoeh/antennapod/preferences/NumberPickerPreference.java b/app/src/main/java/de/danoeh/antennapod/preferences/NumberPickerPreference.java\ndeleted file mode 100644\nindex a15c6d6b2d..0000000000\n--- a/app/src/main/java/de/danoeh/antennapod/preferences/NumberPickerPreference.java\n+++ /dev/null\n@@ -1,108 +0,0 @@\n-package de.danoeh.antennapod.preferences;\n-\n-import android.content.Context;\n-import androidx.appcompat.app.AlertDialog;\n-import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n-import androidx.preference.Preference;\n-import android.text.InputFilter;\n-import android.util.AttributeSet;\n-import android.view.View;\n-import android.view.WindowManager;\n-import android.widget.EditText;\n-\n-import de.danoeh.antennapod.R;\n-\n-public class NumberPickerPreference extends Preference {\n-    private Context context;\n-    private int defaultValue = 0;\n-    private int minValue = 0;\n-    private int maxValue = Integer.MAX_VALUE;\n-\n-    public NumberPickerPreference(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {\n-        super(context, attrs, defStyleAttr, defStyleRes);\n-        init(context, attrs);\n-    }\n-\n-    public NumberPickerPreference(Context context, AttributeSet attrs, int defStyleAttr) {\n-        super(context, attrs, defStyleAttr);\n-        init(context, attrs);\n-    }\n-\n-    public NumberPickerPreference(Context context, AttributeSet attrs) {\n-        super(context, attrs);\n-        init(context, attrs);\n-    }\n-\n-    public NumberPickerPreference(Context context) {\n-        super(context);\n-        this.context = context;\n-    }\n-\n-    private void init(Context context, AttributeSet attrs) {\n-        this.context = context;\n-\n-        for (int i = 0; i < attrs.getAttributeCount(); i++) {\n-            String name = attrs.getAttributeName(i);\n-            String value = attrs.getAttributeValue(i);\n-            switch (name) {\n-                case \"defaultValue\":\n-                    defaultValue = Integer.parseInt(value);\n-                    break;\n-                case \"minValue\":\n-                    minValue = Integer.parseInt(value);\n-                    break;\n-                case \"maxValue\":\n-                    maxValue = Integer.parseInt(value);\n-                    break;\n-            }\n-        }\n-    }\n-\n-    @Override\n-    protected void onClick() {\n-        super.onClick();\n-\n-        View view = View.inflate(context, R.layout.numberpicker, null);\n-        EditText number = view.findViewById(R.id.number);\n-        number.setText(getSharedPreferences().getString(getKey(), \"\"+defaultValue));\n-        number.setFilters(new InputFilter[]{(source, start, end, dest, dstart, dend) -> {\n-            try {\n-                String newVal = dest.toString().substring(0, dstart) + dest.toString().substring(dend);\n-                newVal = newVal.substring(0, dstart) + source.toString() + newVal.substring(dstart);\n-                int input = Integer.parseInt(newVal);\n-                if (input >= minValue && input <= maxValue) {\n-                    return null;\n-                }\n-            } catch (NumberFormatException nfe) {\n-                nfe.printStackTrace();\n-            }\n-            return \"\";\n-        }});\n-\n-        AlertDialog dialog = new MaterialAlertDialogBuilder(context)\n-                .setTitle(getTitle())\n-                .setView(view)\n-                .setNegativeButton(android.R.string.cancel, null)\n-                .setPositiveButton(android.R.string.ok, (dialogInterface, i) -> {\n-                    try {\n-                        String numberString = number.getText().toString();\n-                        int value = Integer.parseInt(numberString);\n-\n-                        if (value < minValue || value > maxValue) {\n-                            return;\n-                        }\n-\n-                        getSharedPreferences().edit().putString(getKey(), \"\" + value).apply();\n-\n-                        if (getOnPreferenceChangeListener() != null) {\n-                            getOnPreferenceChangeListener().onPreferenceChange(this, value);\n-                        }\n-                    } catch (NumberFormatException e) {\n-                        // Do not set value\n-                    }\n-                })\n-                .create();\n-        dialog.show();\n-        dialog.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);\n-    }\n-}\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/home/sections/EpisodesSurpriseSection.java b/app/src/main/java/de/danoeh/antennapod/ui/home/sections/EpisodesSurpriseSection.java\nindex 7e2c855e94..298bd05c5c 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/home/sections/EpisodesSurpriseSection.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/home/sections/EpisodesSurpriseSection.java\n@@ -13,11 +13,10 @@\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n import de.danoeh.antennapod.adapter.HorizontalItemListAdapter;\n-import de.danoeh.antennapod.core.event.DownloadEvent;\n-import de.danoeh.antennapod.core.event.DownloaderUpdate;\n import de.danoeh.antennapod.core.menuhandler.MenuItemUtils;\n import de.danoeh.antennapod.core.storage.DBReader;\n import de.danoeh.antennapod.core.util.FeedItemUtil;\n+import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.event.FeedItemEvent;\n import de.danoeh.antennapod.event.PlayerStatusEvent;\n import de.danoeh.antennapod.event.playback.PlaybackPositionEvent;\n@@ -32,6 +31,7 @@\n import org.greenrobot.eventbus.Subscribe;\n import org.greenrobot.eventbus.ThreadMode;\n \n+import java.util.ArrayList;\n import java.util.List;\n import java.util.Random;\n \n@@ -41,7 +41,7 @@ public class EpisodesSurpriseSection extends HomeSection {\n     private static int seed = 0;\n     private HorizontalItemListAdapter listAdapter;\n     private Disposable disposable;\n-    private List<FeedItem> episodes;\n+    private List<FeedItem> episodes = new ArrayList<>();\n \n     @Nullable\n     @Override\n@@ -103,9 +103,6 @@ public void onPlayerStatusChanged(PlayerStatusEvent event) {\n     @Subscribe(threadMode = ThreadMode.MAIN)\n     public void onEventMainThread(FeedItemEvent event) {\n         Log.d(TAG, \"onEventMainThread() called with: \" + \"event = [\" + event + \"]\");\n-        if (episodes == null) {\n-            return;\n-        }\n         for (int i = 0, size = event.items.size(); i < size; i++) {\n             FeedItem item = event.items.get(i);\n             int pos = FeedItemUtil.indexOfItemWithId(episodes, item.getId());\n@@ -118,15 +115,11 @@ public void onEventMainThread(FeedItemEvent event) {\n     }\n \n     @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\n-    public void onEventMainThread(DownloadEvent event) {\n-        Log.d(TAG, \"onEventMainThread() called with DownloadEvent\");\n-        DownloaderUpdate update = event.update;\n-        if (listAdapter != null && update.mediaIds.length > 0) {\n-            for (long mediaId : update.mediaIds) {\n-                int pos = FeedItemUtil.indexOfItemWithMediaId(episodes, mediaId);\n-                if (pos >= 0) {\n-                    listAdapter.notifyItemChangedCompat(pos);\n-                }\n+    public void onEventMainThread(EpisodeDownloadEvent event) {\n+        for (String downloadUrl : event.getUrls()) {\n+            int pos = FeedItemUtil.indexOfItemWithDownloadUrl(episodes, downloadUrl);\n+            if (pos >= 0) {\n+                listAdapter.notifyItemChangedCompat(pos);\n             }\n         }\n     }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/home/sections/InboxSection.java b/app/src/main/java/de/danoeh/antennapod/ui/home/sections/InboxSection.java\nindex 8d343a16aa..fe9d15dc10 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/home/sections/InboxSection.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/home/sections/InboxSection.java\n@@ -14,11 +14,10 @@\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n import de.danoeh.antennapod.adapter.EpisodeItemListAdapter;\n-import de.danoeh.antennapod.core.event.DownloadEvent;\n-import de.danoeh.antennapod.core.event.DownloaderUpdate;\n import de.danoeh.antennapod.core.menuhandler.MenuItemUtils;\n import de.danoeh.antennapod.core.storage.DBReader;\n import de.danoeh.antennapod.core.util.FeedItemUtil;\n+import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.event.FeedItemEvent;\n import de.danoeh.antennapod.event.FeedListUpdateEvent;\n import de.danoeh.antennapod.event.UnreadItemsUpdateEvent;\n@@ -35,6 +34,7 @@\n import org.greenrobot.eventbus.Subscribe;\n import org.greenrobot.eventbus.ThreadMode;\n \n+import java.util.ArrayList;\n import java.util.List;\n import java.util.Locale;\n \n@@ -42,7 +42,7 @@ public class InboxSection extends HomeSection {\n     public static final String TAG = \"InboxSection\";\n     private static final int NUM_EPISODES = 2;\n     private EpisodeItemListAdapter adapter;\n-    private List<FeedItem> items;\n+    private List<FeedItem> items = new ArrayList<>();\n     private Disposable disposable;\n \n     @Nullable\n@@ -97,15 +97,11 @@ public void onFeedListChanged(FeedListUpdateEvent event) {\n     }\n \n     @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\n-    public void onEventMainThread(DownloadEvent event) {\n-        Log.d(TAG, \"onEventMainThread() called with DownloadEvent\");\n-        DownloaderUpdate update = event.update;\n-        if (adapter != null && update.mediaIds.length > 0) {\n-            for (long mediaId : update.mediaIds) {\n-                int pos = FeedItemUtil.indexOfItemWithMediaId(items, mediaId);\n-                if (pos >= 0) {\n-                    adapter.notifyItemChangedCompat(pos);\n-                }\n+    public void onEventMainThread(EpisodeDownloadEvent event) {\n+        for (String downloadUrl : event.getUrls()) {\n+            int pos = FeedItemUtil.indexOfItemWithDownloadUrl(items, downloadUrl);\n+            if (pos >= 0) {\n+                adapter.notifyItemChangedCompat(pos);\n             }\n         }\n     }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/home/sections/QueueSection.java b/app/src/main/java/de/danoeh/antennapod/ui/home/sections/QueueSection.java\nindex 070d56ed63..33335f2bb0 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/home/sections/QueueSection.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/home/sections/QueueSection.java\n@@ -13,11 +13,10 @@\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n import de.danoeh.antennapod.adapter.HorizontalItemListAdapter;\n-import de.danoeh.antennapod.core.event.DownloadEvent;\n-import de.danoeh.antennapod.core.event.DownloaderUpdate;\n import de.danoeh.antennapod.core.menuhandler.MenuItemUtils;\n import de.danoeh.antennapod.core.storage.DBReader;\n import de.danoeh.antennapod.core.util.FeedItemUtil;\n+import de.danoeh.antennapod.event.EpisodeDownloadEvent;\n import de.danoeh.antennapod.event.FeedItemEvent;\n import de.danoeh.antennapod.event.PlayerStatusEvent;\n import de.danoeh.antennapod.event.QueueEvent;\n@@ -33,6 +32,7 @@\n import org.greenrobot.eventbus.Subscribe;\n import org.greenrobot.eventbus.ThreadMode;\n \n+import java.util.ArrayList;\n import java.util.List;\n \n public class QueueSection extends HomeSection {\n@@ -40,7 +40,7 @@ public class QueueSection extends HomeSection {\n     private static final int NUM_EPISODES = 8;\n     private HorizontalItemListAdapter listAdapter;\n     private Disposable disposable;\n-    private List<FeedItem> queue;\n+    private List<FeedItem> queue = new ArrayList<>();\n \n     @Nullable\n     @Override\n@@ -102,15 +102,11 @@ public void onEventMainThread(FeedItemEvent event) {\n     }\n \n     @Subscribe(sticky = true, threadMode = ThreadMode.MAIN)\n-    public void onEventMainThread(DownloadEvent event) {\n-        Log.d(TAG, \"onEventMainThread() called with DownloadEvent\");\n-        DownloaderUpdate update = event.update;\n-        if (listAdapter != null && update.mediaIds.length > 0) {\n-            for (long mediaId : update.mediaIds) {\n-                int pos = FeedItemUtil.indexOfItemWithMediaId(queue, mediaId);\n-                if (pos >= 0) {\n-                    listAdapter.notifyItemChangedCompat(pos);\n-                }\n+    public void onEventMainThread(EpisodeDownloadEvent event) {\n+        for (String downloadUrl : event.getUrls()) {\n+            int pos = FeedItemUtil.indexOfItemWithDownloadUrl(queue, downloadUrl);\n+            if (pos >= 0) {\n+                listAdapter.notifyItemChangedCompat(pos);\n             }\n         }\n     }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/view/viewholder/EpisodeItemViewHolder.java b/app/src/main/java/de/danoeh/antennapod/view/viewholder/EpisodeItemViewHolder.java\nindex fd3ec92991..03df844b16 100644\n--- a/app/src/main/java/de/danoeh/antennapod/view/viewholder/EpisodeItemViewHolder.java\n+++ b/app/src/main/java/de/danoeh/antennapod/view/viewholder/EpisodeItemViewHolder.java\n@@ -21,8 +21,6 @@\n import de.danoeh.antennapod.activity.MainActivity;\n import de.danoeh.antennapod.adapter.CoverLoader;\n import de.danoeh.antennapod.adapter.actionbutton.ItemActionButton;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n-import de.danoeh.antennapod.core.service.download.DownloadService;\n import de.danoeh.antennapod.core.util.PlaybackStatus;\n import de.danoeh.antennapod.core.util.download.MediaSizeLoader;\n import de.danoeh.antennapod.event.playback.PlaybackPositionEvent;\n@@ -31,6 +29,7 @@\n import de.danoeh.antennapod.model.feed.FeedMedia;\n import de.danoeh.antennapod.model.playback.MediaType;\n import de.danoeh.antennapod.core.feed.util.ImageResourceUtils;\n+import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n import de.danoeh.antennapod.core.util.Converter;\n import de.danoeh.antennapod.core.util.NetworkUtils;\n@@ -117,6 +116,7 @@ public void bind(FeedItem item) {\n             bind(item.getMedia());\n         } else {\n             secondaryActionProgress.setPercentage(0, item);\n+            secondaryActionProgress.setIndeterminate(false);\n             isVideo.setVisibility(View.GONE);\n             progressBar.setVisibility(View.GONE);\n             duration.setVisibility(View.GONE);\n@@ -145,14 +145,17 @@ private void bind(FeedMedia media) {\n             itemView.setBackgroundResource(ThemeUtils.getDrawableFromAttr(activity, R.attr.selectableItemBackground));\n         }\n \n-        if (DownloadService.isDownloadingFile(media.getDownload_url())) {\n-            final DownloadRequest downloadRequest = DownloadService.findRequest(media.getDownload_url());\n-            float percent = 0.01f * downloadRequest.getProgressPercent();\n+        if (DownloadServiceInterface.get().isDownloadingEpisode(media.getDownload_url())) {\n+            float percent = 0.01f * DownloadServiceInterface.get().getProgress(media.getDownload_url());\n             secondaryActionProgress.setPercentage(Math.max(percent, 0.01f), item);\n+            secondaryActionProgress.setIndeterminate(\n+                    DownloadServiceInterface.get().isEpisodeQueued(media.getDownload_url()));\n         } else if (media.isDownloaded()) {\n             secondaryActionProgress.setPercentage(1, item); // Do not animate 100% -> 0%\n+            secondaryActionProgress.setIndeterminate(false);\n         } else {\n             secondaryActionProgress.setPercentage(0, item); // Animate X% -> 0%\n+            secondaryActionProgress.setIndeterminate(false);\n         }\n \n         duration.setText(Converter.getDurationStringLong(media.getDuration()));\n@@ -210,6 +213,7 @@ public void bindDummy() {\n         pubDate.setText(\"\u2588\u2588\u2588\u2588\");\n         duration.setText(\"\u2588\u2588\u2588\u2588\");\n         secondaryActionProgress.setPercentage(0, null);\n+        secondaryActionProgress.setIndeterminate(false);\n         progressBar.setVisibility(View.GONE);\n         position.setVisibility(View.GONE);\n         dragHandle.setVisibility(View.GONE);\ndiff --git a/app/src/main/java/de/danoeh/antennapod/view/viewholder/HorizontalItemViewHolder.java b/app/src/main/java/de/danoeh/antennapod/view/viewholder/HorizontalItemViewHolder.java\nindex 05240b371d..f809de175f 100644\n--- a/app/src/main/java/de/danoeh/antennapod/view/viewholder/HorizontalItemViewHolder.java\n+++ b/app/src/main/java/de/danoeh/antennapod/view/viewholder/HorizontalItemViewHolder.java\n@@ -14,13 +14,12 @@\n import de.danoeh.antennapod.adapter.CoverLoader;\n import de.danoeh.antennapod.adapter.actionbutton.ItemActionButton;\n import de.danoeh.antennapod.core.feed.util.ImageResourceUtils;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n-import de.danoeh.antennapod.core.service.download.DownloadService;\n import de.danoeh.antennapod.core.util.DateFormatter;\n import de.danoeh.antennapod.core.util.PlaybackStatus;\n import de.danoeh.antennapod.event.playback.PlaybackPositionEvent;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n+import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n import de.danoeh.antennapod.ui.common.CircularProgressBar;\n import de.danoeh.antennapod.ui.common.SquareImageView;\n import de.danoeh.antennapod.ui.common.ThemeUtils;\n@@ -85,14 +84,17 @@ public void bind(FeedItem item) {\n                 setProgressBar(false, 0);\n             }\n \n-            if (DownloadService.isDownloadingFile(media.getDownload_url())) {\n-                final DownloadRequest downloadRequest = DownloadService.findRequest(media.getDownload_url());\n-                float percent = 0.01f * downloadRequest.getProgressPercent();\n+            if (DownloadServiceInterface.get().isDownloadingEpisode(media.getDownload_url())) {\n+                float percent = 0.01f * DownloadServiceInterface.get().getProgress(media.getDownload_url());\n                 circularProgressBar.setPercentage(Math.max(percent, 0.01f), item);\n+                circularProgressBar.setIndeterminate(\n+                        DownloadServiceInterface.get().isEpisodeQueued(media.getDownload_url()));\n             } else if (media.isDownloaded()) {\n                 circularProgressBar.setPercentage(1, item); // Do not animate 100% -> 0%\n+                circularProgressBar.setIndeterminate(false);\n             } else {\n                 circularProgressBar.setPercentage(0, item); // Animate X% -> 0%\n+                circularProgressBar.setIndeterminate(false);\n             }\n         }\n     }\n@@ -107,6 +109,7 @@ public void bindDummy() {\n         date.setText(\"\u2588\u2588\u2588\");\n         secondaryActionIcon.setImageDrawable(null);\n         circularProgressBar.setPercentage(0, null);\n+        circularProgressBar.setIndeterminate(false);\n         setProgressBar(true, 50);\n     }\n \ndiff --git a/app/src/main/res/layout/numberpicker.xml b/app/src/main/res/layout/numberpicker.xml\ndeleted file mode 100644\nindex d493f2e6cf..0000000000\n--- a/app/src/main/res/layout/numberpicker.xml\n+++ /dev/null\n@@ -1,16 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>\n-<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-              android:layout_width=\"match_parent\"\n-              android:layout_height=\"match_parent\"\n-              android:orientation=\"vertical\"\n-              android:padding=\"16dp\">\n-\n-    <EditText\n-            android:layout_width=\"match_parent\"\n-            android:layout_height=\"wrap_content\"\n-            android:inputType=\"numberDecimal\"\n-            android:ems=\"10\"\n-            android:selectAllOnFocus=\"true\"\n-            android:id=\"@+id/number\" />\n-\n-</LinearLayout>\ndiff --git a/app/src/main/res/xml/preferences_downloads.xml b/app/src/main/res/xml/preferences_downloads.xml\nindex 865748d200..18fc7df111 100644\n--- a/app/src/main/res/xml/preferences_downloads.xml\n+++ b/app/src/main/res/xml/preferences_downloads.xml\n@@ -1,7 +1,6 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <PreferenceScreen\n         xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-        xmlns:numberpicker=\"http://schemas.android.com/apk/de.danoeh.antennapod\"\n         xmlns:search=\"http://schemas.android.com/apk/com.bytehamster.lib.preferencesearch\">\n \n     <Preference\n@@ -56,12 +55,6 @@\n                 android:key=\"prefMobileUpdateTypes\"\n                 android:summary=\"@string/pref_mobileUpdate_sum\"\n                 android:title=\"@string/pref_mobileUpdate_title\"/>\n-        <de.danoeh.antennapod.preferences.NumberPickerPreference\n-                android:defaultValue=\"4\"\n-                numberpicker:minValue=\"1\"\n-                numberpicker:maxValue=\"50\"\n-                android:key=\"prefParallelDownloads\"\n-                android:title=\"@string/pref_parallel_downloads_title\"/>\n         <Preference\n                 android:key=\"prefProxy\"\n                 android:summary=\"@string/pref_proxy_sum\"\ndiff --git a/core/src/main/AndroidManifest.xml b/core/src/main/AndroidManifest.xml\nindex 6f5508f273..e186a856fb 100644\n--- a/core/src/main/AndroidManifest.xml\n+++ b/core/src/main/AndroidManifest.xml\n@@ -16,10 +16,6 @@\n         android:icon=\"@mipmap/ic_launcher\"\n         android:supportsRtl=\"true\">\n \n-        <service\n-            android:name=\".service.download.DownloadService\"\n-            android:enabled=\"true\" />\n-\n         <service android:name=\".service.playback.PlaybackService\"\n             android:label=\"@string/app_name\"\n             android:enabled=\"true\"\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/event/DownloadEvent.java b/core/src/main/java/de/danoeh/antennapod/core/event/DownloadEvent.java\ndeleted file mode 100644\nindex efd53ab9d4..0000000000\n--- a/core/src/main/java/de/danoeh/antennapod/core/event/DownloadEvent.java\n+++ /dev/null\n@@ -1,35 +0,0 @@\n-package de.danoeh.antennapod.core.event;\n-\n-import androidx.annotation.NonNull;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-import de.danoeh.antennapod.core.service.download.Downloader;\n-\n-public class DownloadEvent {\n-\n-    public final DownloaderUpdate update;\n-\n-    private DownloadEvent(DownloaderUpdate downloader) {\n-        this.update = downloader;\n-    }\n-\n-    public static DownloadEvent refresh(List<Downloader> list) {\n-        list = new ArrayList<>(list);\n-        DownloaderUpdate update = new DownloaderUpdate(list);\n-        return new DownloadEvent(update);\n-    }\n-\n-    @NonNull\n-    @Override\n-    public String toString() {\n-        return \"DownloadEvent{\" +\n-                \"update=\" + update +\n-                '}';\n-    }\n-\n-    public boolean hasChangedFeedUpdateStatus(boolean oldStatus) {\n-        return oldStatus != update.feedIds.length > 0;\n-    }\n-}\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/event/DownloaderUpdate.java b/core/src/main/java/de/danoeh/antennapod/core/event/DownloaderUpdate.java\ndeleted file mode 100644\nindex 1cab7e0f05..0000000000\n--- a/core/src/main/java/de/danoeh/antennapod/core/event/DownloaderUpdate.java\n+++ /dev/null\n@@ -1,58 +0,0 @@\n-package de.danoeh.antennapod.core.event;\n-\n-import androidx.annotation.NonNull;\n-\n-import java.util.Arrays;\n-import java.util.List;\n-\n-import de.danoeh.antennapod.model.feed.Feed;\n-import de.danoeh.antennapod.model.feed.FeedMedia;\n-import de.danoeh.antennapod.core.service.download.Downloader;\n-import de.danoeh.antennapod.core.util.LongList;\n-\n-public class DownloaderUpdate {\n-\n-    /* Downloaders that are currently running */\n-    @NonNull\n-    public final List<Downloader> downloaders;\n-\n-    /**\n-     * IDs of feeds that are currently being downloaded\n-     * Often used to show some progress wheel in the action bar\n-     */\n-    public final long[] feedIds;\n-\n-    /**\n-     * IDs of feed media that are currently being downloaded\n-     * Can be used to show and update download progress bars\n-     */\n-    public final long[] mediaIds;\n-\n-    DownloaderUpdate(@NonNull List<Downloader> downloaders) {\n-        this.downloaders = downloaders;\n-        LongList feedIds1 = new LongList();\n-        LongList mediaIds1 = new LongList();\n-        for(Downloader d1 : downloaders) {\n-            int type = d1.getDownloadRequest().getFeedfileType();\n-            long id = d1.getDownloadRequest().getFeedfileId();\n-            if(type == Feed.FEEDFILETYPE_FEED) {\n-                feedIds1.add(id);\n-            } else if(type == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {\n-                mediaIds1.add(id);\n-            }\n-        }\n-\n-        this.feedIds = feedIds1.toArray();\n-        this.mediaIds = mediaIds1.toArray();\n-    }\n-\n-    @NonNull\n-    @Override\n-    public String toString() {\n-        return \"DownloaderUpdate{\" +\n-                \"downloaders=\" + downloaders +\n-                \", feedIds=\" + Arrays.toString(feedIds) +\n-                \", mediaIds=\" + Arrays.toString(mediaIds) +\n-                '}';\n-    }\n-}\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/LocalFeedUpdater.java b/core/src/main/java/de/danoeh/antennapod/core/feed/LocalFeedUpdater.java\nindex d4d948b2a4..03881ee4f7 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/LocalFeedUpdater.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/LocalFeedUpdater.java\n@@ -28,7 +28,7 @@\n import androidx.documentfile.provider.DocumentFile;\n import de.danoeh.antennapod.core.R;\n import de.danoeh.antennapod.core.util.FastDocumentFile;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.core.storage.DBReader;\n import de.danoeh.antennapod.core.storage.DBTasks;\n import de.danoeh.antennapod.core.storage.DBWriter;\n@@ -246,8 +246,8 @@ private static void loadMetadata(FeedItem item, FastDocumentFile file, Context c\n     }\n \n     private static void reportError(Feed feed, String reasonDetailed) {\n-        DownloadStatus status = new DownloadStatus(feed, feed.getTitle(),\n-                DownloadError.ERROR_IO_ERROR, false, reasonDetailed, true);\n+        DownloadResult status = new DownloadResult(feed, feed.getTitle(),\n+                DownloadError.ERROR_IO_ERROR, false, reasonDetailed);\n         DBWriter.addDownloadStatus(status);\n         DBWriter.setFeedLastUpdateFailed(feed.getId(), true);\n     }\n@@ -256,8 +256,7 @@ private static void reportError(Feed feed, String reasonDetailed) {\n      * Reports a successful download status.\n      */\n     private static void reportSuccess(Feed feed) {\n-        DownloadStatus status = new DownloadStatus(feed, feed.getTitle(),\n-                DownloadError.SUCCESS, true, null, true);\n+        DownloadResult status = new DownloadResult(feed, feed.getTitle(), DownloadError.SUCCESS, true, null);\n         DBWriter.addDownloadStatus(status);\n         DBWriter.setFeedLastUpdateFailed(feed.getId(), false);\n     }\n@@ -266,21 +265,21 @@ private static void reportSuccess(Feed feed) {\n      * Answers if reporting success is needed for the given feed.\n      */\n     private static boolean mustReportDownloadSuccessful(Feed feed) {\n-        List<DownloadStatus> downloadStatuses = DBReader.getFeedDownloadLog(feed.getId());\n+        List<DownloadResult> downloadResults = DBReader.getFeedDownloadLog(feed.getId());\n \n-        if (downloadStatuses.isEmpty()) {\n+        if (downloadResults.isEmpty()) {\n             // report success if never reported before\n             return true;\n         }\n \n-        Collections.sort(downloadStatuses, (downloadStatus1, downloadStatus2) ->\n+        Collections.sort(downloadResults, (downloadStatus1, downloadStatus2) ->\n                 downloadStatus1.getCompletionDate().compareTo(downloadStatus2.getCompletionDate()));\n \n-        DownloadStatus lastDownloadStatus = downloadStatuses.get(downloadStatuses.size() - 1);\n+        DownloadResult lastDownloadResult = downloadResults.get(downloadResults.size() - 1);\n \n         // report success if the last update was not successful\n         // (avoid logging success again if the last update was ok)\n-        return !lastDownloadStatus.isSuccessful();\n+        return !lastDownloadResult.isSuccessful();\n     }\n \n     @FunctionalInterface\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/FeedUpdateWorker.java b/core/src/main/java/de/danoeh/antennapod/core/service/FeedUpdateWorker.java\nindex 8d9f046e29..5f59f0c41e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/FeedUpdateWorker.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/FeedUpdateWorker.java\n@@ -20,12 +20,13 @@\n import de.danoeh.antennapod.core.service.download.NewEpisodesNotification;\n import de.danoeh.antennapod.core.service.download.handler.FeedSyncTask;\n import de.danoeh.antennapod.core.storage.DBReader;\n+import de.danoeh.antennapod.core.storage.DBTasks;\n import de.danoeh.antennapod.core.storage.DBWriter;\n import de.danoeh.antennapod.core.util.NetworkUtils;\n import de.danoeh.antennapod.core.util.download.FeedUpdateManager;\n import de.danoeh.antennapod.core.util.gui.NotificationUtils;\n import de.danoeh.antennapod.model.download.DownloadError;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n \n@@ -80,6 +81,7 @@ public Result doWork() {\n             refreshFeeds(toUpdate, true);\n         }\n         notificationManager.cancel(R.id.notification_updating_feeds);\n+        DBTasks.autodownloadUndownloadedItems(getApplicationContext());\n         return Result.success();\n     }\n \n@@ -115,8 +117,8 @@ private void refreshFeeds(List<Feed> toUpdate, boolean force) {\n                 }\n             } catch (Exception e) {\n                 DBWriter.setFeedLastUpdateFailed(feed.getId(), true);\n-                DownloadStatus status = new DownloadStatus(feed, feed.getTitle(),\n-                        DownloadError.ERROR_IO_ERROR, false, e.getMessage(), true);\n+                DownloadResult status = new DownloadResult(feed, feed.getTitle(),\n+                        DownloadError.ERROR_IO_ERROR, false, e.getMessage());\n                 DBWriter.addDownloadStatus(status);\n             }\n             toUpdate.remove(0);\n@@ -144,7 +146,7 @@ void refreshFeed(Feed feed, boolean force) throws Exception {\n         downloader.call();\n \n         if (!downloader.getResult().isSuccessful()) {\n-            if (downloader.getResult().isCancelled()) {\n+            if (downloader.cancelled) {\n                 return;\n             }\n             DBWriter.setFeedLastUpdateFailed(request.getFeedfileId(), true);\n@@ -165,7 +167,7 @@ void refreshFeed(Feed feed, boolean force) throws Exception {\n             return; // No download logs for new subscriptions\n         }\n         // we create a 'successful' download log if the feed's last refresh failed\n-        List<DownloadStatus> log = DBReader.getFeedDownloadLog(request.getFeedfileId());\n+        List<DownloadResult> log = DBReader.getFeedDownloadLog(request.getFeedfileId());\n         if (log.size() > 0 && !log.get(0).isSuccessful()) {\n             DBWriter.addDownloadStatus(feedSyncTask.getDownloadStatus());\n         }\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadRequestCreator.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadRequestCreator.java\nindex d6a4b83781..5ca904ff66 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadRequestCreator.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadRequestCreator.java\n@@ -21,9 +21,6 @@ public class DownloadRequestCreator {\n \n     public static DownloadRequest.Builder create(Feed feed) {\n         File dest = new File(getFeedfilePath(), getFeedfileName(feed));\n-        if (!isFilenameAvailable(dest.toString()) && !feed.isLocalFeed()) {\n-            dest = findUnusedFile(dest);\n-        }\n         Log.d(TAG, \"Requesting download of url \" + feed.getDownload_url());\n \n         String username = (feed.getPreferences() != null) ? feed.getPreferences().getUsername() : null;\n@@ -45,7 +42,7 @@ public static DownloadRequest.Builder create(FeedMedia media) {\n             dest = new File(getMediafilePath(media), getMediafilename(media));\n         }\n \n-        if (!isFilenameAvailable(dest.toString()) || (!partiallyDownloadedFileExists && dest.exists())) {\n+        if (dest.exists() && !partiallyDownloadedFileExists) {\n             dest = findUnusedFile(dest);\n         }\n         Log.d(TAG, \"Requesting download of url \" + media.getDownload_url());\n@@ -72,7 +69,7 @@ private static File findUnusedFile(File dest) {\n                     + FilenameUtils.getExtension(dest.getName());\n             Log.d(TAG, \"Testing filename \" + newName);\n             newDest = new File(dest.getParent(), newName);\n-            if (!newDest.exists() && isFilenameAvailable(newDest.toString())) {\n+            if (!newDest.exists()) {\n                 Log.d(TAG, \"File doesn't exist yet. Using \" + newName);\n                 break;\n             }\n@@ -80,19 +77,6 @@ private static File findUnusedFile(File dest) {\n         return newDest;\n     }\n \n-    /**\n-     * Returns true if a filename is available and false if it has already been\n-     * taken by another requested download.\n-     */\n-    private static boolean isFilenameAvailable(String path) {\n-        for (Downloader downloader : DownloadService.downloads) {\n-            if (downloader.request.getDestination().equals(path)) {\n-                return false;\n-            }\n-        }\n-        return true;\n-    }\n-\n     private static String getFeedfilePath() {\n         return UserPreferences.getDataFolder(FEED_DOWNLOADPATH).toString() + \"/\";\n     }\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java\ndeleted file mode 100644\nindex 9c238137e8..0000000000\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java\n+++ /dev/null\n@@ -1,536 +0,0 @@\n-package de.danoeh.antennapod.core.service.download;\n-\n-import android.app.Notification;\n-import android.app.NotificationManager;\n-import android.app.Service;\n-import android.content.BroadcastReceiver;\n-import android.content.Context;\n-import android.content.Intent;\n-import android.content.IntentFilter;\n-import android.os.IBinder;\n-import android.text.TextUtils;\n-import android.util.Log;\n-import androidx.annotation.NonNull;\n-import androidx.annotation.Nullable;\n-import androidx.annotation.VisibleForTesting;\n-import androidx.core.app.NotificationManagerCompat;\n-import androidx.core.app.ServiceCompat;\n-import de.danoeh.antennapod.core.R;\n-import de.danoeh.antennapod.core.event.DownloadEvent;\n-import de.danoeh.antennapod.core.service.download.handler.FailedDownloadHandler;\n-import de.danoeh.antennapod.core.service.download.handler.MediaDownloadedHandler;\n-import de.danoeh.antennapod.core.service.download.handler.PostDownloaderTask;\n-import de.danoeh.antennapod.core.storage.DBReader;\n-import de.danoeh.antennapod.core.storage.DBTasks;\n-import de.danoeh.antennapod.core.storage.DBWriter;\n-import de.danoeh.antennapod.core.storage.EpisodeCleanupAlgorithmFactory;\n-import de.danoeh.antennapod.core.util.download.ConnectionStateMonitor;\n-import de.danoeh.antennapod.event.FeedItemEvent;\n-import de.danoeh.antennapod.model.download.DownloadError;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n-import de.danoeh.antennapod.model.feed.FeedItem;\n-import de.danoeh.antennapod.model.feed.FeedMedia;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n-import de.danoeh.antennapod.storage.preferences.UserPreferences;\n-import org.apache.commons.io.FileUtils;\n-import org.greenrobot.eventbus.EventBus;\n-\n-import java.io.File;\n-import java.io.IOException;\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.concurrent.CopyOnWriteArrayList;\n-import java.util.concurrent.ExecutionException;\n-import java.util.concurrent.ExecutorService;\n-import java.util.concurrent.Executors;\n-import java.util.concurrent.ScheduledFuture;\n-import java.util.concurrent.ScheduledThreadPoolExecutor;\n-import java.util.concurrent.TimeUnit;\n-\n-/**\n- * Manages the download of feedfiles in the app. Downloads can be enqueued via the startService intent.\n- * The argument of the intent is an instance of DownloadRequest in the EXTRA_REQUESTS field of\n- * the intent.\n- * After the downloads have finished, the downloaded object will be passed on to a specific handler, depending on the\n- * type of the feedfile.\n- */\n-public class DownloadService extends Service {\n-    private static final String TAG = \"DownloadService\";\n-    private static final int SCHED_EX_POOL_SIZE = 1;\n-    public static final String ACTION_CANCEL_DOWNLOAD = \"action.de.danoeh.antennapod.core.service.cancelDownload\";\n-    public static final String ACTION_CANCEL_ALL_DOWNLOADS = \"action.de.danoeh.antennapod.core.service.cancelAll\";\n-    public static final String EXTRA_DOWNLOAD_URL = \"downloadUrl\";\n-    public static final String EXTRA_REQUESTS = \"downloadRequests\";\n-    public static final String EXTRA_INITIATED_BY_USER = \"initiatedByUser\";\n-    public static final String EXTRA_CLEANUP_MEDIA = \"cleanupMedia\";\n-\n-    public static boolean isRunning = false;\n-\n-    // Can be modified from another thread while iterating. Both possible race conditions are not critical:\n-    // Remove while iterating: We think it is still downloading and don't start a new download with the same file.\n-    // Add while iterating: We think it is not downloading and might start a second download with the same file.\n-    static final List<Downloader> downloads = Collections.synchronizedList(new CopyOnWriteArrayList<>());\n-    private final ExecutorService downloadHandleExecutor;\n-    private final ExecutorService downloadEnqueueExecutor;\n-\n-    private final List<DownloadStatus> reportQueue = new ArrayList<>();\n-    private final List<DownloadRequest> failedRequestsForReport = new ArrayList<>();\n-    private DownloadServiceNotification notificationManager;\n-    private NotificationUpdater notificationUpdater;\n-    private ScheduledFuture<?> notificationUpdaterFuture;\n-    private ScheduledFuture<?> downloadPostFuture;\n-    private final ScheduledThreadPoolExecutor notificationUpdateExecutor;\n-    private static DownloaderFactory downloaderFactory = new DefaultDownloaderFactory();\n-    private ConnectionStateMonitor connectionMonitor;\n-\n-    @Override\n-    public IBinder onBind(Intent intent) {\n-        return null;\n-    }\n-\n-    public DownloadService() {\n-\n-        downloadEnqueueExecutor = Executors.newSingleThreadExecutor(r -> {\n-            Thread t = new Thread(r, \"EnqueueThread\");\n-            t.setPriority(Thread.MIN_PRIORITY);\n-            return t;\n-        });\n-        Log.d(TAG, \"parallel downloads: \" + UserPreferences.getParallelDownloads());\n-        downloadHandleExecutor = Executors.newFixedThreadPool(UserPreferences.getParallelDownloads(),\n-            r -> {\n-                Thread t = new Thread(r, \"DownloadThread\");\n-                t.setPriority(Thread.MIN_PRIORITY);\n-                return t;\n-            });\n-        notificationUpdateExecutor = new ScheduledThreadPoolExecutor(SCHED_EX_POOL_SIZE,\n-                r -> {\n-                    Thread t = new Thread(r, \"NotificationUpdateExecutor\");\n-                    t.setPriority(Thread.MIN_PRIORITY);\n-                    return t;\n-                }, (r, executor) -> Log.w(TAG, \"SchedEx rejected submission of new task\")\n-        );\n-    }\n-\n-    @Override\n-    public void onCreate() {\n-        Log.d(TAG, \"Service started\");\n-        isRunning = true;\n-        notificationManager = new DownloadServiceNotification(this);\n-\n-        IntentFilter cancelDownloadReceiverFilter = new IntentFilter();\n-        cancelDownloadReceiverFilter.addAction(ACTION_CANCEL_ALL_DOWNLOADS);\n-        cancelDownloadReceiverFilter.addAction(ACTION_CANCEL_DOWNLOAD);\n-        registerReceiver(cancelDownloadReceiver, cancelDownloadReceiverFilter);\n-\n-        connectionMonitor = new ConnectionStateMonitor();\n-        connectionMonitor.enable(getApplicationContext());\n-    }\n-\n-    public static boolean isDownloadingFile(String downloadUrl) {\n-        if (!isRunning) {\n-            return false;\n-        }\n-        for (Downloader downloader : downloads) {\n-            if (downloader.request.getSource().equals(downloadUrl) && !downloader.cancelled) {\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n-\n-    public static DownloadRequest findRequest(String downloadUrl) {\n-        for (Downloader downloader : downloads) {\n-            if (downloader.request.getSource().equals(downloadUrl)) {\n-                return downloader.request;\n-            }\n-        }\n-        return null;\n-    }\n-\n-    @Override\n-    public int onStartCommand(Intent intent, int flags, int startId) {\n-        if (intent != null && intent.hasExtra(EXTRA_REQUESTS)) {\n-            Notification notification = notificationManager.updateNotifications(downloads);\n-            startForeground(R.id.notification_downloading, notification);\n-            NotificationManagerCompat.from(this).cancel(R.id.notification_download_report);\n-            NotificationManagerCompat.from(this).cancel(R.id.notification_auto_download_report);\n-            setupNotificationUpdaterIfNecessary();\n-            downloadEnqueueExecutor.execute(() -> onDownloadQueued(intent));\n-        } else if (downloads.size() == 0) {\n-            shutdown();\n-        } else {\n-            Log.d(TAG, \"onStartCommand: Unknown intent\");\n-        }\n-        return Service.START_NOT_STICKY;\n-    }\n-\n-    @Override\n-    public void onDestroy() {\n-        Log.d(TAG, \"Service shutting down\");\n-        isRunning = false;\n-\n-        boolean showAutoDownloadReport = UserPreferences.showAutoDownloadReport();\n-        if (UserPreferences.showDownloadReport() || showAutoDownloadReport) {\n-            notificationManager.updateReport(reportQueue, showAutoDownloadReport, failedRequestsForReport);\n-            reportQueue.clear();\n-            failedRequestsForReport.clear();\n-        }\n-\n-        unregisterReceiver(cancelDownloadReceiver);\n-        connectionMonitor.disable(getApplicationContext());\n-\n-        EventBus.getDefault().postSticky(DownloadEvent.refresh(Collections.emptyList()));\n-        cancelNotificationUpdater();\n-        downloadEnqueueExecutor.shutdownNow();\n-        downloadHandleExecutor.shutdownNow();\n-        notificationUpdateExecutor.shutdownNow();\n-        if (downloadPostFuture != null) {\n-            downloadPostFuture.cancel(true);\n-        }\n-        downloads.clear();\n-\n-        // start auto download in case anything new has shown up\n-        DBTasks.autodownloadUndownloadedItems(getApplicationContext());\n-    }\n-\n-    /**\n-     * This method MUST NOT, in any case, throw an exception.\n-     * Otherwise, it hangs up the refresh thread pool.\n-     */\n-    private void performDownload(Downloader downloader) {\n-        try {\n-            downloader.call();\n-        } catch (Exception e) {\n-            e.printStackTrace();\n-        }\n-        try {\n-            if (downloader.getResult().isSuccessful()) {\n-                handleSuccessfulDownload(downloader);\n-            } else {\n-                handleFailedDownload(downloader);\n-            }\n-        } catch (Exception e) {\n-            e.printStackTrace();\n-        }\n-        downloadEnqueueExecutor.submit(() -> {\n-            downloads.remove(downloader);\n-            stopServiceIfEverythingDone();\n-        });\n-    }\n-\n-    private void handleSuccessfulDownload(Downloader downloader) {\n-        DownloadRequest request = downloader.getDownloadRequest();\n-        DownloadStatus status = downloader.getResult();\n-        final int type = status.getFeedfileType();\n-\n-        if (type == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {\n-            Log.d(TAG, \"Handling completed FeedMedia Download\");\n-            MediaDownloadedHandler handler = new MediaDownloadedHandler(DownloadService.this, status, request);\n-            handler.run();\n-            saveDownloadStatus(handler.getUpdatedStatus(), downloader.getDownloadRequest());\n-        }\n-    }\n-\n-    private void handleFailedDownload(Downloader downloader) {\n-        DownloadStatus status = downloader.getResult();\n-        final int type = status.getFeedfileType();\n-\n-        if (!status.isCancelled()) {\n-            if (status.getReason() == DownloadError.ERROR_UNAUTHORIZED) {\n-                notificationManager.postAuthenticationNotification(downloader.getDownloadRequest());\n-            } else if (status.getReason() == DownloadError.ERROR_HTTP_DATA_ERROR\n-                    && Integer.parseInt(status.getReasonDetailed()) == 416) {\n-\n-                Log.d(TAG, \"Requested invalid range, restarting download from the beginning\");\n-                FileUtils.deleteQuietly(new File(downloader.getDownloadRequest().getDestination()));\n-                DownloadServiceInterface.get().download(this, false, downloader.getDownloadRequest());\n-            } else {\n-                Log.e(TAG, \"Download failed\");\n-                saveDownloadStatus(status, downloader.getDownloadRequest());\n-                new FailedDownloadHandler(downloader.getDownloadRequest()).run();\n-\n-                if (type == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {\n-                    FeedItem item = getFeedItemFromId(status.getFeedfileId());\n-                    if (item == null) {\n-                        return;\n-                    }\n-                    item.increaseFailedAutoDownloadAttempts(System.currentTimeMillis());\n-                    DBWriter.setFeedItem(item);\n-                    // to make lists reload the failed item, we fake an item update\n-                    EventBus.getDefault().post(FeedItemEvent.updated(item));\n-                }\n-            }\n-        } else {\n-            // if FeedMedia download has been canceled, fake FeedItem update\n-            // so that lists reload that it\n-            if (status.getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {\n-                FeedItem item = getFeedItemFromId(status.getFeedfileId());\n-                if (item == null) {\n-                    return;\n-                }\n-                EventBus.getDefault().post(FeedItemEvent.updated(item));\n-            }\n-        }\n-    }\n-\n-    private final BroadcastReceiver cancelDownloadReceiver = new BroadcastReceiver() {\n-\n-        @Override\n-        public void onReceive(Context context, Intent intent) {\n-            Log.d(TAG, \"cancelDownloadReceiver: \" + intent.getAction());\n-            if (!isRunning) {\n-                return;\n-            }\n-            if (TextUtils.equals(intent.getAction(), ACTION_CANCEL_DOWNLOAD)) {\n-                String url = intent.getStringExtra(EXTRA_DOWNLOAD_URL);\n-                if (url == null) {\n-                    throw new IllegalArgumentException(\"ACTION_CANCEL_DOWNLOAD intent needs download url extra\");\n-                }\n-                downloadEnqueueExecutor.execute(() -> {\n-                    doCancel(url);\n-                    postDownloaders();\n-                    stopServiceIfEverythingDone();\n-                });\n-            } else if (TextUtils.equals(intent.getAction(), ACTION_CANCEL_ALL_DOWNLOADS)) {\n-                downloadEnqueueExecutor.execute(() -> {\n-                    for (Downloader d : downloads) {\n-                        d.cancel();\n-                    }\n-                    Log.d(TAG, \"Cancelled all downloads\");\n-                    postDownloaders();\n-                    stopServiceIfEverythingDone();\n-                });\n-            }\n-        }\n-    };\n-\n-    private void doCancel(String url) {\n-        Log.d(TAG, \"Cancelling download with url \" + url);\n-        for (Downloader downloader : downloads) {\n-            if (downloader.cancelled || !downloader.getDownloadRequest().getSource().equals(url)) {\n-                continue;\n-            }\n-            downloader.cancel();\n-            DownloadRequest request = downloader.getDownloadRequest();\n-            FeedItem item = getFeedItemFromId(request.getFeedfileId());\n-            if (item != null) {\n-                EventBus.getDefault().post(FeedItemEvent.updated(item));\n-                // undo enqueue upon cancel\n-                if (request.isMediaEnqueued()) {\n-                    Log.v(TAG, \"Undoing enqueue upon cancelling download\");\n-                    DBWriter.removeQueueItem(getApplicationContext(), false, item);\n-                }\n-            }\n-        }\n-    }\n-\n-    private void onDownloadQueued(Intent intent) {\n-        List<DownloadRequest> requests = intent.getParcelableArrayListExtra(EXTRA_REQUESTS);\n-        if (requests == null) {\n-            throw new IllegalArgumentException(\"ACTION_ENQUEUE_DOWNLOAD intent needs request extra\");\n-        }\n-        Log.d(TAG, \"Received enqueue request. #requests=\" + requests.size());\n-\n-        if (intent.getBooleanExtra(EXTRA_CLEANUP_MEDIA, false)) {\n-            EpisodeCleanupAlgorithmFactory.build().makeRoomForEpisodes(getApplicationContext(), requests.size());\n-        }\n-\n-        for (DownloadRequest request : requests) {\n-            addNewRequest(request);\n-        }\n-        postDownloaders();\n-        stopServiceIfEverythingDone();\n-\n-        // Add to-download items to the queue before actual download completed\n-        // so that the resulting queue order is the same as when download is clicked\n-        enqueueFeedItems(requests);\n-    }\n-\n-    private void enqueueFeedItems(@NonNull List<DownloadRequest> requests) {\n-        List<FeedItem> feedItems = new ArrayList<>();\n-        for (DownloadRequest request : requests) {\n-            if (request.getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {\n-                long mediaId = request.getFeedfileId();\n-                FeedMedia media = DBReader.getFeedMedia(mediaId);\n-                if (media == null) {\n-                    Log.w(TAG, \"enqueueFeedItems() : FeedFile Id \" + mediaId + \" is not found. ignore it.\");\n-                    continue;\n-                }\n-                feedItems.add(media.getItem());\n-            }\n-        }\n-        List<FeedItem> actuallyEnqueued = Collections.emptyList();\n-        try {\n-            actuallyEnqueued = DBTasks.enqueueFeedItemsToDownload(getApplicationContext(), feedItems);\n-        } catch (InterruptedException | ExecutionException e) {\n-            e.printStackTrace();\n-        }\n-\n-        for (DownloadRequest request : requests) {\n-            if (request.getFeedfileType() != FeedMedia.FEEDFILETYPE_FEEDMEDIA) {\n-                continue;\n-            }\n-            final long mediaId = request.getFeedfileId();\n-            for (FeedItem item : actuallyEnqueued) {\n-                if (item.getMedia() != null && item.getMedia().getId() == mediaId) {\n-                    request.setMediaEnqueued(true);\n-                }\n-            }\n-        }\n-    }\n-\n-    private void addNewRequest(@NonNull DownloadRequest request) {\n-        if (isDownloadingFile(request.getSource())) {\n-            Log.d(TAG, \"Skipped enqueueing request. Already running.\");\n-            return;\n-        } else if (downloadHandleExecutor.isShutdown()) {\n-            Log.d(TAG, \"Skipped enqueueing request. Service is already shutting down.\");\n-            return;\n-        }\n-        Log.d(TAG, \"Add new request: \" + request.getSource());\n-        writeFileUrl(request);\n-        Downloader downloader = downloaderFactory.create(request);\n-        if (downloader != null) {\n-            downloads.add(downloader);\n-            downloadHandleExecutor.submit(() -> performDownload(downloader));\n-        }\n-    }\n-\n-    @VisibleForTesting\n-    public static DownloaderFactory getDownloaderFactory() {\n-        return downloaderFactory;\n-    }\n-\n-    // public scope rather than package private,\n-    // because androidTest put classes in the non-standard de.test.antennapod hierarchy\n-    @VisibleForTesting\n-    public static void setDownloaderFactory(DownloaderFactory downloaderFactory) {\n-        DownloadService.downloaderFactory = downloaderFactory;\n-    }\n-\n-    /**\n-     * Adds a new DownloadStatus object to the list of completed downloads and\n-     * saves it in the database\n-     *\n-     * @param status the download that is going to be saved\n-     */\n-    private void saveDownloadStatus(@NonNull DownloadStatus status, @NonNull DownloadRequest request) {\n-        reportQueue.add(status);\n-        if (!status.isSuccessful() && !status.isCancelled()) {\n-            failedRequestsForReport.add(request);\n-        }\n-        DBWriter.addDownloadStatus(status);\n-    }\n-\n-    /**\n-     * Check if there's something else to download, otherwise stop.\n-     */\n-    private void stopServiceIfEverythingDone() {\n-        Log.d(TAG, downloads.size() + \" downloads left\");\n-        if (downloads.size() <= 0) {\n-            Log.d(TAG, \"Attempting shutdown\");\n-            shutdown();\n-        }\n-    }\n-\n-    @Nullable\n-    private FeedItem getFeedItemFromId(long id) {\n-        FeedMedia media = DBReader.getFeedMedia(id);\n-        if (media != null) {\n-            return media.getItem();\n-        } else {\n-            return null;\n-        }\n-    }\n-\n-    /**\n-     * Creates the destination file and writes FeedMedia File_url directly after starting download\n-     * to make it possible to resume download after the service was killed by the system.\n-     */\n-    private void writeFileUrl(DownloadRequest request) {\n-        if (request.getFeedfileType() != FeedMedia.FEEDFILETYPE_FEEDMEDIA) {\n-            return;\n-        }\n-\n-        File dest = new File(request.getDestination());\n-        if (!dest.exists()) {\n-            try {\n-                dest.createNewFile();\n-            } catch (IOException e) {\n-                Log.e(TAG, \"Unable to create file\");\n-            }\n-        }\n-\n-        if (dest.exists()) {\n-            Log.d(TAG, \"Writing file url\");\n-            FeedMedia media = DBReader.getFeedMedia(request.getFeedfileId());\n-            if (media == null) {\n-                Log.d(TAG, \"No media\");\n-                return;\n-            }\n-            media.setFile_url(request.getDestination());\n-            try {\n-                DBWriter.setFeedMedia(media).get();\n-            } catch (InterruptedException e) {\n-                Log.e(TAG, \"writeFileUrl was interrupted\");\n-            } catch (ExecutionException e) {\n-                Log.e(TAG, \"ExecutionException in writeFileUrl: \" + e.getMessage());\n-            }\n-        }\n-    }\n-\n-    /**\n-     * Schedules the notification updater task if it hasn't been scheduled yet.\n-     */\n-    private void setupNotificationUpdaterIfNecessary() {\n-        if (notificationUpdater == null) {\n-            Log.d(TAG, \"Setting up notification updater\");\n-            notificationUpdater = new NotificationUpdater();\n-            notificationUpdaterFuture = notificationUpdateExecutor\n-                    .scheduleAtFixedRate(notificationUpdater, 1, 1, TimeUnit.SECONDS);\n-        }\n-    }\n-\n-    private void cancelNotificationUpdater() {\n-        boolean result = false;\n-        if (notificationUpdaterFuture != null) {\n-            result = notificationUpdaterFuture.cancel(true);\n-        }\n-        notificationUpdater = null;\n-        notificationUpdaterFuture = null;\n-        Log.d(TAG, \"NotificationUpdater cancelled. Result: \" + result);\n-    }\n-\n-    private class NotificationUpdater implements Runnable {\n-        public void run() {\n-            Notification n = notificationManager.updateNotifications(downloads);\n-            if (n != null) {\n-                NotificationManager nm = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);\n-                nm.notify(R.id.notification_downloading, n);\n-            }\n-        }\n-    }\n-\n-    private void postDownloaders() {\n-        new PostDownloaderTask(downloads).run();\n-\n-        if (downloadPostFuture == null) {\n-            downloadPostFuture = notificationUpdateExecutor.scheduleAtFixedRate(\n-                    new PostDownloaderTask(downloads), 1, 1, TimeUnit.SECONDS);\n-        }\n-    }\n-\n-    private void shutdown() {\n-        // If the service was run for a very short time, the system may delay closing\n-        // the notification. Set the notification text now so that a misleading message\n-        // is not left on the notification.\n-        if (notificationUpdater != null) {\n-            notificationUpdater.run();\n-        }\n-        cancelNotificationUpdater();\n-        ServiceCompat.stopForeground(this, ServiceCompat.STOP_FOREGROUND_REMOVE);\n-        stopSelf();\n-    }\n-}\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceInterfaceImpl.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceInterfaceImpl.java\nindex 976d8255f9..87cbeda847 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceInterfaceImpl.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceInterfaceImpl.java\n@@ -1,74 +1,72 @@\n package de.danoeh.antennapod.core.service.download;\n \n import android.content.Context;\n-import android.content.Intent;\n-import androidx.core.content.ContextCompat;\n-import com.google.android.exoplayer2.util.Log;\n-import de.danoeh.antennapod.core.BuildConfig;\n-import de.danoeh.antennapod.core.util.download.FeedUpdateManager;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n+import androidx.work.Constraints;\n+import androidx.work.Data;\n+import androidx.work.ExistingWorkPolicy;\n+import androidx.work.NetworkType;\n+import androidx.work.OneTimeWorkRequest;\n+import androidx.work.OutOfQuotaPolicy;\n+import androidx.work.WorkManager;\n+import de.danoeh.antennapod.core.storage.DBWriter;\n+import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n+import de.danoeh.antennapod.storage.preferences.UserPreferences;\n \n-import java.util.ArrayList;\n-\n-import static de.danoeh.antennapod.core.service.download.DownloadService.isDownloadingFile;\n+import java.util.concurrent.TimeUnit;\n \n public class DownloadServiceInterfaceImpl extends DownloadServiceInterface {\n-    private static final String TAG = \"DownloadServiceInterface\";\n-\n-    public void download(Context context, boolean cleanupMedia, DownloadRequest... requests) {\n-        Intent intent = makeDownloadIntent(context, cleanupMedia, requests);\n-        if (intent != null) {\n-            ContextCompat.startForegroundService(context, intent);\n+    public void downloadNow(Context context, FeedItem item, boolean ignoreConstraints) {\n+        OneTimeWorkRequest.Builder workRequest = getRequest(context, item);\n+        workRequest.setExpedited(OutOfQuotaPolicy.RUN_AS_NON_EXPEDITED_WORK_REQUEST);\n+        if (ignoreConstraints) {\n+            workRequest.setConstraints(new Constraints.Builder().setRequiredNetworkType(NetworkType.CONNECTED).build());\n+        } else {\n+            workRequest.setConstraints(getConstraints());\n         }\n+        WorkManager.getInstance(context).enqueueUniqueWork(item.getMedia().getDownload_url(),\n+                ExistingWorkPolicy.KEEP, workRequest.build());\n     }\n \n-    public Intent makeDownloadIntent(Context context, boolean cleanupMedia, DownloadRequest... requests) {\n-        ArrayList<DownloadRequest> requestsToSend = new ArrayList<>();\n-        for (DownloadRequest request : requests) {\n-            if (!isDownloadingFile(request.getSource())) {\n-                requestsToSend.add(request);\n-            }\n-        }\n-        if (requestsToSend.isEmpty()) {\n-            return null;\n-        } else if (requestsToSend.size() > 100) {\n-            if (BuildConfig.DEBUG) {\n-                throw new IllegalArgumentException(\"Android silently drops intent payloads that are too large\");\n-            } else {\n-                Log.d(TAG, \"Too many download requests. Dropping some to avoid Android dropping all.\");\n-                requestsToSend = new ArrayList<>(requestsToSend.subList(0, 100));\n-            }\n-        }\n+    public void download(Context context, FeedItem item) {\n+        OneTimeWorkRequest.Builder workRequest = getRequest(context, item);\n+        workRequest.setConstraints(getConstraints());\n+        WorkManager.getInstance(context).enqueueUniqueWork(item.getMedia().getDownload_url(),\n+                ExistingWorkPolicy.KEEP, workRequest.build());\n+    }\n \n-        Intent launchIntent = new Intent(context, DownloadService.class);\n-        launchIntent.putParcelableArrayListExtra(DownloadService.EXTRA_REQUESTS, requestsToSend);\n-        if (cleanupMedia) {\n-            launchIntent.putExtra(DownloadService.EXTRA_CLEANUP_MEDIA, true);\n+    private static OneTimeWorkRequest.Builder getRequest(Context context, FeedItem item) {\n+        OneTimeWorkRequest.Builder workRequest = new OneTimeWorkRequest.Builder(EpisodeDownloadWorker.class)\n+                .setInitialDelay(0L, TimeUnit.MILLISECONDS)\n+                .addTag(DownloadServiceInterface.WORK_TAG)\n+                .addTag(DownloadServiceInterface.WORK_TAG_EPISODE_URL + item.getMedia().getDownload_url());\n+        Data.Builder builder = new Data.Builder();\n+        builder.putLong(WORK_DATA_MEDIA_ID, item.getMedia().getId());\n+        if (!item.isTagged(FeedItem.TAG_QUEUE) && UserPreferences.enqueueDownloadedEpisodes()) {\n+            DBWriter.addQueueItem(context, false, item.getId());\n+            builder.putBoolean(WORK_DATA_WAS_QUEUED, true);\n         }\n-        return launchIntent;\n+        workRequest.setInputData(builder.build());\n+        return workRequest;\n     }\n \n-    public void refreshAllFeeds(Context context, boolean initiatedByUser) {\n-        FeedUpdateManager.runOnce(context);\n+    private static Constraints getConstraints() {\n+        Constraints.Builder constraints = new Constraints.Builder();\n+        if (UserPreferences.isAllowMobileEpisodeDownload()) {\n+            constraints.setRequiredNetworkType(NetworkType.CONNECTED);\n+        } else {\n+            constraints.setRequiredNetworkType(NetworkType.UNMETERED);\n+        }\n+        return constraints.build();\n     }\n \n+    @Override\n     public void cancel(Context context, String url) {\n-        if (!DownloadService.isRunning) {\n-            return;\n-        }\n-        Intent cancelIntent = new Intent(DownloadService.ACTION_CANCEL_DOWNLOAD);\n-        cancelIntent.putExtra(DownloadService.EXTRA_DOWNLOAD_URL, url);\n-        cancelIntent.setPackage(context.getPackageName());\n-        context.sendBroadcast(cancelIntent);\n+        WorkManager.getInstance(context).cancelAllWorkByTag(WORK_TAG_EPISODE_URL + url);\n     }\n \n+    @Override\n     public void cancelAll(Context context) {\n-        if (!DownloadService.isRunning) {\n-            return;\n-        }\n-        Intent cancelIntent = new Intent(DownloadService.ACTION_CANCEL_ALL_DOWNLOADS);\n-        cancelIntent.setPackage(context.getPackageName());\n-        context.sendBroadcast(cancelIntent);\n+        WorkManager.getInstance(context).cancelAllWorkByTag(WORK_TAG);\n     }\n }\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceNotification.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceNotification.java\ndeleted file mode 100644\nindex b9846c06c0..0000000000\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceNotification.java\n+++ /dev/null\n@@ -1,306 +0,0 @@\n-package de.danoeh.antennapod.core.service.download;\n-\n-import android.app.Notification;\n-import android.app.NotificationManager;\n-import android.app.PendingIntent;\n-import android.content.Context;\n-import android.content.Intent;\n-import android.os.Build;\n-import android.util.Log;\n-import androidx.core.app.NotificationCompat;\n-import de.danoeh.antennapod.core.R;\n-import de.danoeh.antennapod.core.util.DownloadErrorLabel;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n-import de.danoeh.antennapod.model.feed.Feed;\n-import de.danoeh.antennapod.model.feed.FeedMedia;\n-import de.danoeh.antennapod.core.util.gui.NotificationUtils;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n-import de.danoeh.antennapod.ui.appstartintent.DownloadAuthenticationActivityStarter;\n-import de.danoeh.antennapod.ui.appstartintent.MainActivityStarter;\n-\n-import java.util.List;\n-\n-public class DownloadServiceNotification {\n-    private static final String TAG = \"DownloadSvcNotification\";\n-\n-    private final Context context;\n-    private NotificationCompat.Builder notificationCompatBuilder;\n-\n-    public DownloadServiceNotification(Context context) {\n-        this.context = context;\n-        setupNotificationBuilders();\n-    }\n-\n-    private void setupNotificationBuilders() {\n-        notificationCompatBuilder = new NotificationCompat.Builder(context, NotificationUtils.CHANNEL_ID_DOWNLOADING)\n-                .setOngoing(false)\n-                .setWhen(0)\n-                .setOnlyAlertOnce(true)\n-                .setShowWhen(false)\n-                .setContentIntent(getNotificationContentIntent(context))\n-                .setSmallIcon(R.drawable.ic_notification_sync)\n-                .setVisibility(NotificationCompat.VISIBILITY_PUBLIC);\n-        Log.d(TAG, \"Notification set up\");\n-    }\n-\n-    /**\n-     * Updates the contents of the service's notifications. Should be called\n-     * after setupNotificationBuilders.\n-     */\n-    public Notification updateNotifications(List<Downloader> downloads) {\n-        if (notificationCompatBuilder == null) {\n-            return null;\n-        }\n-\n-        String contentTitle;\n-        if (typeIsOnly(downloads, Feed.FEEDFILETYPE_FEED)) {\n-            contentTitle = context.getString(R.string.download_notification_title_feeds);\n-        } else if (typeIsOnly(downloads, FeedMedia.FEEDFILETYPE_FEEDMEDIA)) {\n-            contentTitle = context.getString(R.string.download_notification_title_episodes);\n-        } else {\n-            contentTitle = context.getString(R.string.download_notification_title);\n-        }\n-\n-        int numDownloads = getNumberOfRunningDownloads(downloads);\n-        String contentText = context.getString(R.string.completing);\n-        String bigText = context.getString(R.string.completing);\n-        notificationCompatBuilder.clearActions();\n-        if (numDownloads > 0) {\n-            bigText = compileNotificationString(downloads);\n-            if (numDownloads == 1) {\n-                contentText = bigText;\n-            } else {\n-                contentText = context.getResources().getQuantityString(R.plurals.downloads_left,\n-                        numDownloads, numDownloads);\n-            }\n-\n-            Intent cancelDownloadsIntent = new Intent(DownloadService.ACTION_CANCEL_ALL_DOWNLOADS);\n-            cancelDownloadsIntent.setPackage(context.getPackageName());\n-            PendingIntent cancelPendingIntent = PendingIntent.getBroadcast(context,\n-                    R.id.pending_intent_download_cancel_all, cancelDownloadsIntent, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n-            notificationCompatBuilder.addAction(new NotificationCompat.Action(\n-                    R.drawable.ic_notification_cancel, context.getString(R.string.cancel_label), cancelPendingIntent));\n-        }\n-\n-        notificationCompatBuilder.setContentTitle(contentTitle);\n-        notificationCompatBuilder.setContentText(contentText);\n-        notificationCompatBuilder.setStyle(new NotificationCompat.BigTextStyle().bigText(bigText));\n-        return notificationCompatBuilder.build();\n-    }\n-\n-    private int getNumberOfRunningDownloads(List<Downloader> downloads) {\n-        int running = 0;\n-        for (Downloader downloader : downloads) {\n-            if (!downloader.cancelled && !downloader.isFinished()) {\n-                running++;\n-            }\n-        }\n-        return running;\n-    }\n-\n-    private boolean typeIsOnly(List<Downloader> downloads, int feedFileType) {\n-        for (Downloader downloader : downloads) {\n-            if (downloader.cancelled) {\n-                continue;\n-            }\n-            DownloadRequest request = downloader.getDownloadRequest();\n-            if (request.getFeedfileType() != feedFileType) {\n-                return false;\n-            }\n-        }\n-        return true;\n-    }\n-\n-    private static String compileNotificationString(List<Downloader> downloads) {\n-        StringBuilder stringBuilder = new StringBuilder();\n-        for (int i = 0; i < downloads.size(); i++) {\n-            Downloader downloader = downloads.get(i);\n-            if (downloader.cancelled) {\n-                continue;\n-            }\n-            stringBuilder.append(\"\u2022 \");\n-            DownloadRequest request = downloader.getDownloadRequest();\n-            if (request.getTitle() != null) {\n-                stringBuilder.append(request.getTitle());\n-            } else {\n-                stringBuilder.append(request.getSource());\n-            }\n-            if (request.getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {\n-                stringBuilder.append(\" (\").append(request.getProgressPercent()).append(\"%)\");\n-            } else if (request.getSource().startsWith(Feed.PREFIX_LOCAL_FOLDER)) {\n-                stringBuilder.append(\" (\").append(request.getSoFar())\n-                        .append(\"/\").append(request.getSize()).append(\")\");\n-            }\n-            if (i != downloads.size() - 1) {\n-                stringBuilder.append(\"\\n\");\n-            }\n-        }\n-        return stringBuilder.toString();\n-    }\n-\n-    private static String createAutoDownloadNotificationContent(List<DownloadStatus> statuses) {\n-        int length = statuses.size();\n-        StringBuilder sb = new StringBuilder();\n-\n-        for (int i = 0; i < length; i++) {\n-            sb.append(\"\u2022 \").append(statuses.get(i).getTitle());\n-            if (i != length - 1) {\n-                sb.append(\"\\n\");\n-            }\n-        }\n-\n-        return sb.toString();\n-    }\n-\n-    private String createFailedDownloadNotificationContent(List<DownloadStatus> statuses) {\n-        StringBuilder sb = new StringBuilder();\n-\n-        for (int i = 0; i < statuses.size(); i++) {\n-            if (statuses.get(i) == null || statuses.get(i).isSuccessful()) {\n-                continue;\n-            }\n-            sb.append(\"\u2022 \").append(statuses.get(i).getTitle());\n-            if (statuses.get(i).getReason() != null) {\n-                sb.append(\": \").append(context.getString(DownloadErrorLabel.from(statuses.get(i).getReason())));\n-            }\n-            if (i != statuses.size() - 1) {\n-                sb.append(\"\\n\");\n-            }\n-        }\n-\n-        return sb.toString();\n-    }\n-\n-    /**\n-     * Creates a notification at the end of the service lifecycle to notify the\n-     * user about the number of completed downloads. A report will only be\n-     * created if there is at least one failed download excluding images\n-     */\n-    public void updateReport(List<DownloadStatus> reportQueue, boolean showAutoDownloadReport,\n-                             List<DownloadRequest> failedRequests) {\n-        // check if report should be created\n-        boolean createReport = false;\n-        int failedDownloads = 0;\n-\n-        // a download report is created if at least one download has failed\n-        // (excluding failed image downloads)\n-        for (DownloadStatus status : reportQueue) {\n-            if (status == null || status.isCancelled()) {\n-                continue;\n-            }\n-            if (status.isSuccessful()) {\n-                createReport |= showAutoDownloadReport && !status.isInitiatedByUser()\n-                        && status.getFeedfileType() == FeedMedia.FEEDFILETYPE_FEEDMEDIA;\n-            } else {\n-                failedDownloads++;\n-                createReport = true;\n-            }\n-        }\n-\n-        if (!createReport) {\n-            Log.d(TAG, \"No report is created\");\n-            return;\n-        }\n-        Log.d(TAG, \"Creating report\");\n-        if (failedDownloads == 0) {\n-            createAutoDownloadReportNotification(reportQueue);\n-        } else {\n-            createDownloadFailedNotification(reportQueue, failedRequests);\n-        }\n-        Log.d(TAG, \"Download report notification was posted\");\n-    }\n-\n-    private void createAutoDownloadReportNotification(List<DownloadStatus> reportQueue) {\n-        PendingIntent intent = getAutoDownloadReportNotificationContentIntent(context);\n-        String content = createAutoDownloadNotificationContent(reportQueue);\n-        NotificationCompat.Builder builder = new NotificationCompat.Builder(context,\n-                NotificationUtils.CHANNEL_ID_AUTO_DOWNLOAD);\n-        builder.setTicker(context.getString(R.string.auto_download_report_title))\n-                .setContentTitle(context.getString(R.string.auto_download_report_title))\n-                .setContentText(content)\n-                .setStyle(new NotificationCompat.BigTextStyle().bigText(content))\n-                .setSmallIcon(R.drawable.ic_notification_new)\n-                .setContentIntent(intent)\n-                .setAutoCancel(true)\n-                .setVisibility(NotificationCompat.VISIBILITY_PUBLIC);\n-        NotificationManager nm = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);\n-        nm.notify(R.id.notification_auto_download_report, builder.build());\n-    }\n-\n-    private void createDownloadFailedNotification(List<DownloadStatus> reportQueue,\n-                                                  List<DownloadRequest> failedRequests) {\n-        Intent retryIntent = DownloadServiceInterface.get().makeDownloadIntent(context,\n-                false, failedRequests.toArray(new DownloadRequest[0]));\n-        PendingIntent retryPendingIntent = null;\n-        if (retryIntent != null && Build.VERSION.SDK_INT >= 26) {\n-            retryPendingIntent = PendingIntent.getForegroundService(context, R.id.pending_intent_download_service_retry,\n-                    retryIntent, PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n-        } else if (retryIntent != null) {\n-            retryPendingIntent = PendingIntent.getService(context,\n-                    R.id.pending_intent_download_service_retry, retryIntent,\n-                    PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n-        }\n-        PendingIntent intent = getReportNotificationContentIntent(context);\n-        String content = createFailedDownloadNotificationContent(reportQueue);\n-        NotificationCompat.Builder builder = new NotificationCompat.Builder(context,\n-                NotificationUtils.CHANNEL_ID_DOWNLOAD_ERROR);\n-        builder.setTicker(context.getString(R.string.download_report_title))\n-                .setContentTitle(context.getString(R.string.download_report_title))\n-                .setContentText(content)\n-                .setStyle(new NotificationCompat.BigTextStyle().bigText(content))\n-                .setSmallIcon(R.drawable.ic_notification_sync_error)\n-                .setContentIntent(intent)\n-                .setAutoCancel(true);\n-        if (retryPendingIntent != null) {\n-            builder.addAction(new NotificationCompat.Action(\n-                    R.drawable.ic_notification_sync, context.getString(R.string.retry_label), retryPendingIntent));\n-        }\n-        builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);\n-        NotificationManager nm = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);\n-        nm.notify(R.id.notification_download_report, builder.build());\n-    }\n-\n-    public void postAuthenticationNotification(final DownloadRequest downloadRequest) {\n-        final String resourceTitle = (downloadRequest.getTitle() != null) ?\n-                downloadRequest.getTitle() : downloadRequest.getSource();\n-\n-        NotificationCompat.Builder builder = new NotificationCompat.Builder(context, NotificationUtils.CHANNEL_ID_USER_ACTION);\n-        builder.setTicker(context.getText(R.string.authentication_notification_title))\n-                .setContentTitle(context.getText(R.string.authentication_notification_title))\n-                .setContentText(context.getText(R.string.authentication_notification_msg))\n-                .setStyle(new NotificationCompat.BigTextStyle().bigText(context.getText(R.string.authentication_notification_msg)\n-                        + \": \" + resourceTitle))\n-                .setSmallIcon(R.drawable.ic_notification_key)\n-                .setAutoCancel(true)\n-                .setContentIntent(new DownloadAuthenticationActivityStarter(\n-                        context, downloadRequest.getFeedfileId(), downloadRequest).getPendingIntent());\n-        builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);\n-        NotificationManager nm = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);\n-        nm.notify(downloadRequest.getSource().hashCode(), builder.build());\n-    }\n-\n-    public PendingIntent getReportNotificationContentIntent(Context context) {\n-        Intent intent = new MainActivityStarter(context)\n-                .withFragmentLoaded(\"DownloadsFragment\")\n-                .withFragmentArgs(\"show_logs\", true)\n-                .getIntent();\n-        return PendingIntent.getActivity(context, R.id.pending_intent_download_service_report, intent,\n-                PendingIntent.FLAG_UPDATE_CURRENT | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n-    }\n-\n-    public PendingIntent getAutoDownloadReportNotificationContentIntent(Context context) {\n-        Intent intent = new MainActivityStarter(context).withFragmentLoaded(\"QueueFragment\").getIntent();\n-        return PendingIntent.getActivity(context, R.id.pending_intent_download_service_autodownload_report, intent,\n-                PendingIntent.FLAG_UPDATE_CURRENT | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n-    }\n-\n-    public PendingIntent getNotificationContentIntent(Context context) {\n-        Intent intent = new MainActivityStarter(context).withFragmentLoaded(\"DownloadsFragment\").getIntent();\n-        return PendingIntent.getActivity(context,\n-                R.id.pending_intent_download_service_notification, intent,\n-                PendingIntent.FLAG_UPDATE_CURRENT | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n-    }\n-}\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/Downloader.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/Downloader.java\nindex f7f5e8e9c1..35247509d0 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/Downloader.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/Downloader.java\n@@ -9,7 +9,7 @@\n \n import de.danoeh.antennapod.core.ClientConfig;\n import de.danoeh.antennapod.core.R;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n \n /**\n@@ -25,15 +25,15 @@ public abstract class Downloader implements Callable<Downloader> {\n     @NonNull\n     final DownloadRequest request;\n     @NonNull\n-    final DownloadStatus result;\n+    final DownloadResult result;\n \n     Downloader(@NonNull DownloadRequest request) {\n         super();\n         this.request = request;\n         this.request.setStatusMsg(R.string.download_pending);\n         this.cancelled = false;\n-        this.result = new DownloadStatus(0, request.getTitle(), request.getFeedfileId(), request.getFeedfileType(),\n-                false, cancelled, false, null, new Date(), null, request.isInitiatedByUser());\n+        this.result = new DownloadResult(0, request.getTitle(), request.getFeedfileId(), request.getFeedfileType(),\n+                false, null, new Date(), null);\n     }\n \n     protected abstract void download();\n@@ -63,7 +63,7 @@ public DownloadRequest getDownloadRequest() {\n     }\n \n     @NonNull\n-    public DownloadStatus getResult() {\n+    public DownloadResult getResult() {\n         return result;\n     }\n \ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/EpisodeDownloadWorker.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/EpisodeDownloadWorker.java\nnew file mode 100644\nindex 0000000000..c428bc861e\n--- /dev/null\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/EpisodeDownloadWorker.java\n@@ -0,0 +1,265 @@\n+package de.danoeh.antennapod.core.service.download;\n+\n+import android.app.NotificationManager;\n+import android.app.PendingIntent;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.os.Build;\n+import android.util.Log;\n+import androidx.annotation.NonNull;\n+import androidx.core.app.NotificationCompat;\n+import androidx.work.Data;\n+import androidx.work.Worker;\n+import androidx.work.WorkerParameters;\n+import de.danoeh.antennapod.core.ClientConfigurator;\n+import de.danoeh.antennapod.core.R;\n+import de.danoeh.antennapod.core.service.download.handler.MediaDownloadedHandler;\n+import de.danoeh.antennapod.core.storage.DBReader;\n+import de.danoeh.antennapod.core.storage.DBWriter;\n+import de.danoeh.antennapod.core.util.gui.NotificationUtils;\n+import de.danoeh.antennapod.event.MessageEvent;\n+import de.danoeh.antennapod.model.download.DownloadError;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n+import de.danoeh.antennapod.model.feed.FeedMedia;\n+import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n+import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n+import de.danoeh.antennapod.ui.appstartintent.MainActivityStarter;\n+import org.apache.commons.io.FileUtils;\n+import org.greenrobot.eventbus.EventBus;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.HashMap;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.concurrent.ExecutionException;\n+\n+public class EpisodeDownloadWorker extends Worker {\n+    private static final String TAG = \"EpisodeDownloadWorker\";\n+    private static final Map<String, Integer> notificationProgress = new HashMap<>();\n+\n+    private Downloader downloader = null;\n+\n+    public EpisodeDownloadWorker(@NonNull Context context, @NonNull WorkerParameters params) {\n+        super(context, params);\n+    }\n+\n+    @Override\n+    @NonNull\n+    public Result doWork() {\n+        ClientConfigurator.initialize(getApplicationContext());\n+        long mediaId = getInputData().getLong(DownloadServiceInterface.WORK_DATA_MEDIA_ID, 0);\n+        FeedMedia media = DBReader.getFeedMedia(mediaId);\n+        if (media == null) {\n+            return Result.failure();\n+        }\n+\n+        DownloadRequest request = DownloadRequestCreator.create(media).build();\n+        Thread progressUpdaterThread = new Thread() {\n+            @Override\n+            public void run() {\n+                while (!isInterrupted()) {\n+                    try {\n+                        Thread.sleep(1000);\n+                        notificationProgress.put(media.getEpisodeTitle(), request.getProgressPercent());\n+                        setProgressAsync(\n+                                new Data.Builder()\n+                                    .putInt(DownloadServiceInterface.WORK_DATA_PROGRESS, request.getProgressPercent())\n+                                    .build())\n+                                .get();\n+                        sendProgressNotification();\n+                    } catch (InterruptedException | ExecutionException e) {\n+                        return;\n+                    }\n+                }\n+            }\n+        };\n+        progressUpdaterThread.start();\n+        final Result result = performDownload(media, request);\n+        progressUpdaterThread.interrupt();\n+        try {\n+            progressUpdaterThread.join();\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();\n+        }\n+        notificationProgress.remove(media.getEpisodeTitle());\n+        if (notificationProgress.isEmpty()) {\n+            NotificationManager nm = (NotificationManager) getApplicationContext()\n+                    .getSystemService(Context.NOTIFICATION_SERVICE);\n+            nm.cancel(R.id.notification_downloading);\n+        }\n+        Log.d(TAG, \"Worker for \" + media.getDownload_url() + \" returned.\");\n+        return result;\n+    }\n+\n+    @Override\n+    public void onStopped() {\n+        super.onStopped();\n+        if (downloader != null) {\n+            downloader.cancel();\n+        }\n+    }\n+\n+    private Result performDownload(FeedMedia media, DownloadRequest request) {\n+        File dest = new File(request.getDestination());\n+        if (!dest.exists()) {\n+            try {\n+                dest.createNewFile();\n+            } catch (IOException e) {\n+                Log.e(TAG, \"Unable to create file\");\n+            }\n+        }\n+\n+        if (dest.exists()) {\n+            media.setFile_url(request.getDestination());\n+            try {\n+                DBWriter.setFeedMedia(media).get();\n+            } catch (Exception e) {\n+                Log.e(TAG, \"ExecutionException in writeFileUrl: \" + e.getMessage());\n+            }\n+        }\n+\n+        downloader = new DefaultDownloaderFactory().create(request);\n+        if (downloader == null) {\n+            Log.d(TAG, \"Unable to create downloader\");\n+            return Result.failure();\n+        }\n+\n+        try {\n+            downloader.call();\n+        } catch (Exception e) {\n+            DBWriter.addDownloadStatus(downloader.getResult());\n+            if (EventBus.getDefault().hasSubscriberForEvent(MessageEvent.class)) {\n+                sendMessage(request.getTitle(), false);\n+            } else {\n+                sendErrorNotification();\n+            }\n+            return Result.failure();\n+        }\n+\n+        if (downloader.cancelled) {\n+            if (getInputData().getBoolean(DownloadServiceInterface.WORK_DATA_WAS_QUEUED, false)) {\n+                try {\n+                    DBWriter.removeQueueItem(getApplicationContext(), false, media.getItem()).get();\n+                } catch (ExecutionException | InterruptedException e) {\n+                    e.printStackTrace();\n+                }\n+            }\n+            return Result.success();\n+        }\n+\n+        DownloadResult status = downloader.getResult();\n+        if (status.isSuccessful()) {\n+            MediaDownloadedHandler handler = new MediaDownloadedHandler(\n+                    getApplicationContext(), downloader.getResult(), request);\n+            handler.run();\n+            DBWriter.addDownloadStatus(handler.getUpdatedStatus());\n+            return Result.success();\n+        }\n+\n+        if (status.getReason() == DownloadError.ERROR_HTTP_DATA_ERROR\n+                && Integer.parseInt(status.getReasonDetailed()) == 416) {\n+            Log.d(TAG, \"Requested invalid range, restarting download from the beginning\");\n+            FileUtils.deleteQuietly(new File(downloader.getDownloadRequest().getDestination()));\n+            sendMessage(request.getTitle(), true);\n+            return retry3times();\n+        }\n+\n+        Log.e(TAG, \"Download failed\");\n+        DBWriter.addDownloadStatus(status);\n+        if (status.getReason() == DownloadError.ERROR_FORBIDDEN\n+                || status.getReason() == DownloadError.ERROR_NOT_FOUND\n+                || status.getReason() == DownloadError.ERROR_UNAUTHORIZED\n+                || status.getReason() == DownloadError.ERROR_IO_BLOCKED) {\n+            // Fail fast, these are probably unrecoverable\n+            if (EventBus.getDefault().hasSubscriberForEvent(MessageEvent.class)) {\n+                sendMessage(request.getTitle(), false);\n+            } else {\n+                sendErrorNotification();\n+            }\n+            return Result.failure();\n+        }\n+        sendMessage(request.getTitle(), true);\n+        return retry3times();\n+    }\n+\n+    private Result retry3times() {\n+        if (getRunAttemptCount() < 2) {\n+            return Result.retry();\n+        } else {\n+            sendErrorNotification();\n+            return Result.failure();\n+        }\n+    }\n+\n+    private void sendMessage(String episodeTitle, boolean retrying) {\n+        if (episodeTitle.length() > 20) {\n+            episodeTitle = episodeTitle.substring(0, 19) + \"\u2026\";\n+        }\n+        EventBus.getDefault().post(new MessageEvent(\n+                    getApplicationContext().getString(\n+                            retrying ? R.string.download_error_retrying : R.string.download_error_not_retrying,\n+                            episodeTitle), (ctx) -> new MainActivityStarter(ctx).withDownloadLogsOpen().start(),\n+                getApplicationContext().getString(R.string.download_error_details)));\n+    }\n+\n+    private PendingIntent getDownloadLogsIntent(Context context) {\n+        Intent intent = new MainActivityStarter(context).withDownloadLogsOpen().getIntent();\n+        return PendingIntent.getActivity(context, R.id.pending_intent_download_service_report, intent,\n+                PendingIntent.FLAG_UPDATE_CURRENT | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+    }\n+\n+    private PendingIntent getDownloadsIntent(Context context) {\n+        Intent intent = new MainActivityStarter(context).withFragmentLoaded(\"DownloadsFragment\").getIntent();\n+        return PendingIntent.getActivity(context, R.id.pending_intent_download_service_notification, intent,\n+                PendingIntent.FLAG_UPDATE_CURRENT | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+    }\n+\n+    private void sendErrorNotification() {\n+        NotificationCompat.Builder builder = new NotificationCompat.Builder(getApplicationContext(),\n+                NotificationUtils.CHANNEL_ID_DOWNLOAD_ERROR);\n+        builder.setTicker(getApplicationContext().getString(R.string.download_report_title))\n+                .setContentTitle(getApplicationContext().getString(R.string.download_report_title))\n+                .setContentText(getApplicationContext().getString(R.string.download_error_tap_for_details))\n+                .setSmallIcon(R.drawable.ic_notification_sync_error)\n+                .setContentIntent(getDownloadLogsIntent(getApplicationContext()))\n+                .setAutoCancel(true);\n+        builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);\n+        NotificationManager nm = (NotificationManager) getApplicationContext()\n+                .getSystemService(Context.NOTIFICATION_SERVICE);\n+        nm.notify(R.id.notification_download_report, builder.build());\n+    }\n+\n+    private void sendProgressNotification() {\n+        StringBuilder bigTextB = new StringBuilder();\n+        Map<String, Integer> progressCopy = new HashMap<>(notificationProgress);\n+        for (Map.Entry<String, Integer> entry : progressCopy.entrySet()) {\n+            bigTextB.append(String.format(Locale.getDefault(), \"%s (%d%%)\\n\", entry.getKey(), entry.getValue()));\n+        }\n+        String bigText = bigTextB.toString().trim();\n+        String contentText;\n+        if (notificationProgress.size() == 1) {\n+            contentText = bigText;\n+        } else {\n+            contentText = getApplicationContext().getResources().getQuantityString(R.plurals.downloads_left,\n+                    notificationProgress.size(), notificationProgress.size());\n+        }\n+        NotificationCompat.Builder builder = new NotificationCompat.Builder(getApplicationContext(),\n+                NotificationUtils.CHANNEL_ID_DOWNLOADING);\n+        builder.setTicker(getApplicationContext().getString(R.string.download_notification_title_episodes))\n+                .setContentTitle(getApplicationContext().getString(R.string.download_notification_title_episodes))\n+                .setContentText(contentText)\n+                .setStyle(new NotificationCompat.BigTextStyle().bigText(bigText))\n+                .setContentIntent(getDownloadsIntent(getApplicationContext()))\n+                .setAutoCancel(false)\n+                .setOngoing(true)\n+                .setWhen(0)\n+                .setOnlyAlertOnce(true)\n+                .setShowWhen(false)\n+                .setSmallIcon(R.drawable.ic_notification_sync)\n+                .setVisibility(NotificationCompat.VISIBILITY_PUBLIC);\n+        NotificationManager nm = (NotificationManager) getApplicationContext()\n+                .getSystemService(Context.NOTIFICATION_SERVICE);\n+        nm.notify(R.id.notification_downloading, builder.build());\n+    }\n+}\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java\nindex a0a0615cbf..949f9966b5 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/HttpDownloader.java\n@@ -5,7 +5,7 @@\n import android.util.Log;\n \n import de.danoeh.antennapod.core.util.NetworkUtils;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n import okhttp3.CacheControl;\n import okhttp3.internal.http.StatusLine;\n@@ -149,12 +149,12 @@ && isContentTypeTextAndSmallerThan100kb(response)) {\n             request.setSize(responseBody.contentLength() + request.getSoFar());\n             Log.d(TAG, \"Size is \" + request.getSize());\n             if (request.getSize() < 0) {\n-                request.setSize(DownloadStatus.SIZE_UNKNOWN);\n+                request.setSize(DownloadResult.SIZE_UNKNOWN);\n             }\n \n             long freeSpace = StorageUtils.getFreeSpaceAvailable();\n             Log.d(TAG, \"Free space is \" + freeSpace);\n-            if (request.getSize() != DownloadStatus.SIZE_UNKNOWN && request.getSize() > freeSpace) {\n+            if (request.getSize() != DownloadResult.SIZE_UNKNOWN && request.getSize() > freeSpace) {\n                 onFail(DownloadError.ERROR_NOT_ENOUGH_SPACE, null);\n                 return;\n             }\n@@ -175,7 +175,7 @@ && isContentTypeTextAndSmallerThan100kb(response)) {\n             } else {\n                 // check if size specified in the response header is the same as the size of the\n                 // written file. This check cannot be made if compression was used\n-                if (!isGzip && request.getSize() != DownloadStatus.SIZE_UNKNOWN\n+                if (!isGzip && request.getSize() != DownloadResult.SIZE_UNKNOWN\n                         && request.getSoFar() != request.getSize()) {\n                     onFail(DownloadError.ERROR_IO_WRONG_SIZE, \"Download completed but size: \"\n                             + request.getSoFar() + \" does not equal expected size \" + request.getSize());\n@@ -267,7 +267,8 @@ private void callOnFailByResponseCode(Response response) {\n         } else if (response.code() == HttpURLConnection.HTTP_FORBIDDEN) {\n             error = DownloadError.ERROR_FORBIDDEN;\n             details = String.valueOf(response.code());\n-        } else if (response.code() == HttpURLConnection.HTTP_NOT_FOUND) {\n+        } else if (response.code() == HttpURLConnection.HTTP_NOT_FOUND\n+                || response.code() == HttpURLConnection.HTTP_GONE) {\n             error = DownloadError.ERROR_NOT_FOUND;\n             details = String.valueOf(response.code());\n         } else {\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FailedDownloadHandler.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FailedDownloadHandler.java\ndeleted file mode 100644\nindex 937f051ec7..0000000000\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FailedDownloadHandler.java\n+++ /dev/null\n@@ -1,32 +0,0 @@\n-package de.danoeh.antennapod.core.service.download.handler;\n-\n-import android.util.Log;\n-import de.danoeh.antennapod.model.feed.Feed;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n-import de.danoeh.antennapod.core.storage.DBWriter;\n-\n-/**\n- * Handles failed downloads.\n- * <p/>\n- * If the file has been partially downloaded, this handler will set the file_url of the FeedFile to the location\n- * of the downloaded file.\n- * <p/>\n- * Currently, this handler only handles FeedMedia objects, because Feeds and FeedImages are deleted if the download fails.\n- */\n-public class FailedDownloadHandler implements Runnable {\n-    private static final String TAG = \"FailedDownloadHandler\";\n-    private final DownloadRequest request;\n-\n-    public FailedDownloadHandler(DownloadRequest request) {\n-        this.request = request;\n-    }\n-\n-    @Override\n-    public void run() {\n-        if (request.getFeedfileType() == Feed.FEEDFILETYPE_FEED) {\n-            DBWriter.setFeedLastUpdateFailed(request.getFeedfileId(), true);\n-        } else if (request.isDeleteOnFailure()) {\n-            Log.d(TAG, \"Ignoring failed download, deleteOnFailure=true\");\n-        }\n-    }\n-}\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FeedParserTask.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FeedParserTask.java\nindex 1118b93cd9..5da250e15f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FeedParserTask.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FeedParserTask.java\n@@ -8,7 +8,7 @@\n import de.danoeh.antennapod.model.feed.FeedPreferences;\n import de.danoeh.antennapod.model.feed.VolumeAdaptionSetting;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.parser.feed.FeedHandler;\n import de.danoeh.antennapod.parser.feed.FeedHandlerResult;\n import de.danoeh.antennapod.parser.feed.UnsupportedFeedtypeException;\n@@ -25,15 +25,15 @@\n public class FeedParserTask implements Callable<FeedHandlerResult> {\n     private static final String TAG = \"FeedParserTask\";\n     private final DownloadRequest request;\n-    private DownloadStatus downloadStatus;\n+    private DownloadResult downloadResult;\n     private boolean successful = true;\n \n     public FeedParserTask(DownloadRequest request) {\n         this.request = request;\n-        downloadStatus = new DownloadStatus(\n+        downloadResult = new DownloadResult(\n         0, request.getTitle(), 0, request.getFeedfileType(), false,\n-                false, true, DownloadError.ERROR_REQUEST_ERROR, new Date(),\n-                \"Unknown error: Status not set\", request.isInitiatedByUser());\n+                DownloadError.ERROR_REQUEST_ERROR, new Date(),\n+                \"Unknown error: Status not set\");\n     }\n \n     @Override\n@@ -87,12 +87,12 @@ public FeedHandlerResult call() {\n         }\n \n         if (successful) {\n-            downloadStatus = new DownloadStatus(feed, feed.getHumanReadableIdentifier(), DownloadError.SUCCESS,\n-                                                successful, reasonDetailed, request.isInitiatedByUser());\n+            downloadResult = new DownloadResult(feed, feed.getHumanReadableIdentifier(), DownloadError.SUCCESS,\n+                                                successful, reasonDetailed);\n             return result;\n         } else {\n-            downloadStatus = new DownloadStatus(feed, feed.getHumanReadableIdentifier(), reason,\n-                                                successful, reasonDetailed, request.isInitiatedByUser());\n+            downloadResult = new DownloadResult(feed, feed.getHumanReadableIdentifier(), reason,\n+                                                successful, reasonDetailed);\n             return null;\n         }\n     }\n@@ -120,7 +120,7 @@ private void checkFeedItems(Feed feed) throws InvalidFeedException  {\n     }\n \n     @NonNull\n-    public DownloadStatus getDownloadStatus() {\n-        return downloadStatus;\n+    public DownloadResult getDownloadStatus() {\n+        return downloadResult;\n     }\n }\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FeedSyncTask.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FeedSyncTask.java\nindex 9cb1166b4c..3b72ed1641 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FeedSyncTask.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/handler/FeedSyncTask.java\n@@ -3,7 +3,7 @@\n import android.content.Context;\n import androidx.annotation.NonNull;\n import de.danoeh.antennapod.core.storage.DBTasks;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n import de.danoeh.antennapod.parser.feed.FeedHandlerResult;\n@@ -30,7 +30,7 @@ public boolean run() {\n     }\n \n     @NonNull\n-    public DownloadStatus getDownloadStatus() {\n+    public DownloadResult getDownloadStatus() {\n         return task.getDownloadStatus();\n     }\n \ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/handler/MediaDownloadedHandler.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/handler/MediaDownloadedHandler.java\nindex c632bf1e0a..a46b4c6d0d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/handler/MediaDownloadedHandler.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/handler/MediaDownloadedHandler.java\n@@ -13,7 +13,7 @@\n \n import de.danoeh.antennapod.event.UnreadItemsUpdateEvent;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.core.storage.DBReader;\n import de.danoeh.antennapod.core.storage.DBWriter;\n import de.danoeh.antennapod.core.sync.queue.SynchronizationQueueSink;\n@@ -30,9 +30,9 @@ public class MediaDownloadedHandler implements Runnable {\n     private static final String TAG = \"MediaDownloadedHandler\";\n     private final DownloadRequest request;\n     private final Context context;\n-    private DownloadStatus updatedStatus;\n+    private DownloadResult updatedStatus;\n \n-    public MediaDownloadedHandler(@NonNull Context context, @NonNull DownloadStatus status,\n+    public MediaDownloadedHandler(@NonNull Context context, @NonNull DownloadResult status,\n                                   @NonNull DownloadRequest request) {\n         this.request = request;\n         this.context = context;\n@@ -94,8 +94,8 @@ public void run() {\n             Log.e(TAG, \"MediaHandlerThread was interrupted\");\n         } catch (ExecutionException e) {\n             Log.e(TAG, \"ExecutionException in MediaHandlerThread: \" + e.getMessage());\n-            updatedStatus = new DownloadStatus(media, media.getEpisodeTitle(),\n-                    DownloadError.ERROR_DB_ACCESS_ERROR, false, e.getMessage(), request.isInitiatedByUser());\n+            updatedStatus = new DownloadResult(media, media.getEpisodeTitle(),\n+                    DownloadError.ERROR_DB_ACCESS_ERROR, false, e.getMessage());\n         }\n \n         if (item != null) {\n@@ -107,7 +107,7 @@ public void run() {\n     }\n \n     @NonNull\n-    public DownloadStatus getUpdatedStatus() {\n+    public DownloadResult getUpdatedStatus() {\n         return updatedStatus;\n     }\n }\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/handler/PostDownloaderTask.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/handler/PostDownloaderTask.java\ndeleted file mode 100644\nindex 5d2c486790..0000000000\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/handler/PostDownloaderTask.java\n+++ /dev/null\n@@ -1,29 +0,0 @@\n-package de.danoeh.antennapod.core.service.download.handler;\n-\n-import de.danoeh.antennapod.core.event.DownloadEvent;\n-import de.danoeh.antennapod.core.service.download.Downloader;\n-import org.greenrobot.eventbus.EventBus;\n-\n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.List;\n-\n-public class PostDownloaderTask implements Runnable {\n-    private List<Downloader> downloads;\n-\n-    public PostDownloaderTask(List<Downloader> downloads) {\n-        this.downloads = downloads;\n-    }\n-\n-    @Override\n-    public void run() {\n-        List<Downloader> runningDownloads = new ArrayList<>();\n-        for (Downloader downloader : downloads) {\n-            if (!downloader.cancelled) {\n-                runningDownloads.add(downloader);\n-            }\n-        }\n-        List<Downloader> list = Collections.unmodifiableList(runningDownloads);\n-        EventBus.getDefault().postSticky(DownloadEvent.refresh(list));\n-    }\n-}\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 42631296ba..6fc9035cac 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n@@ -824,7 +824,7 @@ public void statusChanged(PlaybackServiceMediaPlayer.PSMPInfo newInfo) {\n                             && SleepTimerPreferences.autoEnable() && autoEnableByTime && !sleepTimerActive()) {\n                         setSleepTimer(SleepTimerPreferences.timerMillis());\n                         EventBus.getDefault().post(new MessageEvent(getString(R.string.sleep_timer_enabled_label),\n-                                PlaybackService.this::disableSleepTimer));\n+                                (ctx) -> disableSleepTimer(), getString(R.string.undo)));\n                     }\n                     loadQueueForMediaSession();\n                     break;\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/AutomaticDownloadAlgorithm.java b/core/src/main/java/de/danoeh/antennapod/core/storage/AutomaticDownloadAlgorithm.java\nindex 0f31215517..dbbfba379a 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/AutomaticDownloadAlgorithm.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/AutomaticDownloadAlgorithm.java\n@@ -9,12 +9,10 @@\n \n import de.danoeh.antennapod.model.feed.FeedItemFilter;\n import de.danoeh.antennapod.model.feed.SortOrder;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n-import de.danoeh.antennapod.core.service.download.DownloadRequestCreator;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n import de.danoeh.antennapod.core.util.PlaybackStatus;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedPreferences;\n+import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n import de.danoeh.antennapod.core.util.NetworkUtils;\n import de.danoeh.antennapod.core.util.PowerUtils;\n@@ -97,13 +95,9 @@ public Runnable autoDownloadUndownloadedItems(final Context context) {\n                 if (itemsToDownload.size() > 0) {\n                     Log.d(TAG, \"Enqueueing \" + itemsToDownload.size() + \" items for download\");\n \n-                    List<DownloadRequest> requests = new ArrayList<>();\n                     for (FeedItem episode : itemsToDownload) {\n-                        DownloadRequest.Builder request = DownloadRequestCreator.create(episode.getMedia());\n-                        request.withInitiatedByUser(false);\n-                        requests.add(request.build());\n+                        DownloadServiceInterface.get().download(context, episode);\n                     }\n-                    DownloadServiceInterface.get().download(context, false, requests.toArray(new DownloadRequest[0]));\n                 }\n             }\n         };\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\nindex 94a7334f38..d83557b0c7 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n@@ -16,10 +16,9 @@\n import java.util.Map;\n \n import de.danoeh.antennapod.core.util.LongList;\n-import de.danoeh.antennapod.core.util.comparator.DownloadStatusComparator;\n+import de.danoeh.antennapod.core.util.comparator.DownloadResultComparator;\n import de.danoeh.antennapod.core.util.comparator.FeedItemPubdateComparator;\n import de.danoeh.antennapod.core.util.comparator.PlaybackCompletionDateComparator;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n import de.danoeh.antennapod.model.feed.Chapter;\n import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.model.feed.FeedItem;\n@@ -28,14 +27,15 @@\n import de.danoeh.antennapod.model.feed.FeedPreferences;\n import de.danoeh.antennapod.model.feed.SortOrder;\n import de.danoeh.antennapod.model.feed.SubscriptionsFilter;\n+import de.danoeh.antennapod.storage.preferences.UserPreferences;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.storage.database.PodDBAdapter;\n import de.danoeh.antennapod.storage.database.mapper.ChapterCursorMapper;\n-import de.danoeh.antennapod.storage.database.mapper.DownloadStatusCursorMapper;\n+import de.danoeh.antennapod.storage.database.mapper.DownloadResultCursorMapper;\n import de.danoeh.antennapod.storage.database.mapper.FeedCursorMapper;\n import de.danoeh.antennapod.storage.database.mapper.FeedItemCursorMapper;\n import de.danoeh.antennapod.storage.database.mapper.FeedMediaCursorMapper;\n import de.danoeh.antennapod.storage.database.mapper.FeedPreferencesCursorMapper;\n-import de.danoeh.antennapod.storage.preferences.UserPreferences;\n \n /**\n  * Provides methods for reading data from the AntennaPod database.\n@@ -394,17 +394,17 @@ public static long getPlaybackHistoryLength() {\n      * @return A list with DownloadStatus objects that represent the download log.\n      * The size of the returned list is limited by {@link #DOWNLOAD_LOG_SIZE}.\n      */\n-    public static List<DownloadStatus> getDownloadLog() {\n+    public static List<DownloadResult> getDownloadLog() {\n         Log.d(TAG, \"getDownloadLog() called\");\n \n         PodDBAdapter adapter = PodDBAdapter.getInstance();\n         adapter.open();\n         try (Cursor cursor = adapter.getDownloadLogCursor(DOWNLOAD_LOG_SIZE)) {\n-            List<DownloadStatus> downloadLog = new ArrayList<>(cursor.getCount());\n+            List<DownloadResult> downloadLog = new ArrayList<>(cursor.getCount());\n             while (cursor.moveToNext()) {\n-                downloadLog.add(DownloadStatusCursorMapper.convert(cursor));\n+                downloadLog.add(DownloadResultCursorMapper.convert(cursor));\n             }\n-            Collections.sort(downloadLog, new DownloadStatusComparator());\n+            Collections.sort(downloadLog, new DownloadResultComparator());\n             return downloadLog;\n         } finally {\n             adapter.close();\n@@ -418,17 +418,17 @@ public static List<DownloadStatus> getDownloadLog() {\n      * @return A list with DownloadStatus objects that represent the feed's download log,\n      * newest events first.\n      */\n-    public static List<DownloadStatus> getFeedDownloadLog(long feedId) {\n+    public static List<DownloadResult> getFeedDownloadLog(long feedId) {\n         Log.d(TAG, \"getFeedDownloadLog() called with: \" + \"feed = [\" + feedId + \"]\");\n \n         PodDBAdapter adapter = PodDBAdapter.getInstance();\n         adapter.open();\n         try (Cursor cursor = adapter.getDownloadLog(Feed.FEEDFILETYPE_FEED, feedId)) {\n-            List<DownloadStatus> downloadLog = new ArrayList<>(cursor.getCount());\n+            List<DownloadResult> downloadLog = new ArrayList<>(cursor.getCount());\n             while (cursor.moveToNext()) {\n-                downloadLog.add(DownloadStatusCursorMapper.convert(cursor));\n+                downloadLog.add(DownloadResultCursorMapper.convert(cursor));\n             }\n-            Collections.sort(downloadLog, new DownloadStatusComparator());\n+            Collections.sort(downloadLog, new DownloadResultComparator());\n             return downloadLog;\n         } finally {\n             adapter.close();\n@@ -717,10 +717,10 @@ public static FeedMedia getFeedMedia(final long mediaId) {\n         }\n     }\n \n-    public static List<FeedItem> getFeedItemsWithMedia(Long[] mediaIds) {\n+    public static List<FeedItem> getFeedItemsWithUrl(List<String> urls) {\n         PodDBAdapter adapter = PodDBAdapter.getInstance();\n         adapter.open();\n-        try (Cursor itemCursor = adapter.getFeedItemCursorByMediaIds(mediaIds)) {\n+        try (Cursor itemCursor = adapter.getFeedItemCursorByUrl(urls)) {\n             List<FeedItem> items = extractItemlistFromCursor(adapter, itemCursor);\n             loadAdditionalFeedItemListData(items);\n             Collections.sort(items, new PlaybackCompletionDateComparator());\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java\nindex 8b79d594c6..e3ac7a7e18 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBTasks.java\n@@ -7,14 +7,13 @@\n import androidx.annotation.VisibleForTesting;\n import de.danoeh.antennapod.core.R;\n import de.danoeh.antennapod.core.sync.queue.SynchronizationQueueSink;\n-import de.danoeh.antennapod.core.util.LongList;\n import de.danoeh.antennapod.core.util.comparator.FeedItemPubdateComparator;\n import de.danoeh.antennapod.core.util.download.FeedUpdateManager;\n import de.danoeh.antennapod.event.FeedItemEvent;\n import de.danoeh.antennapod.event.FeedListUpdateEvent;\n import de.danoeh.antennapod.event.MessageEvent;\n import de.danoeh.antennapod.model.download.DownloadError;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n@@ -114,21 +113,6 @@ public static void notifyMissingFeedMediaFile(final Context context, final FeedM\n         EventBus.getDefault().post(new MessageEvent(context.getString(R.string.error_file_not_found)));\n     }\n \n-    public static List<FeedItem> enqueueFeedItemsToDownload(final Context context,\n-                       List<FeedItem> items) throws InterruptedException, ExecutionException {\n-        List<FeedItem> itemsToEnqueue = new ArrayList<>();\n-        if (UserPreferences.enqueueDownloadedEpisodes()) {\n-            LongList queueIDList = DBReader.getQueueIDList();\n-            for (FeedItem item : items) {\n-                if (!queueIDList.contains(item.getId())) {\n-                    itemsToEnqueue.add(item);\n-                }\n-            }\n-            DBWriter.addQueueItem(context, false, itemsToEnqueue.toArray(new FeedItem[0])).get();\n-        }\n-        return itemsToEnqueue;\n-    }\n-\n     /**\n      * Looks for non-downloaded episodes in the queue or list of unread items and request a download if\n      * 1. Network is available\n@@ -267,13 +251,13 @@ public static synchronized Feed updateFeed(Context context, Feed newFeed, boolea\n                 FeedItem possibleDuplicate = searchFeedItemGuessDuplicate(newFeed.getItems(), item);\n                 if (!newFeed.isLocalFeed() && possibleDuplicate != null && item != possibleDuplicate) {\n                     // Canonical episode is the first one returned (usually oldest)\n-                    DBWriter.addDownloadStatus(new DownloadStatus(savedFeed,\n+                    DBWriter.addDownloadStatus(new DownloadResult(savedFeed,\n                             item.getTitle(), DownloadError.ERROR_PARSER_EXCEPTION_DUPLICATE, false,\n                             \"The podcast host appears to have added the same episode twice. \"\n                                     + \"AntennaPod still refreshed the feed and attempted to repair it.\"\n                                     + \"\\n\\nOriginal episode:\\n\" + duplicateEpisodeDetails(item)\n                                     + \"\\n\\nSecond episode that is also in the feed:\\n\"\n-                                    + duplicateEpisodeDetails(possibleDuplicate), false));\n+                                    + duplicateEpisodeDetails(possibleDuplicate)));\n                     continue;\n                 }\n \n@@ -282,13 +266,13 @@ public static synchronized Feed updateFeed(Context context, Feed newFeed, boolea\n                     oldItem = searchFeedItemGuessDuplicate(savedFeed.getItems(), item);\n                     if (oldItem != null) {\n                         Log.d(TAG, \"Repaired duplicate: \" + oldItem + \", \" + item);\n-                        DBWriter.addDownloadStatus(new DownloadStatus(savedFeed,\n+                        DBWriter.addDownloadStatus(new DownloadResult(savedFeed,\n                                 item.getTitle(), DownloadError.ERROR_PARSER_EXCEPTION_DUPLICATE, false,\n                                 \"The podcast host changed the ID of an existing episode instead of just \"\n                                         + \"updating the episode itself. AntennaPod still refreshed the feed and \"\n                                         + \"attempted to repair it.\"\n                                         + \"\\n\\nOriginal episode:\\n\" + duplicateEpisodeDetails(oldItem)\n-                                        + \"\\n\\nNow the feed contains:\\n\" + duplicateEpisodeDetails(item), false));\n+                                        + \"\\n\\nNow the feed contains:\\n\" + duplicateEpisodeDetails(item)));\n                         oldItem.setItemIdentifier(item.getItemIdentifier());\n \n                         if (oldItem.isPlayed() && oldItem.getMedia() != null) {\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java\nindex dcee8a45a9..4815737f40 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java\n@@ -36,7 +36,7 @@\n import de.danoeh.antennapod.core.feed.FeedEvent;\n import de.danoeh.antennapod.core.preferences.PlaybackPreferences;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.core.sync.queue.SynchronizationQueueSink;\n import de.danoeh.antennapod.core.util.FeedItemPermutors;\n import de.danoeh.antennapod.core.util.IntentUtils;\n@@ -299,7 +299,7 @@ public static Future<?> addItemToPlaybackHistory(final FeedMedia media, Date dat\n      *\n      * @param status The DownloadStatus object.\n      */\n-    public static Future<?> addDownloadStatus(final DownloadStatus status) {\n+    public static Future<?> addDownloadStatus(final DownloadResult status) {\n         return dbExec.submit(() -> {\n             PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculator.java b/core/src/main/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculator.java\nindex b81f281e8f..4ed17c43fc 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculator.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculator.java\n@@ -8,9 +8,9 @@\n import java.util.List;\n import java.util.Random;\n \n-import de.danoeh.antennapod.core.service.download.DownloadService;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n+import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n import de.danoeh.antennapod.storage.preferences.UserPreferences.EnqueueLocation;\n import de.danoeh.antennapod.model.playback.Playable;\n \n@@ -74,7 +74,7 @@ private boolean isItemAtPositionDownloading(int position, List<FeedItem> curQueu\n         }\n         return curItem != null\n                 && curItem.getMedia() != null\n-                && DownloadService.isDownloadingFile(curItem.getMedia().getDownload_url());\n+                && DownloadServiceInterface.get().isDownloadingEpisode(curItem.getMedia().getDownload_url());\n     }\n \n     private static int getCurrentlyPlayingPosition(@NonNull List<FeedItem> curQueue,\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/util/FeedItemUtil.java b/core/src/main/java/de/danoeh/antennapod/core/util/FeedItemUtil.java\nindex 50b4d411fb..d848b5a307 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/util/FeedItemUtil.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/util/FeedItemUtil.java\n@@ -24,10 +24,10 @@ public static int indexOfItemWithId(List<FeedItem> items, long id) {\n         return -1;\n     }\n \n-    public static int indexOfItemWithMediaId(List<FeedItem> items, long mediaId) {\n-        for(int i=0; i < items.size(); i++) {\n+    public static int indexOfItemWithDownloadUrl(List<FeedItem> items, String downloadUrl) {\n+        for (int i = 0; i < items.size(); i++) {\n             FeedItem item = items.get(i);\n-            if(item != null && item.getMedia() != null && item.getMedia().getId() == mediaId) {\n+            if (item != null && item.getMedia() != null && item.getMedia().getDownload_url().equals(downloadUrl)) {\n                 return i;\n             }\n         }\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/util/comparator/DownloadResultComparator.java b/core/src/main/java/de/danoeh/antennapod/core/util/comparator/DownloadResultComparator.java\nnew file mode 100644\nindex 0000000000..d1d50fc8a6\n--- /dev/null\n+++ b/core/src/main/java/de/danoeh/antennapod/core/util/comparator/DownloadResultComparator.java\n@@ -0,0 +1,14 @@\n+package de.danoeh.antennapod.core.util.comparator;\n+\n+import java.util.Comparator;\n+\n+import de.danoeh.antennapod.model.download.DownloadResult;\n+\n+/** Compares the completion date of two DownloadResult objects. */\n+public class DownloadResultComparator implements Comparator<DownloadResult> {\n+\n+    @Override\n+    public int compare(DownloadResult lhs, DownloadResult rhs) {\n+        return rhs.getCompletionDate().compareTo(lhs.getCompletionDate());\n+    }\n+}\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/util/comparator/DownloadStatusComparator.java b/core/src/main/java/de/danoeh/antennapod/core/util/comparator/DownloadStatusComparator.java\ndeleted file mode 100644\nindex 68b38ec7f0..0000000000\n--- a/core/src/main/java/de/danoeh/antennapod/core/util/comparator/DownloadStatusComparator.java\n+++ /dev/null\n@@ -1,15 +0,0 @@\n-package de.danoeh.antennapod.core.util.comparator;\n-\n-import java.util.Comparator;\n-\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n-\n-/** Compares the completion date of two Downloadstatus objects. */\n-public class DownloadStatusComparator implements Comparator<DownloadStatus> {\n-\n-\t@Override\n-\tpublic int compare(DownloadStatus lhs, DownloadStatus rhs) {\n-\t\treturn rhs.getCompletionDate().compareTo(lhs.getCompletionDate());\n-\t}\n-\n-}\ndiff --git a/event/build.gradle b/event/build.gradle\nindex 033fc5a3c9..b1efac85de 100644\n--- a/event/build.gradle\n+++ b/event/build.gradle\n@@ -5,6 +5,7 @@ apply from: \"../common.gradle\"\n \n dependencies {\n     implementation project(':model')\n+    implementation \"androidx.core:core:$coreVersion\"\n \n     annotationProcessor \"androidx.annotation:annotation:$annotationVersion\"\n }\ndiff --git a/event/src/main/java/de/danoeh/antennapod/event/EpisodeDownloadEvent.java b/event/src/main/java/de/danoeh/antennapod/event/EpisodeDownloadEvent.java\nnew file mode 100644\nindex 0000000000..c9790d18a7\n--- /dev/null\n+++ b/event/src/main/java/de/danoeh/antennapod/event/EpisodeDownloadEvent.java\n@@ -0,0 +1,18 @@\n+package de.danoeh.antennapod.event;\n+\n+import de.danoeh.antennapod.model.download.DownloadStatus;\n+\n+import java.util.Map;\n+import java.util.Set;\n+\n+public class EpisodeDownloadEvent {\n+    private final Map<String, DownloadStatus> map;\n+\n+    public EpisodeDownloadEvent(Map<String, DownloadStatus> map) {\n+        this.map = map;\n+    }\n+\n+    public Set<String> getUrls() {\n+        return map.keySet();\n+    }\n+}\ndiff --git a/event/src/main/java/de/danoeh/antennapod/event/MessageEvent.java b/event/src/main/java/de/danoeh/antennapod/event/MessageEvent.java\nindex 3f6b2db32d..7f1cb20e28 100644\n--- a/event/src/main/java/de/danoeh/antennapod/event/MessageEvent.java\n+++ b/event/src/main/java/de/danoeh/antennapod/event/MessageEvent.java\n@@ -1,21 +1,27 @@\n package de.danoeh.antennapod.event;\n \n+import android.content.Context;\n import androidx.annotation.Nullable;\n \n+import androidx.core.util.Consumer;\n+\n public class MessageEvent {\n \n     public final String message;\n \n     @Nullable\n-    public final Runnable action;\n+    public final Consumer<Context> action;\n+\n+    @Nullable\n+    public final String actionText;\n \n     public MessageEvent(String message) {\n-        this(message, null);\n+        this(message, null, null);\n     }\n \n-    public MessageEvent(String message, Runnable action) {\n+    public MessageEvent(String message, Consumer<Context> action, String actionText) {\n         this.message = message;\n         this.action = action;\n+        this.actionText = actionText;\n     }\n-\n }\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/download/DownloadResult.java b/model/src/main/java/de/danoeh/antennapod/model/download/DownloadResult.java\nnew file mode 100644\nindex 0000000000..66901cf650\n--- /dev/null\n+++ b/model/src/main/java/de/danoeh/antennapod/model/download/DownloadResult.java\n@@ -0,0 +1,128 @@\n+package de.danoeh.antennapod.model.download;\n+\n+import androidx.annotation.NonNull;\n+\n+import java.util.Date;\n+\n+import de.danoeh.antennapod.model.feed.FeedFile;\n+\n+/**\n+ * Contains status attributes for one download\n+ */\n+public class DownloadResult {\n+    /**\n+     * Downloaders should use this constant for the size attribute if necessary\n+     * so that the listadapters etc. can react properly.\n+     */\n+    public static final int SIZE_UNKNOWN = -1;\n+\n+    /**\n+     * A human-readable string which is shown to the user so that he can\n+     * identify the download. Should be the title of the item/feed/media or the\n+     * URL if the download has no other title.\n+     */\n+    private final String title;\n+    private final long feedfileId;\n+    /**\n+     * Is used to determine the type of the feedfile even if the feedfile does\n+     * not exist anymore. The value should be FEEDFILETYPE_FEED,\n+     * FEEDFILETYPE_FEEDIMAGE or FEEDFILETYPE_FEEDMEDIA\n+     */\n+    private final int feedfileType;\n+    /**\n+     * Unique id for storing the object in database.\n+     */\n+    private long id;\n+    private DownloadError reason;\n+    /**\n+     * A message which can be presented to the user to give more information.\n+     * Should be null if Download was successful.\n+     */\n+    private String reasonDetailed;\n+    private boolean successful;\n+    private final Date completionDate;\n+\n+    /**\n+     * Constructor for creating new completed downloads.\n+     */\n+    public DownloadResult(@NonNull FeedFile feedfile, String title, DownloadError reason, boolean successful,\n+                          String reasonDetailed) {\n+        this(0, title, feedfile.getId(), feedfile.getTypeAsInt(), successful, reason, new Date(),\n+                reasonDetailed);\n+    }\n+\n+    public DownloadResult(long id, String title, long feedfileId, int feedfileType, boolean successful,\n+                          DownloadError reason, Date completionDate,\n+                          String reasonDetailed) {\n+        this.id = id;\n+        this.title = title;\n+        this.feedfileId = feedfileId;\n+        this.reason = reason;\n+        this.successful = successful;\n+        this.completionDate = (Date) completionDate.clone();\n+        this.reasonDetailed = reasonDetailed;\n+        this.feedfileType = feedfileType;\n+    }\n+\n+    @Override\n+    @NonNull\n+    public String toString() {\n+        return \"DownloadStatus [id=\" + id + \", title=\" + title + \", reason=\"\n+                + reason + \", reasonDetailed=\" + reasonDetailed\n+                + \", successful=\" + successful + \", completionDate=\"\n+                + completionDate + \", feedfileId=\" + feedfileId\n+                + \", feedfileType=\" + feedfileType + \"]\";\n+    }\n+\n+    public long getId() {\n+        return id;\n+    }\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public String getTitle() {\n+        return title;\n+    }\n+\n+    public DownloadError getReason() {\n+        return reason;\n+    }\n+\n+    public String getReasonDetailed() {\n+        return reasonDetailed;\n+    }\n+\n+    public boolean isSuccessful() {\n+        return successful;\n+    }\n+\n+    public Date getCompletionDate() {\n+        return (Date) completionDate.clone();\n+    }\n+\n+    public long getFeedfileId() {\n+        return feedfileId;\n+    }\n+\n+    public int getFeedfileType() {\n+        return feedfileType;\n+    }\n+\n+    public void setSuccessful() {\n+        this.successful = true;\n+        this.reason = DownloadError.SUCCESS;\n+    }\n+\n+    public void setFailed(DownloadError reason, String reasonDetailed) {\n+        this.successful = false;\n+        this.reason = reason;\n+        this.reasonDetailed = reasonDetailed;\n+    }\n+\n+    public void setCancelled() {\n+        this.successful = false;\n+        this.reason = DownloadError.ERROR_DOWNLOAD_CANCELLED;\n+    }\n+}\n\\ No newline at end of file\ndiff --git a/model/src/main/java/de/danoeh/antennapod/model/download/DownloadStatus.java b/model/src/main/java/de/danoeh/antennapod/model/download/DownloadStatus.java\nindex 0a18973dfa..823c183d23 100644\n--- a/model/src/main/java/de/danoeh/antennapod/model/download/DownloadStatus.java\n+++ b/model/src/main/java/de/danoeh/antennapod/model/download/DownloadStatus.java\n@@ -1,153 +1,23 @@\n package de.danoeh.antennapod.model.download;\n \n-import androidx.annotation.NonNull;\n-\n-import java.util.Date;\n-\n-import de.danoeh.antennapod.model.feed.FeedFile;\n-\n-/**\n- * Contains status attributes for one download\n- */\n public class DownloadStatus {\n-    /**\n-     * Downloaders should use this constant for the size attribute if necessary\n-     * so that the listadapters etc. can react properly.\n-     */\n-    public static final int SIZE_UNKNOWN = -1;\n+    public static final int STATE_QUEUED = 0;\n+    public static final int STATE_COMPLETED = 1; // Both successful and not successful\n+    public static final int STATE_RUNNING = 2;\n \n-    // ----------------------------------- ATTRIBUTES STORED IN DB\n-    /**\n-     * A human-readable string which is shown to the user so that he can\n-     * identify the download. Should be the title of the item/feed/media or the\n-     * URL if the download has no other title.\n-     */\n-    private final String title;\n-    private final long feedfileId;\n-    /**\n-     * Is used to determine the type of the feedfile even if the feedfile does\n-     * not exist anymore. The value should be FEEDFILETYPE_FEED,\n-     * FEEDFILETYPE_FEEDIMAGE or FEEDFILETYPE_FEEDMEDIA\n-     */\n-    private final int feedfileType;\n-    private final boolean initiatedByUser;\n-    /**\n-     * Unique id for storing the object in database.\n-     */\n-    private long id;\n-    private DownloadError reason;\n-    /**\n-     * A message which can be presented to the user to give more information.\n-     * Should be null if Download was successful.\n-     */\n-    private String reasonDetailed;\n-    private boolean successful;\n-    private final Date completionDate;\n-    // ------------------------------------ NOT STORED IN DB\n-    private boolean done;\n-    private boolean cancelled;\n-\n-    /**\n-     * Constructor for creating new completed downloads.\n-     */\n-    public DownloadStatus(@NonNull FeedFile feedfile, String title, DownloadError reason, boolean successful,\n-                          String reasonDetailed, boolean initiatedByUser) {\n-        this(0, title, feedfile.getId(), feedfile.getTypeAsInt(), successful, false, true, reason, new Date(),\n-                reasonDetailed, initiatedByUser);\n-    }\n-\n-    public DownloadStatus(long id, String title, long feedfileId, int feedfileType, boolean successful,\n-                          boolean cancelled, boolean done, DownloadError reason, Date completionDate,\n-                          String reasonDetailed, boolean initiatedByUser) {\n-        this.id = id;\n-        this.title = title;\n-        this.feedfileId = feedfileId;\n-        this.reason = reason;\n-        this.successful = successful;\n-        this.cancelled = cancelled;\n-        this.done = done;\n-        this.completionDate = (Date) completionDate.clone();\n-        this.reasonDetailed = reasonDetailed;\n-        this.feedfileType = feedfileType;\n-        this.initiatedByUser = initiatedByUser;\n-    }\n-\n-    @Override\n-    @NonNull\n-    public String toString() {\n-        return \"DownloadStatus [id=\" + id + \", title=\" + title + \", reason=\"\n-                + reason + \", reasonDetailed=\" + reasonDetailed\n-                + \", successful=\" + successful + \", completionDate=\"\n-                + completionDate + \", feedfileId=\" + feedfileId\n-                + \", feedfileType=\" + feedfileType + \", done=\" + done\n-                + \", cancelled=\" + cancelled + \"]\";\n-    }\n-\n-    public long getId() {\n-        return id;\n-    }\n-\n-    public void setId(long id) {\n-        this.id = id;\n-    }\n-\n-    public String getTitle() {\n-        return title;\n-    }\n-\n-    public DownloadError getReason() {\n-        return reason;\n-    }\n-\n-    public String getReasonDetailed() {\n-        return reasonDetailed;\n-    }\n-\n-    public boolean isSuccessful() {\n-        return successful;\n-    }\n-\n-    public Date getCompletionDate() {\n-        return (Date) completionDate.clone();\n-    }\n-\n-    public long getFeedfileId() {\n-        return feedfileId;\n-    }\n-\n-    public int getFeedfileType() {\n-        return feedfileType;\n-    }\n-\n-    public boolean isInitiatedByUser() {\n-        return initiatedByUser;\n-    }\n-\n-    public boolean isDone() {\n-        return done;\n-    }\n-\n-    public boolean isCancelled() {\n-        return cancelled;\n-    }\n+    private final int state;\n+    private final int progress;\n \n-    public void setSuccessful() {\n-        this.successful = true;\n-        this.reason = DownloadError.SUCCESS;\n-        this.done = true;\n+    public DownloadStatus(int state, int progress) {\n+        this.state = state;\n+        this.progress = progress;\n     }\n \n-    public void setFailed(DownloadError reason, String reasonDetailed) {\n-        this.successful = false;\n-        this.reason = reason;\n-        this.reasonDetailed = reasonDetailed;\n-        this.done = true;\n+    public int getState() {\n+        return state;\n     }\n \n-    public void setCancelled() {\n-        this.successful = false;\n-        this.reason = DownloadError.ERROR_DOWNLOAD_CANCELLED;\n-        this.done = true;\n-        this.cancelled = true;\n+    public int getProgress() {\n+        return progress;\n     }\n-}\n\\ No newline at end of file\n+}\ndiff --git a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterface.java b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterface.java\nindex b5d0cd9914..5fac79ce8b 100644\n--- a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterface.java\n+++ b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterface.java\n@@ -1,10 +1,20 @@\n package de.danoeh.antennapod.net.download.serviceinterface;\n \n import android.content.Context;\n-import android.content.Intent;\n+import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.feed.FeedItem;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n \n public abstract class DownloadServiceInterface {\n+    public static final String WORK_TAG = \"episodeDownload\";\n+    public static final String WORK_TAG_EPISODE_URL = \"episodeUrl:\";\n+    public static final String WORK_DATA_PROGRESS = \"progress\";\n+    public static final String WORK_DATA_MEDIA_ID = \"media_id\";\n+    public static final String WORK_DATA_WAS_QUEUED = \"was_queued\";\n     private static DownloadServiceInterface impl;\n+    private Map<String, DownloadStatus> currentDownloads = new HashMap<>();\n \n     public static DownloadServiceInterface get() {\n         return impl;\n@@ -14,13 +24,35 @@ public static void setImpl(DownloadServiceInterface impl) {\n         DownloadServiceInterface.impl = impl;\n     }\n \n-    public abstract void download(Context context, boolean cleanupMedia, DownloadRequest... requests);\n+    public void setCurrentDownloads(Map<String, DownloadStatus> currentDownloads) {\n+        this.currentDownloads = currentDownloads;\n+    }\n \n-    public abstract Intent makeDownloadIntent(Context context, boolean cleanupMedia, DownloadRequest... requests);\n+    /**\n+     * Download immediately after user action.\n+     */\n+    public abstract void downloadNow(Context context, FeedItem item, boolean ignoreConstraints);\n \n-    public abstract void refreshAllFeeds(Context context, boolean initiatedByUser);\n+    /**\n+     * Download when device seems fit.\n+     */\n+    public abstract void download(Context context, FeedItem item);\n \n     public abstract void cancel(Context context, String url);\n \n     public abstract void cancelAll(Context context);\n+\n+    public boolean isDownloadingEpisode(String url) {\n+        return currentDownloads.containsKey(url)\n+                && currentDownloads.get(url).getState() != DownloadStatus.STATE_COMPLETED;\n+    }\n+\n+    public boolean isEpisodeQueued(String url) {\n+        return currentDownloads.containsKey(url)\n+                && currentDownloads.get(url).getState() == DownloadStatus.STATE_QUEUED;\n+    }\n+\n+    public int getProgress(String url) {\n+        return isDownloadingEpisode(url) ? currentDownloads.get(url).getProgress() : -1;\n+    }\n }\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\nindex 40933e8d14..21f12e2230 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\n@@ -35,7 +35,7 @@\n import de.danoeh.antennapod.model.feed.FeedItemFilter;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n import de.danoeh.antennapod.model.feed.FeedPreferences;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.model.feed.SortOrder;\n import de.danoeh.antennapod.storage.database.mapper.FeedItemFilterQuery;\n import de.danoeh.antennapod.storage.database.mapper.FeedItemSortQuery;\n@@ -757,7 +757,7 @@ public void setFeedCustomTitle(long feedId, String customTitle) {\n     /**\n      * Inserts or updates a download status.\n      */\n-    public long setDownloadStatus(DownloadStatus status) {\n+    public long setDownloadStatus(DownloadResult status) {\n         ContentValues values = new ContentValues();\n         values.put(KEY_FEEDFILE, status.getFeedfileId());\n         values.put(KEY_FEEDFILETYPE, status.getFeedfileType());\n@@ -1142,12 +1142,19 @@ public final Cursor getFeedItemCursor(final String[] ids) {\n         return db.rawQuery(query, null);\n     }\n \n-    public final Cursor getFeedItemCursorByMediaIds(final Long[] ids) {\n-        if (ids.length > IN_OPERATOR_MAXIMUM) {\n+    public final Cursor getFeedItemCursorByUrl(List<String> urls) {\n+        if (urls.size() > IN_OPERATOR_MAXIMUM) {\n             throw new IllegalArgumentException(\"number of IDs must not be larger than \" + IN_OPERATOR_MAXIMUM);\n         }\n+        StringBuilder urlsString = new StringBuilder();\n+        for (int i = 0; i < urls.size(); i++) {\n+            if (i != 0) {\n+                urlsString.append(\",\");\n+            }\n+            urlsString.append(DatabaseUtils.sqlEscapeString(urls.get(i)));\n+        }\n         final String query = SELECT_FEED_ITEMS_AND_MEDIA\n-                + \" WHERE \" + SELECT_KEY_MEDIA_ID + \" IN (\" + TextUtils.join(\",\", ids) + \")\";\n+                + \" WHERE \" + KEY_DOWNLOAD_URL + \" IN (\" + urlsString + \")\";\n         return db.rawQuery(query, null);\n     }\n \ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/DownloadStatusCursorMapper.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/DownloadResultCursorMapper.java\nsimilarity index 73%\nrename from storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/DownloadStatusCursorMapper.java\nrename to storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/DownloadResultCursorMapper.java\nindex 1b8f3c7263..d8f40d6a36 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/DownloadStatusCursorMapper.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/mapper/DownloadResultCursorMapper.java\n@@ -2,21 +2,21 @@\n \n import android.database.Cursor;\n import androidx.annotation.NonNull;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.model.download.DownloadError;\n import de.danoeh.antennapod.storage.database.PodDBAdapter;\n \n import java.util.Date;\n \n /**\n- * Converts a {@link Cursor} to a {@link DownloadStatus} object.\n+ * Converts a {@link Cursor} to a {@link DownloadResult} object.\n  */\n-public abstract class DownloadStatusCursorMapper {\n+public abstract class DownloadResultCursorMapper {\n     /**\n-     * Create a {@link DownloadStatus} instance from a database row (cursor).\n+     * Create a {@link DownloadResult} instance from a database row (cursor).\n      */\n     @NonNull\n-    public static DownloadStatus convert(@NonNull Cursor cursor) {\n+    public static DownloadResult convert(@NonNull Cursor cursor) {\n         int indexId = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_ID);\n         int indexTitle = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_DOWNLOADSTATUS_TITLE);\n         int indexFeedFile = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_FEEDFILE);\n@@ -26,10 +26,10 @@ public static DownloadStatus convert(@NonNull Cursor cursor) {\n         int indexCompletionDate = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_COMPLETION_DATE);\n         int indexReasonDetailed = cursor.getColumnIndexOrThrow(PodDBAdapter.KEY_REASON_DETAILED);\n \n-        return new DownloadStatus(cursor.getLong(indexId), cursor.getString(indexTitle), cursor.getLong(indexFeedFile),\n-                cursor.getInt(indexFileFileType), cursor.getInt(indexSuccessful) > 0, false, true,\n+        return new DownloadResult(cursor.getLong(indexId), cursor.getString(indexTitle), cursor.getLong(indexFeedFile),\n+                cursor.getInt(indexFileFileType), cursor.getInt(indexSuccessful) > 0,\n                 DownloadError.fromCode(cursor.getInt(indexReason)),\n                 new Date(cursor.getLong(indexCompletionDate)),\n-                cursor.getString(indexReasonDetailed), false);\n+                cursor.getString(indexReasonDetailed));\n     }\n }\ndiff --git a/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java b/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\nindex 8a19300bb8..f2b122fcca 100644\n--- a/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\n+++ b/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\n@@ -90,7 +90,6 @@ private UserPreferences(){}\n     public static final String PREF_UPDATE_INTERVAL = \"prefAutoUpdateIntervall\";\n     private static final String PREF_MOBILE_UPDATE = \"prefMobileUpdateTypes\";\n     public static final String PREF_EPISODE_CLEANUP = \"prefEpisodeCleanup\";\n-    public static final String PREF_PARALLEL_DOWNLOADS = \"prefParallelDownloads\";\n     public static final String PREF_EPISODE_CACHE_SIZE = \"prefEpisodeCacheSize\";\n     public static final String PREF_ENABLE_AUTODL = \"prefEnableAutoDl\";\n     public static final String PREF_ENABLE_AUTODL_ON_BATTERY = \"prefEnableAutoDownloadOnBattery\";\n@@ -525,10 +524,6 @@ public static void setAllowMobileSync(boolean allow) {\n         setAllowMobileFor(\"sync\", allow);\n     }\n \n-    public static int getParallelDownloads() {\n-        return Integer.parseInt(prefs.getString(PREF_PARALLEL_DOWNLOADS, \"4\"));\n-    }\n-\n     /**\n      * Returns the capacity of the episode cache. This method will return the\n      * negative integer EPISODE_CACHE_SIZE_UNLIMITED if the cache size is set to\ndiff --git a/ui/app-start-intent/src/main/java/de/danoeh/antennapod/ui/appstartintent/DownloadAuthenticationActivityStarter.java b/ui/app-start-intent/src/main/java/de/danoeh/antennapod/ui/appstartintent/DownloadAuthenticationActivityStarter.java\ndeleted file mode 100644\nindex 03c5e915e2..0000000000\n--- a/ui/app-start-intent/src/main/java/de/danoeh/antennapod/ui/appstartintent/DownloadAuthenticationActivityStarter.java\n+++ /dev/null\n@@ -1,39 +0,0 @@\n-package de.danoeh.antennapod.ui.appstartintent;\n-\n-import android.app.PendingIntent;\n-import android.content.Context;\n-import android.content.Intent;\n-import android.os.Build;\n-import android.os.Parcelable;\n-\n-/**\n- * Launches the download authentication activity of the app with specific arguments.\n- * Does not require a dependency on the actual implementation of the activity.\n- */\n-public class DownloadAuthenticationActivityStarter {\n-    public static final String INTENT = \"de.danoeh.antennapod.intents.DOWNLOAD_AUTH_ACTIVITY\";\n-    public static final String EXTRA_DOWNLOAD_REQUEST = \"download_request\";\n-\n-    private final Intent intent;\n-    private final Context context;\n-    private final long feedFileId;\n-\n-    public DownloadAuthenticationActivityStarter(Context context, long feedFileId, Parcelable downloadRequest) {\n-        this.context = context;\n-        this.feedFileId = feedFileId;\n-        intent = new Intent(INTENT);\n-        intent.setAction(\"request\" + feedFileId);\n-        intent.putExtra(EXTRA_DOWNLOAD_REQUEST, downloadRequest);\n-        intent.setPackage(context.getPackageName());\n-    }\n-\n-    public Intent getIntent() {\n-        return intent;\n-    }\n-\n-    public PendingIntent getPendingIntent() {\n-        return PendingIntent.getActivity(context.getApplicationContext(),\n-                (\"downloadAuth\" + feedFileId).hashCode(), getIntent(),\n-                PendingIntent.FLAG_ONE_SHOT | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n-    }\n-}\ndiff --git a/ui/app-start-intent/src/main/java/de/danoeh/antennapod/ui/appstartintent/MainActivityStarter.java b/ui/app-start-intent/src/main/java/de/danoeh/antennapod/ui/appstartintent/MainActivityStarter.java\nindex 1463978ee5..c635ff0cc8 100644\n--- a/ui/app-start-intent/src/main/java/de/danoeh/antennapod/ui/appstartintent/MainActivityStarter.java\n+++ b/ui/app-start-intent/src/main/java/de/danoeh/antennapod/ui/appstartintent/MainActivityStarter.java\n@@ -17,6 +17,7 @@ public class MainActivityStarter {\n     public static final String EXTRA_ADD_TO_BACK_STACK = \"add_to_back_stack\";\n     public static final String EXTRA_FRAGMENT_TAG = \"fragment_tag\";\n     public static final String EXTRA_OPEN_DRAWER = \"open_drawer\";\n+    public static final String EXTRA_OPEN_DOWNLOAD_LOGS = \"open_download_logs\";\n     public static final String EXTRA_FRAGMENT_ARGS = \"fragment_args\";\n \n     private final Intent intent;\n@@ -30,6 +31,9 @@ public MainActivityStarter(Context context) {\n     }\n \n     public Intent getIntent() {\n+        if (fragmentArgs != null) {\n+            intent.putExtra(EXTRA_FRAGMENT_ARGS, fragmentArgs);\n+        }\n         return intent;\n     }\n \n@@ -67,6 +71,11 @@ public MainActivityStarter withDrawerOpen() {\n         return this;\n     }\n \n+    public MainActivityStarter withDownloadLogsOpen() {\n+        intent.putExtra(EXTRA_OPEN_DOWNLOAD_LOGS, true);\n+        return this;\n+    }\n+\n     public MainActivityStarter withFragmentArgs(String name, boolean value) {\n         if (fragmentArgs == null) {\n             fragmentArgs = new Bundle();\ndiff --git a/ui/common/src/main/java/de/danoeh/antennapod/ui/common/CircularProgressBar.java b/ui/common/src/main/java/de/danoeh/antennapod/ui/common/CircularProgressBar.java\nindex a693c28b07..42f63bd9d4 100644\n--- a/ui/common/src/main/java/de/danoeh/antennapod/ui/common/CircularProgressBar.java\n+++ b/ui/common/src/main/java/de/danoeh/antennapod/ui/common/CircularProgressBar.java\n@@ -4,7 +4,9 @@\n import android.content.res.TypedArray;\n import android.graphics.Canvas;\n import android.graphics.Color;\n+import android.graphics.DashPathEffect;\n import android.graphics.Paint;\n+import android.graphics.PathEffect;\n import android.graphics.RectF;\n import android.util.AttributeSet;\n import android.view.View;\n@@ -13,11 +15,13 @@\n public class CircularProgressBar extends View {\n     public static final float MINIMUM_PERCENTAGE = 0.005f;\n     public static final float MAXIMUM_PERCENTAGE = 1 - MINIMUM_PERCENTAGE;\n+    private static final PathEffect DASHED = new DashPathEffect(new float[] {5f, 5f}, 0f);\n \n     private final Paint paintBackground = new Paint();\n     private final Paint paintProgress = new Paint();\n     private float percentage = 0;\n     private float targetPercentage = 0;\n+    private boolean isIndeterminate = false;\n     private Object tag = null;\n     private final RectF bounds = new RectF();\n \n@@ -73,9 +77,10 @@ protected void onDraw(Canvas canvas) {\n \n         float padding = getHeight() * 0.07f;\n         paintBackground.setStrokeWidth(getHeight() * 0.02f);\n+        paintBackground.setPathEffect(isIndeterminate ? DASHED : null);\n         paintProgress.setStrokeWidth(padding);\n         bounds.set(padding, padding, getWidth() - padding, getHeight() - padding);\n-        canvas.drawArc(bounds, 0, 360, false, paintBackground);\n+        canvas.drawArc(bounds, -90, 360, false, paintBackground);\n \n         if (MINIMUM_PERCENTAGE <= percentage && percentage <= MAXIMUM_PERCENTAGE) {\n             canvas.drawArc(bounds, -90, percentage * 360, false, paintProgress);\n@@ -92,4 +97,8 @@ protected void onDraw(Canvas canvas) {\n             invalidate();\n         }\n     }\n+\n+    public void setIndeterminate(boolean indeterminate) {\n+        isIndeterminate = indeterminate;\n+    }\n }\ndiff --git a/ui/i18n/src/main/res/values/strings.xml b/ui/i18n/src/main/res/values/strings.xml\nindex 59fc8b4e50..1959a2252e 100644\n--- a/ui/i18n/src/main/res/values/strings.xml\n+++ b/ui/i18n/src/main/res/values/strings.xml\n@@ -130,7 +130,6 @@\n     <string name=\"feed_volume_reduction_off\">Off</string>\n     <string name=\"feed_volume_reduction_light\">Light</string>\n     <string name=\"feed_volume_reduction_heavy\">Heavy</string>\n-    <string name=\"parallel_downloads\">%1$d parallel downloads</string>\n     <string name=\"feed_auto_download_always\">Always</string>\n     <string name=\"feed_auto_download_never\">Never</string>\n     <string name=\"feed_new_episodes_action_add_to_inbox\">Add to Inbox</string>\n@@ -239,7 +238,6 @@\n         <item quantity=\"other\">%d episodes marked as unplayed.</item>\n     </plurals>\n     <string name=\"add_to_queue_label\">Add to Queue</string>\n-    <string name=\"added_to_queue_label\">Added to Queue</string>\n     <plurals name=\"added_to_queue_batch_label\">\n         <item quantity=\"one\">%d episode added to queue.</item>\n         <item quantity=\"other\">%d episodes added to queue.</item>\n@@ -266,6 +264,8 @@\n     <string name=\"download_running\">Download running</string>\n     <string name=\"download_error_details\">Details</string>\n     <string name=\"download_log_details_message\">%1$s \\n\\nTechnical reason: \\n%2$s \\n\\nFile URL:\\n%3$s</string>\n+    <string name=\"download_error_retrying\">Download of \\\"%1$s\\\" failed. Will be retried later.</string>\n+    <string name=\"download_error_not_retrying\">Download of \\\"%1$s\\\" failed.</string>\n     <string name=\"download_error_tap_for_details\">Tap to view details.</string>\n     <string name=\"download_error_device_not_found\">Storage Device not found</string>\n     <string name=\"download_error_insufficient_space\">There is not enough space left on your device.</string>\n@@ -277,7 +277,7 @@\n     <string name=\"download_error_not_found\">The podcast host\\'s server does not know where to find the file. It may have been deleted.</string>\n     <string name=\"download_error_connection_error\">Connection Error</string>\n     <string name=\"download_error_unknown_host\">Cannot find the server. Check if the address is typed correctly and if you have a working network connection.</string>\n-    <string name=\"download_error_unauthorized\">Authentication Error</string>\n+    <string name=\"download_error_unauthorized\">Authentication Error. Make sure that username and password are correct.</string>\n     <string name=\"download_error_file_type_type\">File Type Error</string>\n     <string name=\"download_error_forbidden\">The podcast host\\'s server refuses to respond.</string>\n     <string name=\"download_canceled_msg\">Download canceled</string>\n@@ -285,7 +285,6 @@\n     <string name=\"download_error_blocked\">The download was blocked by another app on your device (like a VPN or ad blocker).</string>\n     <string name=\"download_error_certificate\">Unable to establish a secure connection. This can mean that another app on your device (like a VPN or an ad blocker) blocked the download, or that something is wrong with the server certificates.</string>\n     <string name=\"download_report_title\">Downloads completed with error(s)</string>\n-    <string name=\"auto_download_report_title\">Auto-downloads completed</string>\n     <string name=\"download_error_io_error\">IO Error</string>\n     <string name=\"download_error_request_error\">Request Error</string>\n     <string name=\"download_error_db_access\">Database Access Error</string>\n@@ -293,8 +292,6 @@\n         <item quantity=\"one\">%d download left</item>\n         <item quantity=\"other\">%d downloads left</item>\n     </plurals>\n-    <string name=\"completing\">Completing\u2026</string>\n-    <string name=\"download_notification_title\">Downloading podcast data</string>\n     <string name=\"download_notification_title_feeds\">Refreshing podcasts</string>\n     <string name=\"download_notification_title_episodes\">Downloading episodes</string>\n     <string name=\"download_log_title_unknown\">Unknown Title</string>\n@@ -303,16 +300,14 @@\n     <string name=\"null_value_podcast_error\">No podcast was provided that could be shown.</string>\n     <string name=\"no_feed_url_podcast_found_by_search\">The suggested podcast did not have an RSS link, AntennaPod found a podcast that could match</string>\n     <string name=\"authentication_notification_title\">Authentication required</string>\n-    <string name=\"authentication_notification_msg\">The resource you requested requires a username and a password</string>\n     <string name=\"confirm_mobile_download_dialog_title\">Confirm Mobile Download</string>\n-    <string name=\"confirm_mobile_download_dialog_message_not_in_queue\">Downloading over mobile data connection is disabled in the settings.\\n\\nYou can choose to either only add the episode to the queue or you can allow downloading temporarily.\\n\\n<small>Your choice will be remembered for 10 minutes.</small></string>\n-    <string name=\"confirm_mobile_download_dialog_message\">Downloading over mobile data connection is disabled in the settings.\\n\\nDo you want to allow downloading temporarily?\\n\\n<small>Your choice will be remembered for 10 minutes.</small></string>\n+    <string name=\"confirm_mobile_download_dialog_message\">Downloading over mobile data connection is disabled in the settings. AntennaPod can download the episode later automatically when Wi-Fi is available.</string>\n+    <string name=\"confirm_mobile_download_dialog_download_later\">Download later</string>\n+    <string name=\"confirm_mobile_download_dialog_allow_this_time\">Download anyway</string>\n     <string name=\"confirm_mobile_streaming_notification_title\">Confirm Mobile streaming</string>\n     <string name=\"confirm_mobile_streaming_notification_message\">Streaming over mobile data connection is disabled in the settings. Tap to stream anyway.</string>\n     <string name=\"confirm_mobile_streaming_button_always\">Always</string>\n     <string name=\"confirm_mobile_streaming_button_once\">Once</string>\n-    <string name=\"confirm_mobile_download_dialog_only_add_to_queue\">Enqueue</string>\n-    <string name=\"confirm_mobile_download_dialog_enable_temporarily\">Allow temporarily</string>\n \n     <!-- Mediaplayer messages -->\n     <string name=\"playback_error_generic\"><![CDATA[The media file could not be played.\\n\\n- Try deleting and re-downloading the episode.\\n- Check your network connection, and make sure no VPN or login page is blocking access.\\n- Try long-pressing and sharing the \\\"Media address\\\" to your web browser to see if it can be played there. If not, contact the podcast creators.]]></string>\n@@ -453,7 +448,6 @@\n     <string name=\"pref_autodl_wifi_filter_sum\">Allow automatic download only for selected Wi-Fi networks.</string>\n     <string name=\"pref_automatic_download_on_battery_title\">Download when not charging</string>\n     <string name=\"pref_automatic_download_on_battery_sum\">Allow automatic download when the battery is not charging</string>\n-    <string name=\"pref_parallel_downloads_title\">Parallel Downloads</string>\n     <string name=\"pref_episode_cache_title\">Episode Cache</string>\n     <string name=\"pref_episode_cache_summary\">Total number of downloaded episodes cached on the device. Automatic download will be suspended if this number is reached.</string>\n     <string name=\"pref_episode_cover_title\">Use Episode Cover</string>\ndiff --git a/ui/png-icons/src/main/res/drawable/ic_notification_cancel.xml b/ui/png-icons/src/main/res/drawable/ic_notification_cancel.xml\ndeleted file mode 100644\nindex a5480c71f9..0000000000\n--- a/ui/png-icons/src/main/res/drawable/ic_notification_cancel.xml\n+++ /dev/null\n@@ -1,5 +0,0 @@\n-<vector android:height=\"24dp\"\n-    android:viewportHeight=\"24.0\" android:viewportWidth=\"24.0\"\n-    android:width=\"24dp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\n-    <path android:fillColor=\"#FFFFFFFF\" android:pathData=\"M12,2C6.47,2 2,6.47 2,12s4.47,10 10,10 10,-4.47 10,-10S17.53,2 12,2zM17,15.59L15.59,17 12,13.41 8.41,17 7,15.59 10.59,12 7,8.41 8.41,7 12,10.59 15.59,7 17,8.41 13.41,12 17,15.59z\"/>\n-</vector>\ndiff --git a/ui/png-icons/src/main/res/drawable/ic_notification_key.xml b/ui/png-icons/src/main/res/drawable/ic_notification_key.xml\ndeleted file mode 100644\nindex c8a817eeba..0000000000\n--- a/ui/png-icons/src/main/res/drawable/ic_notification_key.xml\n+++ /dev/null\n@@ -1,6 +0,0 @@\n-<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\n-        android:height=\"24dp\" android:viewportHeight=\"24.0\"\n-        android:viewportWidth=\"24.0\" android:width=\"24dp\">\n-    <path android:fillColor=\"#FFFFFFFF\"\n-          android:pathData=\"M12.65,10C11.83,7.67 9.61,6 7,6c-3.31,0 -6,2.69 -6,6s2.69,6 6,6c2.61,0 4.83,-1.67 5.65,-4H17v4h4v-4h2v-4H12.65zM7,14c-1.1,0 -2,-0.9 -2,-2s0.9,-2 2,-2 2,0.9 2,2 -0.9,2 -2,2z\"/>\n-</vector>\n", "test_patch": "diff --git a/app/src/androidTest/java/de/danoeh/antennapod/core/service/download/StubDownloader.java b/app/src/androidTest/java/de/danoeh/antennapod/core/service/download/StubDownloader.java\nindex 302301c85c..835af1f950 100644\n--- a/app/src/androidTest/java/de/danoeh/antennapod/core/service/download/StubDownloader.java\n+++ b/app/src/androidTest/java/de/danoeh/antennapod/core/service/download/StubDownloader.java\n@@ -2,7 +2,7 @@\n \n import androidx.annotation.NonNull;\n import androidx.core.util.Consumer;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n \n public class StubDownloader extends Downloader {\n@@ -10,9 +10,10 @@ public class StubDownloader extends Downloader {\n     private final long downloadTime;\n \n     @NonNull\n-    private final Consumer<DownloadStatus> onDownloadComplete;\n+    private final Consumer<DownloadResult> onDownloadComplete;\n \n-    public StubDownloader(@NonNull DownloadRequest request, long downloadTime, @NonNull Consumer<DownloadStatus> onDownloadComplete) {\n+    public StubDownloader(@NonNull DownloadRequest request, long downloadTime,\n+                          @NonNull Consumer<DownloadResult> onDownloadComplete) {\n         super(request);\n         this.downloadTime = downloadTime;\n         this.onDownloadComplete = onDownloadComplete;\n@@ -36,7 +37,7 @@ public DownloadRequest getDownloadRequest() {\n \n     @NonNull\n     @Override\n-    public DownloadStatus getResult() {\n+    public DownloadResult getResult() {\n         return super.getResult();\n     }\n \ndiff --git a/app/src/androidTest/java/de/test/antennapod/EspressoTestUtils.java b/app/src/androidTest/java/de/test/antennapod/EspressoTestUtils.java\nindex d652896381..a7575862b1 100644\n--- a/app/src/androidTest/java/de/test/antennapod/EspressoTestUtils.java\n+++ b/app/src/androidTest/java/de/test/antennapod/EspressoTestUtils.java\n@@ -24,7 +24,6 @@\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n-import de.danoeh.antennapod.core.service.download.DownloadService;\n import de.danoeh.antennapod.core.service.playback.PlaybackService;\n import de.danoeh.antennapod.dialog.RatingDialog;\n import de.danoeh.antennapod.fragment.NavDrawerFragment;\n@@ -224,21 +223,6 @@ public static void tryKillPlaybackService() {\n         InstrumentationRegistry.getInstrumentation().waitForIdleSync();\n     }\n \n-    public static void tryKillDownloadService() {\n-        Context context = InstrumentationRegistry.getInstrumentation().getTargetContext();\n-        context.stopService(new Intent(context, DownloadService.class));\n-        try {\n-            // Android has no reliable way to stop a service instantly.\n-            // Calling stopSelf marks allows the system to destroy the service but the actual call\n-            // to onDestroy takes until the next GC of the system, which we can not influence.\n-            // Try to wait for the service at least a bit.\n-            Awaitility.await().atMost(10, TimeUnit.SECONDS).until(() -> !DownloadService.isRunning);\n-        } catch (ConditionTimeoutException e) {\n-            e.printStackTrace();\n-        }\n-        InstrumentationRegistry.getInstrumentation().waitForIdleSync();\n-    }\n-\n     public static Matcher<View> actionBarOverflow() {\n         return allOf(isDisplayed(), withContentDescription(\"More options\"));\n     }\ndiff --git a/app/src/androidTest/java/de/test/antennapod/service/download/DownloadServiceTest.java b/app/src/androidTest/java/de/test/antennapod/service/download/DownloadServiceTest.java\ndeleted file mode 100644\nindex 97499b24a9..0000000000\n--- a/app/src/androidTest/java/de/test/antennapod/service/download/DownloadServiceTest.java\n+++ /dev/null\n@@ -1,217 +0,0 @@\n-package de.test.antennapod.service.download;\n-\n-import android.content.Context;\n-import android.content.Intent;\n-import androidx.annotation.NonNull;\n-import androidx.annotation.Nullable;\n-import androidx.core.util.Consumer;\n-import androidx.test.platform.app.InstrumentationRegistry;\n-import androidx.test.ext.junit.runners.AndroidJUnit4;\n-\n-import de.danoeh.antennapod.core.service.download.DownloadRequestCreator;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n-import de.test.antennapod.EspressoTestUtils;\n-import org.awaitility.Awaitility;\n-import org.awaitility.core.ConditionTimeoutException;\n-import org.junit.After;\n-import org.junit.Before;\n-import org.junit.Test;\n-import org.junit.runner.RunWith;\n-\n-import java.util.ArrayList;\n-import java.util.Date;\n-import java.util.List;\n-import java.util.concurrent.TimeUnit;\n-\n-import de.danoeh.antennapod.model.feed.Feed;\n-import de.danoeh.antennapod.model.feed.FeedItem;\n-import de.danoeh.antennapod.model.feed.FeedMedia;\n-import de.danoeh.antennapod.storage.preferences.UserPreferences;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n-import de.danoeh.antennapod.core.service.download.DownloadService;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n-import de.danoeh.antennapod.core.service.download.Downloader;\n-import de.danoeh.antennapod.core.service.download.DownloaderFactory;\n-import de.danoeh.antennapod.core.service.download.StubDownloader;\n-import de.danoeh.antennapod.core.storage.DBReader;\n-import de.danoeh.antennapod.core.storage.DBWriter;\n-\n-import static de.test.antennapod.util.event.DownloadEventListener.withDownloadEventListener;\n-import static de.test.antennapod.util.event.FeedItemEventListener.withFeedItemEventListener;\n-import static org.junit.Assert.assertEquals;\n-import static org.junit.Assert.assertFalse;\n-import static org.junit.Assert.assertTrue;\n-import static org.junit.Assert.fail;\n-\n-/**\n- * @see HttpDownloaderTest for the test of actual download (and saving the file).\n- */\n-@RunWith(AndroidJUnit4.class)\n-public class DownloadServiceTest {\n-    private FeedMedia testMedia11 = null;\n-\n-    private DownloaderFactory origFactory = null;\n-\n-    @Before\n-    public void setUp() throws Exception {\n-        EspressoTestUtils.clearDatabase();\n-        EspressoTestUtils.clearPreferences();\n-        origFactory = DownloadService.getDownloaderFactory();\n-        Feed testFeed = setUpTestFeeds();\n-        testMedia11 = testFeed.getItemAtIndex(0).getMedia();\n-    }\n-\n-    private Feed setUpTestFeeds() throws Exception {\n-        // To avoid complication in case of test failures, leaving behind orphaned\n-        // media files: add a timestamp so that each test run will have its own directory for media files.\n-        Feed feed = new Feed(\"url\", null, \"Test Feed title 1 \" + System.currentTimeMillis());\n-        List<FeedItem> items = new ArrayList<>();\n-        feed.setItems(items);\n-        FeedItem item1 = new FeedItem(0, \"Item 1-1\", \"Item 1-1\", \"url\", new Date(), FeedItem.NEW, feed);\n-        items.add(item1);\n-        FeedMedia media1 = new FeedMedia(0, item1, 123, 1, 1, \"audio/mp3\", null, \"http://example.com/episode.mp3\", false, null, 0, 0);\n-        item1.setMedia(media1);\n-\n-        DBWriter.setFeedItem(item1).get();\n-        return feed;\n-    }\n-\n-\n-    @After\n-    public void tearDown() throws Exception {\n-        DownloadService.setDownloaderFactory(origFactory);\n-        Context context = InstrumentationRegistry.getInstrumentation().getTargetContext();\n-        DownloadServiceInterface.get().cancelAll(context);\n-        context.stopService(new Intent(context, DownloadService.class));\n-        EspressoTestUtils.tryKillDownloadService();\n-    }\n-\n-    @Test\n-    public void testEventsGeneratedCaseMediaDownloadSuccess_noEnqueue() throws Exception {\n-        doTestEventsGeneratedCaseMediaDownloadSuccess(false, 1);\n-    }\n-\n-    @Test\n-    public void testEventsGeneratedCaseMediaDownloadSuccess_withEnqueue() throws Exception {\n-        // enqueue itself generates additional FeedItem event\n-        doTestEventsGeneratedCaseMediaDownloadSuccess(true, 2);\n-    }\n-\n-    private void doTestEventsGeneratedCaseMediaDownloadSuccess(boolean enqueueDownloaded,\n-                                                               int numEventsExpected)\n-            throws Exception {\n-        // create a stub download that returns successful\n-        //\n-        // OPEN: Ideally, I'd like the download time long enough so that multiple in-progress DownloadEvents\n-        // are generated (to simulate typical download), but it'll make download time quite long (1-2 seconds)\n-        // to do so\n-        DownloadService.setDownloaderFactory(new StubDownloaderFactory(50, DownloadStatus::setSuccessful));\n-\n-        UserPreferences.setEnqueueDownloadedEpisodes(enqueueDownloaded);\n-        withFeedItemEventListener(feedItemEventListener -> {\n-            try {\n-                assertEquals(0, feedItemEventListener.getEvents().size());\n-                assertFalse(\"The media in test should not yet been downloaded\",\n-                        DBReader.getFeedMedia(testMedia11.getId()).isDownloaded());\n-\n-                DownloadServiceInterface.get()\n-                        .download(InstrumentationRegistry.getInstrumentation().getTargetContext(), false,\n-                        DownloadRequestCreator.create(testMedia11).build());\n-                Awaitility.await()\n-                        .atMost(5000, TimeUnit.MILLISECONDS)\n-                        .until(() -> feedItemEventListener.getEvents().size() >= numEventsExpected);\n-                assertTrue(\"After media download has completed, FeedMedia object in db should indicate so.\",\n-                        DBReader.getFeedMedia(testMedia11.getId()).isDownloaded());\n-                assertEquals(\"The FeedItem should have been \" + (enqueueDownloaded ? \"\" : \"not \") +  \"enqueued\",\n-                        enqueueDownloaded,\n-                        DBReader.getQueueIDList().contains(testMedia11.getItem().getId()));\n-            } catch (ConditionTimeoutException cte) {\n-                fail(\"The expected FeedItemEvent (for media download complete) has not been posted. \"\n-                        + cte.getMessage());\n-            }\n-        });\n-    }\n-\n-    @Test\n-    public void testCancelDownload_UndoEnqueue_Normal() throws Exception {\n-        doTestCancelDownload_UndoEnqueue(false);\n-    }\n-\n-    @Test\n-    public void testCancelDownload_UndoEnqueue_AlreadyInQueue() throws Exception {\n-        doTestCancelDownload_UndoEnqueue(true);\n-    }\n-\n-    private void doTestCancelDownload_UndoEnqueue(boolean itemAlreadyInQueue) throws Exception {\n-        Context context = InstrumentationRegistry.getInstrumentation().getTargetContext();\n-        // let download take longer to ensure the test can cancel the download in time\n-        DownloadService.setDownloaderFactory(\n-                new StubDownloaderFactory(30000, DownloadStatus::setSuccessful));\n-        UserPreferences.setEnqueueDownloadedEpisodes(true);\n-        UserPreferences.setEnableAutodownload(false);\n-\n-        final long item1Id = testMedia11.getItem().getId();\n-        if (itemAlreadyInQueue) {\n-            // simulate item already in queue condition\n-            DBWriter.addQueueItem(context, false, item1Id).get();\n-            assertTrue(DBReader.getQueueIDList().contains(item1Id));\n-        } else {\n-            assertFalse(DBReader.getQueueIDList().contains(item1Id));\n-        }\n-\n-        withFeedItemEventListener(feedItemEventListener -> {\n-            DownloadServiceInterface.get()\n-                    .download(InstrumentationRegistry.getInstrumentation().getTargetContext(), false,\n-                    DownloadRequestCreator.create(testMedia11).build());\n-            withDownloadEventListener(downloadEventListener ->\n-                    Awaitility.await(\"download is actually running\")\n-                        .atMost(5000, TimeUnit.MILLISECONDS)\n-                        .until(() -> downloadEventListener.getLatestEvent() != null\n-                                && downloadEventListener.getLatestEvent().update.mediaIds.length > 0\n-                                && downloadEventListener.getLatestEvent().update.mediaIds[0] == testMedia11.getId()));\n-\n-            if (itemAlreadyInQueue) {\n-                assertEquals(\"download service receives the request - no event is expected before cancel is issued\",\n-                        0, feedItemEventListener.getEvents().size());\n-            } else {\n-                Awaitility.await(\"item enqueue event\")\n-                        .atMost(2000, TimeUnit.MILLISECONDS)\n-                        .until(() -> feedItemEventListener.getEvents().size() >= 1);\n-            }\n-            DownloadServiceInterface.get().cancel(context, testMedia11.getDownload_url());\n-            final int totalNumEventsExpected = itemAlreadyInQueue ? 1 : 3;\n-            Awaitility.await(\"item dequeue event + download termination event\")\n-                    .atMost(2000, TimeUnit.MILLISECONDS)\n-                    .until(() -> feedItemEventListener.getEvents().size() >= totalNumEventsExpected);\n-            assertFalse(\"The download should have been canceled\",\n-                    DBReader.getFeedMedia(testMedia11.getId()).isDownloaded());\n-            if (itemAlreadyInQueue) {\n-                assertTrue(\"The FeedItem should still be in the queue after the download is cancelled.\"\n-                                + \" It's there before download.\",\n-                        DBReader.getQueueIDList().contains(item1Id));\n-            } else {\n-                assertFalse(\"The FeedItem should not be in the queue after the download is cancelled.\",\n-                        DBReader.getQueueIDList().contains(item1Id));\n-            }\n-        });\n-    }\n-\n-    private static class StubDownloaderFactory implements DownloaderFactory {\n-        private final long downloadTime;\n-\n-        @NonNull\n-        private final Consumer<DownloadStatus> onDownloadComplete;\n-\n-        StubDownloaderFactory(long downloadTime, @NonNull Consumer<DownloadStatus> onDownloadComplete) {\n-            this.downloadTime = downloadTime;\n-            this.onDownloadComplete = onDownloadComplete;\n-        }\n-\n-        @Nullable\n-        @Override\n-        public Downloader create(@NonNull DownloadRequest request) {\n-            return new StubDownloader(request, downloadTime, onDownloadComplete);\n-        }\n-    }\n-\n-}\ndiff --git a/app/src/androidTest/java/de/test/antennapod/service/download/HttpDownloaderTest.java b/app/src/androidTest/java/de/test/antennapod/service/download/HttpDownloaderTest.java\nindex f276434f6b..76cba47066 100644\n--- a/app/src/androidTest/java/de/test/antennapod/service/download/HttpDownloaderTest.java\n+++ b/app/src/androidTest/java/de/test/antennapod/service/download/HttpDownloaderTest.java\n@@ -10,7 +10,7 @@\n import de.danoeh.antennapod.model.feed.FeedFile;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n-import de.danoeh.antennapod.model.download.DownloadStatus;\n+import de.danoeh.antennapod.model.download.DownloadResult;\n import de.danoeh.antennapod.core.service.download.Downloader;\n import de.danoeh.antennapod.core.service.download.HttpDownloader;\n import de.danoeh.antennapod.model.download.DownloadError;\n@@ -80,10 +80,9 @@ private Downloader download(String url, String title, boolean expectedResult, bo\n         DownloadRequest request = new DownloadRequest(feedFile.getFile_url(), url, title, 0, feedFile.getTypeAsInt(), username, password, deleteOnFail, null, false);\n         Downloader downloader = new HttpDownloader(request);\n         downloader.call();\n-        DownloadStatus status = downloader.getResult();\n+        DownloadResult status = downloader.getResult();\n         assertNotNull(status);\n         assertEquals(expectedResult, status.isSuccessful());\n-        assertTrue(status.isDone());\n         // the file should not exist if the download has failed and deleteExisting was true\n         assertTrue(!deleteExisting || new File(feedFile.getFile_url()).exists() == expectedResult);\n         return downloader;\n@@ -127,10 +126,8 @@ public void run() {\n         } catch (InterruptedException e) {\n             e.printStackTrace();\n         }\n-        DownloadStatus result = downloader.getResult();\n-        assertTrue(result.isDone());\n+        DownloadResult result = downloader.getResult();\n         assertFalse(result.isSuccessful());\n-        assertTrue(result.isCancelled());\n         assertFalse(new File(feedFile.getFile_url()).exists());\n     }\n \ndiff --git a/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java b/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\nindex 5940d511be..1f387b24b1 100644\n--- a/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\n+++ b/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\n@@ -27,8 +27,6 @@\n \n import static androidx.test.espresso.Espresso.onView;\n import static androidx.test.espresso.action.ViewActions.click;\n-import static androidx.test.espresso.action.ViewActions.closeSoftKeyboard;\n-import static androidx.test.espresso.action.ViewActions.replaceText;\n import static androidx.test.espresso.action.ViewActions.scrollTo;\n import static androidx.test.espresso.action.ViewActions.swipeDown;\n import static androidx.test.espresso.action.ViewActions.swipeUp;\n@@ -37,13 +35,11 @@\n import static androidx.test.espresso.matcher.ViewMatchers.isChecked;\n import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;\n import static androidx.test.espresso.matcher.ViewMatchers.isRoot;\n-import static androidx.test.espresso.matcher.ViewMatchers.withClassName;\n import static androidx.test.espresso.matcher.ViewMatchers.withId;\n import static androidx.test.espresso.matcher.ViewMatchers.withText;\n import static de.test.antennapod.EspressoTestUtils.clickPreference;\n import static de.test.antennapod.EspressoTestUtils.waitForView;\n import static java.util.concurrent.TimeUnit.MILLISECONDS;\n-import static org.hamcrest.Matchers.endsWith;\n import static org.hamcrest.Matchers.not;\n import static org.junit.Assert.assertTrue;\n \n@@ -223,40 +219,6 @@ public void testPauseForInterruptions() {\n                 .until(() -> pauseForFocusLoss == UserPreferences.shouldPauseForFocusLoss());\n     }\n \n-    @Test\n-    public void testSetSequentialDownload() {\n-        clickPreference(R.string.downloads_pref);\n-        clickPreference(R.string.pref_parallel_downloads_title);\n-        onView(isRoot()).perform(waitForView(withClassName(endsWith(\"EditText\")), 1000));\n-        onView(withClassName(endsWith(\"EditText\"))).perform(replaceText(\"1\"));\n-        onView(withText(android.R.string.ok)).perform(click());\n-        Awaitility.await().atMost(1000, MILLISECONDS)\n-                .until(() -> UserPreferences.getParallelDownloads() == 1);\n-    }\n-\n-    @Test\n-    public void testSetParallelDownloads() {\n-        clickPreference(R.string.downloads_pref);\n-        clickPreference(R.string.pref_parallel_downloads_title);\n-        onView(isRoot()).perform(waitForView(withClassName(endsWith(\"EditText\")), 1000));\n-        onView(withClassName(endsWith(\"EditText\"))).perform(replaceText(\"10\"));\n-        onView(withClassName(endsWith(\"EditText\"))).perform(closeSoftKeyboard());\n-        onView(withText(android.R.string.ok)).perform(click());\n-        Awaitility.await().atMost(1000, MILLISECONDS)\n-                .until(() -> UserPreferences.getParallelDownloads() == 10);\n-    }\n-\n-    @Test\n-    public void testSetParallelDownloadsInvalidInput() {\n-        clickPreference(R.string.downloads_pref);\n-        clickPreference(R.string.pref_parallel_downloads_title);\n-        onView(isRoot()).perform(waitForView(withClassName(endsWith(\"EditText\")), 1000));\n-        onView(withClassName(endsWith(\"EditText\"))).perform(replaceText(\"0\"));\n-        onView(withClassName(endsWith(\"EditText\"))).check(matches(withText(\"\")));\n-        onView(withClassName(endsWith(\"EditText\"))).perform(replaceText(\"100\"));\n-        onView(withClassName(endsWith(\"EditText\"))).check(matches(withText(\"\")));\n-    }\n-\n     @Test\n     public void testSetEpisodeCache() {\n         String[] entries = res.getStringArray(R.array.episode_cache_size_entries);\ndiff --git a/app/src/androidTest/java/de/test/antennapod/util/event/DownloadEventListener.java b/app/src/androidTest/java/de/test/antennapod/util/event/DownloadEventListener.java\ndeleted file mode 100644\nindex d322c1cbfb..0000000000\n--- a/app/src/androidTest/java/de/test/antennapod/util/event/DownloadEventListener.java\n+++ /dev/null\n@@ -1,45 +0,0 @@\n-package de.test.antennapod.util.event;\n-\n-import androidx.annotation.NonNull;\n-import androidx.annotation.Nullable;\n-import de.danoeh.antennapod.core.event.DownloadEvent;\n-import io.reactivex.functions.Consumer;\n-import org.greenrobot.eventbus.EventBus;\n-import org.greenrobot.eventbus.Subscribe;\n-\n-import java.util.ArrayList;\n-import java.util.List;\n-\n-/**\n- * Test helper to listen to {@link DownloadEvent} and handle them accordingly.\n- */\n-public class DownloadEventListener {\n-    private final List<DownloadEvent> events = new ArrayList<>();\n-\n-    /**\n-     * Provides an listener subscribing to {@link DownloadEvent} that the callers can use.\n-     * Note: it uses RxJava's version of {@link Consumer} because it allows exceptions to be thrown.\n-     */\n-    public static void withDownloadEventListener(@NonNull Consumer<DownloadEventListener> consumer) throws Exception {\n-        DownloadEventListener feedItemEventListener = new DownloadEventListener();\n-        try {\n-            EventBus.getDefault().register(feedItemEventListener);\n-            consumer.accept(feedItemEventListener);\n-        } finally {\n-            EventBus.getDefault().unregister(feedItemEventListener);\n-        }\n-    }\n-\n-    @Subscribe\n-    public void onEvent(DownloadEvent event) {\n-        events.add(event);\n-    }\n-\n-    @Nullable\n-    public DownloadEvent getLatestEvent() {\n-        if (events.size() == 0) {\n-            return null;\n-        }\n-        return events.get(events.size() - 1);\n-    }\n-}\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/LocalFeedStubDownloader.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/LocalFeedStubDownloader.java\ndeleted file mode 100644\nindex 7502559582..0000000000\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/LocalFeedStubDownloader.java\n+++ /dev/null\n@@ -1,18 +0,0 @@\n-package de.danoeh.antennapod.core.service.download;\n-\n-import androidx.annotation.NonNull;\n-import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n-\n-/**\n- * This does not actually download, but it keeps track of a local feed's refresh state.\n- */\n-public class LocalFeedStubDownloader extends Downloader {\n-\n-    public LocalFeedStubDownloader(@NonNull DownloadRequest request) {\n-        super(request);\n-    }\n-\n-    @Override\n-    protected void download() {\n-    }\n-}\n\\ No newline at end of file\ndiff --git a/core/src/test/java/de/danoeh/antennapod/core/storage/DbTasksTest.java b/core/src/test/java/de/danoeh/antennapod/core/storage/DbTasksTest.java\nindex d66bd23609..6a7e51bac2 100644\n--- a/core/src/test/java/de/danoeh/antennapod/core/storage/DbTasksTest.java\n+++ b/core/src/test/java/de/danoeh/antennapod/core/storage/DbTasksTest.java\n@@ -13,7 +13,6 @@\n import org.robolectric.RobolectricTestRunner;\n \n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.Collections;\n import java.util.Date;\n import java.util.List;\n@@ -26,7 +25,6 @@\n import de.danoeh.antennapod.core.preferences.PlaybackPreferences;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n \n-import static de.danoeh.antennapod.core.util.FeedItemUtil.getIdList;\n import static java.util.Collections.singletonList;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n@@ -255,63 +253,6 @@ private void updatedFeedTest(final Feed newFeed, long feedID, List<Long> itemIDs\n         }\n     }\n \n-    @Test\n-    public void testAddQueueItemsInDownload_EnqueueEnabled() throws Exception {\n-        // Setup test data / environment\n-        UserPreferences.setEnqueueDownloadedEpisodes(true);\n-        UserPreferences.setEnqueueLocation(UserPreferences.EnqueueLocation.BACK);\n-\n-        List<FeedItem> fis1 = createSavedFeed(\"Feed 1\", 2).getItems();\n-        List<FeedItem> fis2 = createSavedFeed(\"Feed 2\", 3).getItems();\n-\n-        DBWriter.addQueueItem(context, fis1.get(0), fis2.get(0)).get();\n-        // the first item fis1.get(0) is already in the queue\n-        FeedItem[] itemsToDownload = new FeedItem[]{ fis1.get(0), fis1.get(1), fis2.get(2), fis2.get(1) };\n-\n-        // Expectations:\n-        List<FeedItem> expectedEnqueued = Arrays.asList(fis1.get(1), fis2.get(2), fis2.get(1));\n-        List<FeedItem> expectedQueue = new ArrayList<>();\n-        expectedQueue.addAll(DBReader.getQueue());\n-        expectedQueue.addAll(expectedEnqueued);\n-\n-        // Run actual test and assert results\n-        List<? extends FeedItem> actualEnqueued =\n-                DBTasks.enqueueFeedItemsToDownload(context, Arrays.asList(itemsToDownload));\n-\n-        assertEqualsByIds(\"Only items not in the queue are enqueued\", expectedEnqueued, actualEnqueued);\n-        assertEqualsByIds(\"Queue has new items appended\", expectedQueue, DBReader.getQueue());\n-    }\n-\n-    @Test\n-    public void testAddQueueItemsInDownload_EnqueueDisabled() throws Exception {\n-        // Setup test data / environment\n-        UserPreferences.setEnqueueDownloadedEpisodes(false);\n-\n-        List<FeedItem> fis1 = createSavedFeed(\"Feed 1\", 2).getItems();\n-        List<FeedItem> fis2 = createSavedFeed(\"Feed 2\", 3).getItems();\n-\n-        DBWriter.addQueueItem(context, fis1.get(0), fis2.get(0)).get();\n-        FeedItem[] itemsToDownload = new FeedItem[]{ fis1.get(0), fis1.get(1), fis2.get(2), fis2.get(1) };\n-\n-        // Expectations:\n-        List<FeedItem> expectedEnqueued = Collections.emptyList();\n-        List<FeedItem> expectedQueue = DBReader.getQueue();\n-\n-        // Run actual test and assert results\n-        List<? extends FeedItem> actualEnqueued =\n-                DBTasks.enqueueFeedItemsToDownload(context, Arrays.asList(itemsToDownload));\n-\n-        assertEqualsByIds(\"No item is enqueued\", expectedEnqueued, actualEnqueued);\n-        assertEqualsByIds(\"Queue is unchanged\", expectedQueue, DBReader.getQueue());\n-    }\n-\n-    private void assertEqualsByIds(String msg, List<? extends FeedItem> expected, List<? extends FeedItem> actual) {\n-        // assert only the IDs, so that any differences are easily to spot.\n-        List<Long> expectedIds = getIdList(expected);\n-        List<Long> actualIds = getIdList(actual);\n-        assertEquals(msg, expectedIds, actualIds);\n-    }\n-\n     private Feed createSavedFeed(String title, int numFeedItems) {\n         final Feed feed = new Feed(\"url\", null, title);\n \ndiff --git a/core/src/test/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculatorTest.java b/core/src/test/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculatorTest.java\nindex 376e0e65cb..2594fabf60 100644\n--- a/core/src/test/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculatorTest.java\n+++ b/core/src/test/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculatorTest.java\n@@ -1,7 +1,8 @@\n package de.danoeh.antennapod.core.storage;\n \n-import de.danoeh.antennapod.core.service.download.DownloadService;\n import de.danoeh.antennapod.model.playback.RemoteMedia;\n+import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n+import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterfaceStub;\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.junit.runners.Parameterized;\n@@ -21,8 +22,6 @@\n import de.danoeh.antennapod.core.feed.FeedMother;\n import de.danoeh.antennapod.storage.preferences.UserPreferences.EnqueueLocation;\n import de.danoeh.antennapod.model.playback.Playable;\n-import org.mockito.MockedStatic;\n-import org.mockito.Mockito;\n \n import static de.danoeh.antennapod.storage.preferences.UserPreferences.EnqueueLocation.AFTER_CURRENTLY_PLAYING;\n import static de.danoeh.antennapod.storage.preferences.UserPreferences.EnqueueLocation.BACK;\n@@ -74,6 +73,7 @@ public static Iterable<Object[]> data() {\n          */\n         @Test\n         public void test() {\n+            DownloadServiceInterface.setImpl(new DownloadServiceInterfaceStub());\n             ItemEnqueuePositionCalculator calculator = new ItemEnqueuePositionCalculator(options);\n \n             // shallow copy to which the test will add items\n@@ -128,95 +128,6 @@ Playable getCurrentlyPlaying() {\n \n     }\n \n-    @RunWith(Parameterized.class)\n-    public static class PreserveDownloadOrderTest {\n-        /**\n-         * The test covers the use case that when user initiates multiple downloads in succession,\n-         * resulting in multiple addQueueItem() calls in succession.\n-         * the items in the queue will be in the same order as the order user taps to download\n-         */\n-        @Parameters(name = \"{index}: case<{0}>\")\n-        public static Iterable<Object[]> data() {\n-            // Attempts to make test more readable by showing the expected list of ids\n-            // (rather than the expected positions)\n-            return Arrays.asList(new Object[][] {\n-                    {\"download order test, enqueue default\",\n-                            concat(QUEUE_DEFAULT_IDS, 101L),\n-                            concat(QUEUE_DEFAULT_IDS, list(101L, 102L)),\n-                            concat(QUEUE_DEFAULT_IDS, list(101L, 102L, 103L)),\n-                            BACK, QUEUE_DEFAULT, ID_CURRENTLY_PLAYING_NULL},\n-                    {\"download order test, enqueue at front (currently playing has no effect)\",\n-                            concat(101L, QUEUE_DEFAULT_IDS),\n-                            concat(list(101L, 102L), QUEUE_DEFAULT_IDS),\n-                            concat(list(101L, 103L, 102L), QUEUE_DEFAULT_IDS),\n-                            // ^ 103 is put ahead of 102, after 102 failed.\n-                            // It is a limitation as the logic can't tell 102 download has failed\n-                            // (as opposed to simply being enqueued)\n-                            FRONT, QUEUE_DEFAULT, 11L}, // 11 is at the front, currently playing\n-                    {\"download order test, enqueue after currently playing\",\n-                            list(11L, 101L, 12L, 13L, 14L),\n-                            list(11L, 101L, 102L, 12L, 13L, 14L),\n-                            list(11L, 101L, 103L, 102L, 12L, 13L, 14L),\n-                            AFTER_CURRENTLY_PLAYING, QUEUE_DEFAULT, 11L}  // 11 is at the front, currently playing\n-            });\n-        }\n-\n-        @Parameter\n-        public String message;\n-\n-        @Parameter(1)\n-        public List<Long> idsExpectedAfter101;\n-\n-        @Parameter(2)\n-        public List<Long> idsExpectedAfter102;\n-\n-        @Parameter(3)\n-        public List<Long> idsExpectedAfter103;\n-\n-        @Parameter(4)\n-        public EnqueueLocation options;\n-\n-        @Parameter(5)\n-        public List<FeedItem> queueInitial;\n-\n-        @Parameter(6)\n-        public long idCurrentlyPlaying;\n-\n-        @Test\n-        public void testQueueOrderWhenDownloading2Items() {\n-            ItemEnqueuePositionCalculator calculator = new ItemEnqueuePositionCalculator(options);\n-            try (MockedStatic<DownloadService> downloadServiceMock = Mockito.mockStatic(DownloadService.class)) {\n-                List<FeedItem> queue = new ArrayList<>(queueInitial);\n-\n-                // Test body\n-                Playable currentlyPlaying = getCurrentlyPlaying(idCurrentlyPlaying);\n-                // User clicks download on feed item 101\n-                FeedItem feedItem101 = createFeedItem(101);\n-                downloadServiceMock.when(() ->\n-                        DownloadService.isDownloadingFile(feedItem101.getMedia().getDownload_url())).thenReturn(true);\n-                doAddToQueueAndAssertResult(message + \" (1st download)\",\n-                        calculator, feedItem101, queue, currentlyPlaying, idsExpectedAfter101);\n-                // Then user clicks download on feed item 102\n-                FeedItem feedItem102 = createFeedItem(102);\n-                downloadServiceMock.when(() ->\n-                        DownloadService.isDownloadingFile(feedItem102.getMedia().getDownload_url())).thenReturn(true);\n-                doAddToQueueAndAssertResult(message + \" (2nd download, it should preserve order of download)\",\n-                        calculator, feedItem102, queue, currentlyPlaying, idsExpectedAfter102);\n-                // simulate download failure case for 102\n-                downloadServiceMock.when(() ->\n-                        DownloadService.isDownloadingFile(feedItem102.getMedia().getDownload_url())).thenReturn(false);\n-                // Then user clicks download on feed item 103\n-                FeedItem feedItem103 = createFeedItem(103);\n-                downloadServiceMock.when(() ->\n-                        DownloadService.isDownloadingFile(feedItem103.getMedia().getDownload_url())).thenReturn(true);\n-                doAddToQueueAndAssertResult(message\n-                                + \" (3rd download, with 2nd download failed; \"\n-                                + \"it should be behind 1st download (unless enqueueLocation is BACK)\",\n-                        calculator, feedItem103, queue, currentlyPlaying, idsExpectedAfter103);\n-            }\n-        }\n-    }\n-\n     static void doAddToQueueAndAssertResult(String message,\n                                             ItemEnqueuePositionCalculator calculator,\n                                             FeedItem itemToAdd,\ndiff --git a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterfaceStub.java b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterfaceStub.java\nindex 9477464858..716d68d144 100644\n--- a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterfaceStub.java\n+++ b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterfaceStub.java\n@@ -1,23 +1,23 @@\n package de.danoeh.antennapod.net.download.serviceinterface;\n \n import android.content.Context;\n-import android.content.Intent;\n+import de.danoeh.antennapod.model.feed.FeedItem;\n \n public class DownloadServiceInterfaceStub extends DownloadServiceInterface {\n \n-    public void download(Context context, boolean cleanupMedia, DownloadRequest... requests) {\n+    @Override\n+    public void downloadNow(Context context, FeedItem item, boolean ignoreConstraints) {\n     }\n \n-    public Intent makeDownloadIntent(Context context, boolean cleanupMedia, DownloadRequest... requests) {\n-        return null;\n-    }\n-\n-    public void refreshAllFeeds(Context context, boolean initiatedByUser) {\n+    @Override\n+    public void download(Context context, FeedItem item) {\n     }\n \n+    @Override\n     public void cancel(Context context, String url) {\n     }\n \n+    @Override\n     public void cancelAll(Context context) {\n     }\n }\n", "problem_statement": "Retry incomplete (failed) downloads automatically\n> IO Error: Download completed but size: 15988804 does not equal expected size 75595064\n\nAutomatically start to download non-local episodes in the play list, when WLAN comes available\nI have had the situation, that I added some episodes to the play list while I'm on mobile connection. So the app asked me, if it shall download it or just add to the playlist. I choosed \"just add\". Some times later I realized that playing stopped, because no downloaded episode was available.\r\n\r\nSo I recommend to automatically start the download of any episode in the play list, which has not yet a local file, when WLAN comes available.\r\n\r\n\r\n**App version**: 1.73b/f9e7e (from F-Droid)\r\n\n", "hints_text": "Yeah, that is too little information.\nI cannot do anything with that.\n\n@sttan, what episode of what podcast were you trying to download? Does this\nhappen every time? Does it only happen with one podcast or all of them?\n\nOn Wed, Oct 7, 2015, 10:43 AM Martin Fietz notifications@github.com wrote:\n\n> Yeah, that is too little information.\n> I cannot do anything with that.\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/AntennaPod/AntennaPod/issues/1250#issuecomment-146119691\n> .\n\n@TomHennen @mfietz \n\nIt happens not every time, but frequently. \n\n![](https://i.imgur.com/sVExbwl.png)\n![](https://i.imgur.com/pObdbYY.png)\n\nEpisodes above are listed here: \n\nhttps://ipn.li/itgonglun/feed\n- 164: \u65f6\u95f4\u7ebf\u6cdb\u6ee5\u7684\u65f6\u4ee3 http://ipn.li/itgonglun/164/audio.mp3 (it will redirect to http://40f447ddeb.a.uxengine.net/itgonglun/itgonglun-ep164-96kbps.mp3 with 302 status code)\n- 45: \u540c\u6027\u604b\u4e0d\u662f\u75c5\uff0c\u8bf7\u653e\u5f03\u6cbb\u7597 http://ipn.li/itgonglun/162/audio.mp3 (302 to http://40f447ddeb.a.uxengine.net/itgonglun/itgonglun-ep162-96kbps.mp3)\n\n---\n\nhttps://ipn.li/taiyilaile/feed\n- 48: \u5bb6\u957f\u5230\u5e95\u80fd\u4e0d\u80fd\u6253\u5b69\u5b50\uff1f http://ipn.li/taiyilaile/48/audio.mp3 (302 to http://40f447ddeb.a.uxengine.net/taiyilaile/taiyilaile-ep48-96kbps.mp3)\n- 45: \u540c\u6027\u604b\u4e0d\u662f\u75c5\uff0c\u8bf7\u653e\u5f03\u6cbb\u7597 http://ipn.li/taiyilaile/45/audio.mp3 (http://40f447ddeb.a.uxengine.net/taiyilaile/taiyilaile-ep45-96kbps.mp3)\n\n---\n\nhttps://ipn.li/kernelpanic/feed\n- 23: \u7a0b\u5e8f\u5458\u4e4b\u8def http://ipn.li/kernelpanic/23/audio.mp3 (http://40f447ddeb.a.uxengine.net/kernelpanic/kernelpanic-ep23-96kbps.mp3)\n- 21: Debugging http://ipn.li/kernelpanic/21/audio.mp3 (http://40f447ddeb.a.uxengine.net/kernelpanic/kernelpanic-ep21-96kbps-fixed.mp3)\n\n---\n\nI don't know if it's my network problem because I'm using a system-wide proxy to forward any traffic between me and non-China IPs to my own proxy server. \n\nAnother test. \n\n![](https://i.imgur.com/N4uBhWv.jpg)\n\nAs far as I can tell, we cannot really distinguish between an actual complete download and when the connection is lost for whatever reason.\nThe error message just notes that the (expected) file size according to the server is much higher than the amount of bytes you actually received.\n\nWe don't have an automatic retry mechanism for failed downloads yet, which would also be really hard to implement and might lead to unexpected behavior.\n\nI don't think the downloaded partial file is deleted, hitting the retry button should resume where the download left off.\n\nAs this seems to happen with different servers, the problem is probably at your end. If you have access to them, you should probably check your proxies logs or google if someone else has similar issues with the same software.\n\n@TomHennen not sure what to do about this. Should be regard this as a FR to implement retrying/resuming a failed download? Better description (\"Unexpected size\" = \"Download failed\")\n\nI think that's right. Treat these as failed downloads and then let them get\nretried? Unless we need to worry about servers that lie about the size.\n\nOn Sun, Jan 17, 2016, 5:41 AM Martin Fietz notifications@github.com wrote:\n\n> @TomHennen https://github.com/TomHennen not sure what to do about this.\n> Should be regard this as a FR to implement retrying/resuming a failed\n> download? Better description (\"Unexpected size\" = \"Download failed\")\n> \n> \u2014\n> Reply to this email directly or view it on GitHub\n> https://github.com/AntennaPod/AntennaPod/issues/1250#issuecomment-172311202\n> .\n\nIt happens to me from time to time as well, especially on wifi network connections that are not so stable (1-2 bars). \r\n\r\nWhat's more, limiting parallel downloads seems to reduce the likelihood of the error appearing: I reduced the parallel downloads from 4 to 2, the error seems to not appear (at least not as frequently).\r\n\nI live in place with bad/intermittent Internet connection, and the lack of automatic resuming makes AntennaPod really hard to use.  Thank you for your work!\nThe pending PR #2714 coincidentally addresses many cases here. See https://github.com/AntennaPod/AntennaPod/pull/2714#issuecomment-466808239\nAs per #3381: it could be interesting to introduce an (advanced) setting to set the (max) number of retries that instructs antennapod how many times failed donloads should be reinitiated.\nWould really be nice to see this implemented. I'm also often on a instable Wifi and have to restart downloads a few times until they are complete. Spotify seems to manage this in the background.\nThis issue has been mentioned on **AntennaPod Forum**. There might be relevant details there:\n\nhttps://forum.antennapod.org/t/how-to-get-rid-of-the-red-exclamation-mark-last-update-failed-warnings/1080/12\n\nI would love to see this. Most other podcasting apps I've used will not only retry downloads that failed, they also allow scheduling a download (which might be a positive side effect of this, depending how it's implemented). So, for example, if the phone has no internet, you can tap to download an episode, and the download will start the next time the phone has internet.\r\n\r\nIn addition, it would be nice not to have a noisy notification/toast if a download fails. Just show some subtle indicator in the app that it isn't downloaded and try again the next time the phone is connected to the internet. This is often indicated in other apps by an icon showing the rough percentage (a progress circle, for example) of the episode that's been downloaded.\r\n\r\nIt seems like I've seen other error notifications too (perhaps when refreshing a podcast when there's no/spotty internet? I don't recall off the top of my head). Instead of showing an error, it would be nice if it just tried again when the device has internet connectivity.\r\n\r\nThanks!\nHaha, yes +1. I don't need a remainder that my Wifi sucks. :D\nThis issue has been mentioned on **AntennaPod Forum**. There might be relevant details there:\n\nhttps://forum.antennapod.org/t/download-setting-to-automatically-retry-download/2066/2\n\n+1 for just-fucking-retry-it-forever-until-it-downloads-successfully\r\n\r\nThe title of this ticket doesn't seem to ask for what I want, but another issue said that *this* issue is tracking a new feature to automatically retry downloading podcasts after failure.\r\n\r\n * https://github.com/AntennaPod/AntennaPod/issues/5869#issuecomment-1119979906\r\n\r\n### Background Context\r\n\r\nI don't have a SIM card, and I live in a city where wifi is abundant, yet spotty.\r\n\r\nAs I walk around the city on any given day, my Android phone will sit in my pocket and scan for wifi connections. Usually, when I do check my phone at some point after walking around, I notice that I have a bunch of unread messages on WhatsApp. That's because WhatsApp detected that I had internet and **automatically downloaded all my messages during the brief ~60 seconds during which I was walking past a wifi hotspot. This is great!**\r\n\r\nMoreover, once I notice the messages, I can proceed to write back replies, even if I don't have Internet at this time. In WhatsApp, this works fine. Whatsapp will just queue up the messages for sending. **The next time I walk by a wifi hotspot, it will blast all my previously-failed-to-send messages out to the Internet. This is great UX!**\r\n\r\n#### Expected Behaviour\r\n\r\nA lot of the grocery stores that I shop at have free wifi. As you walk around the store, the wiif quality varies from 5% packet loss to 100% packet loss. Even though the Internet is shitty, AntennaPod should be capable of gracefully handling downloads on such connections in the background *without any user interaction whatsoever*.\r\n\r\n**I expect to be able to walk into a grocery store that has free wifi with my phone in my pocket, do my shopping, and walk out with new podcasts downloaded. I should not have to take my phone out of my pocket for this to happen**\r\n\r\nI realize that achieving this is non-trivial, but it absolutely can be done. My Android phone will automatically connect to the wifi network. AntennaPod should be able to get notified about the change of network status and immediately begin attempting to download podcasts in the background. As I move to the back of the store to buy almond milk (and packet loss rises from 5% to 100%), AntennaPod should handle this. As I move back to the front of the store to the cash register (and packet loss drops from 100% to 5%), AntennaPod should automatically retry the downloads, [picking-up where they were left-off](https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests).\n", "created_at": "2023-04-07T16:09:07Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 6403, "instance_id": "AntennaPod__AntennaPod-6403", "issue_numbers": ["6156"], "base_commit": "214bf974cff3041dfc157360d026f61e371aa95e", "patch": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculator.java b/core/src/main/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculator.java\nindex 23d308c027..b81f281e8f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculator.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/ItemEnqueuePositionCalculator.java\n@@ -6,6 +6,7 @@\n import androidx.annotation.Nullable;\n \n import java.util.List;\n+import java.util.Random;\n \n import de.danoeh.antennapod.core.service.download.DownloadService;\n import de.danoeh.antennapod.model.feed.FeedItem;\n@@ -46,6 +47,9 @@ public int calcPosition(@NonNull List<FeedItem> curQueue, @Nullable Playable cur\n                 int currentlyPlayingPosition = getCurrentlyPlayingPosition(curQueue, currentPlaying);\n                 return getPositionOfFirstNonDownloadingItem(\n                         currentlyPlayingPosition + 1, curQueue);\n+            case RANDOM:\n+                Random random = new Random();\n+                return random.nextInt(curQueue.size() + 1);\n             default:\n                 throw new AssertionError(\"calcPosition() : unrecognized enqueueLocation option: \" + enqueueLocation);\n         }\ndiff --git a/core/src/main/res/values/arrays.xml b/core/src/main/res/values/arrays.xml\nindex f3c0a0a3cb..7749c6f3c8 100644\n--- a/core/src/main/res/values/arrays.xml\n+++ b/core/src/main/res/values/arrays.xml\n@@ -161,6 +161,7 @@\n         <item>@string/enqueue_location_back</item>\n         <item>@string/enqueue_location_front</item>\n         <item>@string/enqueue_location_after_current</item>\n+        <item>@string/enqueue_location_random</item>\n     </string-array>\n \n     <string-array name=\"enqueue_location_values\">\n@@ -168,6 +169,7 @@\n         <item>BACK</item>\n         <item>FRONT</item>\n         <item>AFTER_CURRENTLY_PLAYING</item>\n+        <item>RANDOM</item>\n     </string-array>\n \n     <string-array name=\"episode_cleanup_values\">\ndiff --git a/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java b/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\nindex 8a4d248eec..fda95ccd73 100644\n--- a/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\n+++ b/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\n@@ -345,7 +345,7 @@ public static void setEnqueueDownloadedEpisodes(boolean enqueueDownloadedEpisode\n     }\n \n     public enum EnqueueLocation {\n-        BACK, FRONT, AFTER_CURRENTLY_PLAYING\n+        BACK, FRONT, AFTER_CURRENTLY_PLAYING, RANDOM\n     }\n \n     @NonNull\ndiff --git a/ui/i18n/src/main/res/values/strings.xml b/ui/i18n/src/main/res/values/strings.xml\nindex e45cfd481d..2a2f7b6d1c 100644\n--- a/ui/i18n/src/main/res/values/strings.xml\n+++ b/ui/i18n/src/main/res/values/strings.xml\n@@ -492,6 +492,7 @@\n     <string name=\"enqueue_location_back\">Back</string>\n     <string name=\"enqueue_location_front\">Front</string>\n     <string name=\"enqueue_location_after_current\">After current episode</string>\n+    <string name=\"enqueue_location_random\">Random</string>\n     <string name=\"pref_smart_mark_as_played_disabled\">Disabled</string>\n     <string name=\"documentation_support\">Documentation &amp; Support</string>\n     <string name=\"visit_user_forum\">User forum</string>\n", "test_patch": "diff --git a/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java b/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\nindex 1b81003928..be947bc1e1 100644\n--- a/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\n+++ b/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\n@@ -123,6 +123,7 @@ public void testEnqueueLocation() {\n         doTestEnqueueLocation(R.string.enqueue_location_after_current, EnqueueLocation.AFTER_CURRENTLY_PLAYING);\n         doTestEnqueueLocation(R.string.enqueue_location_front, EnqueueLocation.FRONT);\n         doTestEnqueueLocation(R.string.enqueue_location_back, EnqueueLocation.BACK);\n+        doTestEnqueueLocation(R.string.enqueue_location_random, EnqueueLocation.RANDOM);\n     }\n \n     private void doTestEnqueueLocation(@StringRes int optionResId, EnqueueLocation expected) {\n", "problem_statement": "Add \"random place\" option to the the \"Insert into playlist position\" selection\n### Checklist\n\n- [X] I have used the search function for [open](https://github.com/AntennaPod/AntennaPod/issues) **and** [closed](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue+is%3Aclosed) issues to see if someone else has already submitted the same feature request.\n- [X] I will describe the problem with as much detail as possible.\n- [X] This request contains only one single feature, **not** a list of multiple (related) features.\n\n### App version\n\n2.7.1\n\n### Where did you get the app from\n\nGoogle Play\n\n### Problem you may be having, or feature you want\n\nYou can currently choose that new episodes should be added to the playlist automatically. You are given a few choices where you would like to add the new episode in.\r\n\r\nBut one choice that is missing that the new episodes should be added in a random place in the playlist, to keep a randomized playlist permanently randomized. (Choosing random sort order for the playlist is a one-time thing, and is destroyed when new episodes are added.)\n\n### Suggested solution\n\nAdd the option.\n\n### Screenshots / Drawings / Technical details\n\n_No response_\n", "hints_text": "", "created_at": "2023-03-29T20:08:50Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 6400, "instance_id": "AntennaPod__AntennaPod-6400", "issue_numbers": ["5603"], "base_commit": "5ae766b1a1557e2a54627e6b3c83c54c6578995d", "patch": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/DeleteActionButton.java b/app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/DeleteActionButton.java\nindex 096d060c1f..16a5a161c9 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/DeleteActionButton.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/actionbutton/DeleteActionButton.java\n@@ -4,10 +4,14 @@\n import android.view.View;\n import androidx.annotation.DrawableRes;\n import androidx.annotation.StringRes;\n+\n+import java.util.Collections;\n+\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n import de.danoeh.antennapod.core.storage.DBWriter;\n+import de.danoeh.antennapod.view.LocalDeleteModal;\n \n public class DeleteActionButton extends ItemActionButton {\n \n@@ -33,11 +37,17 @@ public void onClick(Context context) {\n         if (media == null) {\n             return;\n         }\n-        DBWriter.deleteFeedMediaOfItem(context, media.getId());\n+\n+        LocalDeleteModal.showLocalFeedDeleteWarningIfNecessary(context, Collections.singletonList(item),\n+                () -> DBWriter.deleteFeedMediaOfItem(context, media.getId()));\n     }\n \n     @Override\n     public int getVisibility() {\n-        return (item.getMedia() != null && item.getMedia().isDownloaded()) ? View.VISIBLE : View.INVISIBLE;\n+        if (item.getMedia() != null && (item.getMedia().isDownloaded() || item.getFeed().isLocalFeed())) {\n+            return View.VISIBLE;\n+        }\n+\n+        return View.INVISIBLE;\n     }\n }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java\nindex 6a72348bc3..29be41727b 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/AddFeedFragment.java\n@@ -197,8 +197,8 @@ private void addLocalFolderResult(final Uri uri) {\n     }\n \n     private Feed addLocalFolder(Uri uri) {\n-        getActivity().getContentResolver()\n-                .takePersistableUriPermission(uri, Intent.FLAG_GRANT_READ_URI_PERMISSION);\n+        getActivity().getContentResolver().takePersistableUriPermission(uri,\n+                Intent.FLAG_GRANT_READ_URI_PERMISSION | Intent.FLAG_GRANT_WRITE_URI_PERMISSION);\n         DocumentFile documentFile = DocumentFile.fromTreeUri(getContext(), uri);\n         if (documentFile == null) {\n             throw new IllegalArgumentException(\"Unable to retrieve document tree\");\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java\nindex 6b6fedd1f9..1c949218ab 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/FeedItemlistFragment.java\n@@ -367,7 +367,6 @@ public void onStartSelectMode() {\n         swipeActions.detach();\n         if (feed.isLocalFeed()) {\n             speedDialBinding.fabSD.removeActionItemById(R.id.download_batch);\n-            speedDialBinding.fabSD.removeActionItemById(R.id.delete_batch);\n         }\n         speedDialBinding.fabSD.removeActionItemById(R.id.remove_all_inbox_item);\n         speedDialBinding.fabSD.setVisibility(View.VISIBLE);\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\nindex ae9e003d50..45faba3336 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n@@ -172,7 +172,6 @@ public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {\n \n                         if (feed.isLocalFeed()) {\n                             findPreference(PREF_AUTHENTICATION).setVisible(false);\n-                            findPreference(PREF_AUTO_DELETE).setVisible(false);\n                             findPreference(PREF_CATEGORY_AUTO_DOWNLOAD).setVisible(false);\n                         }\n \ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/actions/EpisodeMultiSelectActionHandler.java b/app/src/main/java/de/danoeh/antennapod/fragment/actions/EpisodeMultiSelectActionHandler.java\nindex a14bfcd162..618c411eac 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/actions/EpisodeMultiSelectActionHandler.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/actions/EpisodeMultiSelectActionHandler.java\n@@ -14,6 +14,7 @@\n import de.danoeh.antennapod.core.storage.DBWriter;\n import de.danoeh.antennapod.core.util.LongList;\n import de.danoeh.antennapod.model.feed.FeedItem;\n+import de.danoeh.antennapod.view.LocalDeleteModal;\n \n public class EpisodeMultiSelectActionHandler {\n     private static final String TAG = \"EpisodeSelectHandler\";\n@@ -41,7 +42,7 @@ public void handleAction(List<FeedItem> items) {\n         } else if (actionId == R.id.download_batch) {\n             downloadChecked(items);\n         } else if (actionId == R.id.delete_batch) {\n-            deleteChecked(items);\n+            LocalDeleteModal.showLocalFeedDeleteWarningIfNecessary(activity, items, () -> deleteChecked(items));\n         } else {\n             Log.e(TAG, \"Unrecognized speed dial action item. Do nothing. id=\" + actionId);\n         }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/preferences/DownloadsPreferencesFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/preferences/DownloadsPreferencesFragment.java\nindex 7b0c3efdfe..c17066fef2 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/preferences/DownloadsPreferencesFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/preferences/DownloadsPreferencesFragment.java\n@@ -2,8 +2,12 @@\n \n import android.content.SharedPreferences;\n import android.os.Bundle;\n+\n import androidx.preference.PreferenceFragmentCompat;\n import androidx.preference.PreferenceManager;\n+import androidx.preference.TwoStatePreference;\n+\n+import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.PreferenceActivity;\n import de.danoeh.antennapod.core.util.download.FeedUpdateManager;\n@@ -17,9 +21,12 @@\n public class DownloadsPreferencesFragment extends PreferenceFragmentCompat\n         implements SharedPreferences.OnSharedPreferenceChangeListener {\n     private static final String PREF_SCREEN_AUTODL = \"prefAutoDownloadSettings\";\n+    private static final String PREF_AUTO_DELETE_LOCAL = \"prefAutoDeleteLocal\";\n     private static final String PREF_PROXY = \"prefProxy\";\n     private static final String PREF_CHOOSE_DATA_DIR = \"prefChooseDataDir\";\n \n+    private boolean blockAutoDeleteLocal = true;\n+\n     @Override\n     public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {\n         addPreferencesFromResource(R.xml.preferences_downloads);\n@@ -63,6 +70,14 @@ private void setupNetworkScreen() {\n             });\n             return true;\n         });\n+        findPreference(PREF_AUTO_DELETE_LOCAL).setOnPreferenceChangeListener((preference, newValue) -> {\n+            if (blockAutoDeleteLocal && newValue == Boolean.TRUE) {\n+                showAutoDeleteEnableDialog();\n+                return false;\n+            } else {\n+                return true;\n+            }\n+        });\n     }\n \n     private void setDataFolderText() {\n@@ -78,4 +93,16 @@ public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, Strin\n             FeedUpdateManager.restartUpdateAlarm(getContext(), true);\n         }\n     }\n+\n+    private void showAutoDeleteEnableDialog() {\n+        new MaterialAlertDialogBuilder(requireContext())\n+            .setMessage(R.string.pref_auto_local_delete_dialog_body)\n+            .setPositiveButton(R.string.yes, (dialog, which) -> {\n+                blockAutoDeleteLocal = false;\n+                ((TwoStatePreference) findPreference(PREF_AUTO_DELETE_LOCAL)).setChecked(true);\n+                blockAutoDeleteLocal = true;\n+            })\n+            .setNegativeButton(R.string.cancel_label, null)\n+            .show();\n+    }\n }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/DeleteSwipeAction.java b/app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/DeleteSwipeAction.java\nindex a4c69eb2bb..e196b96b47 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/DeleteSwipeAction.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/swipeactions/DeleteSwipeAction.java\n@@ -2,10 +2,14 @@\n \n import android.content.Context;\n import androidx.fragment.app.Fragment;\n+\n+import java.util.Collections;\n+\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.core.storage.DBWriter;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedItemFilter;\n+import de.danoeh.antennapod.view.LocalDeleteModal;\n \n public class DeleteSwipeAction implements SwipeAction {\n \n@@ -31,14 +35,16 @@ public String getTitle(Context context) {\n \n     @Override\n     public void performAction(FeedItem item, Fragment fragment, FeedItemFilter filter) {\n-        if (!item.isDownloaded()) {\n+        if (!item.isDownloaded() && !item.getFeed().isLocalFeed()) {\n             return;\n         }\n-        DBWriter.deleteFeedMediaOfItem(fragment.requireContext(), item.getMedia().getId());\n+        LocalDeleteModal.showLocalFeedDeleteWarningIfNecessary(\n+                fragment.requireContext(), Collections.singletonList(item),\n+                () -> DBWriter.deleteFeedMediaOfItem(fragment.requireContext(), item.getMedia().getId()));\n     }\n \n     @Override\n     public boolean willRemove(FeedItemFilter filter, FeedItem item) {\n-        return filter.showDownloaded && item.isDownloaded();\n+        return filter.showDownloaded && (item.isDownloaded() || item.getFeed().isLocalFeed());\n     }\n }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/menuhandler/FeedItemMenuHandler.java b/app/src/main/java/de/danoeh/antennapod/menuhandler/FeedItemMenuHandler.java\nindex 4de53ce1e5..e2852f8691 100644\n--- a/app/src/main/java/de/danoeh/antennapod/menuhandler/FeedItemMenuHandler.java\n+++ b/app/src/main/java/de/danoeh/antennapod/menuhandler/FeedItemMenuHandler.java\n@@ -12,10 +12,12 @@\n \n import com.google.android.material.snackbar.Snackbar;\n \n+import java.util.Arrays;\n+\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.MainActivity;\n import de.danoeh.antennapod.core.preferences.PlaybackPreferences;\n-import de.danoeh.antennapod.storage.preferences.UserPreferences;\n+import de.danoeh.antennapod.core.util.FeedUtil;\n import de.danoeh.antennapod.core.receiver.MediaButtonReceiver;\n import de.danoeh.antennapod.core.service.playback.PlaybackServiceInterface;\n import de.danoeh.antennapod.core.storage.DBWriter;\n@@ -29,6 +31,7 @@\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n import de.danoeh.antennapod.net.sync.model.EpisodeAction;\n+import de.danoeh.antennapod.view.LocalDeleteModal;\n \n /**\n  * Handles interactions with the FeedItemMenu.\n@@ -56,6 +59,7 @@ public static boolean onPrepareMenu(Menu menu, FeedItem selectedItem) {\n         final boolean isPlaying = hasMedia && PlaybackStatus.isPlaying(selectedItem.getMedia());\n         final boolean isInQueue = selectedItem.isTagged(FeedItem.TAG_QUEUE);\n         final boolean fileDownloaded = hasMedia && selectedItem.getMedia().fileExists();\n+        final boolean isLocalFile = hasMedia && selectedItem.getFeed().isLocalFeed();\n         final boolean isFavorite = selectedItem.isTagged(FeedItem.TAG_FAVORITE);\n \n         setItemVisibility(menu, R.id.skip_episode_item, isPlaying);\n@@ -80,7 +84,7 @@ public static boolean onPrepareMenu(Menu menu, FeedItem selectedItem) {\n \n         setItemVisibility(menu, R.id.add_to_favorites_item, !isFavorite);\n         setItemVisibility(menu, R.id.remove_from_favorites_item, isFavorite);\n-        setItemVisibility(menu, R.id.remove_item, fileDownloaded);\n+        setItemVisibility(menu, R.id.remove_item, fileDownloaded || isLocalFile);\n         return true;\n     }\n \n@@ -148,7 +152,8 @@ public static boolean onMenuItemClicked(@NonNull Fragment fragment, int menuItem\n         if (menuItemId == R.id.skip_episode_item) {\n             context.sendBroadcast(MediaButtonReceiver.createIntent(context, KeyEvent.KEYCODE_MEDIA_NEXT));\n         } else if (menuItemId == R.id.remove_item) {\n-            DBWriter.deleteFeedMediaOfItem(context, selectedItem.getMedia().getId());\n+            LocalDeleteModal.showLocalFeedDeleteWarningIfNecessary(context, Arrays.asList(selectedItem),\n+                    () -> DBWriter.deleteFeedMediaOfItem(context, selectedItem.getMedia().getId()));\n         } else if (menuItemId == R.id.remove_inbox_item) {\n             removeNewFlagWithUndo(fragment, selectedItem);\n         } else if (menuItemId == R.id.mark_read_item) {\n@@ -225,7 +230,8 @@ public static void markReadWithUndo(@NonNull Fragment fragment, FeedItem item,\n         final Handler h = new Handler(fragment.requireContext().getMainLooper());\n         final Runnable r = () -> {\n             FeedMedia media = item.getMedia();\n-            if (media != null && FeedItemUtil.hasAlmostEnded(media) && UserPreferences.isAutoDelete()) {\n+            boolean shouldAutoDelete = FeedUtil.shouldAutoDeleteItemsOnThatFeed(item.getFeed());\n+            if (media != null && FeedItemUtil.hasAlmostEnded(media) && shouldAutoDelete) {\n                 DBWriter.deleteFeedMediaOfItem(fragment.requireContext(), media.getId());\n             }\n         };\ndiff --git a/app/src/main/java/de/danoeh/antennapod/view/LocalDeleteModal.java b/app/src/main/java/de/danoeh/antennapod/view/LocalDeleteModal.java\nnew file mode 100644\nindex 0000000000..4241cadca3\n--- /dev/null\n+++ b/app/src/main/java/de/danoeh/antennapod/view/LocalDeleteModal.java\n@@ -0,0 +1,32 @@\n+package de.danoeh.antennapod.view;\n+\n+import android.content.Context;\n+\n+import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n+import de.danoeh.antennapod.ui.i18n.R;\n+import de.danoeh.antennapod.model.feed.FeedItem;\n+\n+public class LocalDeleteModal {\n+    public static void showLocalFeedDeleteWarningIfNecessary(Context context, Iterable<FeedItem> items,\n+                                                             Runnable deleteCommand) {\n+        boolean anyLocalFeed = false;\n+        for (FeedItem item : items) {\n+            if (item.getFeed().isLocalFeed()) {\n+                anyLocalFeed = true;\n+                break;\n+            }\n+        }\n+\n+        if (!anyLocalFeed) {\n+            deleteCommand.run();\n+            return;\n+        }\n+\n+        new MaterialAlertDialogBuilder(context)\n+            .setTitle(R.string.delete_episode_label)\n+            .setMessage(R.string.delete_local_feed_warning_body)\n+            .setPositiveButton(R.string.delete_label, (dialog, which) -> deleteCommand.run())\n+            .setNegativeButton(R.string.cancel_label, null)\n+            .show();\n+    }\n+}\ndiff --git a/app/src/main/res/xml/preferences_downloads.xml b/app/src/main/res/xml/preferences_downloads.xml\nindex 18fc7df111..ba7203566c 100644\n--- a/app/src/main/res/xml/preferences_downloads.xml\n+++ b/app/src/main/res/xml/preferences_downloads.xml\n@@ -33,6 +33,12 @@\n             android:key=\"prefAutoDelete\"\n             android:summary=\"@string/pref_auto_delete_sum\"\n             android:title=\"@string/pref_auto_delete_title\"/>\n+        <SwitchPreferenceCompat\n+            android:defaultValue=\"false\"\n+            android:enabled=\"true\"\n+            android:key=\"prefAutoDeleteLocal\"\n+            android:summary=\"@string/pref_auto_local_delete_sum\"\n+            android:title=\"@string/pref_auto_local_delete_title\"/>\n         <SwitchPreferenceCompat\n             android:defaultValue=\"true\"\n             android:enabled=\"true\"\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/LocalFeedUpdater.java b/core/src/main/java/de/danoeh/antennapod/core/feed/LocalFeedUpdater.java\nindex 03881ee4f7..52b2d61dca 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/LocalFeedUpdater.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/LocalFeedUpdater.java\n@@ -37,7 +37,6 @@\n import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n-import de.danoeh.antennapod.model.feed.FeedPreferences;\n import de.danoeh.antennapod.model.playback.MediaType;\n import de.danoeh.antennapod.parser.feed.util.MimeTypeUtils;\n import de.danoeh.antennapod.parser.media.id3.ID3ReaderException;\n@@ -124,13 +123,9 @@ static void tryUpdateFeed(Feed feed, Context context, Uri folderUri,\n         feed.setImageUrl(getImageUrl(allFiles, folderUri));\n \n         feed.getPreferences().setAutoDownload(false);\n-        feed.getPreferences().setAutoDeleteAction(FeedPreferences.AutoDeleteAction.NEVER);\n         feed.setDescription(context.getString(R.string.local_feed_description));\n         feed.setAuthor(context.getString(R.string.local_folder));\n \n-        if (newItems.isEmpty()) {\n-            throw new IOException(\"Empty folder. Make sure that the folder is accessible and contains media files.\");\n-        }\n         DBTasks.updateFeed(context, feed, true);\n     }\n \ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 6fc9035cac..fa1bb7b184 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n@@ -65,6 +65,7 @@\n import de.danoeh.antennapod.core.storage.FeedSearcher;\n import de.danoeh.antennapod.core.sync.queue.SynchronizationQueueSink;\n import de.danoeh.antennapod.core.util.FeedItemUtil;\n+import de.danoeh.antennapod.core.util.FeedUtil;\n import de.danoeh.antennapod.core.util.IntentUtils;\n import de.danoeh.antennapod.core.util.NetworkUtils;\n import de.danoeh.antennapod.core.util.gui.NotificationUtils;\n@@ -1098,7 +1099,8 @@ private void onPostPlayback(final Playable playable, boolean ended, boolean skip\n                 FeedPreferences.AutoDeleteAction action =\n                         item.getFeed().getPreferences().getCurrentAutoDelete();\n                 boolean shouldAutoDelete = action == FeedPreferences.AutoDeleteAction.ALWAYS\n-                        || (action == FeedPreferences.AutoDeleteAction.GLOBAL && UserPreferences.isAutoDelete());\n+                        || (action == FeedPreferences.AutoDeleteAction.GLOBAL\n+                                && FeedUtil.shouldAutoDeleteItemsOnThatFeed(item.getFeed()));\n                 if (shouldAutoDelete && (!item.isTagged(FeedItem.TAG_FAVORITE)\n                         || !UserPreferences.shouldFavoriteKeepEpisode())) {\n                     DBWriter.deleteFeedMediaOfItem(PlaybackService.this, media.getId());\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java\nindex 11e82af27b..f7e8592e1f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBWriter.java\n@@ -2,15 +2,22 @@\n \n import android.app.backup.BackupManager;\n import android.content.Context;\n+import android.net.Uri;\n import android.util.Log;\n \n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n import androidx.core.app.NotificationManagerCompat;\n+import androidx.documentfile.provider.DocumentFile;\n \n+import com.google.common.util.concurrent.Futures;\n+\n+import de.danoeh.antennapod.core.event.DownloadLogEvent;\n+import de.danoeh.antennapod.core.feed.LocalFeedUpdater;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n import de.danoeh.antennapod.core.service.playback.PlaybackServiceInterface;\n import de.danoeh.antennapod.storage.database.PodDBAdapter;\n+\n import org.greenrobot.eventbus.EventBus;\n \n import java.io.File;\n@@ -25,7 +32,6 @@\n import java.util.concurrent.TimeUnit;\n \n import de.danoeh.antennapod.core.R;\n-import de.danoeh.antennapod.core.event.DownloadLogEvent;\n import de.danoeh.antennapod.event.FavoritesEvent;\n import de.danoeh.antennapod.event.FeedItemEvent;\n import de.danoeh.antennapod.event.FeedListUpdateEvent;\n@@ -94,7 +100,7 @@ public static void tearDownTests() {\n      */\n     public static Future<?> deleteFeedMediaOfItem(@NonNull final Context context,\n                                                   final long mediaId) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             final FeedMedia media = DBReader.getFeedMedia(mediaId);\n             if (media != null) {\n                 boolean result = deleteFeedMediaSynchronous(context, media);\n@@ -106,10 +112,10 @@ public static Future<?> deleteFeedMediaOfItem(@NonNull final Context context,\n         });\n     }\n \n-    private static boolean deleteFeedMediaSynchronous(\n-            @NonNull Context context, @NonNull FeedMedia media) {\n+    private static boolean deleteFeedMediaSynchronous(@NonNull Context context, @NonNull FeedMedia media) {\n         Log.i(TAG, String.format(Locale.US, \"Requested to delete FeedMedia [id=%d, title=%s, downloaded=%s\",\n                 media.getId(), media.getEpisodeTitle(), media.isDownloaded()));\n+        boolean localDelete = false;\n         if (media.isDownloaded()) {\n             // delete downloaded media file\n             File mediaFile = new File(media.getFile_url());\n@@ -125,23 +131,38 @@ private static boolean deleteFeedMediaSynchronous(\n             adapter.open();\n             adapter.setMedia(media);\n             adapter.close();\n+        } else if (media.getFile_url().startsWith(\"content://\")) {\n+            // Local feed\n+            DocumentFile documentFile = DocumentFile.fromSingleUri(\n+                    context, Uri.parse(media.getFile_url()));\n+            if (documentFile == null || !documentFile.exists() || !documentFile.delete()) {\n+                EventBus.getDefault().post(new MessageEvent(context.getString(R.string.delete_local_failed)));\n+                return false;\n+            }\n+            localDelete = true;\n+        }\n \n-            if (media.getId() == PlaybackPreferences.getCurrentlyPlayingFeedMediaId()) {\n-                PlaybackPreferences.writeNoMediaPlaying();\n-                IntentUtils.sendLocalBroadcast(context, PlaybackServiceInterface.ACTION_SHUTDOWN_PLAYBACK_SERVICE);\n+        if (media.getId() == PlaybackPreferences.getCurrentlyPlayingFeedMediaId()) {\n+            PlaybackPreferences.writeNoMediaPlaying();\n+            IntentUtils.sendLocalBroadcast(context, PlaybackServiceInterface.ACTION_SHUTDOWN_PLAYBACK_SERVICE);\n \n-                NotificationManagerCompat nm = NotificationManagerCompat.from(context);\n-                nm.cancel(R.id.notification_playing);\n-            }\n+            NotificationManagerCompat nm = NotificationManagerCompat.from(context);\n+            nm.cancel(R.id.notification_playing);\n+        }\n \n+        if (localDelete) {\n+            // Do full update of this feed to get rid of the item\n+            LocalFeedUpdater.updateFeed(media.getItem().getFeed(), context.getApplicationContext(), null);\n+        } else {\n             // Gpodder: queue delete action for synchronization\n             FeedItem item = media.getItem();\n             EpisodeAction action = new EpisodeAction.Builder(item, EpisodeAction.DELETE)\n                     .currentTimestamp()\n                     .build();\n             SynchronizationQueueSink.enqueueEpisodeActionIfSynchronizationIsActive(context, action);\n+\n+            EventBus.getDefault().post(FeedItemEvent.updated(media.getItem()));\n         }\n-        EventBus.getDefault().post(FeedItemEvent.updated(media.getItem()));\n         return true;\n     }\n \n@@ -152,7 +173,7 @@ private static boolean deleteFeedMediaSynchronous(\n      * @param feedId  ID of the Feed that should be deleted.\n      */\n     public static Future<?> deleteFeed(final Context context, final long feedId) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             final Feed feed = DBReader.getFeed(feedId);\n             if (feed == null) {\n                 return;\n@@ -183,7 +204,7 @@ public static Future<?> deleteFeed(final Context context, final long feedId) {\n      */\n     @NonNull\n     public static Future<?> deleteFeedItems(@NonNull Context context, @NonNull List<FeedItem> items) {\n-        return dbExec.submit(() -> deleteFeedItemsSynchronous(context, items));\n+        return runOnDbThread(() -> deleteFeedItemsSynchronous(context, items));\n     }\n \n     /**\n@@ -235,7 +256,7 @@ private static void deleteFeedItemsSynchronous(@NonNull Context context, @NonNul\n      * Deletes the entire playback history.\n      */\n     public static Future<?> clearPlaybackHistory() {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.clearPlaybackHistory();\n@@ -248,7 +269,7 @@ public static Future<?> clearPlaybackHistory() {\n      * Deletes the entire download log.\n      */\n     public static Future<?> clearDownloadLog() {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.clearDownloadLog();\n@@ -281,7 +302,7 @@ public static Future<?> addItemToPlaybackHistory(FeedMedia media) {\n      * @param date PlaybackCompletionDate for <code>media</code>\n      */\n     public static Future<?> addItemToPlaybackHistory(final FeedMedia media, Date date) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             Log.d(TAG, \"Adding item to playback history\");\n             media.setPlaybackCompletionDate(date);\n \n@@ -300,7 +321,7 @@ public static Future<?> addItemToPlaybackHistory(final FeedMedia media, Date dat\n      * @param status The DownloadStatus object.\n      */\n     public static Future<?> addDownloadStatus(final DownloadResult status) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.setDownloadStatus(status);\n@@ -322,7 +343,7 @@ public static Future<?> addDownloadStatus(final DownloadResult status) {\n      */\n     public static Future<?> addQueueItemAt(final Context context, final long itemId,\n                                            final int index, final boolean performAutoDownload) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             final PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             final List<FeedItem> queue = DBReader.getQueue(adapter);\n@@ -393,7 +414,7 @@ public static Future<?> addQueueItem(final Context context, final boolean perfor\n      */\n     public static Future<?> addQueueItem(final Context context, final boolean performAutoDownload,\n                                          final boolean markAsUnplayed, final long... itemIds) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             if (itemIds.length < 1) {\n                 return;\n             }\n@@ -476,7 +497,7 @@ private static void applySortOrder(List<FeedItem> queue, List<QueueEvent> events\n      * Removes all FeedItem objects from the queue.\n      */\n     public static Future<?> clearQueue() {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.clearQueue();\n@@ -495,12 +516,12 @@ public static Future<?> clearQueue() {\n      */\n     public static Future<?> removeQueueItem(final Context context,\n                                             final boolean performAutoDownload, final FeedItem item) {\n-        return dbExec.submit(() -> removeQueueItemSynchronous(context, performAutoDownload, item.getId()));\n+        return runOnDbThread(() -> removeQueueItemSynchronous(context, performAutoDownload, item.getId()));\n     }\n \n     public static Future<?> removeQueueItem(final Context context, final boolean performAutoDownload,\n                                             final long... itemIds) {\n-        return dbExec.submit(() -> removeQueueItemSynchronous(context, performAutoDownload, itemIds));\n+        return runOnDbThread(() -> removeQueueItemSynchronous(context, performAutoDownload, itemIds));\n     }\n \n     private static void removeQueueItemSynchronous(final Context context,\n@@ -562,7 +583,7 @@ public static Future<?> toggleFavoriteItem(final FeedItem item) {\n     }\n \n     public static Future<?> addFavoriteItem(final FeedItem item) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             final PodDBAdapter adapter = PodDBAdapter.getInstance().open();\n             adapter.addFavoriteItem(item);\n             adapter.close();\n@@ -573,7 +594,7 @@ public static Future<?> addFavoriteItem(final FeedItem item) {\n     }\n \n     public static Future<?> removeFavoriteItem(final FeedItem item) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             final PodDBAdapter adapter = PodDBAdapter.getInstance().open();\n             adapter.removeFavoriteItem(item);\n             adapter.close();\n@@ -590,7 +611,7 @@ public static Future<?> removeFavoriteItem(final FeedItem item) {\n      * @param broadcastUpdate true if this operation should trigger a QueueUpdateBroadcast. This option should be set to\n      */\n     public static Future<?> moveQueueItemToTop(final long itemId, final boolean broadcastUpdate) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             LongList queueIdList = DBReader.getQueueIDList();\n             int index = queueIdList.indexOf(itemId);\n             if (index >= 0) {\n@@ -609,7 +630,7 @@ public static Future<?> moveQueueItemToTop(final long itemId, final boolean broa\n      */\n     public static Future<?> moveQueueItemToBottom(final long itemId,\n                                                   final boolean broadcastUpdate) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             LongList queueIdList = DBReader.getQueueIDList();\n             int index = queueIdList.indexOf(itemId);\n             if (index >= 0) {\n@@ -632,7 +653,7 @@ public static Future<?> moveQueueItemToBottom(final long itemId,\n      */\n     public static Future<?> moveQueueItem(final int from,\n                                           final int to, final boolean broadcastUpdate) {\n-        return dbExec.submit(() -> moveQueueItemHelper(from, to, broadcastUpdate));\n+        return runOnDbThread(() -> moveQueueItemHelper(from, to, broadcastUpdate));\n     }\n \n     /**\n@@ -669,7 +690,7 @@ private static void moveQueueItemHelper(final int from,\n     }\n \n     public static Future<?> resetPagedFeedPage(Feed feed) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             final PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.resetPagedFeedPage(feed);\n@@ -699,7 +720,7 @@ public static Future<?> markItemPlayed(final int played, final long... itemIds)\n      */\n     public static Future<?> markItemPlayed(final int played, final boolean broadcastUpdate,\n                                            final long... itemIds) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             final PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.setFeedItemRead(played, itemIds);\n@@ -729,7 +750,7 @@ private static Future<?> markItemPlayed(final long itemId,\n                                             final int played,\n                                             final long mediaId,\n                                             final boolean resetMediaPosition) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             final PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.setFeedItemRead(played, itemId, mediaId,\n@@ -746,7 +767,7 @@ private static Future<?> markItemPlayed(final long itemId,\n      * @param feedId ID of the Feed.\n      */\n     public static Future<?> removeFeedNewFlag(final long feedId) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             final PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.setFeedItems(FeedItem.NEW, FeedItem.UNPLAYED, feedId);\n@@ -760,7 +781,7 @@ public static Future<?> removeFeedNewFlag(final long feedId) {\n      * Sets the 'read'-attribute of all NEW FeedItems to UNPLAYED.\n      */\n     public static Future<?> removeAllNewFlags() {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             final PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.setFeedItems(FeedItem.NEW, FeedItem.UNPLAYED);\n@@ -771,7 +792,7 @@ public static Future<?> removeAllNewFlags() {\n     }\n \n     static Future<?> addNewFeed(final Context context, final Feed... feeds) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             final PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.setCompleteFeed(feeds);\n@@ -789,7 +810,7 @@ static Future<?> addNewFeed(final Context context, final Feed... feeds) {\n     }\n \n     static Future<?> setCompleteFeed(final Feed... feeds) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.setCompleteFeed(feeds);\n@@ -798,7 +819,7 @@ static Future<?> setCompleteFeed(final Feed... feeds) {\n     }\n \n     public static Future<?> setItemList(final List<FeedItem> items) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.storeFeedItemlist(items);\n@@ -814,7 +835,7 @@ public static Future<?> setItemList(final List<FeedItem> items) {\n      * @param media The FeedMedia object.\n      */\n     public static Future<?> setFeedMedia(final FeedMedia media) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.setMedia(media);\n@@ -828,7 +849,7 @@ public static Future<?> setFeedMedia(final FeedMedia media) {\n      * @param media The FeedMedia object.\n      */\n     public static Future<?> setFeedMediaPlaybackInformation(final FeedMedia media) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.setFeedMediaPlaybackInformation(media);\n@@ -843,7 +864,7 @@ public static Future<?> setFeedMediaPlaybackInformation(final FeedMedia media) {\n      * @param item The FeedItem object.\n      */\n     public static Future<?> setFeedItem(final FeedItem item) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.setSingleFeedItem(item);\n@@ -857,7 +878,7 @@ public static Future<?> setFeedItem(final FeedItem item) {\n      */\n     public static Future<?> updateFeedDownloadURL(final String original, final String updated) {\n         Log.d(TAG, \"updateFeedDownloadURL(original: \" + original + \", updated: \" + updated + \")\");\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.setFeedDownloadUrl(original, updated);\n@@ -871,7 +892,7 @@ public static Future<?> updateFeedDownloadURL(final String original, final Strin\n      * @param preferences The FeedPreferences object.\n      */\n     public static Future<?> setFeedPreferences(final FeedPreferences preferences) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.setFeedPreferences(preferences);\n@@ -901,7 +922,7 @@ private static int indexInItemList(List<FeedItem> items, long itemId) {\n      */\n     public static Future<?> setFeedLastUpdateFailed(final long feedId,\n                                                     final boolean lastUpdateFailed) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.setFeedLastUpdateFailed(feedId, lastUpdateFailed);\n@@ -911,7 +932,7 @@ public static Future<?> setFeedLastUpdateFailed(final long feedId,\n     }\n \n     public static Future<?> setFeedCustomTitle(Feed feed) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.setFeedCustomTitle(feed.getId(), feed.getCustomTitle());\n@@ -930,10 +951,10 @@ public static Future<?> setFeedCustomTitle(Feed feed) {\n     public static Future<?> reorderQueue(@Nullable SortOrder sortOrder, final boolean broadcastUpdate) {\n         if (sortOrder == null) {\n             Log.w(TAG, \"reorderQueue() - sortOrder is null. Do nothing.\");\n-            return dbExec.submit(() -> { });\n+            return runOnDbThread(() -> { });\n         }\n         final Permutor<FeedItem> permutor = FeedItemPermutors.getPermutor(sortOrder);\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             final PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             final List<FeedItem> queue = DBReader.getQueue(adapter);\n@@ -960,7 +981,7 @@ public static Future<?> reorderQueue(@Nullable SortOrder sortOrder, final boolea\n     public static Future<?> setFeedItemsFilter(final long feedId,\n                                                final Set<String> filterValues) {\n         Log.d(TAG, \"setFeedItemsFilter() called with: \" + \"feedId = [\" + feedId + \"], filterValues = [\" + filterValues + \"]\");\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.setFeedItemFilter(feedId, filterValues);\n@@ -974,7 +995,7 @@ public static Future<?> setFeedItemsFilter(final long feedId,\n      *\n      */\n     public static Future<?> setFeedItemSortOrder(long feedId, @Nullable SortOrder sortOrder) {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.setFeedItemSortOrder(feedId, sortOrder);\n@@ -988,11 +1009,24 @@ public static Future<?> setFeedItemSortOrder(long feedId, @Nullable SortOrder so\n      */\n     @NonNull\n     public static Future<?> resetStatistics() {\n-        return dbExec.submit(() -> {\n+        return runOnDbThread(() -> {\n             PodDBAdapter adapter = PodDBAdapter.getInstance();\n             adapter.open();\n             adapter.resetAllMediaPlayedDuration();\n             adapter.close();\n         });\n     }\n+\n+    /**\n+     * Submit to the DB thread only if caller is not already on the DB thread. Otherwise,\n+     * just execute synchronously\n+     */\n+    private static Future<?> runOnDbThread(Runnable runnable) {\n+        if (\"DatabaseExecutor\".equals(Thread.currentThread().getName())) {\n+            runnable.run();\n+            return Futures.immediateFuture(null);\n+        } else {\n+            return dbExec.submit(runnable);\n+        }\n+    }\n }\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/util/FeedUtil.java b/core/src/main/java/de/danoeh/antennapod/core/util/FeedUtil.java\nnew file mode 100644\nindex 0000000000..201207816d\n--- /dev/null\n+++ b/core/src/main/java/de/danoeh/antennapod/core/util/FeedUtil.java\n@@ -0,0 +1,13 @@\n+package de.danoeh.antennapod.core.util;\n+\n+import de.danoeh.antennapod.model.feed.Feed;\n+import de.danoeh.antennapod.storage.preferences.UserPreferences;\n+\n+public abstract class FeedUtil {\n+    public static boolean shouldAutoDeleteItemsOnThatFeed(Feed feed) {\n+        if (!UserPreferences.isAutoDelete()) {\n+            return false;\n+        }\n+        return !feed.isLocalFeed() || UserPreferences.isAutoDeleteLocal();\n+    }\n+}\ndiff --git a/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java b/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\nindex f2b122fcca..d0dd77bc93 100644\n--- a/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\n+++ b/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\n@@ -78,6 +78,7 @@ private UserPreferences(){}\n     public static final String PREF_SKIP_KEEPS_EPISODE = \"prefSkipKeepsEpisode\";\n     private static final String PREF_FAVORITE_KEEPS_EPISODE = \"prefFavoriteKeepsEpisode\";\n     private static final String PREF_AUTO_DELETE = \"prefAutoDelete\";\n+    private static final String PREF_AUTO_DELETE_LOCAL = \"prefAutoDeleteLocal\";\n     public static final String PREF_SMART_MARK_AS_PLAYED_SECS = \"prefSmartMarkAsPlayedSecs\";\n     private static final String PREF_PLAYBACK_SPEED_ARRAY = \"prefPlaybackSpeedArray\";\n     public static final String PREF_PAUSE_PLAYBACK_FOR_FOCUS_LOSS = \"prefPauseForFocusLoss\";\n@@ -400,6 +401,10 @@ public static boolean isAutoDelete() {\n         return prefs.getBoolean(PREF_AUTO_DELETE, false);\n     }\n \n+    public static boolean isAutoDeleteLocal() {\n+        return prefs.getBoolean(PREF_AUTO_DELETE_LOCAL, false);\n+    }\n+\n     public static int getSmartMarkAsPlayedSecs() {\n         return Integer.parseInt(prefs.getString(PREF_SMART_MARK_AS_PLAYED_SECS, \"30\"));\n     }\ndiff --git a/ui/i18n/src/main/res/values/strings.xml b/ui/i18n/src/main/res/values/strings.xml\nindex 6bdb836dd2..70c0ffa21f 100644\n--- a/ui/i18n/src/main/res/values/strings.xml\n+++ b/ui/i18n/src/main/res/values/strings.xml\n@@ -213,6 +213,7 @@\n     <string name=\"stream_label\">Stream</string>\n     <string name=\"delete_label\">Delete</string>\n     <string name=\"delete_failed\">Unable to delete file. Rebooting the device could help.</string>\n+    <string name=\"delete_local_failed\">Unable to delete file. Try re-connecting the local folder from the podcast info screen.</string>\n     <string name=\"delete_episode_label\">Delete episode</string>\n     <plurals name=\"deleted_multi_episode_batch_label\">\n         <item quantity=\"one\">1 downloaded episode deleted.</item>\n@@ -256,6 +257,7 @@\n     <string name=\"skip_episode_label\">Skip episode</string>\n     <string name=\"reset_position\">Reset playback position</string>\n     <string name=\"no_items_selected\">No items selected</string>\n+    <string name=\"delete_local_feed_warning_body\">Deleting removes the episode from AntennaPod and deletes the media file from your device storage. It cannot be downloaded again through AntennaPod.</string>\n \n     <!-- Download messages and labels -->\n     <string name=\"download_successful\">successful</string>\n@@ -397,6 +399,9 @@\n     <string name=\"pref_followQueue_sum\">Jump to next queue item when playback completes</string>\n     <string name=\"pref_auto_delete_sum\">Delete episode when playback completes</string>\n     <string name=\"pref_auto_delete_title\">Auto delete</string>\n+    <string name=\"pref_auto_local_delete_title\">Auto delete from local folders</string>\n+    <string name=\"pref_auto_local_delete_sum\">Include local folders in Auto delete functionality</string>\n+    <string name=\"pref_auto_local_delete_dialog_body\">Note that for local folders this will remove episodes from AntennaPod and delete their media files from your device storage. They cannot be downloaded again through AntennaPod. Enable auto delete?</string>\n     <string name=\"pref_smart_mark_as_played_sum\">Mark episodes as played even if less than a certain amount of seconds of playing time is still left</string>\n     <string name=\"pref_smart_mark_as_played_title\">Smart mark as played</string>\n     <string name=\"pref_skip_keeps_episodes_sum\">Keep episodes when they are skipped</string>\n", "test_patch": "diff --git a/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java b/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\nindex 1f387b24b1..24c20242a8 100644\n--- a/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\n+++ b/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\n@@ -41,6 +41,7 @@\n import static de.test.antennapod.EspressoTestUtils.waitForView;\n import static java.util.concurrent.TimeUnit.MILLISECONDS;\n import static org.hamcrest.Matchers.not;\n+import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertTrue;\n \n @LargeTest\n@@ -199,6 +200,22 @@ public void testAutoDelete() {\n                 .until(() -> autoDelete == UserPreferences.isAutoDelete());\n     }\n \n+    @Test\n+    public void testAutoDeleteLocal() {\n+        clickPreference(R.string.downloads_pref);\n+        final boolean initialAutoDelete = UserPreferences.isAutoDeleteLocal();\n+        assertFalse(initialAutoDelete);\n+\n+        onView(withText(R.string.pref_auto_local_delete_title)).perform(click());\n+        onView(withText(R.string.yes)).perform(click());\n+        Awaitility.await().atMost(1000, MILLISECONDS)\n+                .until(() -> UserPreferences.isAutoDeleteLocal());\n+\n+        onView(withText(R.string.pref_auto_local_delete_title)).perform(click());\n+        Awaitility.await().atMost(1000, MILLISECONDS)\n+                .until(() -> !UserPreferences.isAutoDeleteLocal());\n+    }\n+\n     @Test\n     public void testPlaybackSpeeds() {\n         clickPreference(R.string.playback_pref);\n", "problem_statement": "Option to delete local files\n### Checklist\r\n\r\n- [X] I have used the search function to see if someone else has already submitted the same feature request.\r\n- [X] I will describe the problem with as much detail as possible.\r\n- [X] This request contains only one single feature, **not** a list of multiple (related) features.\r\n\r\n### App version\r\n\r\n2.4.1\r\n\r\n### Where did you get the app from\r\n\r\nF-Droid\r\n\r\n### Problem you may be having, or feature you want\r\n\r\nLike online files that we have an option beside Play to delete files , please add same for local files.\r\n\r\n### Suggested solution\r\n\r\n_No response_\r\n\r\n### Screenshots / Drawings / Technical details\r\n\r\n_No response_\n", "hints_text": "This issue has been mentioned on **AntennaPod Forum**. There might be relevant details there:\n\nhttps://forum.antennapod.org/t/deleting-files-from-antennapod/1939/4\n\nAs AntennaPod has already been granted access to the local folder, is there any roadblock left to adding a Delete button for Local Folder episodes?\r\n\r\nI do use the Local Folder option quite a bit for content that is unavailable directly through AP; as folders become more populated, locating the folder and then the file through an external file manager, becomes ever more jarring and time-consuming.\nI would like this too. Is it possible? Please if you have time implement this! Thank you for your time!", "created_at": "2023-03-29T09:55:18Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 6384, "instance_id": "AntennaPod__AntennaPod-6384", "issue_numbers": ["6122"], "base_commit": "038847177e33d82669ff61dd730589fb58adbed4", "patch": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/SleepTimerDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/SleepTimerDialog.java\nindex 52e6f78078..ecbc1d8736 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/SleepTimerDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/SleepTimerDialog.java\n@@ -4,6 +4,7 @@\n import android.app.Dialog;\n import android.content.Context;\n import android.os.Bundle;\n+import android.text.format.DateFormat;\n import android.view.View;\n import android.view.inputmethod.InputMethodManager;\n import android.widget.Button;\n@@ -11,19 +12,25 @@\n import android.widget.EditText;\n import android.widget.LinearLayout;\n import android.widget.TextView;\n+\n import androidx.annotation.NonNull;\n-import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n import androidx.fragment.app.DialogFragment;\n+\n+import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n import com.google.android.material.snackbar.Snackbar;\n+\n+import org.greenrobot.eventbus.EventBus;\n+import org.greenrobot.eventbus.Subscribe;\n+import org.greenrobot.eventbus.ThreadMode;\n+\n+import java.util.Locale;\n+\n import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.event.playback.SleepTimerUpdatedEvent;\n import de.danoeh.antennapod.core.preferences.SleepTimerPreferences;\n import de.danoeh.antennapod.core.service.playback.PlaybackService;\n import de.danoeh.antennapod.core.util.Converter;\n import de.danoeh.antennapod.core.util.playback.PlaybackController;\n-import org.greenrobot.eventbus.EventBus;\n-import org.greenrobot.eventbus.Subscribe;\n-import org.greenrobot.eventbus.ThreadMode;\n+import de.danoeh.antennapod.event.playback.SleepTimerUpdatedEvent;\n \n public class SleepTimerDialog extends DialogFragment {\n     private PlaybackController controller;\n@@ -31,6 +38,7 @@ public class SleepTimerDialog extends DialogFragment {\n     private LinearLayout timeSetup;\n     private LinearLayout timeDisplay;\n     private TextView time;\n+    private CheckBox chAutoEnable;\n \n     public SleepTimerDialog() {\n \n@@ -99,20 +107,38 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {\n             imm.showSoftInput(etxtTime, InputMethodManager.SHOW_IMPLICIT);\n         }, 100);\n \n-        CheckBox cbShakeToReset = content.findViewById(R.id.cbShakeToReset);\n-        CheckBox cbVibrate = content.findViewById(R.id.cbVibrate);\n-        CheckBox chAutoEnable = content.findViewById(R.id.chAutoEnable);\n+        final CheckBox cbShakeToReset = content.findViewById(R.id.cbShakeToReset);\n+        final CheckBox cbVibrate = content.findViewById(R.id.cbVibrate);\n+        chAutoEnable = content.findViewById(R.id.chAutoEnable);\n+        final TextView changeTimesButton = content.findViewById(R.id.changeTimes);\n \n         cbShakeToReset.setChecked(SleepTimerPreferences.shakeToReset());\n         cbVibrate.setChecked(SleepTimerPreferences.vibrate());\n         chAutoEnable.setChecked(SleepTimerPreferences.autoEnable());\n+        changeTimesButton.setEnabled(chAutoEnable.isChecked());\n \n         cbShakeToReset.setOnCheckedChangeListener((buttonView, isChecked)\n                 -> SleepTimerPreferences.setShakeToReset(isChecked));\n         cbVibrate.setOnCheckedChangeListener((buttonView, isChecked)\n                 -> SleepTimerPreferences.setVibrate(isChecked));\n         chAutoEnable.setOnCheckedChangeListener((compoundButton, isChecked)\n-                -> SleepTimerPreferences.setAutoEnable(isChecked));\n+                -> {\n+            SleepTimerPreferences.setAutoEnable(isChecked);\n+            changeTimesButton.setEnabled(isChecked);\n+        });\n+        updateAutoEnableText();\n+\n+        changeTimesButton.setOnClickListener(changeTimesBtn -> {\n+            int from = SleepTimerPreferences.autoEnableFrom();\n+            int to = SleepTimerPreferences.autoEnableTo();\n+            TimeRangeDialog dialog = new TimeRangeDialog(getContext(), from, to);\n+            dialog.setOnDismissListener(v -> {\n+                SleepTimerPreferences.setAutoEnableFrom(dialog.getFrom());\n+                SleepTimerPreferences.setAutoEnableTo(dialog.getTo());\n+                updateAutoEnableText();\n+            });\n+            dialog.show();\n+        });\n \n         Button disableButton = content.findViewById(R.id.disableSleeptimerButton);\n         disableButton.setOnClickListener(v -> {\n@@ -144,6 +170,28 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {\n         return builder.create();\n     }\n \n+    private void updateAutoEnableText() {\n+        String text;\n+        int from = SleepTimerPreferences.autoEnableFrom();\n+        int to = SleepTimerPreferences.autoEnableTo();\n+\n+        if (from == to) {\n+            text = getString(R.string.auto_enable_label);\n+        } else if (DateFormat.is24HourFormat(getContext())) {\n+            String formattedFrom = String.format(Locale.getDefault(), \"%02d:00\", from);\n+            String formattedTo = String.format(Locale.getDefault(), \"%02d:00\", to);\n+            text = getString(R.string.auto_enable_label_with_times, formattedFrom, formattedTo);\n+        } else {\n+            String formattedFrom = String.format(Locale.getDefault(), \"%02d:00 %s\",\n+                    from % 12, from >= 12 ? \"PM\" : \"AM\");\n+            String formattedTo = String.format(Locale.getDefault(), \"%02d:00 %s\",\n+                    to % 12, to >= 12 ? \"PM\" : \"AM\");\n+            text = getString(R.string.auto_enable_label_with_times, formattedFrom, formattedTo);\n+\n+        }\n+        chAutoEnable.setText(text);\n+    }\n+\n     @Subscribe(threadMode = ThreadMode.MAIN)\n     @SuppressWarnings(\"unused\")\n     public void timerUpdated(SleepTimerUpdatedEvent event) {\ndiff --git a/app/src/main/java/de/danoeh/antennapod/dialog/TimeRangeDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/TimeRangeDialog.java\nnew file mode 100644\nindex 0000000000..85913043ea\n--- /dev/null\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/TimeRangeDialog.java\n@@ -0,0 +1,187 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.content.Context;\n+import android.graphics.Canvas;\n+import android.graphics.Paint;\n+import android.graphics.Point;\n+import android.graphics.RectF;\n+import android.text.format.DateFormat;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import androidx.annotation.NonNull;\n+import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.ui.common.ThemeUtils;\n+\n+import java.util.Locale;\n+\n+public class TimeRangeDialog extends MaterialAlertDialogBuilder {\n+    private final TimeRangeView view;\n+\n+    public TimeRangeDialog(@NonNull Context context, int from, int to) {\n+        super(context);\n+        view = new TimeRangeView(context, from, to);\n+        setView(view);\n+        setPositiveButton(android.R.string.ok, null);\n+    }\n+\n+    public int getFrom() {\n+        return view.from;\n+    }\n+\n+    public int getTo() {\n+        return view.to;\n+    }\n+\n+    static class TimeRangeView extends View {\n+        private static final int DIAL_ALPHA = 120;\n+        private final Paint paintDial = new Paint();\n+        private final Paint paintSelected = new Paint();\n+        private final Paint paintText = new Paint();\n+        private int from;\n+        private int to;\n+        private final RectF bounds = new RectF();\n+        int touching = 0;\n+\n+        public TimeRangeView(Context context) { // Used by Android tools\n+            this(context, 0, 0);\n+        }\n+\n+        public TimeRangeView(Context context, int from, int to) {\n+            super(context);\n+            this.from = from;\n+            this.to = to;\n+            setup();\n+        }\n+\n+        private void setup() {\n+            paintDial.setAntiAlias(true);\n+            paintDial.setStyle(Paint.Style.STROKE);\n+            paintDial.setStrokeCap(Paint.Cap.ROUND);\n+            paintDial.setColor(ThemeUtils.getColorFromAttr(getContext(), android.R.attr.textColorPrimary));\n+            paintDial.setAlpha(DIAL_ALPHA);\n+\n+            paintSelected.setAntiAlias(true);\n+            paintSelected.setStyle(Paint.Style.STROKE);\n+            paintSelected.setStrokeCap(Paint.Cap.ROUND);\n+            paintSelected.setColor(ThemeUtils.getColorFromAttr(getContext(), R.attr.colorAccent));\n+\n+            paintText.setAntiAlias(true);\n+            paintText.setStyle(Paint.Style.FILL);\n+            paintText.setColor(ThemeUtils.getColorFromAttr(getContext(), android.R.attr.textColorPrimary));\n+            paintText.setTextAlign(Paint.Align.CENTER);\n+        }\n+\n+        @Override\n+        protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n+            if (MeasureSpec.getMode(widthMeasureSpec) == MeasureSpec.EXACTLY\n+                    && MeasureSpec.getMode(heightMeasureSpec) == MeasureSpec.EXACTLY) {\n+                super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n+            } else if (MeasureSpec.getMode(widthMeasureSpec) == MeasureSpec.EXACTLY) {\n+                super.onMeasure(widthMeasureSpec, widthMeasureSpec);\n+            } else if (MeasureSpec.getMode(heightMeasureSpec) == MeasureSpec.EXACTLY) {\n+                super.onMeasure(heightMeasureSpec, heightMeasureSpec);\n+            } else if (MeasureSpec.getSize(widthMeasureSpec) < MeasureSpec.getSize(heightMeasureSpec)) {\n+                super.onMeasure(widthMeasureSpec, widthMeasureSpec);\n+            } else {\n+                super.onMeasure(heightMeasureSpec, heightMeasureSpec);\n+            }\n+        }\n+\n+        @Override\n+        protected void onDraw(Canvas canvas) {\n+            super.onDraw(canvas);\n+\n+            float size = getHeight(); // square\n+            float padding = size * 0.1f;\n+            paintDial.setStrokeWidth(size * 0.005f);\n+            bounds.set(padding, padding, size - padding, size - padding);\n+\n+            paintText.setAlpha(DIAL_ALPHA);\n+            canvas.drawArc(bounds, 0, 360, false, paintDial);\n+            for (int i = 0; i < 24; i++) {\n+                paintDial.setStrokeWidth(size * 0.005f);\n+                if (i % 6 == 0) {\n+                    paintDial.setStrokeWidth(size * 0.01f);\n+                    Point textPos = radToPoint(i / 24.0f * 360.f, size / 2 - 2.5f * padding);\n+                    paintText.setTextSize(0.4f * padding);\n+                    canvas.drawText(String.valueOf(i), textPos.x,\n+                            textPos.y + (-paintText.descent() - paintText.ascent()) / 2, paintText);\n+                }\n+                Point outer = radToPoint(i / 24.0f * 360.f, size / 2 - 1.7f * padding);\n+                Point inner = radToPoint(i / 24.0f * 360.f, size / 2 - 1.9f * padding);\n+                canvas.drawLine(outer.x, outer.y, inner.x, inner.y, paintDial);\n+            }\n+            paintText.setAlpha(255);\n+\n+            float angleFrom = (float) from / 24 * 360 - 90;\n+            float angleDistance = (float) ((to - from + 24) % 24) / 24 * 360;\n+            paintSelected.setStrokeWidth(padding / 6);\n+            paintSelected.setStyle(Paint.Style.STROKE);\n+            canvas.drawArc(bounds, angleFrom, angleDistance, false, paintSelected);\n+            paintSelected.setStyle(Paint.Style.FILL);\n+            Point p1 = radToPoint(angleFrom + 90, size / 2 - padding);\n+            canvas.drawCircle(p1.x, p1.y, padding / 2, paintSelected);\n+            Point p2 = radToPoint(angleFrom + angleDistance + 90, size / 2 - padding);\n+            canvas.drawCircle(p2.x, p2.y, padding / 2, paintSelected);\n+\n+            paintText.setTextSize(0.6f * padding);\n+            String timeRange;\n+            if (from == to) {\n+                timeRange = getContext().getString(R.string.sleep_timer_always);\n+            } else if (DateFormat.is24HourFormat(getContext())) {\n+                timeRange = String.format(Locale.getDefault(), \"%02d:00 - %02d:00\", from, to);\n+            } else {\n+                timeRange = String.format(Locale.getDefault(), \"%02d:00 %s - %02d:00 %s\", from % 12,\n+                        from >= 12 ? \"PM\" : \"AM\", to % 12, to >= 12 ? \"PM\" : \"AM\");\n+            }\n+            canvas.drawText(timeRange, size / 2, (size - paintText.descent() - paintText.ascent()) / 2, paintText);\n+        }\n+\n+        protected Point radToPoint(float angle, float radius) {\n+            return new Point((int) (getWidth() / 2 + radius * Math.sin(-angle * Math.PI / 180 + Math.PI)),\n+                    (int) (getHeight() / 2 + radius * Math.cos(-angle * Math.PI / 180 + Math.PI)));\n+        }\n+\n+        @Override\n+        public boolean onTouchEvent(MotionEvent event) {\n+            getParent().requestDisallowInterceptTouchEvent(true);\n+            Point center = new Point(getWidth() / 2, getHeight() / 2);\n+            double angleRad = Math.atan2(center.y - event.getY(), center.x - event.getX());\n+            float angle = (float) (angleRad * (180 / Math.PI));\n+            angle += 360 + 360 - 90;\n+            angle %= 360;\n+\n+            if (event.getAction() == MotionEvent.ACTION_DOWN) {\n+                float fromDistance = Math.abs(angle - (float) from / 24 * 360);\n+                float toDistance = Math.abs(angle - (float) to / 24 * 360);\n+                if (fromDistance < 15 || fromDistance > (360 - 15)) {\n+                    touching = 1;\n+                    return true;\n+                } else if (toDistance < 15 || toDistance > (360 - 15)) {\n+                    touching = 2;\n+                    return true;\n+                }\n+            } else if (event.getAction() == MotionEvent.ACTION_MOVE) {\n+                int newTime = (int) (24 * (angle / 360.0));\n+                if (from == to && touching != 0) {\n+                    // Switch which handle is focussed such that selection is the smaller arc\n+                    touching = (((newTime - to + 24) % 24) < 12) ? 2 : 1;\n+                }\n+                if (touching == 1) {\n+                    from = newTime;\n+                    invalidate();\n+                    return true;\n+                } else if (touching == 2) {\n+                    to = newTime;\n+                    invalidate();\n+                    return true;\n+                }\n+            } else if (touching != 0) {\n+                touching = 0;\n+                return true;\n+            }\n+            return super.onTouchEvent(event);\n+        }\n+    }\n+}\ndiff --git a/app/src/main/res/layout/time_dialog.xml b/app/src/main/res/layout/time_dialog.xml\nindex 50001bf9cd..1a8f02c7c2 100644\n--- a/app/src/main/res/layout/time_dialog.xml\n+++ b/app/src/main/res/layout/time_dialog.xml\n@@ -141,6 +141,14 @@\n             android:layout_height=\"wrap_content\"\n             android:text=\"@string/auto_enable_label\" />\n \n+        <Button\n+            android:id=\"@+id/changeTimes\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:text=\"@string/auto_enable_change_times\"\n+            android:layout_gravity=\"center\"\n+            style=\"@style/Widget.MaterialComponents.Button.TextButton\" />\n+\n     </LinearLayout>\n \n </LinearLayout>\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/preferences/SleepTimerPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/preferences/SleepTimerPreferences.java\nindex b56e7e6f32..96ffe5cb66 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/preferences/SleepTimerPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/preferences/SleepTimerPreferences.java\n@@ -2,9 +2,10 @@\n \n import android.content.Context;\n import android.content.SharedPreferences;\n-import androidx.annotation.NonNull;\n import android.util.Log;\n \n+import androidx.annotation.NonNull;\n+\n import java.util.concurrent.TimeUnit;\n \n public class SleepTimerPreferences {\n@@ -17,8 +18,12 @@ public class SleepTimerPreferences {\n     private static final String PREF_VIBRATE = \"Vibrate\";\n     private static final String PREF_SHAKE_TO_RESET = \"ShakeToReset\";\n     private static final String PREF_AUTO_ENABLE = \"AutoEnable\";\n+    private static final String PREF_AUTO_ENABLE_FROM = \"AutoEnableFrom\";\n+    private static final String PREF_AUTO_ENABLE_TO = \"AutoEnableTo\";\n \n-    private static final String DEFAULT_VALUE = \"15\";\n+    private static final String DEFAULT_LAST_TIMER = \"15\";\n+    private static final int DEFAULT_AUTO_ENABLE_FROM = 22;\n+    private static final int DEFAULT_AUTO_ENABLE_TO = 6;\n \n     private static SharedPreferences prefs;\n \n@@ -37,7 +42,7 @@ public static void setLastTimer(String value) {\n     }\n \n     public static String lastTimerValue() {\n-        return prefs.getString(PREF_VALUE, DEFAULT_VALUE);\n+        return prefs.getString(PREF_VALUE, DEFAULT_LAST_TIMER);\n     }\n \n     public static long timerMillis() {\n@@ -69,4 +74,33 @@ public static boolean autoEnable() {\n         return prefs.getBoolean(PREF_AUTO_ENABLE, false);\n     }\n \n+    public static void setAutoEnableFrom(int hourOfDay) {\n+        prefs.edit().putInt(PREF_AUTO_ENABLE_FROM, hourOfDay).apply();\n+    }\n+\n+    public static int autoEnableFrom() {\n+        return prefs.getInt(PREF_AUTO_ENABLE_FROM, DEFAULT_AUTO_ENABLE_FROM);\n+    }\n+\n+    public static void setAutoEnableTo(int hourOfDay) {\n+        prefs.edit().putInt(PREF_AUTO_ENABLE_TO, hourOfDay).apply();\n+    }\n+\n+    public static int autoEnableTo() {\n+        return prefs.getInt(PREF_AUTO_ENABLE_TO, DEFAULT_AUTO_ENABLE_TO);\n+    }\n+\n+    public static boolean isInTimeRange(int from, int to, int current) {\n+        // Range covers one day\n+        if (from < to) {\n+            return from <= current && current < to;\n+        }\n+\n+        // Range covers two days\n+        if (from <= current) {\n+            return true;\n+        }\n+\n+        return current < to;\n+    }\n }\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 4887246655..259e8f7760 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n@@ -45,37 +45,22 @@\n import androidx.media.MediaBrowserServiceCompat;\n import androidx.preference.PreferenceManager;\n \n-import de.danoeh.antennapod.core.service.QuickSettingsTileService;\n-import de.danoeh.antennapod.core.util.playback.PlayableUtils;\n-import de.danoeh.antennapod.event.playback.BufferUpdateEvent;\n-import de.danoeh.antennapod.event.playback.PlaybackServiceEvent;\n-import de.danoeh.antennapod.event.PlayerErrorEvent;\n-import de.danoeh.antennapod.event.playback.SleepTimerUpdatedEvent;\n-import de.danoeh.antennapod.model.feed.FeedItemFilter;\n-import de.danoeh.antennapod.model.feed.SortOrder;\n-import de.danoeh.antennapod.playback.base.PlaybackServiceMediaPlayer;\n-import de.danoeh.antennapod.playback.base.PlayerStatus;\n-import de.danoeh.antennapod.playback.cast.CastPsmp;\n-import de.danoeh.antennapod.playback.cast.CastStateListener;\n-import de.danoeh.antennapod.storage.preferences.UserPreferences;\n import org.greenrobot.eventbus.EventBus;\n import org.greenrobot.eventbus.Subscribe;\n import org.greenrobot.eventbus.ThreadMode;\n \n import java.util.ArrayList;\n+import java.util.Calendar;\n import java.util.Collections;\n+import java.util.GregorianCalendar;\n import java.util.List;\n import java.util.concurrent.TimeUnit;\n \n import de.danoeh.antennapod.core.R;\n-import de.danoeh.antennapod.event.MessageEvent;\n-import de.danoeh.antennapod.event.playback.PlaybackPositionEvent;\n-import de.danoeh.antennapod.event.settings.SkipIntroEndingChangedEvent;\n-import de.danoeh.antennapod.event.settings.SpeedPresetChangedEvent;\n-import de.danoeh.antennapod.event.settings.VolumeAdaptionChangedEvent;\n import de.danoeh.antennapod.core.preferences.PlaybackPreferences;\n import de.danoeh.antennapod.core.preferences.SleepTimerPreferences;\n import de.danoeh.antennapod.core.receiver.MediaButtonReceiver;\n+import de.danoeh.antennapod.core.service.QuickSettingsTileService;\n import de.danoeh.antennapod.core.storage.DBReader;\n import de.danoeh.antennapod.core.storage.DBWriter;\n import de.danoeh.antennapod.core.storage.FeedSearcher;\n@@ -84,14 +69,31 @@\n import de.danoeh.antennapod.core.util.IntentUtils;\n import de.danoeh.antennapod.core.util.NetworkUtils;\n import de.danoeh.antennapod.core.util.gui.NotificationUtils;\n+import de.danoeh.antennapod.core.util.playback.PlayableUtils;\n import de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter;\n import de.danoeh.antennapod.core.widget.WidgetUpdater;\n+import de.danoeh.antennapod.event.MessageEvent;\n+import de.danoeh.antennapod.event.PlayerErrorEvent;\n+import de.danoeh.antennapod.event.playback.BufferUpdateEvent;\n+import de.danoeh.antennapod.event.playback.PlaybackPositionEvent;\n+import de.danoeh.antennapod.event.playback.PlaybackServiceEvent;\n+import de.danoeh.antennapod.event.playback.SleepTimerUpdatedEvent;\n+import de.danoeh.antennapod.event.settings.SkipIntroEndingChangedEvent;\n+import de.danoeh.antennapod.event.settings.SpeedPresetChangedEvent;\n+import de.danoeh.antennapod.event.settings.VolumeAdaptionChangedEvent;\n import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.model.feed.FeedItem;\n+import de.danoeh.antennapod.model.feed.FeedItemFilter;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n import de.danoeh.antennapod.model.feed.FeedPreferences;\n+import de.danoeh.antennapod.model.feed.SortOrder;\n import de.danoeh.antennapod.model.playback.MediaType;\n import de.danoeh.antennapod.model.playback.Playable;\n+import de.danoeh.antennapod.playback.base.PlaybackServiceMediaPlayer;\n+import de.danoeh.antennapod.playback.base.PlayerStatus;\n+import de.danoeh.antennapod.playback.cast.CastPsmp;\n+import de.danoeh.antennapod.playback.cast.CastStateListener;\n+import de.danoeh.antennapod.storage.preferences.UserPreferences;\n import de.danoeh.antennapod.ui.appstartintent.MainActivityStarter;\n import de.danoeh.antennapod.ui.appstartintent.VideoPlayerActivityStarter;\n import io.reactivex.Completable;\n@@ -799,8 +801,18 @@ public void statusChanged(PlaybackServiceMediaPlayer.PSMPInfo newInfo) {\n                     stateManager.validStartCommandWasReceived();\n                     stateManager.startForeground(R.id.notification_playing, notificationBuilder.build());\n                     // set sleep timer if auto-enabled\n+                    boolean autoEnableByTime = true;\n+                    int fromSetting = SleepTimerPreferences.autoEnableFrom();\n+                    int toSetting = SleepTimerPreferences.autoEnableTo();\n+                    if (fromSetting != toSetting) {\n+                        Calendar now = new GregorianCalendar();\n+                        now.setTimeInMillis(System.currentTimeMillis());\n+                        int currentHour = now.get(Calendar.HOUR_OF_DAY);\n+                        autoEnableByTime = SleepTimerPreferences.isInTimeRange(fromSetting, toSetting, currentHour);\n+                    }\n+\n                     if (newInfo.oldPlayerStatus != null && newInfo.oldPlayerStatus != PlayerStatus.SEEKING\n-                            && SleepTimerPreferences.autoEnable() && !sleepTimerActive()) {\n+                            && SleepTimerPreferences.autoEnable() && autoEnableByTime && !sleepTimerActive()) {\n                         setSleepTimer(SleepTimerPreferences.timerMillis());\n                         EventBus.getDefault().post(new MessageEvent(getString(R.string.sleep_timer_enabled_label),\n                                 PlaybackService.this::disableSleepTimer));\ndiff --git a/ui/i18n/src/main/res/values/strings.xml b/ui/i18n/src/main/res/values/strings.xml\nindex 32db0dcac3..b92bf2eaeb 100644\n--- a/ui/i18n/src/main/res/values/strings.xml\n+++ b/ui/i18n/src/main/res/values/strings.xml\n@@ -592,6 +592,7 @@\n     <string name=\"set_sleeptimer_label\">Set sleep timer</string>\n     <string name=\"disable_sleeptimer_label\">Disable sleep timer</string>\n     <string name=\"extend_sleep_timer_label\">+%d min</string>\n+    <string name=\"sleep_timer_always\">Always</string>\n     <string name=\"sleep_timer_label\">Sleep timer</string>\n     <string name=\"time_dialog_invalid_input\">Invalid input, time has to be an integer</string>\n     <string name=\"shake_to_reset_label\">Shake to reset</string>\n@@ -611,7 +612,9 @@\n         <item quantity=\"one\">1 hour</item>\n         <item quantity=\"other\">%d hours</item>\n     </plurals>\n-    <string name=\"auto_enable_label\">Auto-enable</string>\n+    <string name=\"auto_enable_label\">Automatically activate the sleep timer when pressing play</string>\n+    <string name=\"auto_enable_label_with_times\">Automatically activate the sleep timer when pressing play between %s and %s</string>\n+    <string name=\"auto_enable_change_times\">Change times</string>\n     <string name=\"sleep_timer_enabled_label\">Sleep timer enabled</string>\n \n     <!-- Synchronisation -->\n", "test_patch": "diff --git a/app/src/androidTest/java/de/test/antennapod/service/playback/SleepTimerPreferencesTest.java b/app/src/androidTest/java/de/test/antennapod/service/playback/SleepTimerPreferencesTest.java\nnew file mode 100644\nindex 0000000000..4339d6cd7e\n--- /dev/null\n+++ b/app/src/androidTest/java/de/test/antennapod/service/playback/SleepTimerPreferencesTest.java\n@@ -0,0 +1,22 @@\n+package de.test.antennapod.service.playback;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.junit.Test;\n+\n+import de.danoeh.antennapod.core.preferences.SleepTimerPreferences;\n+\n+public class SleepTimerPreferencesTest {\n+    @Test\n+    public void testIsInTimeRange() {\n+        assertTrue(SleepTimerPreferences.isInTimeRange(0, 10, 8));\n+        assertTrue(SleepTimerPreferences.isInTimeRange(1, 10, 8));\n+        assertTrue(SleepTimerPreferences.isInTimeRange(1, 10, 1));\n+        assertTrue(SleepTimerPreferences.isInTimeRange(20, 10, 8));\n+        assertTrue(SleepTimerPreferences.isInTimeRange(20, 20, 8));\n+        assertFalse(SleepTimerPreferences.isInTimeRange(1, 6, 8));\n+        assertFalse(SleepTimerPreferences.isInTimeRange(1, 6, 6));\n+        assertFalse(SleepTimerPreferences.isInTimeRange(20, 6, 8));\n+    }\n+}\n", "problem_statement": "Option to auto-enable sleep timer within a specific time of day\n### Checklist\n\n- [X] I have used the search function for [open](https://github.com/AntennaPod/AntennaPod/issues) **and** [closed](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue+is%3Aclosed) issues to see if someone else has already submitted the same feature request.\n- [X] I will describe the problem with as much detail as possible.\n- [X] This request contains only one single feature, **not** a list of multiple (related) features.\n\n### App version\n\n2.7.0\n\n### Where did you get the app from\n\nGoogle Play\n\n### Problem you may be having, or feature you want\n\nHi. Big fan! :)\r\n\r\nLately I've been listening to podcasts while going to sleep. Unfortunately some times I go to sleep very late, and I think I turn on sleep timer, but I don't actually do it \u2013 or I even forget it outright. Because of this, I've had a few times where lots of episodes have been played while I slept, and I've lost where in the episodes I was.\n\n### Suggested solution\n\nSince we often can be forgetful or not all \"with it\" when we are very tired and sleepy, I'm sure this happens to more people. That's why I think an option to auto-enable the sleep timer within a specific time range would be very useful.\r\n\r\nIt would work like how night light on screens work. You set a start time and an end time, and between those times the sleep timer is set automatically when you press play on any episode. Then, during the day (or night if you work night shift, you set the time interval yourself), you can play episodes without the sleep timer being set automatically.\r\n\r\nHope that was clear, and that you also think this could be useful. Thanks! :) \n\n### Screenshots / Drawings / Technical details\n\n_No response_\n", "hints_text": "This would be great. Would save me from fiddling with my phone while driving during my commute when it inevitably pauses playback because I forgot to turn it off. Its a nice feature in other players.", "created_at": "2023-03-18T09:55:46Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 6358, "instance_id": "AntennaPod__AntennaPod-6358", "issue_numbers": ["6222"], "base_commit": "581e71b306bbc28dc504bde1d1bba6d6121e26e1", "patch": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java\nindex dfbaf96958..7061a69f32 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java\n@@ -61,15 +61,13 @@ private void inflateSortMenu() {\n     @NonNull\n     @Override\n     protected List<FeedItem> loadData() {\n-        return DBReader.getRecentlyPublishedEpisodes(0, page * EPISODES_PER_PAGE,\n-                getFilter(), getSortOrder());\n+        return DBReader.getEpisodes(0, page * EPISODES_PER_PAGE, getFilter(), getSortOrder());\n     }\n \n     @NonNull\n     @Override\n     protected List<FeedItem> loadMoreData(int page) {\n-        return DBReader.getRecentlyPublishedEpisodes((page - 1) * EPISODES_PER_PAGE,\n-                EPISODES_PER_PAGE, getFilter(), getSortOrder());\n+        return DBReader.getEpisodes((page - 1) * EPISODES_PER_PAGE, EPISODES_PER_PAGE, getFilter(), getSortOrder());\n     }\n \n     @Override\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java\nindex f615252bdf..dbc453301c 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/CompletedDownloadsFragment.java\n@@ -315,7 +315,8 @@ private void loadItems() {\n         emptyView.hide();\n         disposable = Observable.fromCallable(() -> {\n             SortOrder sortOrder = UserPreferences.getDownloadsSortedOrder();\n-            List<FeedItem> downloadedItems = DBReader.getDownloadedItems(sortOrder);\n+            List<FeedItem> downloadedItems = DBReader.getEpisodes(0, Integer.MAX_VALUE,\n+                        new FeedItemFilter(FeedItemFilter.DOWNLOADED), sortOrder);\n \n             List<Long> mediaIds = new ArrayList<>();\n             if (runningDownloads == null) {\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/InboxFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/InboxFragment.java\nindex c04adee6d9..f8bcbb5322 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/InboxFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/InboxFragment.java\n@@ -97,14 +97,15 @@ public boolean onMenuItemClick(MenuItem item) {\n     @NonNull\n     @Override\n     protected List<FeedItem> loadData() {\n-        return DBReader.getNewItemsList(0, page * EPISODES_PER_PAGE, UserPreferences.getInboxSortedOrder());\n+        return DBReader.getEpisodes(0, page * EPISODES_PER_PAGE,\n+                new FeedItemFilter(FeedItemFilter.NEW),  UserPreferences.getInboxSortedOrder());\n     }\n \n     @NonNull\n     @Override\n     protected List<FeedItem> loadMoreData(int page) {\n-        return DBReader.getNewItemsList((page - 1) * EPISODES_PER_PAGE, EPISODES_PER_PAGE,\n-                UserPreferences.getInboxSortedOrder());\n+        return DBReader.getEpisodes((page - 1) * EPISODES_PER_PAGE, EPISODES_PER_PAGE,\n+                new FeedItemFilter(FeedItemFilter.NEW), UserPreferences.getInboxSortedOrder());\n     }\n \n     @Override\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/home/sections/DownloadsSection.java b/app/src/main/java/de/danoeh/antennapod/ui/home/sections/DownloadsSection.java\nindex 0053b0e829..1240546c45 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/home/sections/DownloadsSection.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/home/sections/DownloadsSection.java\n@@ -124,7 +124,8 @@ private void loadItems() {\n             disposable.dispose();\n         }\n         SortOrder sortOrder = UserPreferences.getDownloadsSortedOrder();\n-        disposable = Observable.fromCallable(() -> DBReader.getDownloadedItems(sortOrder))\n+        disposable = Observable.fromCallable(() -> DBReader.getEpisodes(0, Integer.MAX_VALUE,\n+                        new FeedItemFilter(FeedItemFilter.DOWNLOADED), sortOrder))\n                 .subscribeOn(Schedulers.io())\n                 .observeOn(AndroidSchedulers.mainThread())\n                 .subscribe(downloads -> {\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/home/sections/InboxSection.java b/app/src/main/java/de/danoeh/antennapod/ui/home/sections/InboxSection.java\nindex 6baea05e68..8d343a16aa 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/home/sections/InboxSection.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/home/sections/InboxSection.java\n@@ -26,7 +26,6 @@\n import de.danoeh.antennapod.fragment.swipeactions.SwipeActions;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedItemFilter;\n-import de.danoeh.antennapod.storage.database.PodDBAdapter;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n import de.danoeh.antennapod.ui.home.HomeSection;\n import io.reactivex.Observable;\n@@ -126,8 +125,9 @@ private void loadItems() {\n             disposable.dispose();\n         }\n         disposable = Observable.fromCallable(() ->\n-                        new Pair<>(DBReader.getNewItemsList(0, NUM_EPISODES, UserPreferences.getInboxSortedOrder()),\n-                                PodDBAdapter.getInstance().getNumberOfNewItems()))\n+                        new Pair<>(DBReader.getEpisodes(0, NUM_EPISODES,\n+                                new FeedItemFilter(FeedItemFilter.NEW), UserPreferences.getInboxSortedOrder()),\n+                                DBReader.getTotalEpisodeCount(new FeedItemFilter(FeedItemFilter.NEW))))\n                 .subscribeOn(Schedulers.io())\n                 .observeOn(AndroidSchedulers.mainThread())\n                 .subscribe(data -> {\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/export/favorites/FavoritesWriter.java b/core/src/main/java/de/danoeh/antennapod/core/export/favorites/FavoritesWriter.java\nindex 5ccfc93fed..649ec815aa 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/export/favorites/FavoritesWriter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/export/favorites/FavoritesWriter.java\n@@ -43,7 +43,7 @@ public void writeDocument(List<Feed> feeds, Writer writer, Context context)\n         InputStream feedTemplateStream = context.getAssets().open(FEED_TEMPLATE);\n         String feedTemplate = IOUtils.toString(feedTemplateStream, UTF_8);\n \n-        List<FeedItem> allFavorites = DBReader.getRecentlyPublishedEpisodes(0, Integer.MAX_VALUE,\n+        List<FeedItem> allFavorites = DBReader.getEpisodes(0, Integer.MAX_VALUE,\n                 new FeedItemFilter(FeedItemFilter.IS_FAVORITE), SortOrder.DATE_NEW_OLD);\n         Map<Long, List<FeedItem>> favoriteByFeed = getFeedMap(allFavorites);\n \ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 62ddf969c0..053d852eb8 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n@@ -402,9 +402,9 @@ private List<MediaBrowserCompat.MediaItem> loadChildrenSynchronous(@NonNull Stri\n         List<MediaBrowserCompat.MediaItem> mediaItems = new ArrayList<>();\n         if (parentId.equals(getResources().getString(R.string.app_name))) {\n             mediaItems.add(createBrowsableMediaItem(R.string.queue_label, R.drawable.ic_playlist_play_black,\n-                    DBReader.getQueue().size()));\n+                    DBReader.getTotalEpisodeCount(new FeedItemFilter(FeedItemFilter.QUEUED))));\n             mediaItems.add(createBrowsableMediaItem(R.string.downloads_label, R.drawable.ic_download_black,\n-                    DBReader.getDownloadedItems(UserPreferences.getDownloadsSortedOrder()).size()));\n+                    DBReader.getTotalEpisodeCount(new FeedItemFilter(FeedItemFilter.DOWNLOADED))));\n             mediaItems.add(createBrowsableMediaItem(R.string.episodes_label, R.drawable.ic_feed_black,\n                     DBReader.getTotalEpisodeCount(new FeedItemFilter(FeedItemFilter.UNPLAYED))));\n             List<Feed> feeds = DBReader.getFeedList();\n@@ -418,10 +418,10 @@ private List<MediaBrowserCompat.MediaItem> loadChildrenSynchronous(@NonNull Stri\n         if (parentId.equals(getResources().getString(R.string.queue_label))) {\n             feedItems = DBReader.getQueue();\n         } else if (parentId.equals(getResources().getString(R.string.downloads_label))) {\n-            feedItems = DBReader.getDownloadedItems(UserPreferences.getDownloadsSortedOrder());\n+            feedItems = DBReader.getEpisodes(0, MAX_ANDROID_AUTO_EPISODES_PER_FEED,\n+                    new FeedItemFilter(FeedItemFilter.DOWNLOADED), UserPreferences.getDownloadsSortedOrder());\n         } else if (parentId.equals(getResources().getString(R.string.episodes_label))) {\n-            feedItems = DBReader.getRecentlyPublishedEpisodes(0,\n-                    MAX_ANDROID_AUTO_EPISODES_PER_FEED,\n+            feedItems = DBReader.getEpisodes(0, MAX_ANDROID_AUTO_EPISODES_PER_FEED,\n                     new FeedItemFilter(FeedItemFilter.UNPLAYED), SortOrder.DATE_NEW_OLD);\n         } else if (parentId.startsWith(\"FeedId:\")) {\n             long feedId = Long.parseLong(parentId.split(\":\")[1]);\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/APCleanupAlgorithm.java b/core/src/main/java/de/danoeh/antennapod/core/storage/APCleanupAlgorithm.java\nindex 30c50b5760..1d2e3ffd25 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/APCleanupAlgorithm.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/APCleanupAlgorithm.java\n@@ -14,6 +14,7 @@\n import java.util.concurrent.ExecutionException;\n \n import de.danoeh.antennapod.model.feed.FeedItem;\n+import de.danoeh.antennapod.model.feed.FeedItemFilter;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n import de.danoeh.antennapod.model.feed.SortOrder;\n \n@@ -89,7 +90,8 @@ Date calcMostRecentDateForDeletion(@NonNull Date currentDate) {\n     @NonNull\n     private List<FeedItem> getCandidates() {\n         List<FeedItem> candidates = new ArrayList<>();\n-        List<FeedItem> downloadedItems = DBReader.getDownloadedItems(SortOrder.DATE_NEW_OLD);\n+        List<FeedItem> downloadedItems = DBReader.getEpisodes(0, Integer.MAX_VALUE,\n+                new FeedItemFilter(FeedItemFilter.DOWNLOADED), SortOrder.DATE_NEW_OLD);\n \n         Date mostRecentDateForDeletion = calcMostRecentDateForDeletion(new Date());\n         for (FeedItem item : downloadedItems) {\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/APQueueCleanupAlgorithm.java b/core/src/main/java/de/danoeh/antennapod/core/storage/APQueueCleanupAlgorithm.java\nindex 3241f37ef2..2bd840fd1f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/APQueueCleanupAlgorithm.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/APQueueCleanupAlgorithm.java\n@@ -12,6 +12,7 @@\n import java.util.concurrent.ExecutionException;\n \n import de.danoeh.antennapod.model.feed.FeedItem;\n+import de.danoeh.antennapod.model.feed.FeedItemFilter;\n import de.danoeh.antennapod.model.feed.SortOrder;\n \n /**\n@@ -76,7 +77,8 @@ public int performCleanup(Context context, int numberOfEpisodesToDelete) {\n     @NonNull\n     private List<FeedItem> getCandidates() {\n         List<FeedItem> candidates = new ArrayList<>();\n-        List<FeedItem> downloadedItems = DBReader.getDownloadedItems(SortOrder.DATE_NEW_OLD);\n+        List<FeedItem> downloadedItems = DBReader.getEpisodes(0, Integer.MAX_VALUE,\n+                new FeedItemFilter(FeedItemFilter.DOWNLOADED), SortOrder.DATE_NEW_OLD);\n         for (FeedItem item : downloadedItems) {\n             if (item.hasMedia()\n                     && item.getMedia().isDownloaded()\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/AutomaticDownloadAlgorithm.java b/core/src/main/java/de/danoeh/antennapod/core/storage/AutomaticDownloadAlgorithm.java\nindex c9f37fd009..0f31215517 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/AutomaticDownloadAlgorithm.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/AutomaticDownloadAlgorithm.java\n@@ -7,6 +7,7 @@\n import java.util.Iterator;\n import java.util.List;\n \n+import de.danoeh.antennapod.model.feed.FeedItemFilter;\n import de.danoeh.antennapod.model.feed.SortOrder;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n import de.danoeh.antennapod.core.service.download.DownloadRequestCreator;\n@@ -53,7 +54,8 @@ public Runnable autoDownloadUndownloadedItems(final Context context) {\n \n                 List<FeedItem> candidates;\n                 final List<FeedItem> queue = DBReader.getQueue();\n-                final List<FeedItem> newItems = DBReader.getNewItemsList(0, Integer.MAX_VALUE, SortOrder.DATE_NEW_OLD);\n+                final List<FeedItem> newItems = DBReader.getEpisodes(0, Integer.MAX_VALUE,\n+                        new FeedItemFilter(FeedItemFilter.NEW), SortOrder.DATE_NEW_OLD);\n                 candidates = new ArrayList<>(queue.size() + newItems.size());\n                 candidates.addAll(queue);\n                 for (FeedItem newItem : newItems) {\n@@ -77,7 +79,7 @@ public Runnable autoDownloadUndownloadedItems(final Context context) {\n                 }\n \n                 int autoDownloadableEpisodes = candidates.size();\n-                int downloadedEpisodes = DBReader.getNumberOfDownloadedEpisodes();\n+                int downloadedEpisodes = DBReader.getTotalEpisodeCount(new FeedItemFilter(FeedItemFilter.DOWNLOADED));\n                 int deletedEpisodes = EpisodeCleanupAlgorithmFactory.build()\n                         .makeRoomForEpisodes(context, autoDownloadableEpisodes);\n                 boolean cacheIsUnlimited =\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\nindex b762843475..4a2c6148a5 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n@@ -275,73 +275,6 @@ public static List<FeedItem> getQueue() {\n         }\n     }\n \n-    /**\n-     * Loads a list of FeedItems whose episode has been downloaded.\n-     *\n-     * @return A list of FeedItems whose episdoe has been downloaded.\n-     */\n-    @NonNull\n-    public static List<FeedItem> getDownloadedItems(@Nullable SortOrder sortOrder) {\n-        Log.d(TAG, \"getDownloadedItems() called\");\n-\n-        // Set a default sort order\n-        if (sortOrder == null) {\n-            sortOrder = SortOrder.DATE_NEW_OLD;\n-        }\n-\n-        PodDBAdapter adapter = PodDBAdapter.getInstance();\n-        adapter.open();\n-        try (Cursor cursor = adapter.getDownloadedItemsCursor(sortOrder)) {\n-            List<FeedItem> items = extractItemlistFromCursor(adapter, cursor);\n-            loadAdditionalFeedItemListData(items);\n-            return items;\n-        } finally {\n-            adapter.close();\n-        }\n-    }\n-\n-    /**\n-     * Loads a list of FeedItems whose episode has been played.\n-     *\n-     * @return A list of FeedItems whose episdoe has been played.\n-     */\n-    @NonNull\n-    public static List<FeedItem> getPlayedItems() {\n-        Log.d(TAG, \"getPlayedItems() called\");\n-\n-        PodDBAdapter adapter = PodDBAdapter.getInstance();\n-        adapter.open();\n-        try (Cursor cursor = adapter.getPlayedItemsCursor()) {\n-            List<FeedItem> items = extractItemlistFromCursor(adapter, cursor);\n-            loadAdditionalFeedItemListData(items);\n-            return items;\n-        } finally {\n-            adapter.close();\n-        }\n-    }\n-\n-    /**\n-     * Loads a list of FeedItems that are considered new.\n-     * Excludes items from feeds that do not have keep updated enabled.\n-     *\n-     * @param offset The first episode that should be loaded.\n-     * @param limit The maximum number of episodes that should be loaded.\n-     * @return A list of FeedItems that are considered new.\n-     */\n-    public static List<FeedItem> getNewItemsList(int offset, int limit, SortOrder sortOrder) {\n-        Log.d(TAG, \"getNewItemsList() called\");\n-\n-        PodDBAdapter adapter = PodDBAdapter.getInstance();\n-        adapter.open();\n-        try (Cursor cursor = adapter.getNewItemsCursor(offset, limit, sortOrder)) {\n-            List<FeedItem> items = extractItemlistFromCursor(adapter, cursor);\n-            loadAdditionalFeedItemListData(items);\n-            return items;\n-        } finally {\n-            adapter.close();\n-        }\n-    }\n-\n     private static LongList getFavoriteIDList() {\n         Log.d(TAG, \"getFavoriteIDList() called\");\n \n@@ -359,19 +292,17 @@ private static LongList getFavoriteIDList() {\n     }\n \n     /**\n-     * Loads a filtered list of FeedItems sorted by pubDate in descending order.\n      *\n      * @param offset The first episode that should be loaded.\n      * @param limit The maximum number of episodes that should be loaded.\n      * @param filter The filter describing which episodes to filter out.\n      */\n     @NonNull\n-    public static List<FeedItem> getRecentlyPublishedEpisodes(int offset, int limit,\n-                                                              FeedItemFilter filter, SortOrder sortOrder) {\n+    public static List<FeedItem> getEpisodes(int offset, int limit, FeedItemFilter filter, SortOrder sortOrder) {\n         Log.d(TAG, \"getRecentlyPublishedEpisodes() called with: offset=\" + offset + \", limit=\" + limit);\n         PodDBAdapter adapter = PodDBAdapter.getInstance();\n         adapter.open();\n-        try (Cursor cursor = adapter.getRecentlyPublishedItemsCursor(offset, limit, filter, sortOrder)) {\n+        try (Cursor cursor = adapter.getEpisodesCursor(offset, limit, filter, sortOrder)) {\n             List<FeedItem> items = extractItemlistFromCursor(adapter, cursor);\n             loadAdditionalFeedItemListData(items);\n             return items;\n@@ -380,26 +311,26 @@ public static List<FeedItem> getRecentlyPublishedEpisodes(int offset, int limit,\n         }\n     }\n \n-    public static List<FeedItem> getRandomEpisodes(int limit, int seed) {\n+    public static int getTotalEpisodeCount(FeedItemFilter filter) {\n         PodDBAdapter adapter = PodDBAdapter.getInstance();\n         adapter.open();\n-        try (Cursor cursor = adapter.getRandomEpisodesCursor(limit, seed)) {\n-            List<FeedItem> items = extractItemlistFromCursor(adapter, cursor);\n-            loadAdditionalFeedItemListData(items);\n-            return items;\n+        try (Cursor cursor = adapter.getEpisodeCountCursor(filter)) {\n+            if (cursor.moveToFirst()) {\n+                return cursor.getInt(0);\n+            }\n+            return -1;\n         } finally {\n             adapter.close();\n         }\n     }\n \n-    public static int getTotalEpisodeCount(FeedItemFilter filter) {\n+    public static List<FeedItem> getRandomEpisodes(int limit, int seed) {\n         PodDBAdapter adapter = PodDBAdapter.getInstance();\n         adapter.open();\n-        try (Cursor cursor = adapter.getTotalEpisodeCountCursor(filter)) {\n-            if (cursor.moveToFirst()) {\n-                return cursor.getInt(0);\n-            }\n-            return -1;\n+        try (Cursor cursor = adapter.getRandomEpisodesCursor(limit, seed)) {\n+            List<FeedItem> items = extractItemlistFromCursor(adapter, cursor);\n+            loadAdditionalFeedItemListData(items);\n+            return items;\n         } finally {\n             adapter.close();\n         }\n@@ -755,24 +686,6 @@ private static List<Chapter> loadChaptersOfFeedItem(PodDBAdapter adapter, FeedIt\n         }\n     }\n \n-    /**\n-     * Returns the number of downloaded episodes.\n-     *\n-     * @return The number of downloaded episodes.\n-     */\n-\n-    public static int getNumberOfDownloadedEpisodes() {\n-        Log.d(TAG, \"getNumberOfDownloadedEpisodes() called with: \" + \"\");\n-\n-        PodDBAdapter adapter = PodDBAdapter.getInstance();\n-        adapter.open();\n-        try {\n-            return adapter.getNumberOfDownloadedEpisodes();\n-        } finally {\n-            adapter.close();\n-        }\n-    }\n-\n     /**\n      * Searches the DB for a FeedMedia of the given id.\n      *\n@@ -959,9 +872,9 @@ public static NavDrawerData getNavDrawerData() {\n         }\n \n         Collections.sort(feeds, comparator);\n-        int queueSize = adapter.getQueueSize();\n-        int numNewItems = adapter.getNumberOfNewItems();\n-        int numDownloadedItems = adapter.getNumberOfDownloadedEpisodes();\n+        final int queueSize = adapter.getQueueSize();\n+        final int numNewItems = getTotalEpisodeCount(new FeedItemFilter(FeedItemFilter.NEW));\n+        final int numDownloadedItems = getTotalEpisodeCount(new FeedItemFilter(FeedItemFilter.DOWNLOADED));\n \n         List<NavDrawerData.DrawerItem> items = new ArrayList<>();\n         Map<String, NavDrawerData.TagDrawerItem> folders = new HashMap<>();\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/EpisodeCleanupAlgorithm.java b/core/src/main/java/de/danoeh/antennapod/core/storage/EpisodeCleanupAlgorithm.java\nindex 84a0dd575a..e6d3b29175 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/EpisodeCleanupAlgorithm.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/EpisodeCleanupAlgorithm.java\n@@ -2,6 +2,7 @@\n \n import android.content.Context;\n \n+import de.danoeh.antennapod.model.feed.FeedItemFilter;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n \n public abstract class EpisodeCleanupAlgorithm {\n@@ -51,8 +52,7 @@ public int makeRoomForEpisodes(Context context, int amountOfRoomNeeded) {\n     int getNumEpisodesToCleanup(final int amountOfRoomNeeded) {\n         if (amountOfRoomNeeded >= 0\n                 && UserPreferences.getEpisodeCacheSize() != UserPreferences.EPISODE_CACHE_SIZE_UNLIMITED) {\n-            int downloadedEpisodes = DBReader\n-                    .getNumberOfDownloadedEpisodes();\n+            int downloadedEpisodes = DBReader.getTotalEpisodeCount(new FeedItemFilter(FeedItemFilter.DOWNLOADED));\n             if (downloadedEpisodes + amountOfRoomNeeded >= UserPreferences\n                     .getEpisodeCacheSize()) {\n \ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/ExceptFavoriteCleanupAlgorithm.java b/core/src/main/java/de/danoeh/antennapod/core/storage/ExceptFavoriteCleanupAlgorithm.java\nindex 448cffeb94..da01a82f14 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/ExceptFavoriteCleanupAlgorithm.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/ExceptFavoriteCleanupAlgorithm.java\n@@ -13,6 +13,7 @@\n import java.util.concurrent.ExecutionException;\n \n import de.danoeh.antennapod.model.feed.FeedItem;\n+import de.danoeh.antennapod.model.feed.FeedItemFilter;\n import de.danoeh.antennapod.model.feed.SortOrder;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n \n@@ -75,7 +76,8 @@ public int performCleanup(Context context, int numberOfEpisodesToDelete) {\n     @NonNull\n     private List<FeedItem> getCandidates() {\n         List<FeedItem> candidates = new ArrayList<>();\n-        List<FeedItem> downloadedItems = DBReader.getDownloadedItems(SortOrder.DATE_NEW_OLD);\n+        List<FeedItem> downloadedItems = DBReader.getEpisodes(0, Integer.MAX_VALUE,\n+                new FeedItemFilter(FeedItemFilter.DOWNLOADED), SortOrder.DATE_NEW_OLD);\n         for (FeedItem item : downloadedItems) {\n             if (item.hasMedia()\n                     && item.getMedia().isDownloaded()\n@@ -90,7 +92,7 @@ private List<FeedItem> getCandidates() {\n     public int getDefaultCleanupParameter() {\n         int cacheSize = UserPreferences.getEpisodeCacheSize();\n         if (cacheSize != UserPreferences.EPISODE_CACHE_SIZE_UNLIMITED) {\n-            int downloadedEpisodes = DBReader.getNumberOfDownloadedEpisodes();\n+            int downloadedEpisodes = DBReader.getTotalEpisodeCount(new FeedItemFilter(FeedItemFilter.DOWNLOADED));\n             if (downloadedEpisodes > cacheSize) {\n                 return downloadedEpisodes - cacheSize;\n             }\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/sync/SyncService.java b/core/src/main/java/de/danoeh/antennapod/core/sync/SyncService.java\nindex 6e2658c1ca..73f4671544 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/sync/SyncService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/sync/SyncService.java\n@@ -20,6 +20,8 @@\n import androidx.work.Worker;\n import androidx.work.WorkerParameters;\n \n+import de.danoeh.antennapod.model.feed.FeedItemFilter;\n+import de.danoeh.antennapod.model.feed.SortOrder;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n import de.danoeh.antennapod.core.service.download.DownloadService;\n import de.danoeh.antennapod.core.service.download.DownloadRequestCreator;\n@@ -213,7 +215,8 @@ private void syncEpisodeActions(ISyncService syncServiceImpl) throws SyncService\n         List<EpisodeAction> queuedEpisodeActions = synchronizationQueueStorage.getQueuedEpisodeActions();\n         if (lastSync == 0) {\n             EventBus.getDefault().postSticky(new SyncServiceEvent(R.string.sync_status_upload_played));\n-            List<FeedItem> readItems = DBReader.getPlayedItems();\n+            List<FeedItem> readItems = DBReader.getEpisodes(0, Integer.MAX_VALUE,\n+                    new FeedItemFilter(FeedItemFilter.PLAYED), SortOrder.DATE_NEW_OLD);\n             Log.d(TAG, \"First sync. Upload state for all \" + readItems.size() + \" played episodes\");\n             for (FeedItem item : readItems) {\n                 FeedMedia media = item.getMedia();\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\nindex 825dea84ec..c870e35de3 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\n@@ -45,8 +45,6 @@\n import static de.danoeh.antennapod.model.feed.FeedPreferences.SPEED_USE_GLOBAL;\n import static de.danoeh.antennapod.model.feed.SortOrder.toCodeString;\n \n-import de.danoeh.antennapod.storage.database.mapper.FeedItemSortQuery;\n-\n /**\n  * Implements methods for accessing the database\n  */\n@@ -1049,24 +1047,7 @@ public void setFeedItems(int oldState, int newState, long feedId) {\n         db.execSQL(sql);\n     }\n \n-    /**\n-     * Returns a cursor which contains all feed items that are considered new.\n-     * Excludes those feeds that do not have 'Keep Updated' enabled.\n-     * The returned cursor uses the FEEDITEM_SEL_FI_SMALL selection.\n-     */\n-    public final Cursor getNewItemsCursor(int offset, int limit, SortOrder sortOrder) {\n-        String sortQuery = FeedItemSortQuery.generateFrom(sortOrder);\n-        final String query = SELECT_FEED_ITEMS_AND_MEDIA\n-                + \" INNER JOIN \" + TABLE_NAME_FEEDS\n-                + \" ON \" + TABLE_NAME_FEED_ITEMS + \".\" + KEY_FEED + \"=\" + TABLE_NAME_FEEDS + \".\" + KEY_ID\n-                + \" WHERE \" + TABLE_NAME_FEED_ITEMS + \".\" + KEY_READ + \"=\" + FeedItem.NEW\n-                    + \" AND \" + TABLE_NAME_FEEDS + \".\" + KEY_KEEP_UPDATED + \" > 0\"\n-                + \" ORDER BY \" + sortQuery + \" LIMIT \" + offset + \", \" + limit;\n-        return db.rawQuery(query, null);\n-    }\n-\n-    public final Cursor getRecentlyPublishedItemsCursor(int offset, int limit,\n-                                                        FeedItemFilter filter, SortOrder sortOrder) {\n+    public final Cursor getEpisodesCursor(int offset, int limit, FeedItemFilter filter, SortOrder sortOrder) {\n         String orderByQuery = FeedItemSortQuery.generateFrom(sortOrder);\n         String filterQuery = FeedItemFilterQuery.generateFrom(filter);\n         String whereClause = \"\".equals(filterQuery) ? \"\" : \" WHERE \" + filterQuery;\n@@ -1075,6 +1056,14 @@ public final Cursor getRecentlyPublishedItemsCursor(int offset, int limit,\n         return db.rawQuery(query, null);\n     }\n \n+    public final Cursor getEpisodeCountCursor(FeedItemFilter filter) {\n+        String filterQuery = FeedItemFilterQuery.generateFrom(filter);\n+        String whereClause = \"\".equals(filterQuery) ? \"\" : \" WHERE \" + filterQuery;\n+        final String query = \"SELECT count(\" + TABLE_NAME_FEED_ITEMS + \".\" + KEY_ID + \") FROM \" + TABLE_NAME_FEED_ITEMS\n+                + JOIN_FEED_ITEM_AND_MEDIA + whereClause;\n+        return db.rawQuery(query, null);\n+    }\n+\n     public Cursor getRandomEpisodesCursor(int limit, int seed) {\n         final String allItemsRandomOrder = SELECT_FEED_ITEMS_AND_MEDIA\n                 + \" WHERE (\" + KEY_READ + \" = \" + FeedItem.NEW + \" OR \" + KEY_READ + \" = \" + FeedItem.UNPLAYED + \") \"\n@@ -1097,28 +1086,6 @@ private String randomEpisodeNumber(int seed) {\n         return \"((\" + SELECT_KEY_ITEM_ID + \" * \" + seed + \") % 46471)\";\n     }\n \n-    public final Cursor getTotalEpisodeCountCursor(FeedItemFilter filter) {\n-        String filterQuery = FeedItemFilterQuery.generateFrom(filter);\n-        String whereClause = \"\".equals(filterQuery) ? \"\" : \" WHERE \" + filterQuery;\n-        final String query = \"SELECT count(\" + TABLE_NAME_FEED_ITEMS + \".\" + KEY_ID + \") FROM \" + TABLE_NAME_FEED_ITEMS\n-                + JOIN_FEED_ITEM_AND_MEDIA + whereClause;\n-        return db.rawQuery(query, null);\n-    }\n-\n-    public Cursor getDownloadedItemsCursor(SortOrder sortOrder) {\n-        String sortQuery = FeedItemSortQuery.generateFrom(sortOrder);\n-        final String query = SELECT_FEED_ITEMS_AND_MEDIA\n-                + \" WHERE \" + TABLE_NAME_FEED_MEDIA + \".\" + KEY_DOWNLOADED + \" > 0\"\n-                + \" ORDER BY \" + sortQuery;\n-        return db.rawQuery(query, null);\n-    }\n-\n-    public Cursor getPlayedItemsCursor() {\n-        final String query = SELECT_FEED_ITEMS_AND_MEDIA\n-                + \"WHERE \" + TABLE_NAME_FEED_ITEMS + \".\" + KEY_READ + \"=\" + FeedItem.PLAYED;\n-        return db.rawQuery(query, null);\n-    }\n-\n     /**\n      * Returns a cursor which contains feed media objects with a playback\n      * completion date in ascending order.\n@@ -1267,25 +1234,6 @@ public int getQueueSize() {\n         return result;\n     }\n \n-    public final int getNumberOfNewItems() {\n-        Object[] args = new String[]{\n-                TABLE_NAME_FEED_ITEMS + \".\" + KEY_ID,\n-                TABLE_NAME_FEED_ITEMS,\n-                TABLE_NAME_FEEDS,\n-                TABLE_NAME_FEED_ITEMS + \".\" + KEY_FEED + \"=\" + TABLE_NAME_FEEDS + \".\" + KEY_ID,\n-                TABLE_NAME_FEED_ITEMS + \".\" + KEY_READ + \"=\" + FeedItem.NEW\n-                        + \" AND \" + TABLE_NAME_FEEDS + \".\" + KEY_KEEP_UPDATED + \" > 0\"\n-        };\n-        final String query = String.format(\"SELECT COUNT(%s) FROM %s INNER JOIN %s ON %s WHERE %s\", args);\n-        Cursor c = db.rawQuery(query, null);\n-        int result = 0;\n-        if (c.moveToFirst()) {\n-            result = c.getInt(0);\n-        }\n-        c.close();\n-        return result;\n-    }\n-\n     public final Map<Long, Integer> getFeedCounters(FeedCounter setting, long... feedIds) {\n         String whereRead;\n         switch (setting) {\n@@ -1371,19 +1319,6 @@ public final Map<Long, Long> getMostRecentItemDates() {\n         return result;\n     }\n \n-    public final int getNumberOfDownloadedEpisodes() {\n-        final String query = \"SELECT COUNT(DISTINCT \" + KEY_ID + \") AS count FROM \" + TABLE_NAME_FEED_MEDIA +\n-                \" WHERE \" + KEY_DOWNLOADED + \" > 0\";\n-\n-        Cursor c = db.rawQuery(query, null);\n-        int result = 0;\n-        if (c.moveToFirst()) {\n-            result = c.getInt(0);\n-        }\n-        c.close();\n-        return result;\n-    }\n-\n     /**\n      * Uses DatabaseUtils to escape a search query and removes ' at the\n      * beginning and the end of the string returned by the escape method.\n", "test_patch": "diff --git a/app/src/androidTest/java/de/test/antennapod/playback/PlaybackTest.java b/app/src/androidTest/java/de/test/antennapod/playback/PlaybackTest.java\nindex 735cff532e..16605d2023 100644\n--- a/app/src/androidTest/java/de/test/antennapod/playback/PlaybackTest.java\n+++ b/app/src/androidTest/java/de/test/antennapod/playback/PlaybackTest.java\n@@ -235,7 +235,7 @@ protected void startLocalPlayback() {\n         openNavDrawer();\n         onDrawerItem(withText(R.string.episodes_label)).perform(click());\n \n-        final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(0, 10,\n+        final List<FeedItem> episodes = DBReader.getEpisodes(0, 10,\n                 FeedItemFilter.unfiltered(), SortOrder.DATE_NEW_OLD);\n         Matcher<View> allEpisodesMatcher = allOf(withId(R.id.recyclerView), isDisplayed(), hasMinimumChildCount(2));\n         onView(isRoot()).perform(waitForView(allEpisodesMatcher, 1000));\n@@ -271,7 +271,7 @@ protected void replayEpisodeCheck(boolean followQueue) throws Exception {\n         uiTestUtils.addLocalFeedData(true);\n         DBWriter.clearQueue().get();\n         activityTestRule.launchActivity(new Intent());\n-        final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(0, 10,\n+        final List<FeedItem> episodes = DBReader.getEpisodes(0, 10,\n                 FeedItemFilter.unfiltered(), SortOrder.DATE_NEW_OLD);\n \n         startLocalPlayback();\ndiff --git a/core/src/test/java/de/danoeh/antennapod/core/storage/DbReaderTest.java b/core/src/test/java/de/danoeh/antennapod/core/storage/DbReaderTest.java\nindex 886c6821bc..3fadf7528b 100644\n--- a/core/src/test/java/de/danoeh/antennapod/core/storage/DbReaderTest.java\n+++ b/core/src/test/java/de/danoeh/antennapod/core/storage/DbReaderTest.java\n@@ -13,6 +13,7 @@\n \n import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.model.feed.FeedItem;\n+import de.danoeh.antennapod.model.feed.FeedItemFilter;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n import de.danoeh.antennapod.model.feed.SortOrder;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n@@ -239,7 +240,8 @@ private List<FeedItem> saveDownloadedItems(int numItems) {\n         public void testGetDownloadedItems() {\n             final int numItems = 10;\n             List<FeedItem> downloaded = saveDownloadedItems(numItems);\n-            List<FeedItem> downloadedSaved = DBReader.getDownloadedItems(null);\n+            List<FeedItem> downloadedSaved = DBReader.getEpisodes(0, Integer.MAX_VALUE,\n+                    new FeedItemFilter(FeedItemFilter.DOWNLOADED), SortOrder.DATE_NEW_OLD);\n             assertNotNull(downloadedSaved);\n             assertEquals(downloaded.size(), downloadedSaved.size());\n             for (FeedItem item : downloadedSaved) {\n@@ -283,7 +285,8 @@ public void testGetNewItemIds() {\n             for (int i = 0; i < newItems.size(); i++) {\n                 unreadIds[i] = newItems.get(i).getId();\n             }\n-            List<FeedItem> newItemsSaved = DBReader.getNewItemsList(0, Integer.MAX_VALUE, SortOrder.DATE_NEW_OLD);\n+            List<FeedItem> newItemsSaved = DBReader.getEpisodes(0, Integer.MAX_VALUE,\n+                    new FeedItemFilter(FeedItemFilter.NEW), SortOrder.DATE_NEW_OLD);\n             assertNotNull(newItemsSaved);\n             assertEquals(newItemsSaved.size(), newItems.size());\n             for (FeedItem feedItem : newItemsSaved) {\n", "problem_statement": "Not keeping updated removes past episodes from Inbox\n### Checklist\n\n- [X] I have used the search function for [open](https://github.com/AntennaPod/AntennaPod/issues) **and** [closed](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue+is%3Aclosed) issues to see if someone else has already submitted the same bug report.\n- [X] I will describe the problem with as much detail as possible.\n- [X] If the bug only to occurs with a certain podcast, I will include the URL of that podcast.\n\n### App version\n\n3.0 alpha\n\n### Where did you get the app from\n\nGoogle Play\n\n### Android version\n\n11\n\n### Device model\n\n_No response_\n\n### First occurred\n\n_No response_\n\n### Steps to reproduce\n\n1. Have a podcast with episodes in the Inbox\r\n2. Open this podcast's settings\r\n3. Deactivate 'Keep updated'\n\n### Expected behaviour\n\nEpisodes already in the Inbox stay there.\n\n### Current behaviour\n\nEpisodes already in the Inbox are removed from it.\n\n### Logs\n\n_No response_\n", "hints_text": "That was added because of #286. Keeping those episodes in the inbox would be a regression for that use case\nThis issue has been mentioned on **AntennaPod Forum**. There might be relevant details there:\n\nhttps://forum.antennapod.org/t/monthly-community-call/1869/33\n", "created_at": "2023-02-28T21:17:04Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 6333, "instance_id": "AntennaPod__AntennaPod-6333", "issue_numbers": ["5869"], "base_commit": "c98194f519c66e5af1575b1c6ffac5af16594141", "patch": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java\nindex a18d7d1d04..b04122487d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadService.java\n@@ -14,6 +14,7 @@\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n import androidx.annotation.VisibleForTesting;\n+import androidx.core.app.NotificationManagerCompat;\n import androidx.core.app.ServiceCompat;\n \n import de.danoeh.antennapod.core.R;\n@@ -82,6 +83,7 @@ public class DownloadService extends Service {\n     private final ExecutorService downloadEnqueueExecutor;\n \n     private final List<DownloadStatus> reportQueue = new ArrayList<>();\n+    private final List<DownloadRequest> failedRequestsForReport = new ArrayList<>();\n     private DownloadServiceNotification notificationManager;\n     private final NewEpisodesNotification newEpisodesNotification;\n     private NotificationUpdater notificationUpdater;\n@@ -176,11 +178,15 @@ public int onStartCommand(Intent intent, int flags, int startId) {\n         if (intent != null && intent.hasExtra(EXTRA_REQUESTS)) {\n             Notification notification = notificationManager.updateNotifications(downloads);\n             startForeground(R.id.notification_downloading, notification);\n+            NotificationManagerCompat.from(this).cancel(R.id.notification_download_report);\n+            NotificationManagerCompat.from(this).cancel(R.id.notification_auto_download_report);\n             setupNotificationUpdaterIfNecessary();\n             downloadEnqueueExecutor.execute(() -> onDownloadQueued(intent));\n         } else if (intent != null && intent.getBooleanExtra(EXTRA_REFRESH_ALL, false)) {\n             Notification notification = notificationManager.updateNotifications(downloads);\n             startForeground(R.id.notification_downloading, notification);\n+            NotificationManagerCompat.from(this).cancel(R.id.notification_download_report);\n+            NotificationManagerCompat.from(this).cancel(R.id.notification_auto_download_report);\n             setupNotificationUpdaterIfNecessary();\n             downloadEnqueueExecutor.execute(() -> enqueueAll(intent));\n         } else if (downloads.size() == 0) {\n@@ -198,8 +204,9 @@ public void onDestroy() {\n \n         boolean showAutoDownloadReport = UserPreferences.showAutoDownloadReport();\n         if (UserPreferences.showDownloadReport() || showAutoDownloadReport) {\n-            notificationManager.updateReport(reportQueue, showAutoDownloadReport);\n+            notificationManager.updateReport(reportQueue, showAutoDownloadReport, failedRequestsForReport);\n             reportQueue.clear();\n+            failedRequestsForReport.clear();\n         }\n \n         unregisterReceiver(cancelDownloadReceiver);\n@@ -283,7 +290,7 @@ private void handleSuccessfulDownload(Downloader downloader) {\n                 // we create a 'successful' download log if the feed's last refresh failed\n                 List<DownloadStatus> log = DBReader.getFeedDownloadLog(request.getFeedfileId());\n                 if (log.size() > 0 && !log.get(0).isSuccessful()) {\n-                    saveDownloadStatus(feedSyncTask.getDownloadStatus());\n+                    saveDownloadStatus(feedSyncTask.getDownloadStatus(), downloader.getDownloadRequest());\n                 }\n                 if (!request.isInitiatedByUser()) {\n                     // Was stored in the database before and not initiated manually\n@@ -296,13 +303,13 @@ private void handleSuccessfulDownload(Downloader downloader) {\n                 }\n             } else {\n                 DBWriter.setFeedLastUpdateFailed(request.getFeedfileId(), true);\n-                saveDownloadStatus(feedSyncTask.getDownloadStatus());\n+                saveDownloadStatus(feedSyncTask.getDownloadStatus(), downloader.getDownloadRequest());\n             }\n         } else if (type == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {\n             Log.d(TAG, \"Handling completed FeedMedia Download\");\n             MediaDownloadedHandler handler = new MediaDownloadedHandler(DownloadService.this, status, request);\n             handler.run();\n-            saveDownloadStatus(handler.getUpdatedStatus());\n+            saveDownloadStatus(handler.getUpdatedStatus(), downloader.getDownloadRequest());\n         }\n     }\n \n@@ -321,7 +328,7 @@ private void handleFailedDownload(Downloader downloader) {\n                 DownloadServiceInterface.get().download(this, false, downloader.getDownloadRequest());\n             } else {\n                 Log.e(TAG, \"Download failed\");\n-                saveDownloadStatus(status);\n+                saveDownloadStatus(status, downloader.getDownloadRequest());\n                 new FailedDownloadHandler(downloader.getDownloadRequest()).run();\n \n                 if (type == FeedMedia.FEEDFILETYPE_FEEDMEDIA) {\n@@ -509,8 +516,11 @@ public static void setDownloaderFactory(DownloaderFactory downloaderFactory) {\n      *\n      * @param status the download that is going to be saved\n      */\n-    private void saveDownloadStatus(@NonNull DownloadStatus status) {\n+    private void saveDownloadStatus(@NonNull DownloadStatus status, @NonNull DownloadRequest request) {\n         reportQueue.add(status);\n+        if (!status.isSuccessful() && !status.isCancelled()) {\n+            failedRequestsForReport.add(request);\n+        }\n         DBWriter.addDownloadStatus(status);\n     }\n \ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceInterfaceImpl.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceInterfaceImpl.java\nindex 384a6070ef..7b7e52e0ea 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceInterfaceImpl.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceInterfaceImpl.java\n@@ -16,6 +16,13 @@ public class DownloadServiceInterfaceImpl extends DownloadServiceInterface {\n     private static final String TAG = \"DownloadServiceInterface\";\n \n     public void download(Context context, boolean cleanupMedia, DownloadRequest... requests) {\n+        Intent intent = makeDownloadIntent(context, cleanupMedia, requests);\n+        if (intent != null) {\n+            ContextCompat.startForegroundService(context, intent);\n+        }\n+    }\n+\n+    public Intent makeDownloadIntent(Context context, boolean cleanupMedia, DownloadRequest... requests) {\n         ArrayList<DownloadRequest> requestsToSend = new ArrayList<>();\n         for (DownloadRequest request : requests) {\n             if (!isDownloadingFile(request.getSource())) {\n@@ -23,7 +30,7 @@ public void download(Context context, boolean cleanupMedia, DownloadRequest... r\n             }\n         }\n         if (requestsToSend.isEmpty()) {\n-            return;\n+            return null;\n         } else if (requestsToSend.size() > 100) {\n             if (BuildConfig.DEBUG) {\n                 throw new IllegalArgumentException(\"Android silently drops intent payloads that are too large\");\n@@ -38,7 +45,7 @@ public void download(Context context, boolean cleanupMedia, DownloadRequest... r\n         if (cleanupMedia) {\n             launchIntent.putExtra(DownloadService.EXTRA_CLEANUP_MEDIA, true);\n         }\n-        ContextCompat.startForegroundService(context, launchIntent);\n+        return launchIntent;\n     }\n \n     public void refreshAllFeeds(Context context, boolean initiatedByUser) {\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceNotification.java b/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceNotification.java\nindex c06b0e31d3..6ba8348d65 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceNotification.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/download/DownloadServiceNotification.java\n@@ -15,6 +15,7 @@\n import de.danoeh.antennapod.model.feed.FeedMedia;\n import de.danoeh.antennapod.core.util.gui.NotificationUtils;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n+import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n import de.danoeh.antennapod.ui.appstartintent.DownloadAuthenticationActivityStarter;\n import de.danoeh.antennapod.ui.appstartintent.MainActivityStarter;\n \n@@ -153,7 +154,8 @@ private String createFailedDownloadNotificationContent(List<DownloadStatus> stat\n      * user about the number of completed downloads. A report will only be\n      * created if there is at least one failed download excluding images\n      */\n-    public void updateReport(List<DownloadStatus> reportQueue, boolean showAutoDownloadReport) {\n+    public void updateReport(List<DownloadStatus> reportQueue, boolean showAutoDownloadReport,\n+                             List<DownloadRequest> failedRequests) {\n         // check if report should be created\n         boolean createReport = false;\n         int failedDownloads = 0;\n@@ -173,48 +175,68 @@ public void updateReport(List<DownloadStatus> reportQueue, boolean showAutoDownl\n             }\n         }\n \n-        if (createReport) {\n-            Log.d(TAG, \"Creating report\");\n+        if (!createReport) {\n+            Log.d(TAG, \"No report is created\");\n+            return;\n+        }\n+        Log.d(TAG, \"Creating report\");\n+        if (failedDownloads == 0) {\n+            createAutoDownloadReportNotification(reportQueue);\n+        } else {\n+            createDownloadFailedNotification(reportQueue, failedRequests);\n+        }\n+        Log.d(TAG, \"Download report notification was posted\");\n+    }\n \n-            // create notification object\n-            String channelId;\n-            int titleId;\n-            int iconId;\n-            int id;\n-            String content;\n-            PendingIntent intent;\n-            if (failedDownloads == 0) {\n-                // We are generating an auto-download report\n-                channelId = NotificationUtils.CHANNEL_ID_AUTO_DOWNLOAD;\n-                titleId = R.string.auto_download_report_title;\n-                iconId = R.drawable.ic_notification_new;\n-                intent = getAutoDownloadReportNotificationContentIntent(context);\n-                id = R.id.notification_auto_download_report;\n-                content = createAutoDownloadNotificationContent(reportQueue);\n-            } else {\n-                channelId = NotificationUtils.CHANNEL_ID_DOWNLOAD_ERROR;\n-                titleId = R.string.download_report_title;\n-                iconId = R.drawable.ic_notification_sync_error;\n-                intent = getReportNotificationContentIntent(context);\n-                id = R.id.notification_download_report;\n-                content = createFailedDownloadNotificationContent(reportQueue);\n-            }\n+    private void createAutoDownloadReportNotification(List<DownloadStatus> reportQueue) {\n+        PendingIntent intent = getAutoDownloadReportNotificationContentIntent(context);\n+        String content = createAutoDownloadNotificationContent(reportQueue);\n+        NotificationCompat.Builder builder = new NotificationCompat.Builder(context,\n+                NotificationUtils.CHANNEL_ID_AUTO_DOWNLOAD);\n+        builder.setTicker(context.getString(R.string.auto_download_report_title))\n+                .setContentTitle(context.getString(R.string.auto_download_report_title))\n+                .setContentText(content)\n+                .setStyle(new NotificationCompat.BigTextStyle().bigText(content))\n+                .setSmallIcon(R.drawable.ic_notification_new)\n+                .setContentIntent(intent)\n+                .setAutoCancel(true)\n+                .setVisibility(NotificationCompat.VISIBILITY_PUBLIC);\n+        NotificationManager nm = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);\n+        nm.notify(R.id.notification_auto_download_report, builder.build());\n+    }\n \n-            NotificationCompat.Builder builder = new NotificationCompat.Builder(context, channelId);\n-            builder.setTicker(context.getString(titleId))\n-                   .setContentTitle(context.getString(titleId))\n-                   .setContentText(content)\n-                   .setStyle(new NotificationCompat.BigTextStyle().bigText(content))\n-                   .setSmallIcon(iconId)\n-                   .setContentIntent(intent)\n-                   .setAutoCancel(true);\n-            builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);\n-            NotificationManager nm = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);\n-            nm.notify(id, builder.build());\n-            Log.d(TAG, \"Download report notification was posted\");\n-        } else {\n-            Log.d(TAG, \"No report is created\");\n+    private void createDownloadFailedNotification(List<DownloadStatus> reportQueue,\n+                                                  List<DownloadRequest> failedRequests) {\n+        Intent retryIntent = DownloadServiceInterface.get().makeDownloadIntent(context,\n+                false, failedRequests.toArray(new DownloadRequest[0]));\n+        PendingIntent retryPendingIntent = null;\n+        if (retryIntent != null && Build.VERSION.SDK_INT >= 26) {\n+            retryPendingIntent = PendingIntent.getForegroundService(context, R.id.pending_intent_download_service_retry,\n+                    retryIntent, PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+        } else if (retryIntent != null) {\n+            retryPendingIntent = PendingIntent.getService(context,\n+                    R.id.pending_intent_download_service_retry, retryIntent,\n+                    PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n+        PendingIntent intent = getReportNotificationContentIntent(context);\n+        String content = createFailedDownloadNotificationContent(reportQueue);\n+        NotificationCompat.Builder builder = new NotificationCompat.Builder(context,\n+                NotificationUtils.CHANNEL_ID_DOWNLOAD_ERROR);\n+        builder.setTicker(context.getString(R.string.download_report_title))\n+                .setContentTitle(context.getString(R.string.download_report_title))\n+                .setContentText(content)\n+                .setStyle(new NotificationCompat.BigTextStyle().bigText(content))\n+                .setSmallIcon(R.drawable.ic_notification_sync_error)\n+                .setContentIntent(intent)\n+                .setAutoCancel(true);\n+        if (retryPendingIntent != null) {\n+            builder.addAction(new NotificationCompat.Action(\n+                    R.drawable.ic_notification_sync, context.getString(R.string.retry_label), retryPendingIntent));\n+        }\n+        builder.setVisibility(NotificationCompat.VISIBILITY_PUBLIC);\n+        NotificationManager nm = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);\n+        nm.notify(R.id.notification_download_report, builder.build());\n     }\n \n     public void postAuthenticationNotification(final DownloadRequest downloadRequest) {\ndiff --git a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterface.java b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterface.java\nindex 54987a83e0..b5d0cd9914 100644\n--- a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterface.java\n+++ b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterface.java\n@@ -1,6 +1,7 @@\n package de.danoeh.antennapod.net.download.serviceinterface;\n \n import android.content.Context;\n+import android.content.Intent;\n \n public abstract class DownloadServiceInterface {\n     private static DownloadServiceInterface impl;\n@@ -15,6 +16,8 @@ public static void setImpl(DownloadServiceInterface impl) {\n \n     public abstract void download(Context context, boolean cleanupMedia, DownloadRequest... requests);\n \n+    public abstract Intent makeDownloadIntent(Context context, boolean cleanupMedia, DownloadRequest... requests);\n+\n     public abstract void refreshAllFeeds(Context context, boolean initiatedByUser);\n \n     public abstract void cancel(Context context, String url);\ndiff --git a/ui/app-start-intent/src/main/res/values/pending_intent.xml b/ui/app-start-intent/src/main/res/values/pending_intent.xml\nindex ed7e9b2cdc..c0864046cd 100644\n--- a/ui/app-start-intent/src/main/res/values/pending_intent.xml\n+++ b/ui/app-start-intent/src/main/res/values/pending_intent.xml\n@@ -1,6 +1,7 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n <resources>\n     <item name=\"pending_intent_download_service_notification\" type=\"id\"/>\n+    <item name=\"pending_intent_download_service_retry\" type=\"id\"/>\n     <item name=\"pending_intent_download_service_auth\" type=\"id\"/>\n     <item name=\"pending_intent_download_service_report\" type=\"id\"/>\n     <item name=\"pending_intent_download_service_autodownload_report\" type=\"id\"/>\n", "test_patch": "diff --git a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterfaceStub.java b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterfaceStub.java\nindex 251c59c61e..9477464858 100644\n--- a/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterfaceStub.java\n+++ b/net/download/service-interface/src/main/java/de/danoeh/antennapod/net/download/serviceinterface/DownloadServiceInterfaceStub.java\n@@ -1,12 +1,17 @@\n package de.danoeh.antennapod.net.download.serviceinterface;\n \n import android.content.Context;\n+import android.content.Intent;\n \n public class DownloadServiceInterfaceStub extends DownloadServiceInterface {\n \n     public void download(Context context, boolean cleanupMedia, DownloadRequest... requests) {\n     }\n \n+    public Intent makeDownloadIntent(Context context, boolean cleanupMedia, DownloadRequest... requests) {\n+        return null;\n+    }\n+\n     public void refreshAllFeeds(Context context, boolean initiatedByUser) {\n     }\n \n", "problem_statement": "Add retry action to error notifications\n### Checklist\n\n- [X] I have used the search function for [open](https://github.com/AntennaPod/AntennaPod/issues) **and** [closed](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue+is%3Aclosed) issues to see if someone else has already submitted the same feature request.\n- [X] I will describe the problem with as much detail as possible.\n- [X] This request contains only one single feature, **not** a list of multiple (related) features.\n\n### App version\n\n2.5.1\n\n### Where did you get the app from\n\nF-Droid\n\n### Problem you may be having, or feature you want\n\nSometimes the download of new episodes or episode lists fails. It requires several clicks on the notification and the activity to retry the download.\n\n### Suggested solution\n\nAdd a [notification action ](https://developer.android.com/guide/topics/ui/notifiers/notifications#Actions)to all error notifications, that retries the failed downloads.\n\n### Screenshots / Drawings / Technical details\n\n_No response_\n", "hints_text": "Instead of a manual retry button, I think it would be better if AntennaPod retried automatically. Issue #1250 already covers this.\nI agree that automatic retries are the better option for the first few times, but you probably don't want to retry forever, right? At some point you'll show an error notification that could have this action.\nRelated: #2078\nYeah it would be nice if it auto retried.\nI don't know why, but I constantly am getting notifications for fetch errors for Antennapod. It's really annoying to have it keep popping up. At least once a day, but moreso a few times a day.", "created_at": "2023-02-19T12:19:12Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 6328, "instance_id": "AntennaPod__AntennaPod-6328", "issue_numbers": ["6303"], "base_commit": "caf49c5da8a2f541b099ff32c15a7e96e1c557e8", "patch": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/preferences/UserInterfacePreferencesFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/preferences/UserInterfacePreferencesFragment.java\nindex caf5559641..66f592af26 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/preferences/UserInterfacePreferencesFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/preferences/UserInterfacePreferencesFragment.java\n@@ -5,18 +5,19 @@\n import android.os.Bundle;\n import android.widget.ListView;\n import androidx.appcompat.app.AlertDialog;\n-import com.google.android.material.snackbar.Snackbar;\n-import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n import androidx.core.app.ActivityCompat;\n+import androidx.preference.Preference;\n import androidx.preference.PreferenceFragmentCompat;\n+import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n+import com.google.android.material.snackbar.Snackbar;\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.PreferenceActivity;\n-import de.danoeh.antennapod.storage.preferences.UserPreferences;\n import de.danoeh.antennapod.dialog.DrawerPreferencesDialog;\n import de.danoeh.antennapod.dialog.FeedSortDialog;\n import de.danoeh.antennapod.dialog.SubscriptionsFilterDialog;\n import de.danoeh.antennapod.event.PlayerStatusEvent;\n import de.danoeh.antennapod.event.UnreadItemsUpdateEvent;\n+import de.danoeh.antennapod.storage.preferences.UserPreferences;\n import org.greenrobot.eventbus.EventBus;\n \n import java.util.List;\n@@ -37,22 +38,16 @@ public void onStart() {\n     }\n \n     private void setupInterfaceScreen() {\n-        findPreference(UserPreferences.PREF_THEME)\n-                .setOnPreferenceChangeListener(\n-                        (preference, newValue) -> {\n-                            ActivityCompat.recreate(getActivity());\n-                            return true;\n-                        });\n-\n+        Preference.OnPreferenceChangeListener restartApp = (preference, newValue) -> {\n+            ActivityCompat.recreate(getActivity());\n+            return true;\n+        };\n+        findPreference(UserPreferences.PREF_THEME).setOnPreferenceChangeListener(restartApp);\n+        findPreference(UserPreferences.PREF_THEME_BLACK).setOnPreferenceChangeListener(restartApp);\n+        findPreference(UserPreferences.PREF_TINTED_COLORS).setOnPreferenceChangeListener(restartApp);\n         if (Build.VERSION.SDK_INT < 31) {\n             findPreference(UserPreferences.PREF_TINTED_COLORS).setVisible(false);\n         }\n-        findPreference(UserPreferences.PREF_TINTED_COLORS)\n-                .setOnPreferenceChangeListener(\n-                        (preference, newValue) -> {\n-                            ActivityCompat.recreate(getActivity());\n-                            return true;\n-                        });\n \n         findPreference(UserPreferences.PREF_SHOW_TIME_LEFT)\n                 .setOnPreferenceChangeListener(\ndiff --git a/app/src/main/java/de/danoeh/antennapod/preferences/PreferenceUpgrader.java b/app/src/main/java/de/danoeh/antennapod/preferences/PreferenceUpgrader.java\nindex e093c067d7..79d06de599 100644\n--- a/app/src/main/java/de/danoeh/antennapod/preferences/PreferenceUpgrader.java\n+++ b/app/src/main/java/de/danoeh/antennapod/preferences/PreferenceUpgrader.java\n@@ -133,5 +133,13 @@ private static void upgrade(int oldVersion, Context context) {\n                         \"\" + UserPreferences.EPISODE_CACHE_SIZE_UNLIMITED).apply();\n             }\n         }\n+        if (oldVersion < 3010000) {\n+            if (prefs.getString(UserPreferences.PREF_THEME, \"system\").equals(\"2\")) {\n+                prefs.edit()\n+                        .putString(UserPreferences.PREF_THEME, \"1\")\n+                        .putBoolean(UserPreferences.PREF_THEME_BLACK, true)\n+                        .apply();\n+            }\n+        }\n     }\n }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/preferences/ThemePreference.java b/app/src/main/java/de/danoeh/antennapod/preferences/ThemePreference.java\nnew file mode 100644\nindex 0000000000..30cbeb5234\n--- /dev/null\n+++ b/app/src/main/java/de/danoeh/antennapod/preferences/ThemePreference.java\n@@ -0,0 +1,53 @@\n+package de.danoeh.antennapod.preferences;\n+\n+import android.content.Context;\n+import android.util.AttributeSet;\n+import androidx.cardview.widget.CardView;\n+import androidx.preference.Preference;\n+import androidx.preference.PreferenceViewHolder;\n+import com.google.android.material.elevation.SurfaceColors;\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.databinding.ThemePreferenceBinding;\n+import de.danoeh.antennapod.storage.preferences.UserPreferences;\n+\n+public class ThemePreference extends Preference {\n+    ThemePreferenceBinding viewBinding;\n+\n+    public ThemePreference(Context context) {\n+        super(context);\n+        setLayoutResource(R.layout.theme_preference);\n+    }\n+\n+    public ThemePreference(Context context, AttributeSet attrs) {\n+        super(context, attrs);\n+        setLayoutResource(R.layout.theme_preference);\n+    }\n+\n+    @Override\n+    public void onBindViewHolder(PreferenceViewHolder holder) {\n+        super.onBindViewHolder(holder);\n+        viewBinding = ThemePreferenceBinding.bind(holder.itemView);\n+        updateUi();\n+    }\n+\n+    void updateThemeCard(CardView card, UserPreferences.ThemePreference theme) {\n+        float density = getContext().getResources().getDisplayMetrics().density;\n+        int surfaceColor = SurfaceColors.getColorForElevation(getContext(), 1 * density);\n+        int surfaceColorActive = SurfaceColors.getColorForElevation(getContext(), 32 * density);\n+        UserPreferences.ThemePreference activeTheme = UserPreferences.getTheme();\n+        card.setCardBackgroundColor(theme == activeTheme ? surfaceColorActive : surfaceColor);\n+        card.setOnClickListener(v -> {\n+            UserPreferences.setTheme(theme);\n+            if (getOnPreferenceChangeListener() != null) {\n+                getOnPreferenceChangeListener().onPreferenceChange(this, UserPreferences.getTheme());\n+            }\n+            updateUi();\n+        });\n+    }\n+\n+    void updateUi() {\n+        updateThemeCard(viewBinding.themeSystemCard, UserPreferences.ThemePreference.SYSTEM);\n+        updateThemeCard(viewBinding.themeLightCard, UserPreferences.ThemePreference.LIGHT);\n+        updateThemeCard(viewBinding.themeDarkCard, UserPreferences.ThemePreference.DARK);\n+    }\n+}\ndiff --git a/app/src/main/res/drawable-nodpi/theme_preview_dark.png b/app/src/main/res/drawable-nodpi/theme_preview_dark.png\nnew file mode 100644\nindex 0000000000..b4e1e0376a\nBinary files /dev/null and b/app/src/main/res/drawable-nodpi/theme_preview_dark.png differ\ndiff --git a/app/src/main/res/drawable-nodpi/theme_preview_light.png b/app/src/main/res/drawable-nodpi/theme_preview_light.png\nnew file mode 100644\nindex 0000000000..39ef47b4f6\nBinary files /dev/null and b/app/src/main/res/drawable-nodpi/theme_preview_light.png differ\ndiff --git a/app/src/main/res/drawable-nodpi/theme_preview_system.png b/app/src/main/res/drawable-nodpi/theme_preview_system.png\nnew file mode 100644\nindex 0000000000..cc6403a98d\nBinary files /dev/null and b/app/src/main/res/drawable-nodpi/theme_preview_system.png differ\ndiff --git a/app/src/main/res/layout/theme_preference.xml b/app/src/main/res/layout/theme_preference.xml\nnew file mode 100644\nindex 0000000000..32a7ed1e8b\n--- /dev/null\n+++ b/app/src/main/res/layout/theme_preference.xml\n@@ -0,0 +1,123 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout\n+    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\"\n+    android:orientation=\"horizontal\"\n+    android:background=\"?android:attr/windowBackground\"\n+    android:gravity=\"top\"\n+    android:padding=\"8dp\">\n+\n+    <androidx.cardview.widget.CardView\n+        android:id=\"@+id/themeSystemCard\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_margin=\"4dp\"\n+        android:clickable=\"true\"\n+        android:foreground=\"?android:attr/selectableItemBackground\"\n+        android:layout_weight=\"1\"\n+        app:cardElevation=\"0dp\"\n+        app:cardCornerRadius=\"16dp\"\n+        app:contentPadding=\"16dp\">\n+\n+        <LinearLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:orientation=\"vertical\"\n+            android:gravity=\"center\">\n+\n+            <ImageView\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"wrap_content\"\n+                android:adjustViewBounds=\"true\"\n+                android:src=\"@drawable/theme_preview_system\" />\n+\n+            <TextView\n+                android:id=\"@+id/themeSystemRadio\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"4dp\"\n+                android:textColor=\"?android:attr/textColorPrimary\"\n+                android:text=\"@string/pref_theme_title_automatic\"\n+                android:clickable=\"false\" />\n+\n+        </LinearLayout>\n+\n+    </androidx.cardview.widget.CardView>\n+\n+    <androidx.cardview.widget.CardView\n+        android:id=\"@+id/themeLightCard\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_margin=\"4dp\"\n+        android:clickable=\"true\"\n+        android:foreground=\"?android:attr/selectableItemBackground\"\n+        android:layout_weight=\"1\"\n+        app:cardElevation=\"0dp\"\n+        app:cardCornerRadius=\"16dp\"\n+        app:contentPadding=\"16dp\">\n+\n+        <LinearLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:orientation=\"vertical\"\n+            android:gravity=\"center\">\n+\n+            <ImageView\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"wrap_content\"\n+                android:adjustViewBounds=\"true\"\n+                android:src=\"@drawable/theme_preview_light\" />\n+\n+            <TextView\n+                android:id=\"@+id/themeLightRadio\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"4dp\"\n+                android:textColor=\"?android:attr/textColorPrimary\"\n+                android:text=\"@string/pref_theme_title_light\"\n+                android:clickable=\"false\" />\n+\n+        </LinearLayout>\n+\n+    </androidx.cardview.widget.CardView>\n+\n+    <androidx.cardview.widget.CardView\n+        android:id=\"@+id/themeDarkCard\"\n+        android:layout_width=\"0dp\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_margin=\"4dp\"\n+        android:clickable=\"true\"\n+        android:foreground=\"?android:attr/selectableItemBackground\"\n+        android:layout_weight=\"1\"\n+        app:cardElevation=\"0dp\"\n+        app:cardCornerRadius=\"16dp\"\n+        app:contentPadding=\"16dp\">\n+\n+        <LinearLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:orientation=\"vertical\"\n+            android:gravity=\"center\">\n+\n+            <ImageView\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"wrap_content\"\n+                android:adjustViewBounds=\"true\"\n+                android:src=\"@drawable/theme_preview_dark\" />\n+\n+            <TextView\n+                android:id=\"@+id/themeDarkCardRadio\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"4dp\"\n+                android:textColor=\"?android:attr/textColorPrimary\"\n+                android:text=\"@string/pref_theme_title_dark\"\n+                android:clickable=\"false\" />\n+\n+        </LinearLayout>\n+\n+    </androidx.cardview.widget.CardView>\n+\n+</LinearLayout>\ndiff --git a/app/src/main/res/xml/preferences_user_interface.xml b/app/src/main/res/xml/preferences_user_interface.xml\nindex f11b89be73..ed3f5777af 100644\n--- a/app/src/main/res/xml/preferences_user_interface.xml\n+++ b/app/src/main/res/xml/preferences_user_interface.xml\n@@ -4,13 +4,13 @@\n         xmlns:search=\"http://schemas.android.com/apk/com.bytehamster.lib.preferencesearch\">\n \n     <PreferenceCategory android:title=\"@string/appearance\">\n-        <de.danoeh.antennapod.preferences.MaterialListPreference\n-                android:entryValues=\"@array/theme_values\"\n-                android:entries=\"@array/theme_options\"\n-                android:title=\"@string/pref_set_theme_title\"\n-                android:key=\"prefTheme\"\n-                android:summary=\"@string/pref_set_theme_sum\"\n-                android:defaultValue=\"system\"/>\n+        <de.danoeh.antennapod.preferences.ThemePreference\n+                android:key=\"prefTheme\" />\n+        <SwitchPreferenceCompat\n+                android:title=\"@string/pref_black_theme_title\"\n+                android:key=\"prefThemeBlack\"\n+                android:summary=\"@string/pref_black_theme_message\"\n+                android:defaultValue=\"false\" />\n         <SwitchPreferenceCompat\n                 android:title=\"@string/pref_tinted_theme_title\"\n                 android:key=\"prefTintedColors\"\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/preferences/ThemeSwitcher.java b/core/src/main/java/de/danoeh/antennapod/core/preferences/ThemeSwitcher.java\nindex b7e4934f51..afe814fcb2 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/preferences/ThemeSwitcher.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/preferences/ThemeSwitcher.java\n@@ -59,12 +59,15 @@ private static UserPreferences.ThemePreference readThemeValue(Context context) {\n         if (theme == UserPreferences.ThemePreference.SYSTEM) {\n             int nightMode = context.getResources().getConfiguration().uiMode & Configuration.UI_MODE_NIGHT_MASK;\n             if (nightMode == Configuration.UI_MODE_NIGHT_YES) {\n-                return UserPreferences.ThemePreference.DARK;\n+                theme = UserPreferences.ThemePreference.DARK;\n             } else {\n-                return UserPreferences.ThemePreference.LIGHT;\n+                theme = UserPreferences.ThemePreference.LIGHT;\n \n             }\n         }\n+        if (theme == UserPreferences.ThemePreference.DARK && UserPreferences.getIsBlackTheme()) {\n+            theme = UserPreferences.ThemePreference.BLACK;\n+        }\n         return theme;\n     }\n }\ndiff --git a/core/src/main/res/values/arrays.xml b/core/src/main/res/values/arrays.xml\nindex b08541771e..090d5e2e45 100644\n--- a/core/src/main/res/values/arrays.xml\n+++ b/core/src/main/res/values/arrays.xml\n@@ -135,20 +135,6 @@\n         <item>-2</item>\n     </string-array>\n \n-    <string-array name=\"theme_options\">\n-        <item>@string/pref_theme_title_use_system</item>\n-        <item>@string/pref_theme_title_light</item>\n-        <item>@string/pref_theme_title_dark</item>\n-        <item>@string/pref_theme_title_trueblack</item>\n-    </string-array>\n-\n-    <string-array name=\"theme_values\">\n-        <item>system</item>\n-        <item>0</item>\n-        <item>1</item>\n-        <item>2</item>\n-    </string-array>\n-\n     <string-array name=\"nav_drawer_titles\">\n         <item>@string/home_label</item>\n         <item>@string/queue_label</item>\ndiff --git a/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java b/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\nindex 8d9b099fcd..c7758d40e2 100644\n--- a/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\n+++ b/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\n@@ -48,6 +48,7 @@ private UserPreferences(){}\n \n     // User Interface\n     public static final String PREF_THEME = \"prefTheme\";\n+    public static final String PREF_THEME_BLACK = \"prefThemeBlack\";\n     public static final String PREF_TINTED_COLORS = \"prefTintedColors\";\n     public static final String PREF_HIDDEN_DRAWER_ITEMS = \"prefHiddenDrawerItems\";\n     public static final String PREF_DRAWER_FEED_ORDER = \"prefDrawerFeedOrder\";\n@@ -159,19 +160,35 @@ public enum ThemePreference {\n         LIGHT, DARK, BLACK, SYSTEM\n     }\n \n+    public static void setTheme(ThemePreference theme) {\n+        switch (theme) {\n+            case LIGHT:\n+                prefs.edit().putString(PREF_THEME, \"0\").apply();\n+                break;\n+            case DARK:\n+                prefs.edit().putString(PREF_THEME, \"1\").apply();\n+                break;\n+            default:\n+                prefs.edit().putString(PREF_THEME, \"system\").apply();\n+                break;\n+        }\n+    }\n+\n     public static ThemePreference getTheme() {\n         switch (prefs.getString(PREF_THEME, \"system\")) {\n             case \"0\":\n                 return ThemePreference.LIGHT;\n             case \"1\":\n                 return ThemePreference.DARK;\n-            case \"2\":\n-                return ThemePreference.BLACK;\n             default:\n                 return ThemePreference.SYSTEM;\n         }\n     }\n \n+    public static boolean getIsBlackTheme() {\n+        return prefs.getBoolean(PREF_THEME_BLACK, false);\n+    }\n+\n     public static boolean getIsThemeColorTinted() {\n         return Build.VERSION.SDK_INT >= 31 && prefs.getBoolean(PREF_TINTED_COLORS, false);\n     }\ndiff --git a/ui/i18n/src/main/res/values/strings.xml b/ui/i18n/src/main/res/values/strings.xml\nindex 40015630fa..db91c43ae5 100644\n--- a/ui/i18n/src/main/res/values/strings.xml\n+++ b/ui/i18n/src/main/res/values/strings.xml\n@@ -432,8 +432,9 @@\n     <string name=\"pref_mobileUpdate_streaming\">Streaming</string>\n     <string name=\"user_interface_label\">User Interface</string>\n     <string name=\"user_interface_sum\">Appearance, Subscriptions, Lockscreen</string>\n-    <string name=\"pref_set_theme_title\">Select Theme</string>\n-    <string name=\"pref_tinted_theme_title\">Use Tinted Colors</string>\n+    <string name=\"pref_black_theme_title\">Full Black</string>\n+    <string name=\"pref_black_theme_message\">Use full black for the dark theme</string>\n+    <string name=\"pref_tinted_theme_title\">Tinted Colors</string>\n     <string name=\"pref_tinted_theme_message\">Tint app colors based on the background image</string>\n     <string name=\"pref_nav_drawer_items_title\">Set Navigation Drawer items</string>\n     <string name=\"pref_nav_drawer_items_sum\">Change which items appear in the navigation drawer.</string>\n@@ -441,7 +442,6 @@\n     <string name=\"pref_nav_drawer_feed_order_sum\">Change the order of your subscriptions</string>\n     <string name=\"pref_nav_drawer_feed_counter_title\">Set Subscription Counter</string>\n     <string name=\"pref_nav_drawer_feed_counter_sum\">Change the information displayed by the subscription counter. Also affects the sorting of subscriptions if \\'Subscription Order\\' is set to \\'Counter\\'.</string>\n-    <string name=\"pref_set_theme_sum\">Change the appearance of AntennaPod.</string>\n     <string name=\"pref_automatic_download_title\">Automatic Download</string>\n     <string name=\"pref_automatic_download_sum\">Configure the automatic download of episodes.</string>\n     <string name=\"pref_autodl_wifi_filter_title\">Enable Wi-Fi filter</string>\n@@ -455,10 +455,9 @@\n     <string name=\"pref_episode_cover_summary\">Use the episode specific cover in lists whenever available. If unchecked, the app will always use the podcast cover image.</string>\n     <string name=\"pref_show_remain_time_title\">Show Remaining Time</string>\n     <string name=\"pref_show_remain_time_summary\">Display remaining time of episodes when checked. If unchecked, display total duration of episodes.</string>\n-    <string name=\"pref_theme_title_use_system\">Use system theme</string>\n+    <string name=\"pref_theme_title_automatic\">Automatic</string>\n     <string name=\"pref_theme_title_light\">Light</string>\n     <string name=\"pref_theme_title_dark\">Dark</string>\n-    <string name=\"pref_theme_title_trueblack\">Black (AMOLED ready)</string>\n     <string name=\"pref_episode_cache_unlimited\">Unlimited</string>\n     <string name=\"pref_playback_speed_sum\">Customize the speeds available for variable speed playback</string>\n     <string name=\"pref_feed_playback_speed_sum\">The speed to use when starting audio playback for episodes in this podcast</string>\n", "test_patch": "diff --git a/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java b/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\nindex 909b7a5a2d..b790bc005c 100644\n--- a/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\n+++ b/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\n@@ -3,32 +3,29 @@\n import android.content.Intent;\n import android.content.SharedPreferences;\n import android.content.res.Resources;\n-\n import androidx.annotation.StringRes;\n import androidx.preference.PreferenceManager;\n import androidx.test.espresso.matcher.RootMatchers;\n import androidx.test.filters.LargeTest;\n import androidx.test.rule.ActivityTestRule;\n-\n-import de.danoeh.antennapod.core.storage.EpisodeCleanupAlgorithmFactory;\n-import org.awaitility.Awaitility;\n-import org.junit.Before;\n-import org.junit.Rule;\n-import org.junit.Test;\n-\n-import java.util.Arrays;\n-import java.util.concurrent.TimeUnit;\n-\n import de.danoeh.antennapod.R;\n import de.danoeh.antennapod.activity.PreferenceActivity;\n-import de.danoeh.antennapod.storage.preferences.UserPreferences;\n-import de.danoeh.antennapod.storage.preferences.UserPreferences.EnqueueLocation;\n import de.danoeh.antennapod.core.storage.APCleanupAlgorithm;\n import de.danoeh.antennapod.core.storage.APNullCleanupAlgorithm;\n import de.danoeh.antennapod.core.storage.APQueueCleanupAlgorithm;\n import de.danoeh.antennapod.core.storage.EpisodeCleanupAlgorithm;\n+import de.danoeh.antennapod.core.storage.EpisodeCleanupAlgorithmFactory;\n import de.danoeh.antennapod.core.storage.ExceptFavoriteCleanupAlgorithm;\n+import de.danoeh.antennapod.storage.preferences.UserPreferences;\n+import de.danoeh.antennapod.storage.preferences.UserPreferences.EnqueueLocation;\n import de.test.antennapod.EspressoTestUtils;\n+import org.awaitility.Awaitility;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import java.util.Arrays;\n+import java.util.concurrent.TimeUnit;\n \n import static androidx.test.espresso.Espresso.onData;\n import static androidx.test.espresso.Espresso.onView;\n@@ -77,22 +74,6 @@ public void setUp() {\n         UserPreferences.init(activityTestRule.getActivity());\n     }\n \n-    @Test\n-    public void testSwitchTheme() {\n-        final UserPreferences.ThemePreference theme = UserPreferences.getTheme();\n-        int otherThemeText;\n-        if (theme == UserPreferences.ThemePreference.DARK) {\n-            otherThemeText = R.string.pref_theme_title_light;\n-        } else {\n-            otherThemeText = R.string.pref_theme_title_dark;\n-        }\n-        clickPreference(R.string.user_interface_label);\n-        clickPreference(R.string.pref_set_theme_title);\n-        onView(withText(otherThemeText)).perform(click());\n-        Awaitility.await().atMost(1000, MILLISECONDS)\n-                .until(() -> UserPreferences.getTheme() != theme);\n-    }\n-\n     @Test\n     public void testEnablePersistentPlaybackControls() {\n         final boolean persistNotify = UserPreferences.isPersistNotify();\n", "problem_statement": "Theme setting: 'True black mode (AMOLED)' as checkbox affecting 'Automatic' and 'Dark' options\n### Checklist\n\n- [X] I have used the search function for [open](https://github.com/AntennaPod/AntennaPod/issues) **and** [closed](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue+is%3Aclosed) issues to see if someone else has already submitted the same feature request.\n- [X] I will describe the problem with as much detail as possible.\n- [X] This request contains only one single feature, **not** a list of multiple (related) features.\n\n### App version\n\n2.7.1\n\n### Where did you get the app from\n\nGoogle Play\n\n### Problem you may be having, or feature you want\n\nWhen setting the theme of the app to follow the device settings, antennapod applies the dark theme and not the black amoled theme. \n\n### Suggested solution\n\nGive us the option to select preferred dark theme. For reference, Newpipe has a similar option where the preferred night theme would apply once the phone's dark theme is enabled. \n\n### Screenshots / Drawings / Technical details\n\n_No response_\n", "hints_text": "I like the approach that Mastodon takes: three options (automatic, light, dark) and a checkbox 'True black mode':\r\n![Imagepipe_0](https://user-images.githubusercontent.com/11229646/219805098-dca4b150-cac8-4892-a0f6-63e2ebf675ac.jpg)\r\n\r\nFor AntennaPod, I would change the string to `True black mode (AMOLED)`\nIs this really worth yet another setting?\r\n\r\n> For AntennaPod, I would change the string to True black mode (AMOLED)\r\n\r\nMentioning AMOLED is actually quite misleading here because it makes people think that they can save battery (while there is basically no difference between dark and black).\n> Is this really worth yet another setting?\r\n\r\nIt's not another setting. It's changing an already existing setting (it now is a radio button, should be changed into a checkbox).\r\n\r\n> Mentioning AMOLED is actually quite misleading here because it makes people think that they can save battery (while there is basically no difference between dark and black).\r\n\r\nFair enough. Then let's use the exact same string as Mastodon: `True black mode`", "created_at": "2023-02-18T11:22:11Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 6286, "instance_id": "AntennaPod__AntennaPod-6286", "issue_numbers": ["6238"], "base_commit": "2b22d4b6977f9a22abfd4bc2d269c79834551ee2", "patch": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java\nindex dbf314876f..dfbaf96958 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/AllEpisodesFragment.java\n@@ -9,13 +9,17 @@\n import android.view.ViewGroup;\n import androidx.annotation.NonNull;\n import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.core.storage.DBReader;\n import de.danoeh.antennapod.dialog.AllEpisodesFilterDialog;\n+import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedItemFilter;\n+import de.danoeh.antennapod.model.feed.SortOrder;\n import org.apache.commons.lang3.StringUtils;\n import org.greenrobot.eventbus.Subscribe;\n \n import java.util.ArrayList;\n import java.util.HashSet;\n+import java.util.List;\n \n /**\n  * Shows all episodes (possibly filtered by user).\n@@ -24,20 +28,55 @@ public class AllEpisodesFragment extends EpisodesListFragment {\n     public static final String TAG = \"EpisodesFragment\";\n     private static final String PREF_NAME = \"PrefAllEpisodesFragment\";\n     private static final String PREF_FILTER = \"filter\";\n+    public static final String PREF_SORT = \"prefEpisodesSort\";\n+    private SharedPreferences prefs;\n \n     @NonNull\n     @Override\n     public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n         final View root = super.onCreateView(inflater, container, savedInstanceState);\n         toolbar.inflateMenu(R.menu.episodes);\n+        inflateSortMenu();\n         toolbar.setTitle(R.string.episodes_label);\n         updateToolbar();\n         updateFilterUi();\n+        prefs = getActivity().getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE);\n         txtvInformation.setOnClickListener(\n                 v -> AllEpisodesFilterDialog.newInstance(getFilter()).show(getChildFragmentManager(), null));\n         return root;\n     }\n \n+    private void inflateSortMenu() {\n+        MenuItem sortItem = toolbar.getMenu().findItem(R.id.episodes_sort);\n+        getActivity().getMenuInflater().inflate(R.menu.sort_menu, sortItem.getSubMenu());\n+\n+        // Remove the sorting options that are not needed in this fragment\n+        toolbar.getMenu().findItem(R.id.sort_episode_title).setVisible(false);\n+        toolbar.getMenu().findItem(R.id.sort_feed_title).setVisible(false);\n+        toolbar.getMenu().findItem(R.id.sort_random).setVisible(false);\n+        toolbar.getMenu().findItem(R.id.sort_smart_shuffle).setVisible(false);\n+        toolbar.getMenu().findItem(R.id.keep_sorted).setVisible(false);\n+    }\n+\n+    @NonNull\n+    @Override\n+    protected List<FeedItem> loadData() {\n+        return DBReader.getRecentlyPublishedEpisodes(0, page * EPISODES_PER_PAGE,\n+                getFilter(), getSortOrder());\n+    }\n+\n+    @NonNull\n+    @Override\n+    protected List<FeedItem> loadMoreData(int page) {\n+        return DBReader.getRecentlyPublishedEpisodes((page - 1) * EPISODES_PER_PAGE,\n+                EPISODES_PER_PAGE, getFilter(), getSortOrder());\n+    }\n+\n+    @Override\n+    protected int loadTotalItemCount() {\n+        return DBReader.getTotalEpisodeCount(getFilter());\n+    }\n+\n     @Override\n     protected FeedItemFilter getFilter() {\n         SharedPreferences prefs = getActivity().getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE);\n@@ -71,13 +110,23 @@ public boolean onMenuItemClick(MenuItem item) {\n             }\n             onFilterChanged(new AllEpisodesFilterDialog.AllEpisodesFilterChangedEvent(new HashSet<>(filter)));\n             return true;\n+        } else {\n+            SortOrder sortOrder = MenuItemToSortOrderConverter.convert(item);\n+            if (sortOrder != null) {\n+                saveSortOrderAndRefresh(sortOrder);\n+                return true;\n+            }\n         }\n         return false;\n     }\n \n+    private void saveSortOrderAndRefresh(SortOrder type) {\n+        prefs.edit().putString(PREF_SORT, \"\" + type.code).apply();\n+        loadItems();\n+    }\n+\n     @Subscribe\n     public void onFilterChanged(AllEpisodesFilterDialog.AllEpisodesFilterChangedEvent event) {\n-        SharedPreferences prefs = getActivity().getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE);\n         prefs.edit().putString(PREF_FILTER, StringUtils.join(event.filterValues, \",\")).apply();\n         updateFilterUi();\n         page = 1;\n@@ -96,4 +145,8 @@ private void updateFilterUi() {\n         toolbar.getMenu().findItem(R.id.action_favorites).setIcon(\n                 getFilter().showIsFavorite ? R.drawable.ic_star : R.drawable.ic_star_border);\n     }\n+\n+    private SortOrder getSortOrder() {\n+        return SortOrder.fromCodeString(prefs.getString(PREF_SORT, \"\" + SortOrder.DATE_NEW_OLD.code));\n+    }\n }\ndiff --git a/app/src/main/java/de/danoeh/antennapod/fragment/EpisodesListFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/EpisodesListFragment.java\nindex 1384b5d784..5ba3233722 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/EpisodesListFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/EpisodesListFragment.java\n@@ -31,7 +31,6 @@\n import de.danoeh.antennapod.core.event.DownloaderUpdate;\n import de.danoeh.antennapod.core.menuhandler.MenuItemUtils;\n import de.danoeh.antennapod.core.service.download.DownloadService;\n-import de.danoeh.antennapod.core.storage.DBReader;\n import de.danoeh.antennapod.core.util.FeedItemUtil;\n import de.danoeh.antennapod.core.util.download.AutoUpdateManager;\n import de.danoeh.antennapod.event.FeedItemEvent;\n@@ -442,18 +441,12 @@ void loadItems() {\n     }\n \n     @NonNull\n-    protected List<FeedItem> loadData() {\n-        return DBReader.getRecentlyPublishedEpisodes(0, page * EPISODES_PER_PAGE, getFilter());\n-    }\n+    protected abstract List<FeedItem> loadData();\n \n     @NonNull\n-    protected List<FeedItem> loadMoreData(int page) {\n-        return DBReader.getRecentlyPublishedEpisodes((page - 1) * EPISODES_PER_PAGE, EPISODES_PER_PAGE, getFilter());\n-    }\n+    protected abstract List<FeedItem> loadMoreData(int page);\n \n-    protected int loadTotalItemCount() {\n-        return DBReader.getTotalEpisodeCount(getFilter());\n-    }\n+    protected abstract int loadTotalItemCount();\n \n     protected abstract FeedItemFilter getFilter();\n \ndiff --git a/app/src/main/res/menu/episodes.xml b/app/src/main/res/menu/episodes.xml\nindex 2841fc12f4..358573c93f 100644\n--- a/app/src/main/res/menu/episodes.xml\n+++ b/app/src/main/res/menu/episodes.xml\n@@ -21,7 +21,7 @@\n         android:icon=\"@drawable/ic_filter\"\n         android:menuCategory=\"container\"\n         android:title=\"@string/filter\"\n-        custom:showAsAction=\"always\"/>\n+        custom:showAsAction=\"ifRoom\"/>\n \n     <item\n         android:id=\"@+id/action_favorites\"\n@@ -30,4 +30,11 @@\n         android:title=\"@string/favorite_episodes_label\"\n         custom:showAsAction=\"always\"/>\n \n+    <item\n+        android:id=\"@+id/episodes_sort\"\n+        android:title=\"@string/sort\"\n+        custom:showAsAction=\"never\">\n+        <menu />\n+    </item>\n+\n </menu>\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/export/favorites/FavoritesWriter.java b/core/src/main/java/de/danoeh/antennapod/core/export/favorites/FavoritesWriter.java\nindex 0923292292..5ccfc93fed 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/export/favorites/FavoritesWriter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/export/favorites/FavoritesWriter.java\n@@ -18,6 +18,7 @@\n import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.core.storage.DBReader;\n+import de.danoeh.antennapod.model.feed.SortOrder;\n \n /** Writes saved favorites to file. */\n public class FavoritesWriter implements ExportWriter {\n@@ -43,7 +44,7 @@ public void writeDocument(List<Feed> feeds, Writer writer, Context context)\n         String feedTemplate = IOUtils.toString(feedTemplateStream, UTF_8);\n \n         List<FeedItem> allFavorites = DBReader.getRecentlyPublishedEpisodes(0, Integer.MAX_VALUE,\n-                new FeedItemFilter(FeedItemFilter.IS_FAVORITE));\n+                new FeedItemFilter(FeedItemFilter.IS_FAVORITE), SortOrder.DATE_NEW_OLD);\n         Map<Long, List<FeedItem>> favoriteByFeed = getFeedMap(allFavorites);\n \n         writer.append(templateParts[0]);\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 176a78f0fa..36a056c5d6 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n@@ -52,6 +52,7 @@\n import de.danoeh.antennapod.event.PlayerErrorEvent;\n import de.danoeh.antennapod.event.playback.SleepTimerUpdatedEvent;\n import de.danoeh.antennapod.model.feed.FeedItemFilter;\n+import de.danoeh.antennapod.model.feed.SortOrder;\n import de.danoeh.antennapod.playback.base.PlaybackServiceMediaPlayer;\n import de.danoeh.antennapod.playback.base.PlayerStatus;\n import de.danoeh.antennapod.playback.cast.CastPsmp;\n@@ -417,7 +418,7 @@ private List<MediaBrowserCompat.MediaItem> loadChildrenSynchronous(@NonNull Stri\n         } else if (parentId.equals(getResources().getString(R.string.episodes_label))) {\n             feedItems = DBReader.getRecentlyPublishedEpisodes(0,\n                     MAX_ANDROID_AUTO_EPISODES_PER_FEED,\n-                    new FeedItemFilter(FeedItemFilter.UNPLAYED));\n+                    new FeedItemFilter(FeedItemFilter.UNPLAYED), SortOrder.DATE_NEW_OLD);\n         } else if (parentId.startsWith(\"FeedId:\")) {\n             long feedId = Long.parseLong(parentId.split(\":\")[1]);\n             feedItems = DBReader.getFeedItemList(DBReader.getFeed(feedId));\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\nindex 4641e366c5..62b1db3cb4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n@@ -366,12 +366,12 @@ private static LongList getFavoriteIDList() {\n      * @param filter The filter describing which episodes to filter out.\n      */\n     @NonNull\n-    public static List<FeedItem> getRecentlyPublishedEpisodes(int offset, int limit, FeedItemFilter filter) {\n+    public static List<FeedItem> getRecentlyPublishedEpisodes(int offset, int limit,\n+                                                              FeedItemFilter filter, SortOrder sortOrder) {\n         Log.d(TAG, \"getRecentlyPublishedEpisodes() called with: offset=\" + offset + \", limit=\" + limit);\n-\n         PodDBAdapter adapter = PodDBAdapter.getInstance();\n         adapter.open();\n-        try (Cursor cursor = adapter.getRecentlyPublishedItemsCursor(offset, limit, filter)) {\n+        try (Cursor cursor = adapter.getRecentlyPublishedItemsCursor(offset, limit, filter, sortOrder)) {\n             List<FeedItem> items = extractItemlistFromCursor(adapter, cursor);\n             loadAdditionalFeedItemListData(items);\n             return items;\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\nindex bcb57f3bbe..bb0218a0b7 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\n@@ -45,6 +45,8 @@\n import static de.danoeh.antennapod.model.feed.FeedPreferences.SPEED_USE_GLOBAL;\n import static de.danoeh.antennapod.model.feed.SortOrder.toCodeString;\n \n+import de.danoeh.antennapod.storage.database.mapper.FeedItemSortQuery;\n+\n /**\n  * Implements methods for accessing the database\n  */\n@@ -1059,11 +1061,13 @@ public final Cursor getNewItemsCursor(int offset, int limit) {\n         return db.rawQuery(query, null);\n     }\n \n-    public final Cursor getRecentlyPublishedItemsCursor(int offset, int limit, FeedItemFilter filter) {\n+    public final Cursor getRecentlyPublishedItemsCursor(int offset, int limit,\n+                                                        FeedItemFilter filter, SortOrder sortOrder) {\n+        String orderByQuery = FeedItemSortQuery.generateFrom(sortOrder);\n         String filterQuery = FeedItemFilterQuery.generateFrom(filter);\n         String whereClause = \"\".equals(filterQuery) ? \"\" : \" WHERE \" + filterQuery;\n         final String query = SELECT_FEED_ITEMS_AND_MEDIA + whereClause\n-                + \" ORDER BY \" + KEY_PUBDATE + \" DESC LIMIT \" + offset + \", \" + limit;\n+                + \"ORDER BY \" +  orderByQuery + \" LIMIT \" + offset + \", \" + limit;\n         return db.rawQuery(query, null);\n     }\n \n", "test_patch": "diff --git a/app/src/androidTest/java/de/test/antennapod/playback/PlaybackTest.java b/app/src/androidTest/java/de/test/antennapod/playback/PlaybackTest.java\nindex bb3c0bf670..426a30bb8b 100644\n--- a/app/src/androidTest/java/de/test/antennapod/playback/PlaybackTest.java\n+++ b/app/src/androidTest/java/de/test/antennapod/playback/PlaybackTest.java\n@@ -13,6 +13,7 @@\n \n import de.danoeh.antennapod.core.receiver.MediaButtonReceiver;\n import de.danoeh.antennapod.model.feed.FeedItemFilter;\n+import de.danoeh.antennapod.model.feed.SortOrder;\n import de.danoeh.antennapod.playback.base.PlayerStatus;\n import org.awaitility.Awaitility;\n import org.hamcrest.Matcher;\n@@ -252,7 +253,8 @@ protected void startLocalPlayback() {\n         openNavDrawer();\n         onDrawerItem(withText(R.string.episodes_label)).perform(click());\n \n-        final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(0, 10, FeedItemFilter.unfiltered());\n+        final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(0, 10,\n+                FeedItemFilter.unfiltered(), SortOrder.DATE_NEW_OLD);\n         Matcher<View> allEpisodesMatcher = allOf(withId(R.id.recyclerView), isDisplayed(), hasMinimumChildCount(2));\n         onView(isRoot()).perform(waitForView(allEpisodesMatcher, 1000));\n         onView(allEpisodesMatcher).perform(actionOnItemAtPosition(0, clickChildViewWithId(R.id.secondaryActionButton)));\n@@ -287,7 +289,8 @@ protected void replayEpisodeCheck(boolean followQueue) throws Exception {\n         uiTestUtils.addLocalFeedData(true);\n         DBWriter.clearQueue().get();\n         activityTestRule.launchActivity(new Intent());\n-        final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(0, 10, FeedItemFilter.unfiltered());\n+        final List<FeedItem> episodes = DBReader.getRecentlyPublishedEpisodes(0, 10,\n+                FeedItemFilter.unfiltered(), SortOrder.DATE_NEW_OLD);\n \n         startLocalPlayback();\n         FeedMedia media = episodes.get(0).getMedia();\n", "problem_statement": "Add sort option to episodes view screen\n### Checklist\r\n\r\n- [X] I have used the search function for [open](https://github.com/AntennaPod/AntennaPod/issues) **and** [closed](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue+is%3Aclosed) issues to see if someone else has already submitted the same feature request.\r\n- [X] I will describe the problem with as much detail as possible.\r\n- [X] This request contains only one single feature, **not** a list of multiple (related) features.\r\n\r\n### App version\r\n\r\n2.7.1\r\n\r\n### Where did you get the app from\r\n\r\nGoogle Play\r\n\r\n### Problem you may be having, or feature you want\r\n\r\nThe episodes view currently doesn't have an option to sort episodes within it. \r\n\r\n### Suggested solution\r\n\r\nAdd a sort option within the episodes screen to allow us to sort by date, duration, etc. \r\n\r\nThis should also give us a toggle to reverse that sort when possible. \r\n\r\n### Screenshots / Drawings / Technical details\r\n\r\n_No response_\n", "hints_text": "You know those Sort options are already available at the top of the three-dot menu, right? Are you suggesting it be moved directly onto the screen, like next to the filter button? \nYep. I mean adding the sort option to the episodes screen rather than the queue screen. ", "created_at": "2023-01-26T16:48:17Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 6276, "instance_id": "AntennaPod__AntennaPod-6276", "issue_numbers": ["6650"], "base_commit": "34fb2050b257d81438374bd39d4625be4b580325", "patch": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/preferences/UserInterfacePreferencesFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/preferences/UserInterfacePreferencesFragment.java\nindex c8521caab8..0f3320e980 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/preferences/UserInterfacePreferencesFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/preferences/UserInterfacePreferencesFragment.java\n@@ -1,8 +1,10 @@\n package de.danoeh.antennapod.fragment.preferences;\n \n import android.content.Context;\n+import android.content.DialogInterface;\n import android.os.Build;\n import android.os.Bundle;\n+import android.widget.Button;\n import android.widget.ListView;\n import androidx.appcompat.app.AlertDialog;\n import androidx.core.app.ActivityCompat;\n@@ -64,9 +66,9 @@ private void setupInterfaceScreen() {\n                     return true;\n                 });\n \n-        findPreference(UserPreferences.PREF_COMPACT_NOTIFICATION_BUTTONS)\n+        findPreference(UserPreferences.PREF_FULL_NOTIFICATION_BUTTONS)\n                 .setOnPreferenceClickListener(preference -> {\n-                    showNotificationButtonsDialog();\n+                    showFullNotificationButtonsDialog();\n                     return true;\n                 });\n         findPreference(UserPreferences.PREF_FILTER_FEED)\n@@ -91,48 +93,85 @@ private void setupInterfaceScreen() {\n         }\n     }\n \n-    private void showNotificationButtonsDialog() {\n+\n+    private void showFullNotificationButtonsDialog() {\n         final Context context = getActivity();\n-        final List<Integer> preferredButtons = UserPreferences.getCompactNotificationButtons();\n+\n+        final List<Integer> preferredButtons = UserPreferences.getFullNotificationButtons();\n         final String[] allButtonNames = context.getResources().getStringArray(\n-                R.array.compact_notification_buttons_options);\n+                R.array.full_notification_buttons_options);\n+        final int[] buttonIDs = {2, 3, 4};\n+        final int exactItems = 2;\n+        final DialogInterface.OnClickListener completeListener = (dialog, which) ->\n+                UserPreferences.setFullNotificationButtons(preferredButtons);\n+        final String title = context.getResources().getString(\n+                R.string.pref_full_notification_buttons_title);\n+\n+        showNotificationButtonsDialog(preferredButtons, allButtonNames, buttonIDs, title,\n+                exactItems, completeListener\n+        );\n+    }\n+\n+    private void showNotificationButtonsDialog(List<Integer> preferredButtons,\n+            String[] allButtonNames, int[] buttonIds, String title,\n+            int exactItems, DialogInterface.OnClickListener completeListener) {\n         boolean[] checked = new boolean[allButtonNames.length]; // booleans default to false in java\n \n+        final Context context = getActivity();\n+\n+        // Clear buttons that are not part of the setting anymore\n+        for (int i = preferredButtons.size() - 1; i >= 0; i--) {\n+            boolean isValid = false;\n+            for (int j = 0; j < checked.length; j++) {\n+                if (buttonIds[j] == preferredButtons.get(i)) {\n+                    isValid = true;\n+                }\n+            }\n+\n+            if (!isValid) {\n+                preferredButtons.remove(i);\n+            }\n+        }\n+\n         for(int i=0; i < checked.length; i++) {\n-            if(preferredButtons.contains(i)) {\n+            if (preferredButtons.contains(buttonIds[i])) {\n                 checked[i] = true;\n             }\n         }\n \n         MaterialAlertDialogBuilder builder = new MaterialAlertDialogBuilder(context);\n-        builder.setTitle(String.format(context.getResources().getString(\n-                R.string.pref_compact_notification_buttons_dialog_title), 2));\n+        builder.setTitle(title);\n         builder.setMultiChoiceItems(allButtonNames, checked, (dialog, which, isChecked) -> {\n             checked[which] = isChecked;\n \n             if (isChecked) {\n-                if (preferredButtons.size() < 2) {\n-                    preferredButtons.add(which);\n-                } else {\n-                    // Only allow a maximum of two selections. This is because the notification\n-                    // on the lock screen can only display 3 buttons, and the play/pause button\n-                    // is always included.\n-                    checked[which] = false;\n-                    ListView selectionView = ((AlertDialog) dialog).getListView();\n-                    selectionView.setItemChecked(which, false);\n-                    Snackbar.make(\n-                            selectionView,\n-                            String.format(context.getResources().getString(\n-                                    R.string.pref_compact_notification_buttons_dialog_error), 2),\n-                            Snackbar.LENGTH_SHORT).show();\n-                }\n+                preferredButtons.add(buttonIds[which]);\n             } else {\n-                preferredButtons.remove((Integer) which);\n+                preferredButtons.remove((Integer) buttonIds[which]);\n             }\n         });\n-        builder.setPositiveButton(R.string.confirm_label, (dialog, which) ->\n-                UserPreferences.setCompactNotificationButtons(preferredButtons));\n+        builder.setPositiveButton(R.string.confirm_label, null);\n         builder.setNegativeButton(R.string.cancel_label, null);\n-        builder.create().show();\n+        final AlertDialog dialog = builder.create();\n+\n+        dialog.show();\n+\n+        Button positiveButton = dialog.getButton(AlertDialog.BUTTON_POSITIVE);\n+\n+        positiveButton.setOnClickListener(v -> {\n+            if (preferredButtons.size() != exactItems) {\n+                ListView selectionView = dialog.getListView();\n+                Snackbar.make(\n+                    selectionView,\n+                    String.format(context.getResources().getString(\n+                        R.string.pref_compact_notification_buttons_dialog_error_exact), exactItems),\n+                    Snackbar.LENGTH_SHORT).show();\n+\n+            } else {\n+                completeListener.onClick(dialog, AlertDialog.BUTTON_POSITIVE);\n+                dialog.cancel();\n+            }\n+        }\n+        );\n     }\n }\ndiff --git a/app/src/main/res/xml/preferences_user_interface.xml b/app/src/main/res/xml/preferences_user_interface.xml\nindex 733649ce1b..5cd25d59fd 100644\n--- a/app/src/main/res/xml/preferences_user_interface.xml\n+++ b/app/src/main/res/xml/preferences_user_interface.xml\n@@ -70,9 +70,9 @@\n                 android:summary=\"@string/pref_persistNotify_sum\"\n                 android:title=\"@string/pref_persistNotify_title\"/>\n         <Preference\n-                android:key=\"prefCompactNotificationButtons\"\n-                android:summary=\"@string/pref_compact_notification_buttons_sum\"\n-                android:title=\"@string/pref_compact_notification_buttons_title\"/>\n+                android:key=\"prefFullNotificationButtons\"\n+                android:summary=\"@string/pref_full_notification_buttons_sum\"\n+                android:title=\"@string/pref_full_notification_buttons_title\"/>\n     </PreferenceCategory>\n     <PreferenceCategory android:title=\"@string/behavior\">\n         <de.danoeh.antennapod.preferences.MaterialListPreference\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/receiver/MediaButtonReceiver.java b/core/src/main/java/de/danoeh/antennapod/core/receiver/MediaButtonReceiver.java\nindex 08bdd39bce..161af58e10 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/receiver/MediaButtonReceiver.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/receiver/MediaButtonReceiver.java\n@@ -17,6 +17,8 @@\n public class MediaButtonReceiver extends BroadcastReceiver {\n     private static final String TAG = \"MediaButtonReceiver\";\n     public static final String EXTRA_KEYCODE = \"de.danoeh.antennapod.core.service.extra.MediaButtonReceiver.KEYCODE\";\n+    public static final String EXTRA_CUSTOM_ACTION =\n+            \"de.danoeh.antennapod.core.service.extra.MediaButtonReceiver.CUSTOM_ACTION\";\n     public static final String EXTRA_SOURCE = \"de.danoeh.antennapod.core.service.extra.MediaButtonReceiver.SOURCE\";\n     public static final String EXTRA_HARDWAREBUTTON\n             = \"de.danoeh.antennapod.core.service.extra.MediaButtonReceiver.HARDWAREBUTTON\";\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 3ef2e22144..b26cf48142 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n@@ -47,6 +47,20 @@\n import androidx.core.app.NotificationManagerCompat;\n import androidx.media.MediaBrowserServiceCompat;\n \n+import de.danoeh.antennapod.core.service.QuickSettingsTileService;\n+import de.danoeh.antennapod.core.util.ChapterUtils;\n+import de.danoeh.antennapod.core.util.playback.PlayableUtils;\n+import de.danoeh.antennapod.event.playback.BufferUpdateEvent;\n+import de.danoeh.antennapod.event.playback.PlaybackServiceEvent;\n+import de.danoeh.antennapod.event.PlayerErrorEvent;\n+import de.danoeh.antennapod.event.playback.SleepTimerUpdatedEvent;\n+import de.danoeh.antennapod.model.feed.Chapter;\n+import de.danoeh.antennapod.model.feed.FeedItemFilter;\n+import de.danoeh.antennapod.playback.base.PlaybackServiceMediaPlayer;\n+import de.danoeh.antennapod.playback.base.PlayerStatus;\n+import de.danoeh.antennapod.playback.cast.CastPsmp;\n+import de.danoeh.antennapod.playback.cast.CastStateListener;\n+\n import org.greenrobot.eventbus.EventBus;\n import org.greenrobot.eventbus.Subscribe;\n import org.greenrobot.eventbus.ThreadMode;\n@@ -126,6 +140,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n     private static final String CUSTOM_ACTION_REWIND = \"action.de.danoeh.antennapod.core.service.rewind\";\n     private static final String CUSTOM_ACTION_CHANGE_PLAYBACK_SPEED =\n             \"action.de.danoeh.antennapod.core.service.changePlaybackSpeed\";\n+    public static final String CUSTOM_ACTION_NEXT_CHAPTER = \"action.de.danoeh.antennapod.core.service.next_chapter\";\n \n     /**\n      * Set a max number of episodes to load for Android Auto, otherwise there could be performance issues\n@@ -482,9 +497,10 @@ public int onStartCommand(Intent intent, int flags, int startId) {\n         notificationManager.cancel(R.id.notification_streaming_confirmation);\n \n         final int keycode = intent.getIntExtra(MediaButtonReceiver.EXTRA_KEYCODE, -1);\n+        final String customAction = intent.getStringExtra(MediaButtonReceiver.EXTRA_CUSTOM_ACTION);\n         final boolean hardwareButton = intent.getBooleanExtra(MediaButtonReceiver.EXTRA_HARDWAREBUTTON, false);\n         Playable playable = intent.getParcelableExtra(PlaybackServiceInterface.EXTRA_PLAYABLE);\n-        if (keycode == -1 && playable == null) {\n+        if (keycode == -1 && playable == null && customAction == null) {\n             Log.e(TAG, \"PlaybackService was started with no arguments\");\n             stateManager.stopService();\n             return Service.START_NOT_STICKY;\n@@ -508,7 +524,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {\n                     stateManager.stopService();\n                     return Service.START_NOT_STICKY;\n                 }\n-            } else {\n+            } else if (playable != null) {\n                 stateManager.validStartCommandWasReceived();\n                 boolean allowStreamThisTime = intent.getBooleanExtra(\n                         PlaybackServiceInterface.EXTRA_ALLOW_STREAM_THIS_TIME, false);\n@@ -536,6 +552,8 @@ public int onStartCommand(Intent intent, int flags, int startId) {\n                                     stateManager.stopService();\n                                 });\n                 return Service.START_NOT_STICKY;\n+            } else {\n+                mediaSession.getController().getTransportControls().sendCustomAction(customAction, null);\n             }\n         }\n \n@@ -783,6 +801,7 @@ public WidgetUpdater.WidgetState requestWidgetState() {\n         @Override\n         public void onChapterLoaded(Playable media) {\n             sendNotificationBroadcast(PlaybackServiceInterface.NOTIFICATION_TYPE_RELOAD, 0);\n+            updateMediaSession(mediaPlayer.getPlayerStatus());\n         }\n     };\n \n@@ -1250,20 +1269,35 @@ private void updateMediaSession(final PlayerStatus playerStatus) {\n         WearMediaSession.addWearExtrasToAction(fastForwardBuilder);\n         sessionState.addCustomAction(fastForwardBuilder.build());\n \n-        sessionState.addCustomAction(\n-                new PlaybackStateCompat.CustomAction.Builder(\n-                        CUSTOM_ACTION_CHANGE_PLAYBACK_SPEED,\n-                        getString(R.string.playback_speed),\n-                        R.drawable.ic_notification_playback_speed\n+        if (UserPreferences.showPlaybackSpeedOnFullNotification()) {\n+            sessionState.addCustomAction(\n+                    new PlaybackStateCompat.CustomAction.Builder(\n+                    CUSTOM_ACTION_CHANGE_PLAYBACK_SPEED,\n+                    getString(R.string.playback_speed),\n+                    R.drawable.ic_notification_playback_speed\n                 ).build()\n-        );\n-        sessionState.addCustomAction(\n+            );\n+        }\n+\n+        if (UserPreferences.showNextChapterOnFullNotification()) {\n+            if (getPlayable() != null && getPlayable().getChapters() != null) {\n+                sessionState.addCustomAction(\n+                        new PlaybackStateCompat.CustomAction.Builder(\n+                        CUSTOM_ACTION_NEXT_CHAPTER,\n+                        getString(R.string.next_chapter), R.drawable.ic_notification_next_chapter)\n+                        .build());\n+            }\n+        }\n+\n+        if (UserPreferences.showSkipOnFullNotification()) {\n+            sessionState.addCustomAction(\n                 new PlaybackStateCompat.CustomAction.Builder(\n-                        CUSTOM_ACTION_SKIP_TO_NEXT,\n-                        getString(R.string.skip_episode_label),\n-                        R.drawable.ic_notification_skip\n+                    CUSTOM_ACTION_SKIP_TO_NEXT,\n+                    getString(R.string.skip_episode_label),\n+                    R.drawable.ic_notification_skip\n                 ).build()\n-        );\n+            );\n+        }\n \n         WearMediaSession.mediaSessionSetExtraForWear(mediaSession);\n \n@@ -1812,6 +1846,26 @@ public void onRewind() {\n             seekDelta(-UserPreferences.getRewindSecs() * 1000);\n         }\n \n+        public void onNextChapter() {\n+            List<Chapter> chapters = mediaPlayer.getPlayable().getChapters();\n+            if (chapters == null) {\n+                // No chapters, just fallback to next episode\n+                mediaPlayer.skip();\n+                return;\n+            }\n+\n+            int nextChapter = ChapterUtils.getCurrentChapterIndex(\n+                    mediaPlayer.getPlayable(), mediaPlayer.getPosition()) + 1;\n+\n+            if (chapters.size() < nextChapter + 1) {\n+                // We are on the last chapter, just fallback to the next episode\n+                mediaPlayer.skip();\n+                return;\n+            }\n+\n+            mediaPlayer.seekTo((int) chapters.get(nextChapter).getStart());\n+        }\n+\n         @Override\n         public void onFastForward() {\n             Log.d(TAG, \"onFastForward()\");\n@@ -1884,6 +1938,8 @@ public void onCustomAction(String action, Bundle extra) {\n                 onRewind();\n             } else if (CUSTOM_ACTION_SKIP_TO_NEXT.equals(action)) {\n                 mediaPlayer.skip();\n+            } else if (CUSTOM_ACTION_NEXT_CHAPTER.equals(action)) {\n+                onNextChapter();\n             } else if (CUSTOM_ACTION_CHANGE_PLAYBACK_SPEED.equals(action)) {\n                 List<Float> selectedSpeeds = UserPreferences.getPlaybackSpeedArray();\n \ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceNotificationBuilder.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceNotificationBuilder.java\nindex fe98dbc8f0..471dc74542 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceNotificationBuilder.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackServiceNotificationBuilder.java\n@@ -175,14 +175,12 @@ private void addActions(NotificationCompat.Builder notification, MediaSessionCom\n         ArrayList<Integer> compactActionList = new ArrayList<>();\n \n         int numActions = 0; // we start and 0 and then increment by 1 for each call to addAction\n-        // always let them rewind\n+\n         PendingIntent rewindButtonPendingIntent = getPendingIntentForMediaAction(\n                 KeyEvent.KEYCODE_MEDIA_REWIND, numActions);\n         notification.addAction(R.drawable.ic_notification_fast_rewind, context.getString(R.string.rewind_label),\n                 rewindButtonPendingIntent);\n-        if (UserPreferences.showRewindOnCompactNotification()) {\n-            compactActionList.add(numActions);\n-        }\n+        compactActionList.add(numActions);\n         numActions++;\n \n         if (playerStatus == PlayerStatus.PLAYING) {\n@@ -205,19 +203,24 @@ private void addActions(NotificationCompat.Builder notification, MediaSessionCom\n                 KeyEvent.KEYCODE_MEDIA_FAST_FORWARD, numActions);\n         notification.addAction(R.drawable.ic_notification_fast_forward, context.getString(R.string.fast_forward_label),\n                 ffButtonPendingIntent);\n-        if (UserPreferences.showFastForwardOnCompactNotification()) {\n-            compactActionList.add(numActions);\n-        }\n+        compactActionList.add(numActions);\n         numActions++;\n \n-        PendingIntent skipButtonPendingIntent = getPendingIntentForMediaAction(\n-                KeyEvent.KEYCODE_MEDIA_NEXT, numActions);\n-        notification.addAction(R.drawable.ic_notification_skip, context.getString(R.string.skip_episode_label),\n-                skipButtonPendingIntent);\n-        if (UserPreferences.showSkipOnCompactNotification()) {\n-            compactActionList.add(numActions);\n+        if (UserPreferences.showNextChapterOnFullNotification() && playable.getChapters() != null) {\n+            PendingIntent nextChapterPendingIntent = getPendingIntentForCustomMediaAction(\n+                    PlaybackService.CUSTOM_ACTION_NEXT_CHAPTER, numActions);\n+            notification.addAction(R.drawable.ic_notification_next_chapter, context.getString(R.string.next_chapter),\n+                    nextChapterPendingIntent);\n+            numActions++;\n+        }\n+\n+        if (UserPreferences.showSkipOnFullNotification()) {\n+            PendingIntent skipButtonPendingIntent = getPendingIntentForMediaAction(\n+                    KeyEvent.KEYCODE_MEDIA_NEXT, numActions);\n+            notification.addAction(R.drawable.ic_notification_skip, context.getString(R.string.skip_episode_label),\n+                    skipButtonPendingIntent);\n+            numActions++;\n         }\n-        numActions++;\n \n         PendingIntent stopButtonPendingIntent = getPendingIntentForMediaAction(\n                 KeyEvent.KEYCODE_MEDIA_STOP, numActions);\n@@ -242,6 +245,20 @@ private PendingIntent getPendingIntentForMediaAction(int keycodeValue, int reque\n         }\n     }\n \n+    private PendingIntent getPendingIntentForCustomMediaAction(String action, int requestCode) {\n+        Intent intent = new Intent(context, PlaybackService.class);\n+        intent.setAction(\"MediaAction\" + action);\n+        intent.putExtra(MediaButtonReceiver.EXTRA_CUSTOM_ACTION, action);\n+\n+        if (Build.VERSION.SDK_INT >= 26) {\n+            return PendingIntent.getForegroundService(context, requestCode, intent,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+        } else {\n+            return PendingIntent.getService(context, requestCode, intent, PendingIntent.FLAG_UPDATE_CURRENT\n+                    | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+        }\n+    }\n+\n     public void setMediaSessionToken(MediaSessionCompat.Token mediaSessionToken) {\n         this.mediaSessionToken = mediaSessionToken;\n     }\n@@ -253,4 +270,4 @@ public void setPlayerStatus(PlayerStatus playerStatus) {\n     public PlayerStatus getPlayerStatus() {\n         return playerStatus;\n     }\n-}\n\\ No newline at end of file\n+}\ndiff --git a/core/src/main/res/values/arrays.xml b/core/src/main/res/values/arrays.xml\nindex f72a2e1080..7eeab886a8 100644\n--- a/core/src/main/res/values/arrays.xml\n+++ b/core/src/main/res/values/arrays.xml\n@@ -246,10 +246,10 @@\n         <item>DownloadsSection</item>\n     </string-array>\n \n-    <string-array name=\"compact_notification_buttons_options\">\n-        <item>@string/rewind_label</item>\n-        <item>@string/fast_forward_label</item>\n+    <string-array name=\"full_notification_buttons_options\">\n         <item>@string/skip_episode_label</item>\n+        <item>@string/next_chapter</item>\n+        <item>@string/playback_speed</item>\n     </string-array>\n \n     <string-array name=\"default_page_values\">\ndiff --git a/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java b/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\nindex 7b15584bad..b454ee5a1a 100644\n--- a/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\n+++ b/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\n@@ -54,7 +54,7 @@ private UserPreferences(){}\n     public static final String PREF_USE_EPISODE_COVER = \"prefEpisodeCover\";\n     public static final String PREF_SHOW_TIME_LEFT = \"showTimeLeft\";\n     private static final String PREF_PERSISTENT_NOTIFICATION = \"prefPersistNotify\";\n-    public static final String PREF_COMPACT_NOTIFICATION_BUTTONS = \"prefCompactNotificationButtons\";\n+    public static final String PREF_FULL_NOTIFICATION_BUTTONS = \"prefFullNotificationButtons\";\n     private static final String PREF_SHOW_DOWNLOAD_REPORT = \"prefShowDownloadReport\";\n     public static final String PREF_DEFAULT_PAGE = \"prefDefaultPage\";\n     public static final String PREF_FILTER_FEED = \"prefSubscriptionsFilter\";\n@@ -127,9 +127,12 @@ private UserPreferences(){}\n     public static final int EPISODE_CLEANUP_DEFAULT = 0;\n \n     // Constants\n-    private static final int NOTIFICATION_BUTTON_REWIND = 0;\n-    private static final int NOTIFICATION_BUTTON_FAST_FORWARD = 1;\n-    private static final int NOTIFICATION_BUTTON_SKIP = 2;\n+    public static final int NOTIFICATION_BUTTON_REWIND = 0;\n+    public static final int NOTIFICATION_BUTTON_FAST_FORWARD = 1;\n+    public static final int NOTIFICATION_BUTTON_SKIP = 2;\n+\n+    public static final int NOTIFICATION_BUTTON_NEXT_CHAPTER = 3;\n+    public static final int NOTIFICATION_BUTTON_PLAYBACK_SPEED = 4;\n     public static final int EPISODE_CACHE_SIZE_UNLIMITED = -1;\n     public static final int FEED_ORDER_COUNTER = 0;\n     public static final int FEED_ORDER_ALPHABETICAL = 1;\n@@ -195,11 +198,11 @@ public static List<String> getHiddenDrawerItems() {\n         return new ArrayList<>(Arrays.asList(TextUtils.split(hiddenItems, \",\")));\n     }\n \n-    public static List<Integer> getCompactNotificationButtons() {\n+    public static List<Integer> getFullNotificationButtons() {\n         String[] buttons = TextUtils.split(\n-                prefs.getString(PREF_COMPACT_NOTIFICATION_BUTTONS,\n-                        NOTIFICATION_BUTTON_REWIND + \",\" + NOTIFICATION_BUTTON_FAST_FORWARD),\n-                \",\");\n+            prefs.getString(PREF_FULL_NOTIFICATION_BUTTONS,\n+                NOTIFICATION_BUTTON_SKIP + \",\" + NOTIFICATION_BUTTON_PLAYBACK_SPEED), \",\");\n+\n         List<Integer> notificationButtons = new ArrayList<>();\n         for (String button : buttons) {\n             notificationButtons.add(Integer.parseInt(button));\n@@ -208,27 +211,28 @@ public static List<Integer> getCompactNotificationButtons() {\n     }\n \n     /**\n-     * Helper function to return whether the specified button should be shown on compact\n+     * Helper function to return whether the specified button should be shown on full\n      * notifications.\n      *\n-     * @param buttonId Either NOTIFICATION_BUTTON_REWIND, NOTIFICATION_BUTTON_FAST_FORWARD or\n-     *                 NOTIFICATION_BUTTON_SKIP.\n+     * @param buttonId Either NOTIFICATION_BUTTON_REWIND, NOTIFICATION_BUTTON_FAST_FORWARD,\n+     *                 NOTIFICATION_BUTTON_SKIP, NOTIFICATION_BUTTON_PLAYBACK_SPEED\n+     *                 or NOTIFICATION_BUTTON_NEXT_CHAPTER.\n      * @return {@code true} if button should be shown, {@code false}  otherwise\n      */\n-    private static boolean showButtonOnCompactNotification(int buttonId) {\n-        return getCompactNotificationButtons().contains(buttonId);\n+    private static boolean showButtonOnFullNotification(int buttonId) {\n+        return getFullNotificationButtons().contains(buttonId);\n     }\n \n-    public static boolean showRewindOnCompactNotification() {\n-        return showButtonOnCompactNotification(NOTIFICATION_BUTTON_REWIND);\n+    public static boolean showSkipOnFullNotification() {\n+        return showButtonOnFullNotification(NOTIFICATION_BUTTON_SKIP);\n     }\n \n-    public static boolean showFastForwardOnCompactNotification() {\n-        return showButtonOnCompactNotification(NOTIFICATION_BUTTON_FAST_FORWARD);\n+    public static boolean showNextChapterOnFullNotification() {\n+        return showButtonOnFullNotification(NOTIFICATION_BUTTON_NEXT_CHAPTER);\n     }\n \n-    public static boolean showSkipOnCompactNotification() {\n-        return showButtonOnCompactNotification(NOTIFICATION_BUTTON_SKIP);\n+    public static boolean showPlaybackSpeedOnFullNotification() {\n+        return showButtonOnFullNotification(NOTIFICATION_BUTTON_PLAYBACK_SPEED);\n     }\n \n     public static int getFeedOrder() {\n@@ -653,10 +657,10 @@ public static void setHiddenDrawerItems(List<String> items) {\n              .apply();\n     }\n \n-    public static void setCompactNotificationButtons(List<Integer> items) {\n+    public static void setFullNotificationButtons(List<Integer> items) {\n         String str = TextUtils.join(\",\", items);\n         prefs.edit()\n-             .putString(PREF_COMPACT_NOTIFICATION_BUTTONS, str)\n+             .putString(PREF_FULL_NOTIFICATION_BUTTONS, str)\n              .apply();\n     }\n \ndiff --git a/ui/i18n/src/main/res/values/strings.xml b/ui/i18n/src/main/res/values/strings.xml\nindex d7b6aa6cc4..ab65b6c41e 100644\n--- a/ui/i18n/src/main/res/values/strings.xml\n+++ b/ui/i18n/src/main/res/values/strings.xml\n@@ -489,10 +489,9 @@\n     <string name=\"pref_expandNotify_sum\">This usually expands the notification to show playback buttons.</string>\n     <string name=\"pref_persistNotify_title\">Persistent playback controls</string>\n     <string name=\"pref_persistNotify_sum\">Keep notification and lockscreen controls when playback is paused</string>\n-    <string name=\"pref_compact_notification_buttons_title\">Set compact notification buttons</string>\n-    <string name=\"pref_compact_notification_buttons_sum\">Change the playback buttons when the notification is collapsed. The play/pause button is always included.</string>\n-    <string name=\"pref_compact_notification_buttons_dialog_title\">Select a maximum of %1$d items</string>\n-    <string name=\"pref_compact_notification_buttons_dialog_error\">You can only select a maximum of %1$d items.</string>\n+    <string name=\"pref_compact_notification_buttons_dialog_error_exact\">You must select exactly %1$d items.</string>\n+    <string name=\"pref_full_notification_buttons_title\">Set notification buttons</string>\n+    <string name=\"pref_full_notification_buttons_sum\">Change the playback buttons on the playback notification.</string>\n     <string name=\"pref_enqueue_location_title\">Enqueue location</string>\n     <string name=\"pref_enqueue_location_sum\">Add episodes to: %1$s</string>\n     <string name=\"enqueue_location_back\">Back</string>\ndiff --git a/ui/png-icons/src/main/res/drawable/ic_notification_next_chapter.xml b/ui/png-icons/src/main/res/drawable/ic_notification_next_chapter.xml\nnew file mode 100644\nindex 0000000000..cb55e93a99\n--- /dev/null\n+++ b/ui/png-icons/src/main/res/drawable/ic_notification_next_chapter.xml\n@@ -0,0 +1,7 @@\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n+    android:height=\"24dp\"\r\n+    android:width=\"24dp\"\r\n+    android:viewportWidth=\"24\"\r\n+    android:viewportHeight=\"24\">\r\n+    <path android:fillColor=\"#fff\" android:pathData=\"M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4C16.41,4 20,7.59 20,12C20,16.41 16.41,20 12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4M8,8V16L13,12M14,8V16H16V8\" />\r\n+</vector>\r\n", "test_patch": "diff --git a/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java b/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\nindex 24c20242a8..9ba4276be5 100644\n--- a/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\n+++ b/app/src/androidTest/java/de/test/antennapod/ui/PreferencesTest.java\n@@ -3,6 +3,7 @@\n import android.content.Intent;\n import android.content.SharedPreferences;\n import android.content.res.Resources;\n+\n import androidx.annotation.StringRes;\n import androidx.preference.PreferenceManager;\n import androidx.test.filters.LargeTest;\n@@ -30,9 +31,7 @@\n import static androidx.test.espresso.action.ViewActions.scrollTo;\n import static androidx.test.espresso.action.ViewActions.swipeDown;\n import static androidx.test.espresso.action.ViewActions.swipeUp;\n-import static androidx.test.espresso.assertion.ViewAssertions.doesNotExist;\n import static androidx.test.espresso.assertion.ViewAssertions.matches;\n-import static androidx.test.espresso.matcher.ViewMatchers.isChecked;\n import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;\n import static androidx.test.espresso.matcher.ViewMatchers.isRoot;\n import static androidx.test.espresso.matcher.ViewMatchers.withId;\n@@ -40,7 +39,6 @@\n import static de.test.antennapod.EspressoTestUtils.clickPreference;\n import static de.test.antennapod.EspressoTestUtils.waitForView;\n import static java.util.concurrent.TimeUnit.MILLISECONDS;\n-import static org.hamcrest.Matchers.not;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertTrue;\n \n@@ -80,38 +78,22 @@ public void testEnablePersistentPlaybackControls() {\n     }\n \n     @Test\n-    public void testSetLockscreenButtons() {\n+    public void testSetNotificationButtons() {\n         clickPreference(R.string.user_interface_label);\n-        String[] buttons = res.getStringArray(R.array.compact_notification_buttons_options);\n-        clickPreference(R.string.pref_compact_notification_buttons_title);\n+        String[] buttons = res.getStringArray(R.array.full_notification_buttons_options);\n+        clickPreference(R.string.pref_full_notification_buttons_title);\n         // First uncheck checkboxes\n-        onView(withText(buttons[0])).perform(click());\n-        onView(withText(buttons[1])).perform(click());\n-\n-        // Now try to check all checkboxes\n-        onView(withText(buttons[0])).perform(click());\n         onView(withText(buttons[1])).perform(click());\n         onView(withText(buttons[2])).perform(click());\n \n-        // Make sure that the third checkbox is unchecked\n-        onView(withText(buttons[2])).check(matches(not(isChecked())));\n-\n-        String snackBarText = String.format(res.getString(\n-                R.string.pref_compact_notification_buttons_dialog_error), 2);\n-        Awaitility.await().ignoreExceptions().atMost(4000, MILLISECONDS)\n-                .until(() -> {\n-                    onView(withText(snackBarText)).check(doesNotExist());\n-                    return true;\n-                });\n-\n         onView(withText(R.string.confirm_label)).perform(click());\n \n         Awaitility.await().atMost(1000, MILLISECONDS)\n-                .until(UserPreferences::showRewindOnCompactNotification);\n+                .until(() -> UserPreferences.showSkipOnFullNotification());\n         Awaitility.await().atMost(1000, MILLISECONDS)\n-                .until(UserPreferences::showFastForwardOnCompactNotification);\n+                .until(() -> UserPreferences.showNextChapterOnFullNotification());\n         Awaitility.await().atMost(1000, MILLISECONDS)\n-                .until(() -> !UserPreferences.showSkipOnCompactNotification());\n+                .until(() -> !UserPreferences.showPlaybackSpeedOnFullNotification());\n     }\n \n     @Test\n", "problem_statement": "Hide option to configure compact notification\n### Checklist\n\n- [X] I have used the search function for [open](https://github.com/AntennaPod/AntennaPod/issues) **and** [closed](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue+is%3Aclosed) issues to see if someone else has already submitted the same feature request.\n- [X] I will describe the problem with as much detail as possible.\n- [X] This request contains only one single feature, **not** a list of multiple (related) features.\n\n### App version\n\n3.1.0\n\n### Where did you get the app from\n\nF-Droid\n\n### Problem you may be having, or feature you want\n\nOn Android 13 I wasn't able to get the media notification in the compact state, so I guess that this compact state has been removed from the OS. \n\n### Suggested solution\n\nTherefore the setting to configure the compact media notification can be hidden on Android 13 and higher.\n\n### Screenshots / Drawings / Technical details\n\n_No response_\n", "hints_text": "", "created_at": "2023-01-18T09:55:06Z"}
{"repo": "AntennaPod/AntennaPod", "pull_number": 6266, "instance_id": "AntennaPod__AntennaPod-6266", "issue_numbers": ["6214"], "base_commit": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "patch": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/InboxFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/InboxFragment.java\nindex 37cd40b0e1..c04adee6d9 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/InboxFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/InboxFragment.java\n@@ -4,6 +4,8 @@\n import android.content.SharedPreferences;\n import android.os.Bundle;\n import android.view.LayoutInflater;\n+import android.view.Menu;\n+import android.view.MenuInflater;\n import android.view.MenuItem;\n import android.view.View;\n import android.view.ViewGroup;\n@@ -20,6 +22,8 @@\n import de.danoeh.antennapod.core.storage.DBWriter;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedItemFilter;\n+import de.danoeh.antennapod.model.feed.SortOrder;\n+import de.danoeh.antennapod.storage.preferences.UserPreferences;\n \n import java.util.List;\n \n@@ -38,6 +42,8 @@ public class InboxFragment extends EpisodesListFragment {\n     public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n         final View root = super.onCreateView(inflater, container, savedInstanceState);\n         toolbar.inflateMenu(R.menu.inbox);\n+        inflateSortMenu();\n+\n         toolbar.setTitle(R.string.inbox_label);\n         prefs = getActivity().getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE);\n         updateToolbar();\n@@ -77,6 +83,13 @@ public boolean onMenuItemClick(MenuItem item) {\n                 showRemoveAllDialog();\n             }\n             return true;\n+        } else {\n+            SortOrder sortOrder = MenuItemToSortOrderConverter.convert(item);\n+            if (sortOrder != null) {\n+                UserPreferences.setInboxSortedOrder(sortOrder);\n+                loadItems();\n+                return true;\n+            }\n         }\n         return false;\n     }\n@@ -84,13 +97,14 @@ public boolean onMenuItemClick(MenuItem item) {\n     @NonNull\n     @Override\n     protected List<FeedItem> loadData() {\n-        return DBReader.getNewItemsList(0, page * EPISODES_PER_PAGE);\n+        return DBReader.getNewItemsList(0, page * EPISODES_PER_PAGE, UserPreferences.getInboxSortedOrder());\n     }\n \n     @NonNull\n     @Override\n     protected List<FeedItem> loadMoreData(int page) {\n-        return DBReader.getNewItemsList((page - 1) * EPISODES_PER_PAGE, EPISODES_PER_PAGE);\n+        return DBReader.getNewItemsList((page - 1) * EPISODES_PER_PAGE, EPISODES_PER_PAGE,\n+                UserPreferences.getInboxSortedOrder());\n     }\n \n     @Override\n@@ -103,6 +117,20 @@ private void removeAllFromInbox() {\n         ((MainActivity) getActivity()).showSnackbarAbovePlayer(R.string.removed_all_inbox_msg, Toast.LENGTH_SHORT);\n     }\n \n+    private void inflateSortMenu() {\n+        Menu menu = toolbar.getMenu();\n+        MenuItem downloadsItem = menu.findItem(R.id.inbox_sort);\n+        MenuInflater menuInflater = getActivity().getMenuInflater();\n+        menuInflater.inflate(R.menu.sort_menu, downloadsItem.getSubMenu());\n+\n+        // Remove the sorting options that are not needed in this fragment\n+        toolbar.getMenu().findItem(R.id.sort_episode_title).setVisible(false);\n+        toolbar.getMenu().findItem(R.id.sort_feed_title).setVisible(false);\n+        toolbar.getMenu().findItem(R.id.sort_random).setVisible(false);\n+        toolbar.getMenu().findItem(R.id.sort_smart_shuffle).setVisible(false);\n+        toolbar.getMenu().findItem(R.id.keep_sorted).setVisible(false);\n+    }\n+\n     private void showRemoveAllDialog() {\n         MaterialAlertDialogBuilder builder = new MaterialAlertDialogBuilder(getContext());\n         builder.setTitle(R.string.remove_all_inbox_label);\ndiff --git a/app/src/main/java/de/danoeh/antennapod/ui/home/sections/InboxSection.java b/app/src/main/java/de/danoeh/antennapod/ui/home/sections/InboxSection.java\nindex e635e9538b..6baea05e68 100644\n--- a/app/src/main/java/de/danoeh/antennapod/ui/home/sections/InboxSection.java\n+++ b/app/src/main/java/de/danoeh/antennapod/ui/home/sections/InboxSection.java\n@@ -27,6 +27,7 @@\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedItemFilter;\n import de.danoeh.antennapod.storage.database.PodDBAdapter;\n+import de.danoeh.antennapod.storage.preferences.UserPreferences;\n import de.danoeh.antennapod.ui.home.HomeSection;\n import io.reactivex.Observable;\n import io.reactivex.android.schedulers.AndroidSchedulers;\n@@ -125,7 +126,7 @@ private void loadItems() {\n             disposable.dispose();\n         }\n         disposable = Observable.fromCallable(() ->\n-                        new Pair<>(DBReader.getNewItemsList(0, NUM_EPISODES),\n+                        new Pair<>(DBReader.getNewItemsList(0, NUM_EPISODES, UserPreferences.getInboxSortedOrder()),\n                                 PodDBAdapter.getInstance().getNumberOfNewItems()))\n                 .subscribeOn(Schedulers.io())\n                 .observeOn(AndroidSchedulers.mainThread())\ndiff --git a/app/src/main/res/menu/inbox.xml b/app/src/main/res/menu/inbox.xml\nindex a284a2f566..fba8eefdb9 100644\n--- a/app/src/main/res/menu/inbox.xml\n+++ b/app/src/main/res/menu/inbox.xml\n@@ -15,6 +15,12 @@\n         custom:showAsAction=\"always\"\n         android:icon=\"@drawable/ic_refresh\"/>\n \n+    <item\n+        android:id=\"@+id/inbox_sort\"\n+        android:title=\"@string/sort\">\n+        <menu></menu>\n+    </item>\n+\n     <item\n         android:id=\"@+id/remove_all_inbox_item\"\n         android:title=\"@string/remove_all_inbox_label\"\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/AutomaticDownloadAlgorithm.java b/core/src/main/java/de/danoeh/antennapod/core/storage/AutomaticDownloadAlgorithm.java\nindex 5fbbbbc19b..c9f37fd009 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/AutomaticDownloadAlgorithm.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/AutomaticDownloadAlgorithm.java\n@@ -7,6 +7,7 @@\n import java.util.Iterator;\n import java.util.List;\n \n+import de.danoeh.antennapod.model.feed.SortOrder;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadRequest;\n import de.danoeh.antennapod.core.service.download.DownloadRequestCreator;\n import de.danoeh.antennapod.net.download.serviceinterface.DownloadServiceInterface;\n@@ -52,7 +53,7 @@ public Runnable autoDownloadUndownloadedItems(final Context context) {\n \n                 List<FeedItem> candidates;\n                 final List<FeedItem> queue = DBReader.getQueue();\n-                final List<FeedItem> newItems = DBReader.getNewItemsList(0, Integer.MAX_VALUE);\n+                final List<FeedItem> newItems = DBReader.getNewItemsList(0, Integer.MAX_VALUE, SortOrder.DATE_NEW_OLD);\n                 candidates = new ArrayList<>(queue.size() + newItems.size());\n                 candidates.addAll(queue);\n                 for (FeedItem newItem : newItems) {\ndiff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\nindex 62b1db3cb4..b762843475 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n@@ -328,12 +328,12 @@ public static List<FeedItem> getPlayedItems() {\n      * @param limit The maximum number of episodes that should be loaded.\n      * @return A list of FeedItems that are considered new.\n      */\n-    public static List<FeedItem> getNewItemsList(int offset, int limit) {\n+    public static List<FeedItem> getNewItemsList(int offset, int limit, SortOrder sortOrder) {\n         Log.d(TAG, \"getNewItemsList() called\");\n \n         PodDBAdapter adapter = PodDBAdapter.getInstance();\n         adapter.open();\n-        try (Cursor cursor = adapter.getNewItemsCursor(offset, limit)) {\n+        try (Cursor cursor = adapter.getNewItemsCursor(offset, limit, sortOrder)) {\n             List<FeedItem> items = extractItemlistFromCursor(adapter, cursor);\n             loadAdditionalFeedItemListData(items);\n             return items;\ndiff --git a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\nindex 0909ea4b70..825dea84ec 100644\n--- a/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\n+++ b/storage/database/src/main/java/de/danoeh/antennapod/storage/database/PodDBAdapter.java\n@@ -1054,14 +1054,14 @@ public void setFeedItems(int oldState, int newState, long feedId) {\n      * Excludes those feeds that do not have 'Keep Updated' enabled.\n      * The returned cursor uses the FEEDITEM_SEL_FI_SMALL selection.\n      */\n-    public final Cursor getNewItemsCursor(int offset, int limit) {\n+    public final Cursor getNewItemsCursor(int offset, int limit, SortOrder sortOrder) {\n+        String sortQuery = FeedItemSortQuery.generateFrom(sortOrder);\n         final String query = SELECT_FEED_ITEMS_AND_MEDIA\n                 + \" INNER JOIN \" + TABLE_NAME_FEEDS\n                 + \" ON \" + TABLE_NAME_FEED_ITEMS + \".\" + KEY_FEED + \"=\" + TABLE_NAME_FEEDS + \".\" + KEY_ID\n                 + \" WHERE \" + TABLE_NAME_FEED_ITEMS + \".\" + KEY_READ + \"=\" + FeedItem.NEW\n                     + \" AND \" + TABLE_NAME_FEEDS + \".\" + KEY_KEEP_UPDATED + \" > 0\"\n-                + \" ORDER BY \" + TABLE_NAME_FEED_ITEMS + \".\" + KEY_PUBDATE + \" DESC\"\n-                + \" LIMIT \" + offset + \", \" + limit;\n+                + \" ORDER BY \" + sortQuery + \" LIMIT \" + offset + \", \" + limit;\n         return db.rawQuery(query, null);\n     }\n \ndiff --git a/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java b/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\nindex 93792121b2..92acb6319e 100644\n--- a/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\n+++ b/storage/preferences/src/main/java/de/danoeh/antennapod/storage/preferences/UserPreferences.java\n@@ -70,6 +70,7 @@ private UserPreferences(){}\n     public static final String PREF_QUEUE_KEEP_SORTED_ORDER = \"prefQueueKeepSortedOrder\";\n     public static final String PREF_NEW_EPISODES_ACTION = \"prefNewEpisodesAction\";\n     private static final String PREF_DOWNLOADS_SORTED_ORDER = \"prefDownloadSortedOrder\";\n+    private static final String PREF_INBOX_SORTED_ORDER = \"prefInboxSortedOrder\";\n \n     // Playback\n     public static final String PREF_PAUSE_ON_HEADSET_DISCONNECT = \"prefPauseOnHeadsetDisconnect\";\n@@ -942,12 +943,18 @@ public static SortOrder getDownloadsSortedOrder() {\n      * Sets the sort order for the downloads.\n      */\n     public static void setDownloadsSortedOrder(SortOrder sortOrder) {\n-        if (sortOrder == null) {\n-            return;\n-        }\n         prefs.edit().putString(PREF_DOWNLOADS_SORTED_ORDER, \"\" + sortOrder.code).apply();\n     }\n \n+    public static SortOrder getInboxSortedOrder() {\n+        String sortOrderStr = prefs.getString(PREF_INBOX_SORTED_ORDER, \"\" + SortOrder.DATE_NEW_OLD.code);\n+        return SortOrder.fromCodeString(sortOrderStr);\n+    }\n+\n+    public static void setInboxSortedOrder(SortOrder sortOrder) {\n+        prefs.edit().putString(PREF_INBOX_SORTED_ORDER, \"\" + sortOrder.code).apply();\n+    }\n+\n     public static SubscriptionsFilter getSubscriptionsFilter() {\n         String value = prefs.getString(PREF_FILTER_FEED, \"\");\n         return new SubscriptionsFilter(value);\n", "test_patch": "diff --git a/core/src/test/java/de/danoeh/antennapod/core/storage/DbReaderTest.java b/core/src/test/java/de/danoeh/antennapod/core/storage/DbReaderTest.java\nindex c44c6ae433..886c6821bc 100644\n--- a/core/src/test/java/de/danoeh/antennapod/core/storage/DbReaderTest.java\n+++ b/core/src/test/java/de/danoeh/antennapod/core/storage/DbReaderTest.java\n@@ -10,9 +10,11 @@\n import java.util.Random;\n \n import androidx.test.platform.app.InstrumentationRegistry;\n+\n import de.danoeh.antennapod.model.feed.Feed;\n import de.danoeh.antennapod.model.feed.FeedItem;\n import de.danoeh.antennapod.model.feed.FeedMedia;\n+import de.danoeh.antennapod.model.feed.SortOrder;\n import de.danoeh.antennapod.storage.preferences.UserPreferences;\n import de.danoeh.antennapod.core.util.LongList;\n import de.danoeh.antennapod.storage.database.PodDBAdapter;\n@@ -281,7 +283,7 @@ public void testGetNewItemIds() {\n             for (int i = 0; i < newItems.size(); i++) {\n                 unreadIds[i] = newItems.get(i).getId();\n             }\n-            List<FeedItem> newItemsSaved = DBReader.getNewItemsList(0, Integer.MAX_VALUE);\n+            List<FeedItem> newItemsSaved = DBReader.getNewItemsList(0, Integer.MAX_VALUE, SortOrder.DATE_NEW_OLD);\n             assertNotNull(newItemsSaved);\n             assertEquals(newItemsSaved.size(), newItems.size());\n             for (FeedItem feedItem : newItemsSaved) {\n", "problem_statement": "Add option to switch a- & descending sort order for Inbox\n### Checklist\r\n\r\n- [X] I have used the search function for [open](https://github.com/AntennaPod/AntennaPod/issues) **and** [closed](https://github.com/AntennaPod/AntennaPod/issues?q=is%3Aissue+is%3Aclosed) issues to see if someone else has already submitted the same feature request.\r\n- [X] I will describe the problem with as much detail as possible.\r\n- [X] This request contains only one single feature, **not** a list of multiple (related) features.\r\n\r\n### App version\r\n\r\n2.7.1\r\n\r\n### Where did you get the app from\r\n\r\nF-Droid\r\n\r\n### Problem you may be having, or feature you want\r\n\r\nIt would be **so** nice to have, at last, the **option of an inbox in chronological order**.\r\n\r\nI am coming back to Antennapod after a hiatus and now I remember the main reason I left. **The queue is sortable, but for some reason the inbox is not.** This seems verging on bug-like but I guess it's just an oversight. I am well aware that only a minority of crazy people like to do things in chronological order.\r\n\r\nPlease allow me a digression on the form of a good-faith rant about sort order. Rant begins HERE. _I don't get it. Why would anyone want to deal with an inbox from bottom to top? What am I not understanding? Do we read books from bottom to top? Lists? Timetables? Anything at all? The podcasts arrived in an order - chronological order. Perhaps they are news, in which case the most recent ones are dependent on previous ones for context. Perhaps they are episodes in a series, or chapters in an audiobook. It seems to me so obviously inefficient to be working through a list backwards (or scrolling upwards) that I keep thinking I must have missed something. Have I? I suspect not, but it's a serious question._ Rant ends.\r\n\r\nGmail does this too BTW. Impossible to sort in chronological order - newest first, take it or leave it (but oddly the Conversation View is chronological). I don't use evil Gmail but Antennapod is a great FOSS project, probably even the best podcast client out there.\r\n\r\n### Suggested solution\r\n\r\nAn option to sort the Inbox into chronological order.\r\n\r\nFor those weirdos among us who like to deal with podcasts in the same order they dropped, this \"feature\" would be very, very much appreciated. Thanks for considering.\r\n\r\n### Screenshots / Drawings / Technical details\r\n\r\n_No response_\n", "hints_text": "Hi @Friptick,\n\nTwo thoughts:\n* No need for a rant \u2013 we also accept feature requests if they simply make sense ;-) (Also: you're speaking of 'at last' \u2013 sounds like you should've made this feature request earlier instead of cropping up frustration ^^)\n* The inbox _is_ in chronological order, just not of the sort you would like to see (oldest first).\n\nI don't see a reason not to introduce a 'Reverse sort order' option for the Inbox, behind the three dots in the top bar.\nThanks.\r\n\r\n>No need for a rant\r\n\r\nRest assured the rant was not directed at you, it was directed at the whole world. :)\r\n\r\n>sounds like you should've made this feature request earlier instead of cropping up frustration ^^\r\n\r\nI was one of the users who campaigned for the sort options on the queue. I guess I just ran out of energy for campaigning.\r\n\r\n>The inbox is in chronological order\r\n\r\nNo it's not. It is in reverse-chronological order. It's the innovation introduced by [blogging](https://en.wikipedia.org/wiki/Blog) (\"Posts are typically displayed in reverse chronological order so that the most recent post appears first\"). That's fine when you have one new blog post to read each time you visit a web page. It never made any sense for a feed of 100 items where (1) you don't want to miss anything, (2) \"mark as read\" exists, and (3) content is inter-related. But what do I know, hey? Nobody else is complaining, you're right. :) Seriously, I would so love to hear a counter-argument one day.\r\n\r\n>I don't see a reason not to introduce a 'Reverse sort order' option for the Inbox, behind the three dots in the top bar.\r\n\r\nYep exactly, that was where I was surprised not to find it.\r\n\r\nIf I had any experience at all with Android dev, I promise I would do this myself and submit a PR.\r\n\r\nThanks.", "created_at": "2023-01-09T10:50:52Z"}
